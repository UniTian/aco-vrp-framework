package com.github.schmittjoaopedro;

import com.github.schmittjoaopedro.algorithms.MMAS_US_MADTSP;
import com.github.schmittjoaopedro.graph.Graph;
import com.github.schmittjoaopedro.graph.GraphFactory;
import com.github.schmittjoaopedro.graph.Vertex;
import com.github.schmittjoaopedro.tools.IterationStatistic;
import org.junit.Before;
import org.junit.Test;

import java.io.File;
import java.util.Locale;

import static org.assertj.core.api.Assertions.assertThat;

public class MMAS_US_MADTSP_Test {

    private String kroA100;

    private String kroA150;

    @Before
    public void beforeClass() {
        kroA100 = getClass().getClassLoader().getResource("tsp/KroA100.tsp").getFile();
        kroA150 = getClass().getClassLoader().getResource("tsp/KroA150.tsp").getFile();
    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA100_with_seed_1_mag_0_1_freq_10() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_US_MADTSP mmas_us_madtsp = new MMAS_US_MADTSP(graph, 0.8, 1000, 0.1, 10);
        mmas_us_madtsp.setMmasSeed(1);
        mmas_us_madtsp.setDbgpSeed(1);
        mmas_us_madtsp.setStatisticInterval(1);
        mmas_us_madtsp.setShowLog(false);
        mmas_us_madtsp.run();
        assertThat(mmas_us_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(24699.21541888452);
        assertThat(mmas_us_madtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(24699.21541888452);
        assertThat(getTourString(mmas_us_madtsp)).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 63, 39, 53, 1, 49, 72, 68, 66, 57, 92, 27, 0]");

        checkValues(mmas_us_madtsp, 1, 32061.40617117336, 2553.2207588582637, 0.0, 54.53224489795918, 24995.293582408613);
        checkValues(mmas_us_madtsp, 5, 29376.994855512232, 1041.7389255705168, 0.0, 12.304489795918368, 24995.293582408613);
        checkValues(mmas_us_madtsp, 10, 29393.029818794505, 1715.1190283222531, 0.0, 10.861224489795918, 24995.293582408613);
        checkValues(mmas_us_madtsp, 11, 30821.28266478477, 2328.2612421744516, 0.48, 21.90204081632653, 23421.67630113234);
        checkValues(mmas_us_madtsp, 15, 24750.4806027443, 2225.0292760243206, 0.565, 7.819591836734694, 22628.870249018964);
        checkValues(mmas_us_madtsp, 20, 24983.569947047286, 2365.6065590029943, 0.565, 7.464489795918367, 22628.870249018964);
        checkValues(mmas_us_madtsp, 21, 27829.423363440776, 1682.6196272441332, 0.49, 10.947755102040816, 23966.548798519252);
        checkValues(mmas_us_madtsp, 25, 27199.737370864703, 1499.1188846719108, 0.49, 7.636734693877551, 23966.548798519252);
        checkValues(mmas_us_madtsp, 30, 27231.143089437788, 2043.5235849663504, 0.49, 7.868571428571428, 23966.548798519252);
        checkValues(mmas_us_madtsp, 31, 28488.09967570798, 1093.137553197596, 0.505, 16.783673469387754, 24423.23985313691);
        checkValues(mmas_us_madtsp, 35, 28036.80492858465, 1345.6300407121062, 0.505, 10.057142857142857, 24423.23985313691);
        checkValues(mmas_us_madtsp, 40, 27653.48314525142, 1602.2965135134236, 0.535, 13.024489795918367, 23940.142030478575);
        checkValues(mmas_us_madtsp, 41, 27895.000798336674, 1749.2645014167508, 0.525, 13.926530612244898, 23716.04833473354);
        checkValues(mmas_us_madtsp, 45, 26713.704526793965, 2027.3915306908455, 0.5, 9.74938775510204, 23558.812201063505);
        checkValues(mmas_us_madtsp, 50, 27100.451006767187, 2428.6084172400383, 0.505, 8.978775510204082, 22913.03814530463);
        checkValues(mmas_us_madtsp, 51, 28144.21247917702, 1895.8176639443184, 0.575, 8.771428571428572, 23773.7789853259);
        checkValues(mmas_us_madtsp, 55, 26984.280428075785, 1968.0464537464468, 0.495, 8.60734693877551, 23739.7789853259);
        checkValues(mmas_us_madtsp, 60, 26286.184245825767, 2329.59796720093, 0.5, 7.764897959183673, 23525.81912918124);
        checkValues(mmas_us_madtsp, 61, 29317.08970461267, 1729.2844476859318, 0.5, 18.318367346938775, 24067.330475829327);
        checkValues(mmas_us_madtsp, 65, 26964.494512770572, 1252.6487288814399, 0.5, 8.83673469387755, 24067.330475829327);
        checkValues(mmas_us_madtsp, 70, 27278.283438731163, 1553.2626397098954, 0.5, 11.32326530612245, 24067.330475829327);
        checkValues(mmas_us_madtsp, 71, 28618.85731042997, 2235.772367060444, 0.525, 11.016326530612245, 24689.44887373896);
        checkValues(mmas_us_madtsp, 75, 26747.104482984287, 1880.0862272544916, 0.59, 9.524081632653061, 23974.443772290015);
        checkValues(mmas_us_madtsp, 80, 26010.191353805767, 1470.7182725935045, 0.585, 5.713469387755102, 23806.357489094233);
        checkValues(mmas_us_madtsp, 81, 28046.267141241053, 2393.647666885762, 0.49, 9.806530612244899, 23480.422752083672);
        checkValues(mmas_us_madtsp, 85, 26041.160492783958, 2308.585670901166, 0.505, 6.14938775510204, 23316.03071645568);
        checkValues(mmas_us_madtsp, 90, 26000.05756465879, 2783.711432589436, 0.51, 5.332244897959184, 23141.531215553896);
        checkValues(mmas_us_madtsp, 91, 26900.78991522191, 2217.9739823300215, 0.51, 7.666122448979592, 24022.240892927093);
        checkValues(mmas_us_madtsp, 95, 25258.60024867438, 2052.745991042525, 0.78, 8.613061224489796, 23370.703532998654);
        checkValues(mmas_us_madtsp, 100, 25379.755083468066, 2049.163761196383, 0.505, 7.124897959183674, 23061.703532998654);
        checkValues(mmas_us_madtsp, 101, 27833.8903795276, 1963.8759291092522, 0.5, 12.546122448979592, 24655.02183644105);
        checkValues(mmas_us_madtsp, 105, 27864.76979876591, 1839.8650048216105, 0.54, 10.230204081632653, 24386.900431885362);
        checkValues(mmas_us_madtsp, 110, 26394.861730783283, 2157.4562483838645, 0.52, 8.838367346938776, 23922.252041249867);
        checkValues(mmas_us_madtsp, 111, 28264.431453161473, 1811.1627755090751, 0.5, 13.68734693877551, 23959.94965213923);
        checkValues(mmas_us_madtsp, 115, 24985.967212499898, 1690.2192818569358, 0.72, 4.428571428571429, 23286.94965213923);
        checkValues(mmas_us_madtsp, 120, 25163.54877976057, 2042.8371783230882, 0.5, 5.051428571428572, 23248.94965213923);
        checkValues(mmas_us_madtsp, 121, 27661.772575078627, 1473.0136332232514, 0.51, 13.838367346938776, 23125.339634557804);
        checkValues(mmas_us_madtsp, 125, 24912.447768706097, 1573.344077349148, 0.51, 3.4244897959183676, 23125.339634557804);
        checkValues(mmas_us_madtsp, 130, 24723.983763285014, 2132.581066142013, 0.515, 4.622040816326531, 22843.202563619103);
        checkValues(mmas_us_madtsp, 131, 26633.952183561447, 1679.4591405946212, 0.515, 8.074285714285715, 23620.885958687428);
        checkValues(mmas_us_madtsp, 135, 25742.257412801908, 2019.7758051086307, 0.515, 5.418775510204082, 23620.885958687428);
        checkValues(mmas_us_madtsp, 140, 25138.476660566706, 1899.0863927697842, 0.5, 5.976326530612245, 23290.885958687428);
        checkValues(mmas_us_madtsp, 141, 24499.08427347301, 1496.2653471772776, 0.495, 5.2726530612244895, 22896.106676323405);
        checkValues(mmas_us_madtsp, 145, 23060.71421456535, 990.0784489020251, 0.56, 2.8946938775510205, 22663.106676323405);
        checkValues(mmas_us_madtsp, 150, 23408.948913852353, 1309.9642155526035, 0.56, 3.733877551020408, 22663.106676323405);
        checkValues(mmas_us_madtsp, 151, 29227.574228149784, 2907.715787722496, 0.495, 14.990204081632653, 24078.965832750488);
        checkValues(mmas_us_madtsp, 155, 28536.213457541497, 2514.198640891673, 0.495, 12.735510204081633, 24078.965832750488);
        checkValues(mmas_us_madtsp, 160, 28536.11639846447, 2654.529113340869, 0.495, 11.8, 24078.965832750488);
        checkValues(mmas_us_madtsp, 161, 26965.432742572717, 1705.7008008719147, 0.5, 8.365714285714287, 23676.964236486478);
        checkValues(mmas_us_madtsp, 165, 26229.901002453655, 1589.1681880223107, 0.5, 5.816326530612245, 23676.964236486478);
        checkValues(mmas_us_madtsp, 170, 26204.559931894695, 1591.3319918914613, 0.5, 6.1689795918367345, 23676.964236486478);
        checkValues(mmas_us_madtsp, 171, 27629.350295351498, 1797.387674929, 0.5, 6.382857142857143, 24018.271607216608);
        checkValues(mmas_us_madtsp, 175, 25544.214989271164, 2625.6861202221044, 0.53, 6.24734693877551, 23849.221221490076);
        checkValues(mmas_us_madtsp, 180, 25747.05197717634, 1683.4418405787542, 0.57, 6.707755102040816, 23514.202258822093);
        checkValues(mmas_us_madtsp, 181, 28532.53780996478, 1537.415804795166, 0.55, 14.402448979591837, 24274.253024552618);
        checkValues(mmas_us_madtsp, 185, 25303.131279407873, 1951.9446166072357, 0.595, 5.278367346938776, 23858.253024552618);
        checkValues(mmas_us_madtsp, 190, 24693.48343144578, 1399.455167012021, 0.5, 3.57469387755102, 23786.959698760806);
        checkValues(mmas_us_madtsp, 191, 24959.448138161268, 1870.100615523558, 0.505, 4.130612244897959, 23678.562834963526);
        checkValues(mmas_us_madtsp, 195, 25110.43881996528, 1792.8836323495066, 0.505, 4.705306122448979, 23678.562834963526);
        checkValues(mmas_us_madtsp, 200, 24862.865733305298, 2301.702459922118, 0.515, 3.249795918367347, 23108.562834963526);
        checkValues(mmas_us_madtsp, 201, 25963.422817153125, 1338.37442073719, 0.51, 6.226938775510204, 23718.188000095353);
        checkValues(mmas_us_madtsp, 205, 24912.791615034126, 1839.142890712914, 0.56, 6.3126530612244895, 23320.41566142707);
        checkValues(mmas_us_madtsp, 210, 25376.189568270634, 1672.4526726679198, 0.54, 6.262040816326531, 23200.435660903648);
        checkValues(mmas_us_madtsp, 211, 27326.284061993076, 1236.0517568266177, 0.495, 13.747755102040816, 23361.476803277754);
        checkValues(mmas_us_madtsp, 215, 25025.26938288705, 1242.0507069812093, 0.495, 7.07265306122449, 23361.476803277754);
        checkValues(mmas_us_madtsp, 220, 23613.91478429431, 909.6922338333708, 0.5, 1.4669387755102041, 23188.476803277754);
        checkValues(mmas_us_madtsp, 221, 26290.22164640062, 1830.0917490144611, 0.52, 13.548571428571428, 23787.536873671947);
        checkValues(mmas_us_madtsp, 225, 24735.672269806913, 1575.3455389368544, 0.545, 4.484081632653061, 23351.568509453526);
        checkValues(mmas_us_madtsp, 230, 24522.238551889444, 1740.5457911897597, 0.5, 4.045714285714285, 23230.568509453526);
        checkValues(mmas_us_madtsp, 231, 24780.19425222231, 1648.351395790284, 0.5, 3.5248979591836735, 23368.774585890027);
        checkValues(mmas_us_madtsp, 235, 24496.26732877293, 1731.7360654092327, 0.5, 3.5061224489795917, 23368.774585890027);
        checkValues(mmas_us_madtsp, 240, 24488.739615462968, 1397.8638221860972, 0.5, 4.776326530612245, 23368.774585890027);
        checkValues(mmas_us_madtsp, 241, 28213.671558186183, 1677.211076377061, 0.495, 16.711020408163265, 24272.044254431476);
        checkValues(mmas_us_madtsp, 245, 24284.16014919821, 1969.5881483088924, 0.795, 4.181224489795919, 23124.478938766184);
        checkValues(mmas_us_madtsp, 250, 24092.31544103585, 1935.156483105624, 0.5, 2.5142857142857142, 22872.02580794052);
        checkValues(mmas_us_madtsp, 251, 26095.123132919707, 1888.8066138054319, 0.505, 8.946938775510205, 23896.203262753395);
        checkValues(mmas_us_madtsp, 255, 25555.676653060524, 2448.065200136159, 0.63, 4.756734693877551, 23584.203262753395);
        checkValues(mmas_us_madtsp, 260, 24397.668361101405, 1996.63289794539, 0.63, 2.853877551020408, 23584.203262753395);
        checkValues(mmas_us_madtsp, 261, 28558.956349170134, 1290.0042719300732, 0.495, 9.688979591836734, 24568.83971436833);
        checkValues(mmas_us_madtsp, 265, 25356.284108604286, 1584.9921640049943, 0.535, 4.2293877551020405, 24138.911483194315);
        checkValues(mmas_us_madtsp, 270, 24763.527843992943, 1526.3837942470382, 0.52, 2.9346938775510205, 24014.911483194315);
        checkValues(mmas_us_madtsp, 271, 26247.30268986041, 1857.6343296583186, 0.495, 5.9616326530612245, 24416.30629829061);
        checkValues(mmas_us_madtsp, 275, 25032.540165832204, 1236.1832467517459, 0.565, 8.343673469387754, 23957.902029249242);
        checkValues(mmas_us_madtsp, 280, 24972.763550350497, 1444.8138153996301, 0.565, 5.648979591836735, 23957.902029249242);
        checkValues(mmas_us_madtsp, 281, 27595.666337222006, 1164.6502856958398, 0.49, 12.713469387755103, 24970.657721085383);
        checkValues(mmas_us_madtsp, 285, 25912.29540636199, 1566.851847100446, 0.585, 7.2661224489795915, 23939.564349843517);
        checkValues(mmas_us_madtsp, 290, 25353.743729823458, 1381.1903024365752, 0.5, 6.547755102040816, 23934.827126611344);
        checkValues(mmas_us_madtsp, 291, 25929.97808042711, 1631.4098634305565, 0.505, 7.9248979591836735, 24277.81450537795);
        checkValues(mmas_us_madtsp, 295, 25908.704027258227, 1730.4701569261065, 0.505, 6.666122448979592, 24277.81450537795);
        checkValues(mmas_us_madtsp, 300, 25964.65542934718, 1510.6646924861116, 0.495, 6.8, 24182.0889884504);
        checkValues(mmas_us_madtsp, 301, 27125.910439536605, 1710.7830609352154, 0.5, 8.691428571428572, 24124.817222994396);
        checkValues(mmas_us_madtsp, 305, 25854.652349749744, 1956.7354480372428, 0.545, 6.053061224489796, 23863.817222994396);
        checkValues(mmas_us_madtsp, 310, 26622.50259799818, 2670.081432723363, 0.545, 8.045714285714286, 23863.817222994396);
        checkValues(mmas_us_madtsp, 311, 27982.54978834118, 1154.9339569041313, 0.495, 12.204897959183674, 24160.145986272055);
        checkValues(mmas_us_madtsp, 315, 24605.3581624605, 1339.1150830402817, 0.675, 7.031020408163266, 23711.145986272055);
        checkValues(mmas_us_madtsp, 320, 24155.48908530497, 947.3971511244646, 0.675, 3.8179591836734694, 23711.145986272055);
        checkValues(mmas_us_madtsp, 321, 25572.982187459864, 1458.5151204435629, 0.495, 10.914285714285715, 24208.408416386963);
        checkValues(mmas_us_madtsp, 325, 26748.072117936503, 1790.4946150704611, 0.555, 6.074285714285714, 24044.018288891202);
        checkValues(mmas_us_madtsp, 330, 24490.53890071291, 976.5153247817777, 0.555, 2.979591836734694, 24044.018288891202);
        checkValues(mmas_us_madtsp, 331, 26607.275509879437, 1551.0470193351075, 0.5, 6.860408163265306, 24447.87336753303);
        checkValues(mmas_us_madtsp, 335, 25201.00607921153, 1428.9948825982676, 0.525, 3.8955102040816327, 24352.87336753303);
        checkValues(mmas_us_madtsp, 340, 24738.7705386455, 1706.530281797881, 0.53, 4.237551020408163, 23722.970388798836);
        checkValues(mmas_us_madtsp, 341, 26344.226177397777, 1502.9833605283002, 0.5, 6.456326530612245, 25070.869863980723);
        checkValues(mmas_us_madtsp, 345, 24800.7748549596, 1446.670974769138, 0.8, 2.8783673469387754, 23911.03696562104);
        checkValues(mmas_us_madtsp, 350, 24609.635013694104, 1276.102198415568, 0.5, 1.980408163265306, 23905.784599400165);
        checkValues(mmas_us_madtsp, 351, 27077.43337951067, 2235.4469476987306, 0.5, 8.644897959183673, 24560.291113401538);
        checkValues(mmas_us_madtsp, 355, 25389.677865888647, 1457.291333847254, 0.5, 3.5453061224489795, 24560.291113401538);
        checkValues(mmas_us_madtsp, 360, 25800.288792478157, 1691.8400500713883, 0.5, 5.186938775510204, 24560.291113401538);
        checkValues(mmas_us_madtsp, 361, 27004.347245118566, 1808.1609359298627, 0.5, 7.92, 24548.901959353905);
        checkValues(mmas_us_madtsp, 365, 25590.50631376963, 1836.207095988261, 0.545, 3.5681632653061226, 24451.373695094237);
        checkValues(mmas_us_madtsp, 370, 25005.176734608296, 2008.4205981731914, 0.515, 1.9240816326530612, 23841.209042027516);
        checkValues(mmas_us_madtsp, 371, 25913.968946602756, 1679.0323177065115, 0.5, 4.962448979591837, 24384.529179408462);
        checkValues(mmas_us_madtsp, 375, 24798.69697522773, 889.5929246182991, 0.5, 2.666938775510204, 24068.811002205854);
        checkValues(mmas_us_madtsp, 380, 25520.97762800575, 1750.9103473728956, 0.515, 5.28, 23857.762081155794);
        checkValues(mmas_us_madtsp, 381, 25311.038983301594, 1100.8903505857825, 0.495, 6.417142857142857, 24226.529795249848);
        checkValues(mmas_us_madtsp, 385, 24617.510126392983, 1282.7326267648423, 0.52, 2.0318367346938775, 23877.134234414007);
        checkValues(mmas_us_madtsp, 390, 25032.46795867395, 1666.8713313286526, 0.52, 4.24, 23877.134234414007);
        checkValues(mmas_us_madtsp, 391, 28856.667413715284, 1728.9691933657768, 0.49, 13.357551020408163, 26075.646690011883);
        checkValues(mmas_us_madtsp, 395, 26321.900686079767, 1383.9632010127707, 0.69, 13.017142857142858, 24502.727153863718);
        checkValues(mmas_us_madtsp, 400, 26483.398800767878, 1094.9849607673848, 0.74, 16.69469387755102, 24397.01685998848);
        checkValues(mmas_us_madtsp, 401, 26962.846914160586, 1081.558794541114, 0.74, 15.157551020408164, 24528.13285547983);
        checkValues(mmas_us_madtsp, 405, 25194.869304465865, 1254.0677984591184, 0.56, 3.8424489795918366, 24384.49945069646);
        checkValues(mmas_us_madtsp, 410, 25288.944585234505, 1743.5684552517703, 0.525, 5.910204081632653, 23895.43539121568);
        checkValues(mmas_us_madtsp, 411, 28030.2301887565, 975.6661581841867, 0.49, 20.02857142857143, 24317.273570036858);
        checkValues(mmas_us_madtsp, 415, 24648.692074118502, 1546.998434778064, 0.595, 2.733061224489796, 23782.486742582958);
        checkValues(mmas_us_madtsp, 420, 24689.13305390147, 1802.135941778385, 0.51, 2.6514285714285712, 23747.486742582958);
        checkValues(mmas_us_madtsp, 421, 25713.064562594198, 1371.8591675585235, 0.505, 2.5551020408163265, 24059.303926783366);
        checkValues(mmas_us_madtsp, 425, 24982.121152503587, 1277.3409420211792, 0.505, 2.816326530612245, 24059.303926783366);
        checkValues(mmas_us_madtsp, 430, 25118.47752159243, 1248.5780799304273, 0.505, 3.5844897959183672, 24059.303926783366);
        checkValues(mmas_us_madtsp, 431, 26312.95537894852, 1068.742216597508, 0.5, 7.682448979591837, 24054.153305021428);
        checkValues(mmas_us_madtsp, 435, 25926.752662334697, 1681.9635847192742, 0.58, 11.224489795918368, 23563.063660461466);
        checkValues(mmas_us_madtsp, 440, 24535.90366046146, 1097.492640670784, 0.58, 4.053061224489796, 23563.063660461466);
        checkValues(mmas_us_madtsp, 441, 27195.242590936745, 886.9964921737425, 0.49, 8.511020408163265, 24067.148466448096);
        checkValues(mmas_us_madtsp, 445, 24697.55397468818, 929.3865942408947, 0.525, 2.5738775510204084, 23487.063660461466);
        checkValues(mmas_us_madtsp, 450, 24172.432004197355, 1260.175111316625, 0.575, 3.2114285714285713, 23402.063660461466);
        checkValues(mmas_us_madtsp, 451, 24914.792866489635, 1350.5398067124313, 0.5, 3.220408163265306, 23756.103286778998);
        checkValues(mmas_us_madtsp, 455, 25214.36959263197, 1757.1367970333486, 0.55, 6.464489795918367, 23565.378076588662);
        checkValues(mmas_us_madtsp, 460, 24186.60455261864, 1005.4453801862087, 0.55, 3.6644897959183673, 23565.378076588662);
        checkValues(mmas_us_madtsp, 461, 26321.485495114313, 2197.121240180115, 0.5, 6.222857142857142, 23617.361197845305);
        checkValues(mmas_us_madtsp, 465, 24404.95672946582, 1254.850858767489, 0.5, 2.782857142857143, 23617.361197845305);
        checkValues(mmas_us_madtsp, 470, 24635.728222782203, 1435.3263780641084, 0.5, 3.513469387755102, 23617.361197845305);
        checkValues(mmas_us_madtsp, 471, 25075.316237487677, 1568.0844432368858, 0.5, 7.671020408163265, 23480.063660461466);
        checkValues(mmas_us_madtsp, 475, 24372.083700654675, 1364.9233273066784, 0.5, 3.599183673469388, 23480.063660461466);
        checkValues(mmas_us_madtsp, 480, 24508.827468506144, 1546.526137162202, 0.5, 4.121632653061225, 23480.063660461466);
        checkValues(mmas_us_madtsp, 481, 25725.640824013084, 1293.7175338921584, 0.495, 5.855510204081632, 23597.80233099332);
        checkValues(mmas_us_madtsp, 485, 24412.570476564924, 1854.9203680900898, 0.495, 1.633469387755102, 23597.80233099332);
        checkValues(mmas_us_madtsp, 490, 24433.23090648269, 1593.5416293115522, 0.495, 2.786122448979592, 23597.80233099332);
        checkValues(mmas_us_madtsp, 491, 26804.04982294991, 1168.5006554981683, 0.5, 4.722448979591837, 23650.063660461466);
        checkValues(mmas_us_madtsp, 495, 25082.34437911317, 1645.3875543096667, 0.51, 3.8057142857142856, 23338.063660461466);
        checkValues(mmas_us_madtsp, 500, 24983.308412384955, 1622.6832417703847, 0.5, 3.6179591836734692, 23338.063660461466);
        checkValues(mmas_us_madtsp, 501, 25081.567552230634, 1841.8150437133024, 0.5, 3.659591836734694, 23540.73117604573);
        checkValues(mmas_us_madtsp, 505, 23640.786609825846, 638.7128110761977, 0.505, 1.1314285714285715, 23407.063660461466);
        checkValues(mmas_us_madtsp, 510, 24127.020623395554, 1313.7219920704397, 0.505, 3.522448979591837, 23407.063660461466);
        checkValues(mmas_us_madtsp, 511, 25660.90951770705, 1459.3162765355992, 0.5, 5.464489795918367, 23622.41869178859);
        checkValues(mmas_us_madtsp, 515, 25148.482363827243, 1493.7037405987458, 0.5, 3.9926530612244897, 23622.41869178859);
        checkValues(mmas_us_madtsp, 520, 24793.031106301172, 1537.074774474877, 0.5, 3.7983673469387753, 23622.41869178859);
        checkValues(mmas_us_madtsp, 521, 27582.863759501342, 1527.9536618530428, 0.5, 7.222857142857142, 24107.140416208753);
        checkValues(mmas_us_madtsp, 525, 24398.723741171034, 861.8065441227228, 0.655, 2.6220408163265305, 24056.504027565778);
        checkValues(mmas_us_madtsp, 530, 25073.418051385917, 1382.0201252664385, 0.49, 4.482448979591837, 23991.504027565778);
        checkValues(mmas_us_madtsp, 531, 25909.251522041963, 2237.486773947261, 0.495, 4.470204081632653, 23713.42722753991);
        checkValues(mmas_us_madtsp, 535, 25306.633888408596, 1642.3801367494311, 0.495, 3.739591836734694, 23713.42722753991);
        checkValues(mmas_us_madtsp, 540, 25009.0058150938, 1364.247069385347, 0.495, 3.2212244897959184, 23713.42722753991);
        checkValues(mmas_us_madtsp, 541, 25596.027499929838, 1461.8603367191756, 0.495, 5.3363265306122445, 23643.045559798076);
        checkValues(mmas_us_madtsp, 545, 25284.363266642617, 1945.4426697849506, 0.495, 4.122448979591836, 23643.045559798076);
        checkValues(mmas_us_madtsp, 550, 25514.344264019703, 1964.7063260815848, 0.495, 5.133061224489796, 23643.045559798076);
        checkValues(mmas_us_madtsp, 551, 26077.935965627144, 1949.6883232660014, 0.5, 5.2628571428571425, 23568.035275562906);
        checkValues(mmas_us_madtsp, 555, 24641.108143002006, 1223.6461838655816, 0.5, 2.773061224489796, 23568.035275562906);
        checkValues(mmas_us_madtsp, 560, 24297.278026551707, 1323.0313106329052, 0.5, 2.07265306122449, 23568.035275562906);
        checkValues(mmas_us_madtsp, 561, 26772.574745573882, 1852.292318315897, 0.495, 6.134693877551021, 24085.286011127857);
        checkValues(mmas_us_madtsp, 565, 25357.588080071328, 1713.6196186998795, 0.495, 4.254693877551021, 24085.286011127857);
        checkValues(mmas_us_madtsp, 570, 25138.42801921357, 1583.1258677799976, 0.495, 3.1216326530612246, 24085.286011127857);
        checkValues(mmas_us_madtsp, 571, 25989.59278645297, 1394.4871991806535, 0.51, 7.284081632653061, 24115.103528639556);
        checkValues(mmas_us_madtsp, 575, 25483.042749482644, 1562.7417043037992, 0.51, 5.5869387755102045, 24115.103528639556);
        checkValues(mmas_us_madtsp, 580, 25545.964123862377, 1690.9274654977498, 0.51, 5.069387755102041, 24115.103528639556);
        checkValues(mmas_us_madtsp, 581, 26484.608724293255, 1830.9478158987188, 0.5, 7.408979591836735, 23919.09594251322);
        checkValues(mmas_us_madtsp, 585, 25349.693869356368, 1495.4611348756177, 0.57, 5.497959183673469, 23911.09594251322);
        checkValues(mmas_us_madtsp, 590, 25263.651730629448, 1394.486115621914, 0.57, 5.006530612244898, 23911.09594251322);
        checkValues(mmas_us_madtsp, 591, 26366.976978200724, 1011.1530914978271, 0.495, 6.863673469387755, 23816.13247569519);
        checkValues(mmas_us_madtsp, 595, 24635.963162660737, 1455.3725739975152, 0.495, 2.426938775510204, 23816.13247569519);
        checkValues(mmas_us_madtsp, 600, 24498.346529224258, 1247.5150800461297, 0.5, 2.057959183673469, 23816.13247569519);
        checkValues(mmas_us_madtsp, 601, 25307.101439670874, 1309.389671268803, 0.5, 4.188571428571429, 24004.636744378662);
        checkValues(mmas_us_madtsp, 605, 25175.68660296935, 1579.9217917594656, 0.5, 3.5159183673469387, 24004.636744378662);
        checkValues(mmas_us_madtsp, 610, 25091.61303239303, 1688.4902671943144, 0.5, 3.489795918367347, 24004.636744378662);
        checkValues(mmas_us_madtsp, 611, 28457.3188690616, 1530.5410110131445, 0.495, 4.471836734693878, 24054.858238995163);
        checkValues(mmas_us_madtsp, 615, 25321.979476204513, 1843.9591584816287, 0.495, 3.9583673469387755, 24054.858238995163);
        checkValues(mmas_us_madtsp, 620, 25157.835150511357, 1650.1093654108108, 0.495, 3.199183673469388, 24054.858238995163);
        checkValues(mmas_us_madtsp, 621, 26931.027248851253, 1144.4014352204745, 0.495, 5.893877551020408, 23970.436936331007);
        checkValues(mmas_us_madtsp, 625, 24817.222054379796, 1405.0382301344532, 0.495, 2.6710204081632654, 23970.436936331007);
        checkValues(mmas_us_madtsp, 630, 24652.257512843487, 1162.2693330643556, 0.5, 2.2555102040816326, 23952.57346448729);
        checkValues(mmas_us_madtsp, 631, 26696.590925242264, 1442.6866311318063, 0.5, 6.254693877551021, 23968.692838771378);
        checkValues(mmas_us_madtsp, 635, 24496.646063413307, 1186.6195709234905, 0.5, 1.9240816326530612, 23715.692838771378);
        checkValues(mmas_us_madtsp, 640, 24668.166063413308, 1543.6641918273672, 0.5, 3.055510204081633, 23715.692838771378);
        checkValues(mmas_us_madtsp, 641, 24828.687373410878, 1387.74478224462, 0.5, 2.244081632653061, 23890.692838771378);
        checkValues(mmas_us_madtsp, 645, 24404.561485692095, 1199.927633649545, 0.53, 1.7681632653061226, 23768.692838771378);
        checkValues(mmas_us_madtsp, 650, 24950.02436691749, 1747.9335970285586, 0.53, 2.6579591836734693, 23768.692838771378);
        checkValues(mmas_us_madtsp, 651, 26379.06168894877, 901.9143764308551, 0.5, 3.0106122448979593, 24102.674838334377);
        checkValues(mmas_us_madtsp, 655, 25615.84264934395, 1468.247226572361, 0.5, 3.426938775510204, 24102.674838334377);
        checkValues(mmas_us_madtsp, 660, 25609.955364802103, 1352.4242936752578, 0.5, 2.843265306122449, 24102.674838334377);
        checkValues(mmas_us_madtsp, 661, 27063.69988858919, 1347.2984938898257, 0.495, 6.249795918367347, 24241.007039171647);
        checkValues(mmas_us_madtsp, 665, 24815.849041677047, 1489.6682423176683, 0.56, 1.2751020408163265, 24173.124787999084);
        checkValues(mmas_us_madtsp, 670, 24975.344315889844, 1454.5999778219307, 0.56, 1.6122448979591837, 24173.124787999084);
        checkValues(mmas_us_madtsp, 671, 26192.206500868415, 2596.248679392746, 0.5, 2.710204081632653, 23793.698690335255);
        checkValues(mmas_us_madtsp, 675, 24648.878690335263, 1329.717089597388, 0.5, 1.8620408163265305, 23793.698690335255);
        checkValues(mmas_us_madtsp, 680, 24598.795396833302, 1382.6107467100985, 0.5, 2.057959183673469, 23793.698690335255);
        checkValues(mmas_us_madtsp, 681, 26943.537054993463, 1964.7749637565003, 0.49, 5.02204081632653, 24651.693830959113);
        checkValues(mmas_us_madtsp, 685, 24936.103981962195, 667.4819172995611, 0.49, 1.113469387755102, 24651.693830959113);
        checkValues(mmas_us_madtsp, 690, 24559.696531025562, 458.5645493317922, 0.5, 0.6661224489795918, 24441.682621456228);
        checkValues(mmas_us_madtsp, 691, 24790.096722286624, 811.0673246051809, 0.495, 3.073469387755102, 23850.692838771378);
        checkValues(mmas_us_madtsp, 695, 23988.161575220347, 829.2126663710084, 0.495, 0.7844897959183673, 23850.692838771378);
        checkValues(mmas_us_madtsp, 700, 23947.812838771366, 633.0446558707621, 0.5, 0.3183673469387755, 23850.692838771378);
        checkValues(mmas_us_madtsp, 701, 24747.617139076145, 1373.03325749356, 0.5, 1.1755102040816328, 24083.60582468867);
        checkValues(mmas_us_madtsp, 705, 24409.35974469896, 1003.9374028248096, 0.5, 0.8612244897959184, 24083.60582468867);
        checkValues(mmas_us_madtsp, 710, 24418.589209808437, 1201.6007850090493, 0.5, 0.8995918367346939, 24083.60582468867);
        checkValues(mmas_us_madtsp, 711, 26040.64609155152, 1066.776306066904, 0.495, 4.1053061224489795, 24452.218675193748);
        checkValues(mmas_us_madtsp, 715, 23999.452838771365, 398.90367923362425, 0.525, 0.6718367346938775, 23912.692838771378);
        checkValues(mmas_us_madtsp, 720, 24240.452838771365, 1059.3467097360392, 0.525, 0.8269387755102041, 23912.692838771378);
        checkValues(mmas_us_madtsp, 721, 25897.180360654787, 1694.6032704116506, 0.5, 3.0253061224489795, 23856.692838771378);
        checkValues(mmas_us_madtsp, 725, 24025.779038193068, 724.0305012609598, 0.5, 0.636734693877551, 23856.692838771378);
        checkValues(mmas_us_madtsp, 730, 24034.25283877137, 839.086776665865, 0.5, 0.43918367346938775, 23856.692838771378);
        checkValues(mmas_us_madtsp, 731, 25204.398360978, 1365.2836952411103, 0.495, 2.7934693877551022, 23825.7083808198);
        checkValues(mmas_us_madtsp, 735, 24472.60637819072, 1661.8479977681782, 0.495, 1.3591836734693878, 23825.7083808198);
        checkValues(mmas_us_madtsp, 740, 24061.083700981617, 873.2812798326155, 0.495, 0.5877551020408164, 23825.7083808198);
        checkValues(mmas_us_madtsp, 741, 25956.064481657137, 2012.9764394448512, 0.5, 3.6048979591836736, 24026.376328494054);
        checkValues(mmas_us_madtsp, 745, 24542.89911645523, 1296.1390123848878, 0.5, 1.296326530612245, 24026.376328494054);
        checkValues(mmas_us_madtsp, 750, 24646.536406838502, 1456.3279191120848, 0.5, 1.0375510204081633, 24026.376328494054);
        checkValues(mmas_us_madtsp, 751, 25387.593341866563, 640.220972781005, 0.495, 3.947755102040816, 24076.692838771378);
        checkValues(mmas_us_madtsp, 755, 24804.20308562741, 1541.1446175370136, 0.495, 2.4179591836734695, 24076.692838771378);
        checkValues(mmas_us_madtsp, 760, 24881.38138669925, 1665.4244681784296, 0.495, 2.5518367346938775, 24076.692838771378);
        checkValues(mmas_us_madtsp, 761, 27049.602725016674, 868.6630557380264, 0.495, 6.96, 24275.297407381535);
        checkValues(mmas_us_madtsp, 765, 24812.504805716497, 1106.647280831359, 0.495, 1.8236734693877552, 24275.297407381535);
        checkValues(mmas_us_madtsp, 770, 24509.46172237997, 704.7432778616525, 0.495, 1.6653061224489796, 24275.297407381535);
        checkValues(mmas_us_madtsp, 771, 25700.330347495837, 1508.882924327857, 0.5, 4.152653061224489, 24356.011895039108);
        checkValues(mmas_us_madtsp, 775, 24283.057089660546, 475.736040357219, 0.51, 0.39591836734693875, 24184.280804519487);
        checkValues(mmas_us_madtsp, 780, 24281.549590686183, 456.5091026644612, 0.51, 0.31755102040816324, 24184.280804519487);
        checkValues(mmas_us_madtsp, 781, 24533.53593143155, 641.23300391209, 0.495, 0.3183673469387755, 24438.235931431547);
        checkValues(mmas_us_madtsp, 785, 24499.205069578347, 431.1169102669924, 0.495, 0.12, 24438.235931431547);
        checkValues(mmas_us_madtsp, 790, 24452.575931431547, 73.81211946280793, 0.495, 0.15918367346938775, 24438.235931431547);
        checkValues(mmas_us_madtsp, 791, 24602.057182560708, 1182.2074439073529, 0.5, 0.9951020408163266, 24125.692838771378);
        checkValues(mmas_us_madtsp, 795, 24134.432838771365, 46.1376865745236, 0.5, 0.31918367346938775, 24125.692838771378);
        checkValues(mmas_us_madtsp, 800, 24168.972838771366, 306.0358148975379, 0.5, 0.2, 24125.692838771378);
        checkValues(mmas_us_madtsp, 801, 24742.46070584242, 499.3778273586051, 0.49, 3.5175510204081633, 23956.692838771378);
        checkValues(mmas_us_madtsp, 805, 24043.537020873035, 425.11397738996754, 0.49, 0.3159183673469388, 23956.692838771378);
        checkValues(mmas_us_madtsp, 810, 23973.842810910675, 91.91708608742194, 0.49, 0.2, 23956.692838771378);
        checkValues(mmas_us_madtsp, 811, 24213.551044452284, 463.49275132750864, 0.5, 0.6702040816326531, 23989.692838771378);
        checkValues(mmas_us_madtsp, 815, 23993.372838771367, 26.02152954766491, 0.5, 0.12, 23989.692838771378);
        checkValues(mmas_us_madtsp, 820, 23998.801890673887, 64.41072370453139, 0.5, 0.08, 23989.692838771378);
        checkValues(mmas_us_madtsp, 821, 24118.352838771367, 673.3418214929392, 0.5, 0.39591836734693875, 23903.692838771378);
        checkValues(mmas_us_madtsp, 825, 24142.552838771368, 794.614474870342, 0.5, 0.8212244897959183, 23903.692838771378);
        checkValues(mmas_us_madtsp, 830, 24170.372838771367, 848.576273194444, 0.5, 0.7061224489795919, 23903.692838771378);
        checkValues(mmas_us_madtsp, 831, 24811.091238923735, 1324.3102189994984, 0.5, 1.4481632653061225, 24102.692838771378);
        checkValues(mmas_us_madtsp, 835, 24102.692838771367, 1.102474064703213E-11, 0.5, 0.0, 24102.692838771378);
        checkValues(mmas_us_madtsp, 840, 24148.272838771365, 298.60314869097283, 0.5, 0.23918367346938776, 24102.692838771378);
        checkValues(mmas_us_madtsp, 841, 25471.185966049, 1553.4104029380583, 0.5, 2.244081632653061, 24008.692838771378);
        checkValues(mmas_us_madtsp, 845, 24148.026953855286, 482.8554463628686, 0.5, 0.6204081632653061, 24008.692838771378);
        checkValues(mmas_us_madtsp, 850, 24147.112838771365, 495.4826173354951, 0.5, 0.7436734693877551, 24008.692838771378);
        checkValues(mmas_us_madtsp, 851, 24652.030347021377, 895.7779233884679, 0.5, 1.3257142857142856, 23903.692838771378);
        checkValues(mmas_us_madtsp, 855, 24008.10011065512, 516.6819988066118, 0.5, 0.23510204081632652, 23903.692838771378);
        checkValues(mmas_us_madtsp, 860, 23909.832838771366, 43.41635636485403, 0.5, 0.12, 23903.692838771378);
        checkValues(mmas_us_madtsp, 861, 24974.79180981009, 765.2263281697817, 0.5, 2.3183673469387753, 24047.12048982474);
        checkValues(mmas_us_madtsp, 865, 24200.400489824773, 525.0750399238385, 0.5, 0.4506122448979592, 24047.12048982474);
        checkValues(mmas_us_madtsp, 870, 24192.11034893728, 446.24707079476514, 0.5, 1.04, 24047.12048982474);
        checkValues(mmas_us_madtsp, 871, 25142.97072222001, 838.7071154778056, 0.5, 2.670204081632653, 24211.692838771378);
        checkValues(mmas_us_madtsp, 875, 24250.032838771367, 217.6707502403666, 0.5, 0.3142857142857143, 24211.692838771378);
        checkValues(mmas_us_madtsp, 880, 24213.36224828748, 11.80450789421068, 0.5, 0.12, 24211.692838771378);
        checkValues(mmas_us_madtsp, 881, 24413.984152226458, 34.820147752142546, 0.5, 0.16, 24172.692838771378);
        checkValues(mmas_us_madtsp, 885, 24173.432838771365, 5.2325901807804485, 0.5, 0.12, 24172.692838771378);
        checkValues(mmas_us_madtsp, 890, 24230.852838771367, 263.69179288072866, 0.5, 0.5485714285714286, 24172.692838771378);
        checkValues(mmas_us_madtsp, 891, 26387.435727505068, 1628.097357924055, 0.5, 3.5461224489795917, 24178.692838771378);
        checkValues(mmas_us_madtsp, 895, 24178.692838771367, 1.102474064703213E-11, 0.5, 0.0, 24178.692838771378);
        checkValues(mmas_us_madtsp, 900, 24182.372838771367, 26.021529547664908, 0.5, 0.12, 24178.692838771378);
        checkValues(mmas_us_madtsp, 901, 24845.80756664196, 496.3185996756617, 0.5, 0.31755102040816324, 24418.433638990555);
        checkValues(mmas_us_madtsp, 905, 24425.03363899055, 32.886322446902334, 0.5, 0.19755102040816327, 24418.433638990555);
        checkValues(mmas_us_madtsp, 910, 24421.35363899055, 20.6475180106472, 0.5, 0.08, 24418.433638990555);
        checkValues(mmas_us_madtsp, 911, 24958.97728671005, 68.06412563325897, 0.495, 0.27755102040816326, 24488.135719823433);
        checkValues(mmas_us_madtsp, 915, 24500.843305094855, 89.85619717938356, 0.495, 0.12, 24488.135719823433);
        checkValues(mmas_us_madtsp, 920, 24561.58309174567, 519.35134746553, 0.495, 0.12, 24488.135719823433);
        checkValues(mmas_us_madtsp, 921, 24767.48484330713, 263.9310399736158, 0.5, 0.12, 24730.159357680943);
        checkValues(mmas_us_madtsp, 925, 24730.159357680943, 0.0, 0.5, 0.0, 24730.159357680943);
        checkValues(mmas_us_madtsp, 930, 24731.218087570724, 7.486350845074023, 0.5, 0.08, 24730.159357680943);
        checkValues(mmas_us_madtsp, 931, 24730.159357680943, 0.0, 0.5, 0.0, 24730.159357680943);
        checkValues(mmas_us_madtsp, 935, 24671.619357680946, 36.90927099949667, 0.515, 1.302857142857143, 24638.159357680943);
        checkValues(mmas_us_madtsp, 940, 24638.159357680943, 0.0, 0.515, 0.0, 24638.159357680943);
        checkValues(mmas_us_madtsp, 941, 24658.816500716497, 146.06805920383042, 0.5, 0.08, 24638.159357680943);
        checkValues(mmas_us_madtsp, 945, 24658.6965007165, 112.99446891806583, 0.5, 0.2383673469387755, 24638.159357680943);
        checkValues(mmas_us_madtsp, 950, 24658.696500716498, 112.99446891806576, 0.5, 0.2383673469387755, 24638.159357680943);
        checkValues(mmas_us_madtsp, 951, 24638.159357680943, 0.0, 0.5, 0.0, 24638.159357680943);
        checkValues(mmas_us_madtsp, 955, 24638.159357680943, 0.0, 0.5, 0.0, 24638.159357680943);
        checkValues(mmas_us_madtsp, 960, 24644.299357680942, 43.41635636485402, 0.5, 0.08, 24638.159357680943);
        checkValues(mmas_us_madtsp, 961, 24732.089456121008, 41.75508988571934, 0.5, 0.313469387755102, 24722.339554907314);
        checkValues(mmas_us_madtsp, 965, 24729.570920923656, 40.971287567493846, 0.5, 0.34775510204081633, 24699.30390254257);
        checkValues(mmas_us_madtsp, 970, 24708.378120748122, 45.06949809087192, 0.5, 0.19755102040816327, 24699.30390254257);
        checkValues(mmas_us_madtsp, 971, 24690.606469309834, 31.250207316887398, 0.5, 0.08, 24686.187022608377);
        checkValues(mmas_us_madtsp, 975, 24686.187022608377, 0.0, 0.5, 0.0, 24686.187022608377);
        checkValues(mmas_us_madtsp, 980, 24701.4044638401, 107.60355887255285, 0.5, 0.08, 24686.187022608377);
        checkValues(mmas_us_madtsp, 981, 24649.159357680943, 0.0, 0.5, 0.0, 24649.159357680943);
        checkValues(mmas_us_madtsp, 985, 24649.159357680943, 0.0, 0.5, 0.0, 24649.159357680943);
        checkValues(mmas_us_madtsp, 990, 24649.159357680943, 0.0, 0.5, 0.0, 24649.159357680943);
        checkValues(mmas_us_madtsp, 991, 24699.215418884527, 7.34982709802142E-12, 0.5, 0.0, 24699.21541888452);
        checkValues(mmas_us_madtsp, 995, 24699.215418884527, 7.34982709802142E-12, 0.5, 0.0, 24699.21541888452);
        checkValues(mmas_us_madtsp, 1000, 24699.215418884527, 7.34982709802142E-12, 0.5, 0.0, 24699.21541888452);
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94, 75, 12, 32, 36, 4, 38, 29, 95, 51, 77, 47, 70, 40, 99, 13, 2, 42, 28, 45, 33, 82, 54, 8, 6, 56, 19, 11, 26, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 17, 78, 52, 18, 96, 74, 48, 5, 62, 91, 7, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 93, 15, 87, 21, 89, 23, 98, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 69, 21, 93, 87, 15, 52, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 46, 44, 90, 97, 22, 76, 59, 61, 85, 34, 26, 11, 19, 56, 6, 8, 54, 82, 33, 45, 28, 42, 2, 13, 99, 40, 70, 47, 81, 94, 75, 32, 12, 36, 4, 77, 51, 95, 29, 38, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 80, 24, 60, 86, 50, 57, 66, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[0, 62, 5, 89, 48, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 65, 25, 69, 21, 93, 15, 87, 52, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 34, 26, 11, 19, 56, 6, 8, 54, 82, 33, 45, 28, 2, 13, 99, 40, 70, 47, 95, 77, 51, 4, 36, 12, 32, 75, 94, 81, 49, 43, 1, 53, 39, 63, 68, 80, 24, 60, 72, 67, 84, 38, 29, 42, 86, 50, 57, 66, 27, 92, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 74, 55, 79, 30, 88, 41, 7, 91, 96, 3, 64, 25, 65, 69, 21, 93, 87, 15, 52, 78, 17, 23, 37, 98, 35, 9, 83, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 59, 76, 19, 56, 6, 8, 54, 82, 33, 72, 67, 84, 38, 29, 42, 45, 28, 2, 13, 99, 40, 70, 47, 95, 77, 51, 4, 36, 12, 32, 75, 94, 81, 49, 43, 1, 53, 39, 63, 68, 80, 24, 60, 50, 86, 11, 26, 34, 85, 61, 57, 66, 27, 92, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 69, 21, 93, 15, 87, 52, 78, 17, 23, 98, 37, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 59, 76, 19, 56, 6, 8, 54, 82, 33, 11, 26, 34, 85, 61, 86, 50, 60, 24, 80, 68, 72, 67, 84, 38, 29, 42, 45, 28, 2, 13, 99, 40, 70, 47, 95, 77, 51, 4, 36, 12, 32, 75, 94, 81, 49, 43, 1, 53, 39, 63, 57, 66, 27, 92, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 25, 64, 65, 69, 21, 93, 15, 87, 52, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 59, 76, 61, 34, 26, 11, 85, 19, 56, 6, 8, 82, 54, 33, 28, 2, 42, 45, 13, 99, 40, 70, 47, 95, 77, 51, 4, 36, 12, 32, 75, 94, 81, 49, 43, 1, 53, 39, 63, 68, 72, 67, 84, 38, 29, 80, 24, 60, 50, 86, 57, 66, 27, 92, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 30, 79, 74, 55, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 52, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 14, 16, 10, 31, 46, 97, 90, 44, 22, 76, 59, 61, 34, 85, 26, 19, 11, 82, 45, 42, 2, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 75, 32, 12, 94, 81, 49, 72, 68, 63, 39, 53, 1, 43, 67, 84, 38, 29, 28, 33, 54, 6, 8, 56, 86, 50, 60, 24, 80, 57, 66, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 30, 79, 55, 74, 96, 3, 64, 65, 25, 69, 93, 21, 15, 87, 52, 78, 17, 37, 23, 98, 35, 83, 9, 71, 58, 73, 20, 16, 14, 10, 31, 46, 90, 44, 97, 22, 76, 59, 61, 34, 85, 26, 19, 11, 82, 54, 33, 45, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 75, 32, 12, 94, 81, 49, 72, 68, 63, 39, 53, 1, 43, 67, 84, 38, 29, 42, 2, 8, 6, 56, 86, 50, 60, 24, 80, 57, 66, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 30, 79, 55, 96, 74, 3, 64, 65, 25, 69, 21, 93, 15, 87, 52, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 34, 85, 26, 19, 11, 82, 54, 33, 45, 28, 13, 2, 42, 40, 70, 99, 47, 95, 77, 51, 4, 36, 75, 32, 12, 94, 81, 49, 72, 68, 63, 39, 53, 1, 43, 67, 84, 38, 29, 8, 6, 56, 86, 50, 60, 24, 80, 57, 66, 27, 92, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 30, 79, 55, 96, 74, 3, 64, 25, 65, 69, 15, 87, 93, 21, 52, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 59, 76, 61, 34, 85, 26, 19, 11, 54, 82, 33, 45, 28, 13, 2, 42, 40, 70, 99, 47, 51, 77, 95, 4, 36, 75, 32, 12, 94, 81, 49, 72, 68, 53, 39, 63, 1, 43, 67, 84, 38, 29, 8, 6, 56, 86, 50, 60, 80, 24, 57, 66, 27, 92, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 96, 74, 3, 64, 65, 25, 69, 21, 93, 87, 15, 52, 78, 17, 23, 37, 98, 35, 83, 9, 71, 73, 20, 58, 16, 14, 10, 31, 46, 90, 97, 44, 22, 59, 76, 61, 34, 85, 26, 19, 11, 54, 82, 33, 45, 28, 29, 38, 84, 67, 43, 1, 53, 39, 63, 68, 72, 49, 81, 94, 12, 32, 75, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 8, 6, 56, 86, 50, 60, 80, 24, 66, 57, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 96, 74, 3, 64, 25, 65, 69, 21, 93, 15, 87, 52, 78, 17, 23, 37, 98, 35, 9, 83, 71, 20, 58, 73, 16, 14, 10, 31, 90, 44, 97, 22, 76, 59, 61, 34, 85, 26, 19, 11, 54, 82, 33, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 43, 1, 53, 39, 63, 68, 72, 67, 84, 38, 29, 28, 45, 2, 42, 6, 8, 56, 86, 50, 24, 80, 60, 57, 46, 92, 27, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 96, 74, 3, 64, 25, 65, 69, 93, 21, 15, 87, 52, 78, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 16, 10, 31, 44, 90, 97, 22, 76, 59, 61, 34, 85, 26, 19, 11, 54, 82, 33, 45, 2, 42, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 43, 1, 53, 39, 63, 68, 72, 67, 84, 38, 29, 28, 6, 8, 56, 86, 50, 24, 80, 60, 57, 27, 66, 92, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 25, 64, 3, 65, 69, 21, 93, 87, 15, 52, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 10, 16, 14, 31, 90, 44, 97, 22, 76, 59, 61, 34, 85, 26, 19, 11, 54, 82, 33, 28, 45, 2, 42, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 43, 1, 53, 39, 63, 68, 72, 67, 84, 38, 29, 8, 6, 56, 86, 50, 24, 80, 60, 57, 27, 92, 66, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 25, 65, 69, 21, 93, 15, 87, 52, 78, 17, 23, 37, 98, 35, 9, 83, 71, 20, 73, 58, 10, 16, 14, 46, 31, 90, 44, 97, 22, 76, 59, 61, 34, 85, 26, 19, 11, 54, 82, 33, 28, 45, 2, 42, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 43, 1, 53, 39, 63, 68, 72, 67, 84, 38, 29, 8, 6, 56, 86, 50, 24, 80, 60, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 25, 65, 69, 21, 93, 15, 87, 52, 78, 17, 37, 23, 98, 35, 83, 9, 71, 20, 58, 73, 14, 16, 10, 31, 46, 90, 44, 97, 22, 76, 59, 61, 34, 85, 26, 19, 11, 54, 82, 33, 45, 2, 42, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 43, 1, 53, 39, 63, 68, 72, 67, 84, 38, 29, 28, 6, 8, 56, 86, 50, 24, 80, 60, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 25, 65, 69, 21, 93, 87, 52, 15, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 46, 90, 44, 97, 22, 59, 61, 76, 19, 85, 34, 26, 11, 54, 82, 33, 45, 2, 42, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 43, 1, 53, 39, 63, 68, 72, 67, 84, 38, 29, 28, 6, 8, 56, 86, 50, 24, 80, 60, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 52, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 58, 73, 10, 16, 14, 31, 44, 90, 97, 22, 59, 61, 76, 19, 85, 34, 26, 11, 54, 82, 33, 45, 2, 42, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 43, 1, 53, 39, 63, 68, 72, 67, 84, 38, 29, 28, 6, 8, 56, 86, 50, 24, 80, 60, 57, 66, 92, 27, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 93, 21, 15, 87, 52, 78, 17, 23, 37, 98, 35, 83, 9, 71, 73, 20, 58, 16, 14, 10, 31, 90, 97, 22, 59, 61, 85, 34, 26, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 51, 77, 95, 36, 4, 32, 75, 12, 94, 81, 38, 29, 84, 67, 49, 43, 53, 1, 63, 39, 72, 68, 80, 24, 60, 50, 86, 6, 8, 56, 19, 76, 44, 46, 27, 66, 57, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 52, 78, 17, 23, 37, 98, 35, 83, 9, 71, 73, 20, 58, 16, 14, 10, 31, 90, 97, 22, 59, 61, 34, 85, 26, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 51, 77, 95, 36, 4, 32, 75, 12, 94, 81, 38, 29, 84, 67, 49, 43, 1, 63, 39, 53, 72, 68, 80, 24, 60, 50, 86, 8, 6, 56, 19, 76, 44, 46, 92, 27, 57, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 52, 78, 17, 23, 37, 98, 35, 9, 83, 71, 20, 73, 58, 16, 14, 10, 31, 44, 97, 90, 22, 61, 34, 85, 26, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 38, 29, 84, 67, 49, 43, 1, 63, 39, 53, 72, 68, 80, 24, 60, 50, 86, 8, 6, 56, 19, 59, 76, 57, 66, 27, 92, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 52, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 44, 97, 90, 22, 76, 59, 61, 34, 85, 26, 19, 11, 54, 82, 33, 45, 28, 2, 42, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 38, 29, 84, 67, 49, 43, 1, 63, 39, 53, 72, 68, 80, 24, 8, 6, 56, 86, 50, 60, 57, 66, 27, 92, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 52, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 10, 16, 14, 31, 44, 97, 90, 22, 76, 59, 61, 34, 85, 26, 19, 11, 56, 8, 6, 54, 82, 33, 45, 28, 2, 42, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 38, 29, 84, 67, 49, 43, 1, 53, 39, 63, 72, 68, 80, 24, 60, 50, 86, 57, 66, 27, 92, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 52, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 14, 16, 10, 31, 90, 44, 97, 22, 76, 59, 61, 34, 85, 26, 19, 11, 56, 8, 6, 54, 82, 33, 45, 28, 2, 42, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 38, 29, 67, 84, 49, 72, 43, 1, 53, 39, 63, 68, 80, 24, 60, 50, 86, 57, 66, 27, 92, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 17, 23, 37, 98, 35, 9, 83, 71, 20, 73, 58, 16, 14, 10, 31, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 53, 39, 1, 43, 72, 49, 84, 67, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 42, 2, 28, 45, 33, 82, 54, 6, 8, 56, 11, 19, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 34, 26, 85, 19, 11, 6, 56, 8, 86, 24, 80, 68, 63, 39, 53, 1, 43, 72, 49, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 67, 84, 38, 29, 50, 60, 57, 66, 27, 92, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 34, 26, 85, 19, 11, 6, 56, 8, 86, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 72, 49, 67, 84, 38, 77, 51, 95, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 57, 66, 27, 92, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 6, 8, 86, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 56, 57, 66, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 46, 90, 44, 97, 22, 76, 59, 61, 34, 85, 26, 11, 19, 6, 8, 56, 86, 50, 60, 24, 80, 72, 67, 84, 38, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 39, 53, 1, 43, 49, 68, 63, 66, 27, 57, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 10, 16, 14, 31, 44, 90, 97, 22, 76, 59, 61, 34, 85, 26, 11, 19, 6, 8, 56, 86, 50, 60, 24, 80, 72, 67, 84, 38, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 49, 43, 1, 63, 39, 53, 68, 57, 66, 92, 27, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 73, 20, 58, 14, 16, 10, 31, 44, 90, 97, 22, 76, 59, 61, 34, 85, 26, 11, 19, 6, 8, 56, 86, 50, 60, 24, 80, 72, 67, 84, 38, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 29, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 49, 43, 1, 63, 39, 53, 68, 57, 66, 27, 92, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 73, 20, 58, 16, 14, 10, 31, 44, 90, 97, 22, 59, 76, 61, 34, 85, 26, 11, 19, 56, 6, 8, 86, 50, 80, 68, 63, 39, 53, 1, 43, 72, 49, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 38, 29, 54, 82, 33, 45, 42, 2, 28, 13, 70, 40, 99, 47, 84, 67, 24, 60, 57, 66, 27, 92, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 46, 90, 44, 97, 22, 59, 76, 56, 6, 8, 86, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 29, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 38, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 54, 82, 11, 19, 85, 26, 34, 61, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 90, 97, 22, 76, 59, 61, 19, 85, 34, 26, 11, 6, 8, 86, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 54, 82, 56, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 73, 58, 10, 16, 14, 31, 44, 92, 27, 66, 57, 86, 50, 60, 24, 80, 68, 1, 53, 39, 63, 43, 49, 72, 67, 84, 38, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 29, 47, 99, 40, 70, 13, 42, 2, 28, 45, 33, 54, 82, 56, 8, 6, 11, 26, 34, 85, 19, 61, 59, 76, 22, 97, 90, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 90, 97, 44, 22, 76, 59, 61, 34, 85, 26, 11, 19, 56, 6, 8, 54, 82, 33, 28, 45, 42, 2, 13, 99, 40, 70, 47, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 72, 67, 84, 38, 43, 49, 1, 53, 39, 63, 68, 80, 24, 50, 86, 60, 57, 66, 27, 92, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 34, 85, 26, 19, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 72, 67, 84, 38, 43, 49, 1, 53, 39, 63, 68, 80, 24, 50, 56, 6, 8, 86, 60, 57, 66, 92, 27, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 97, 22, 76, 59, 61, 34, 85, 26, 19, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 72, 67, 84, 38, 49, 43, 1, 53, 39, 63, 68, 80, 24, 60, 50, 86, 8, 6, 56, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 34, 85, 26, 19, 11, 54, 82, 33, 28, 45, 42, 2, 13, 99, 70, 40, 47, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 72, 67, 84, 38, 49, 43, 1, 53, 39, 63, 68, 80, 24, 60, 50, 86, 8, 6, 56, 57, 66, 27, 92, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 44, 22, 97, 90, 46, 76, 59, 61, 34, 85, 26, 42, 38, 84, 67, 24, 80, 68, 53, 39, 63, 1, 43, 49, 72, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 29, 47, 70, 40, 99, 13, 2, 45, 28, 33, 82, 54, 11, 19, 56, 6, 8, 86, 50, 60, 66, 57, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 44, 22, 97, 90, 76, 59, 61, 34, 85, 26, 11, 19, 56, 6, 8, 86, 50, 24, 80, 68, 53, 39, 63, 72, 84, 67, 49, 43, 1, 81, 94, 75, 12, 32, 36, 4, 77, 95, 51, 38, 29, 47, 99, 40, 70, 13, 28, 45, 2, 42, 54, 82, 33, 60, 57, 66, 92, 27, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 97, 90, 44, 22, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 49, 43, 72, 68, 63, 39, 53, 1, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 76, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 97, 22, 59, 61, 76, 50, 86, 8, 6, 56, 19, 34, 85, 26, 11, 54, 82, 33, 28, 45, 2, 42, 13, 99, 70, 40, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 72, 43, 49, 84, 67, 80, 24, 60, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 97, 22, 59, 76, 61, 26, 85, 34, 19, 56, 8, 6, 11, 82, 54, 33, 28, 45, 2, 42, 13, 99, 70, 40, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 67, 84, 49, 43, 72, 68, 80, 24, 86, 50, 60, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 82, 54, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 81, 94, 12, 75, 32, 4, 36, 51, 77, 95, 38, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 80, 24, 60, 86, 50, 92, 27, 57, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 50, 86, 6, 8, 82, 54, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 72, 43, 1, 53, 39, 63, 68, 80, 24, 60, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 54, 82, 33, 28, 45, 42, 2, 13, 40, 70, 99, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 72, 43, 1, 63, 39, 53, 68, 80, 24, 60, 86, 50, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 6, 8, 54, 82, 33, 28, 45, 42, 2, 13, 40, 70, 99, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 72, 43, 1, 63, 39, 53, 68, 80, 24, 60, 86, 50, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 94, 12, 81, 84, 67, 72, 49, 43, 1, 39, 53, 63, 68, 80, 24, 86, 50, 60, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 54, 82, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 94, 12, 81, 84, 67, 72, 49, 43, 1, 39, 53, 63, 68, 80, 24, 86, 50, 60, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 54, 82, 33, 28, 45, 2, 42, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 72, 49, 43, 1, 39, 53, 63, 68, 80, 24, 86, 50, 60, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 6, 8, 54, 82, 33, 28, 45, 42, 2, 13, 40, 70, 99, 47, 38, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 72, 49, 43, 1, 63, 39, 53, 68, 80, 24, 86, 50, 60, 57, 66, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 86, 24, 80, 68, 53, 39, 63, 1, 43, 49, 72, 67, 84, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 29, 38, 47, 40, 70, 99, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 50, 60, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 6, 8, 86, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 29, 38, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 80, 24, 50, 60, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 6, 8, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 33, 82, 54, 45, 42, 2, 13, 70, 40, 99, 47, 51, 95, 77, 4, 36, 32, 75, 12, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 33, 82, 54, 45, 42, 2, 13, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 2, 42, 54, 82, 33, 45, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 57, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 84, 67, 38, 29, 28, 33, 82, 54, 45, 2, 42, 13, 70, 40, 99, 47, 51, 95, 77, 4, 36, 32, 75, 12, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 57, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 84, 67, 38, 29, 28, 33, 54, 82, 45, 42, 2, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 72, 43, 49, 67, 84, 38, 29, 28, 33, 82, 54, 45, 42, 2, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 33, 82, 54, 45, 42, 2, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 72, 43, 1, 39, 53, 63, 68, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 33, 82, 54, 28, 45, 42, 2, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 72, 43, 1, 39, 53, 63, 68, 57, 66, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 72, 43, 1, 39, 53, 63, 68, 66, 57, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 33, 82, 54, 45, 42, 2, 13, 99, 40, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 72, 43, 1, 39, 63, 53, 68, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 33, 82, 54, 45, 42, 2, 13, 99, 40, 70, 47, 51, 77, 95, 36, 4, 32, 12, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 54, 82, 33, 45, 42, 2, 13, 99, 40, 70, 47, 51, 77, 95, 4, 36, 32, 12, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 33, 82, 54, 45, 42, 2, 13, 40, 70, 99, 47, 51, 77, 95, 4, 36, 12, 75, 32, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 57, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 70, 40, 99, 47, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 57, 92, 27, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 72, 68, 63, 39, 53, 66, 57, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 72, 68, 39, 53, 63, 66, 57, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 49, 72, 68, 39, 53, 63, 1, 66, 57, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 72, 49, 43, 1, 53, 39, 63, 68, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 57, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 72, 49, 43, 1, 53, 39, 63, 68, 57, 66, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 95, 77, 4, 36, 32, 12, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 57, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 53, 39, 63, 1, 43, 49, 72, 68, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 53, 39, 63, 1, 43, 49, 72, 68, 66, 57, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 72, 68, 63, 39, 53, 66, 57, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 1, 43, 49, 72, 68, 63, 39, 53, 66, 57, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 12, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 75, 32, 12, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 12, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 57, 92, 27, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 72, 49, 43, 1, 53, 39, 63, 68, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 72, 43, 1, 39, 53, 63, 68, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 57, 92, 27, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 39, 53, 63, 68, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 63, 39, 53, 1, 49, 72, 68, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 63, 39, 53, 1, 72, 49, 68, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 63, 39, 53, 1, 49, 72, 68, 57, 92, 27, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 63, 39, 53, 1, 49, 72, 68, 57, 92, 27, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 63, 39, 53, 1, 49, 72, 68, 57, 92, 27, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 63, 39, 53, 1, 49, 72, 68, 66, 57, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 63, 39, 53, 1, 49, 72, 68, 66, 57, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 63, 39, 53, 1, 49, 72, 68, 66, 57, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 63, 39, 53, 1, 49, 72, 68, 66, 57, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 63, 39, 53, 1, 49, 72, 68, 66, 57, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 63, 39, 53, 1, 49, 72, 68, 66, 57, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 63, 39, 53, 1, 49, 72, 68, 66, 57, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[0, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[0, 62, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 63, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 63, 39, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 63, 39, 53, 1, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 63, 39, 53, 1, 49, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 63, 39, 53, 1, 49, 72, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 63, 39, 53, 1, 49, 72, 68, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 63, 39, 53, 1, 49, 72, 68, 66, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 63, 39, 53, 1, 49, 72, 68, 66, 57, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 63, 39, 53, 1, 49, 72, 68, 66, 57, 92, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 63, 39, 53, 1, 49, 72, 68, 66, 57, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[0, 62, 5, 48, 89, 18, 91, 7, 41, 88, 79, 30, 55, 74, 96, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 52, 23, 17, 37, 98, 35, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 46, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 11, 19, 56, 8, 6, 86, 50, 60, 24, 80, 67, 84, 38, 29, 28, 45, 33, 82, 54, 42, 2, 13, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 63, 39, 53, 1, 49, 72, 68, 66, 57, 92, 27, 0]");


        assertThat(mmas_us_madtsp.getGlobalStatistics().getTimeStatistics().get("MMAS Execution")).isLessThan(15000);
        assertThat(mmas_us_madtsp.getGlobalStatistics().getTimeStatistics().get("MMAS Initialization")).isLessThan(150);
    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA100_with_seed_1_mag_0_1_freq_100() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_US_MADTSP mmas_us_madtsp = new MMAS_US_MADTSP(graph, 0.8, 1000, 0.1, 100);
        mmas_us_madtsp.setMmasSeed(1);
        mmas_us_madtsp.setDbgpSeed(1);
        mmas_us_madtsp.setStatisticInterval(1);
        mmas_us_madtsp.setShowLog(false);
        mmas_us_madtsp.run();
        assertThat(mmas_us_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(22295.972074659356);
        assertThat(mmas_us_madtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(22295.972074659356);
        assertThat(getTourString(mmas_us_madtsp)).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");

        checkValues(mmas_us_madtsp, 1, 32061.40617117336, 2553.2207588582637, 0.0, 54.53224489795918, 24995.293582408613);
        checkValues(mmas_us_madtsp, 50, 25176.55678333946, 1683.616823788259, 0.495, 6.506938775510204, 23354.062482596408);
        checkValues(mmas_us_madtsp, 100, 24116.038947680132, 1740.379255928105, 0.5, 3.817142857142857, 22945.062482596408);
        checkValues(mmas_us_madtsp, 101, 27203.38917343754, 2233.379150512488, 0.5, 9.15265306122449, 23386.195124825805);
        checkValues(mmas_us_madtsp, 150, 24550.795470666795, 1963.0020156941237, 0.5, 5.121632653061225, 22949.133607074356);
        checkValues(mmas_us_madtsp, 200, 23683.221154164137, 2345.491209251355, 0.51, 2.8751020408163264, 22280.5294108372);
        checkValues(mmas_us_madtsp, 201, 28895.083605476055, 1479.226728797383, 0.495, 9.151836734693877, 22702.339060902326);
        checkValues(mmas_us_madtsp, 250, 24331.80205341612, 1672.6052723603557, 0.495, 4.400816326530612, 22702.339060902326);
        checkValues(mmas_us_madtsp, 300, 23769.275792018514, 1657.0800398613435, 0.495, 2.7224489795918365, 22702.339060902326);
        checkValues(mmas_us_madtsp, 301, 25744.092612122313, 1370.2386624149506, 0.495, 3.8857142857142857, 23400.734400567057);
        checkValues(mmas_us_madtsp, 350, 25001.433887081224, 1763.8280262677254, 0.5, 6.3395918367346935, 22837.9088530597);
        checkValues(mmas_us_madtsp, 400, 23786.91438906658, 1187.8815720244706, 0.5, 2.3583673469387754, 22675.193365773157);
        checkValues(mmas_us_madtsp, 401, 24910.8776101097, 1226.4276670065938, 0.5, 5.921632653061224, 23296.337964246108);
        checkValues(mmas_us_madtsp, 450, 23162.221777941264, 1094.4862762639877, 0.59, 3.0848979591836736, 22571.84687916191);
        checkValues(mmas_us_madtsp, 500, 23035.97513995542, 776.0852336923427, 0.5, 2.803265306122449, 22571.84687916191);
        checkValues(mmas_us_madtsp, 501, 25465.45989480084, 862.7706126669124, 0.495, 5.417142857142857, 22481.639877215963);
        checkValues(mmas_us_madtsp, 550, 23958.82891320258, 1267.7381056613647, 0.495, 2.262857142857143, 22481.639877215963);
        checkValues(mmas_us_madtsp, 600, 24028.93326851807, 1300.0445475051552, 0.5, 3.2922448979591836, 22481.639877215963);
        checkValues(mmas_us_madtsp, 601, 24557.539931242234, 1717.0133591448102, 0.5, 4.291428571428572, 22385.067960620025);
        checkValues(mmas_us_madtsp, 650, 23822.265176023153, 1132.8748125618135, 0.5, 3.020408163265306, 22385.067960620025);
        checkValues(mmas_us_madtsp, 700, 23521.156568321585, 1188.963785977578, 0.5, 3.155918367346939, 22056.067960620025);
        checkValues(mmas_us_madtsp, 701, 24389.06134361436, 1154.5202678636822, 0.5, 5.419591836734694, 22457.162554914314);
        checkValues(mmas_us_madtsp, 750, 23674.778745309235, 1231.616490869924, 0.5, 2.020408163265306, 22457.162554914314);
        checkValues(mmas_us_madtsp, 800, 23646.582554914337, 1204.6129379199283, 0.5, 1.749387755102041, 22457.162554914314);
        checkValues(mmas_us_madtsp, 801, 24389.16471018654, 2307.5860612017095, 0.5, 2.057142857142857, 22381.972074659356);
        checkValues(mmas_us_madtsp, 850, 22409.012312924086, 135.5332538829665, 0.5, 0.39346938775510204, 22381.972074659356);
        checkValues(mmas_us_madtsp, 900, 22418.854614767057, 189.320127611679, 0.5, 0.31755102040816324, 22381.972074659356);
        checkValues(mmas_us_madtsp, 901, 22564.02500826153, 223.62225707376092, 0.5, 1.2669387755102042, 22295.972074659356);
        checkValues(mmas_us_madtsp, 950, 22295.972074659338, 1.837456774505355E-11, 0.5, 0.0, 22295.972074659356);
        checkValues(mmas_us_madtsp, 1000, 22295.972074659338, 1.837456774505355E-11, 0.5, 0.0, 22295.972074659356);
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94, 75, 12, 32, 36, 4, 38, 29, 95, 51, 77, 47, 70, 40, 99, 13, 2, 42, 28, 45, 33, 82, 54, 8, 6, 56, 19, 11, 26, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 17, 78, 52, 18, 96, 74, 48, 5, 62, 91, 7, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 93, 15, 87, 21, 89, 23, 98, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94, 75, 12, 32, 36, 4, 38, 29, 95, 51, 77, 47, 70, 40, 99, 13, 2, 42, 28, 45, 33, 82, 54, 8, 6, 56, 19, 11, 26, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 17, 78, 52, 18, 96, 74, 48, 5, 62, 91, 7, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 93, 15, 87, 21, 89, 23, 98, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 29, 95, 77, 51, 4, 36, 32, 12, 75, 94, 81, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 17, 78, 52, 18, 96, 74, 91, 7, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 21, 15, 87, 93, 23, 98, 89, 48, 5, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 29, 95, 77, 51, 4, 36, 32, 12, 75, 94, 81, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 78, 52, 18, 96, 74, 91, 7, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 21, 15, 87, 93, 89, 48, 5, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 29, 95, 77, 51, 4, 36, 32, 12, 75, 94, 81, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 78, 52, 18, 96, 74, 91, 7, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 21, 15, 87, 93, 89, 48, 5, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 29, 95, 77, 51, 4, 36, 32, 12, 75, 94, 81, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 78, 52, 87, 93, 15, 21, 69, 65, 25, 3, 64, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 29, 95, 77, 51, 4, 36, 32, 12, 75, 94, 81, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 78, 52, 87, 93, 15, 21, 69, 65, 64, 25, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 12, 75, 94, 81, 38, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 78, 52, 87, 93, 15, 21, 69, 65, 64, 25, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 12, 75, 94, 81, 38, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 78, 52, 87, 93, 15, 21, 69, 65, 64, 25, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 12, 75, 94, 81, 38, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 78, 52, 87, 93, 15, 21, 69, 65, 64, 25, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 72, 67, 84, 43, 81, 94, 75, 12, 32, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 46, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 78, 52, 87, 93, 15, 21, 69, 65, 64, 25, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 46, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 46, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 46, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 46, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 46, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 46, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 46, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 46, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 46, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 56, 8, 6, 19, 11, 26, 85, 34, 61, 59, 76, 97, 22, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 56, 8, 6, 19, 11, 26, 85, 34, 61, 59, 76, 97, 22, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 56, 8, 6, 19, 11, 26, 85, 34, 61, 59, 76, 97, 22, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 56, 8, 6, 19, 11, 26, 85, 34, 61, 59, 76, 97, 22, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 56, 8, 6, 19, 11, 26, 85, 34, 61, 59, 76, 97, 22, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 56, 8, 6, 19, 11, 26, 85, 34, 61, 59, 76, 97, 22, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 56, 8, 6, 19, 11, 26, 85, 34, 61, 59, 76, 97, 22, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 56, 8, 6, 19, 11, 26, 85, 34, 61, 59, 76, 97, 22, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 56, 8, 6, 19, 11, 26, 85, 34, 61, 59, 76, 97, 22, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 56, 8, 6, 19, 11, 26, 85, 34, 61, 59, 76, 97, 22, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 62, 46, 89, 48, 5, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 9, 83, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 9, 83, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 9, 83, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 71, 20, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 71, 20, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 71, 20, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 64, 25, 65, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 64, 25, 65, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 64, 25, 65, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 26, 34, 85, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 64, 25, 65, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 64, 25, 65, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 64, 25, 65, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 25, 65, 64, 3, 96, 18, 74, 55, 79, 30, 41, 88, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 25, 65, 64, 3, 96, 18, 74, 55, 79, 30, 41, 88, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 25, 65, 64, 3, 96, 18, 74, 55, 79, 30, 41, 88, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 25, 65, 64, 3, 96, 18, 74, 55, 79, 30, 41, 88, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 25, 65, 64, 3, 96, 18, 74, 55, 79, 30, 41, 88, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 25, 65, 64, 3, 96, 18, 74, 55, 79, 30, 41, 88, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 25, 65, 64, 3, 96, 18, 74, 55, 79, 30, 41, 88, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 91, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 91, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 91, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 91, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 91, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 91, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 91, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 91, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 91, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 91, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 74, 18, 89, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 74, 18, 89, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 74, 18, 89, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 74, 18, 89, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 74, 18, 89, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 74, 18, 89, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 74, 18, 89, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 74, 18, 89, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 74, 18, 89, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 5, 48, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 5, 48, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 5, 48, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 5, 48, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 5, 48, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 5, 48, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 5, 48, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 5, 48, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 5, 48, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 5, 48, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[0, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[0, 27, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 49, 84, 67, 72, 43, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");

        assertThat(mmas_us_madtsp.getGlobalStatistics().getTimeStatistics().get("MMAS Execution")).isLessThan(10000);
        assertThat(mmas_us_madtsp.getGlobalStatistics().getTimeStatistics().get("MMAS Initialization")).isLessThan(150);
    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA150_with_seed_1_mag_0_1_freq_10() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA150));
        MMAS_US_MADTSP mmas_us_madtsp = new MMAS_US_MADTSP(graph, 0.8, 1000, 0.1, 10);
        mmas_us_madtsp.setMmasSeed(1);
        mmas_us_madtsp.setDbgpSeed(1);
        mmas_us_madtsp.setStatisticInterval(1);
        mmas_us_madtsp.setShowLog(false);
        mmas_us_madtsp.run();
        assertThat(mmas_us_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(30235.49169940224);
        assertThat(mmas_us_madtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(30235.49169940224);
        assertThat(getTourString(mmas_us_madtsp)).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");

        checkValues(mmas_us_madtsp, 1, 40111.719448483374, 2049.2615999305035, 0.0, 81.65795918367347, 34949.74724840918);
        checkValues(mmas_us_madtsp, 5, 34850.95081469776, 1508.589007267257, 0.83, 29.787755102040816, 30543.35700392316);
        checkValues(mmas_us_madtsp, 10, 34868.320247840464, 1713.5199393843657, 0.83, 29.379591836734694, 30543.35700392316);
        checkValues(mmas_us_madtsp, 11, 38554.26248601389, 1729.645945745066, 0.4866666666666667, 36.926530612244896, 32834.65730403319);
        checkValues(mmas_us_madtsp, 15, 33739.73218958254, 1695.2476492117598, 0.6033333333333334, 12.169795918367347, 32066.802183522377);
        checkValues(mmas_us_madtsp, 20, 32858.6688369795, 2221.107810927713, 0.54, 11.698775510204081, 30462.802183522377);
        checkValues(mmas_us_madtsp, 21, 35177.26302044626, 2065.935379758937, 0.5133333333333333, 21.391020408163264, 32388.876491719904);
        checkValues(mmas_us_madtsp, 25, 35967.56076667804, 1675.0585903798624, 0.5566666666666666, 20.008979591836734, 31299.3326067052);
        checkValues(mmas_us_madtsp, 30, 32667.908568743213, 1551.4338046726896, 0.56, 13.635918367346939, 30792.862059718835);
        checkValues(mmas_us_madtsp, 31, 36915.37203131967, 2181.8231118337776, 0.54, 30.042448979591835, 32589.512780054058);
        checkValues(mmas_us_madtsp, 35, 36473.75347313846, 2422.110010652152, 0.52, 18.235102040816326, 31988.700495171244);
        checkValues(mmas_us_madtsp, 40, 34808.0332741707, 1997.1664839053233, 0.52, 12.595918367346938, 31707.90249517768);
        checkValues(mmas_us_madtsp, 41, 35962.16299312654, 2138.931172794602, 0.49666666666666665, 15.093061224489796, 31715.173627761087);
        checkValues(mmas_us_madtsp, 45, 33542.264348128134, 1737.041748286321, 0.51, 10.86530612244898, 31164.792436242424);
        checkValues(mmas_us_madtsp, 50, 33252.43417121787, 1900.116250275392, 0.51, 8.424489795918367, 31164.792436242424);
        checkValues(mmas_us_madtsp, 51, 36194.52154504362, 2108.6964992392423, 0.49666666666666665, 14.310204081632653, 30771.13303693019);
        checkValues(mmas_us_madtsp, 55, 31455.443146104506, 1525.9432364132722, 0.5, 6.8677551020408165, 30263.42278880454);
        checkValues(mmas_us_madtsp, 60, 33257.32365907516, 2255.117177279501, 0.5033333333333333, 10.17469387755102, 29926.42278880454);
        checkValues(mmas_us_madtsp, 61, 35433.10511716541, 1417.3276986631288, 0.49333333333333335, 15.973061224489795, 31642.240461483154);
        checkValues(mmas_us_madtsp, 65, 32236.83611108128, 1115.9192481541327, 0.55, 5.233469387755102, 30299.240461483158);
        checkValues(mmas_us_madtsp, 70, 33003.287419584456, 1735.6354561535566, 0.5066666666666667, 10.835102040816327, 29880.240461483154);
        checkValues(mmas_us_madtsp, 71, 36989.056065952835, 2880.0467484334954, 0.5233333333333333, 25.30938775510204, 31962.843648044312);
        checkValues(mmas_us_madtsp, 75, 36771.86228586744, 1430.5592517980622, 0.5233333333333333, 26.959183673469386, 31962.843648044312);
        checkValues(mmas_us_madtsp, 80, 35632.42147273944, 2084.3285031240844, 0.6166666666666667, 29.419591836734693, 31640.046645873867);
        checkValues(mmas_us_madtsp, 81, 36708.36479805189, 2088.2231414170133, 0.54, 25.52734693877551, 31016.763070049117);
        checkValues(mmas_us_madtsp, 85, 31933.394779506543, 2295.983955157915, 0.51, 5.639183673469388, 30100.190914457213);
        checkValues(mmas_us_madtsp, 90, 31194.700295700837, 1889.6181529178277, 0.5166666666666667, 5.278367346938776, 29768.406569003244);
        checkValues(mmas_us_madtsp, 91, 37793.31520728496, 1877.8646190510228, 0.5033333333333333, 22.455510204081634, 30341.097553612555);
        checkValues(mmas_us_madtsp, 95, 34202.931186612586, 1978.4359434256626, 0.5033333333333333, 14.084081632653062, 30341.097553612555);
        checkValues(mmas_us_madtsp, 100, 33598.029077917476, 3222.105660572782, 0.5066666666666667, 10.914285714285715, 29709.130138415232);
        checkValues(mmas_us_madtsp, 101, 35547.21256443375, 2440.426783822269, 0.5066666666666667, 14.866938775510205, 30348.56683762627);
        checkValues(mmas_us_madtsp, 105, 35969.15001395538, 3070.1497722339955, 0.5066666666666667, 10.954285714285714, 29918.171866090765);
        checkValues(mmas_us_madtsp, 110, 33813.95569525799, 2790.5561922584193, 0.53, 11.569795918367348, 29195.026772151723);
        checkValues(mmas_us_madtsp, 111, 35633.280578959886, 1802.8470975051807, 0.49333333333333335, 12.546122448979592, 31155.059337538325);
        checkValues(mmas_us_madtsp, 115, 31802.545721044084, 2155.1313946073124, 0.5266666666666666, 8.576326530612246, 29814.62288636296);
        checkValues(mmas_us_madtsp, 120, 31473.316571335745, 1996.4579249815604, 0.5033333333333333, 8.963265306122448, 29609.89402447497);
        checkValues(mmas_us_madtsp, 121, 33808.883721441176, 2282.86140283148, 0.5, 17.400816326530613, 30481.017793004772);
        checkValues(mmas_us_madtsp, 125, 32571.914886355997, 1510.3186222670272, 0.5, 10.582040816326531, 30481.017793004772);
        checkValues(mmas_us_madtsp, 130, 32090.243436840312, 1139.4041411791115, 0.5, 11.351836734693878, 30481.017793004772);
        checkValues(mmas_us_madtsp, 131, 35364.13549305961, 1863.524191910353, 0.57, 36.5534693877551, 32282.458339081055);
        checkValues(mmas_us_madtsp, 135, 34667.754163989404, 1309.393513635633, 0.57, 9.332244897959184, 32282.458339081055);
        checkValues(mmas_us_madtsp, 140, 33569.73203128544, 2230.108216024669, 0.5733333333333334, 14.10204081632653, 30842.549038552646);
        checkValues(mmas_us_madtsp, 141, 35271.35848149301, 1919.552192228082, 0.5666666666666667, 30.68081632653061, 31364.140595703047);
        checkValues(mmas_us_madtsp, 145, 32977.03838567987, 1539.8752144574416, 0.5666666666666667, 9.937142857142858, 31364.140595703047);
        checkValues(mmas_us_madtsp, 150, 32435.311691356274, 1612.8046420091189, 0.55, 9.771428571428572, 31080.687402730207);
        checkValues(mmas_us_madtsp, 151, 34481.39282029505, 1595.7151699902379, 0.49, 20.180408163265305, 31723.21604909675);
        checkValues(mmas_us_madtsp, 155, 32644.187941151387, 1736.0762633648212, 0.5433333333333333, 8.799183673469388, 31095.405943229485);
        checkValues(mmas_us_madtsp, 160, 33296.22366182782, 2258.6769185978114, 0.5033333333333333, 7.36734693877551, 30599.9993001694);
        checkValues(mmas_us_madtsp, 161, 34483.96196532906, 1751.454536044342, 0.49333333333333335, 15.301224489795919, 30627.18494678441);
        checkValues(mmas_us_madtsp, 165, 33416.871413670924, 1443.7427051151387, 0.54, 11.955102040816326, 30470.7218946875);
        checkValues(mmas_us_madtsp, 170, 33880.644345642475, 1532.5618941194002, 0.49666666666666665, 9.69795918367347, 30324.656264475834);
        checkValues(mmas_us_madtsp, 171, 35025.54205486065, 1772.7321265463293, 0.5033333333333333, 19.117551020408165, 30074.70143884392);
        checkValues(mmas_us_madtsp, 175, 31801.75041860122, 1240.025848650752, 0.5033333333333333, 9.024489795918367, 30074.70143884392);
        checkValues(mmas_us_madtsp, 180, 32488.77344437622, 1562.2757628475886, 0.5033333333333333, 11.252244897959184, 30074.70143884392);
        checkValues(mmas_us_madtsp, 181, 33232.79045883465, 1289.7712915511179, 0.53, 18.346122448979592, 30799.175670287415);
        checkValues(mmas_us_madtsp, 185, 31036.39523200585, 1737.4744999120733, 0.5633333333333334, 5.0253061224489795, 29718.372920722755);
        checkValues(mmas_us_madtsp, 190, 31162.457845425866, 1963.8477452138545, 0.5633333333333334, 4.811428571428571, 29718.372920722755);
        checkValues(mmas_us_madtsp, 191, 34583.5370600121, 1414.3532632627139, 0.49666666666666665, 17.488163265306124, 32412.877798914462);
        checkValues(mmas_us_madtsp, 195, 34331.47894112376, 1274.233151533978, 0.5866666666666667, 17.562448979591835, 31303.371636682503);
        checkValues(mmas_us_madtsp, 200, 32384.80847443182, 2182.463525751832, 0.5133333333333333, 8.650612244897959, 30309.195185708435);
        checkValues(mmas_us_madtsp, 201, 34015.38433448545, 1769.245381136107, 0.51, 15.285714285714286, 30053.038609388692);
        checkValues(mmas_us_madtsp, 205, 32515.937797360144, 1713.0965134944317, 0.51, 14.391020408163266, 30053.038609388692);
        checkValues(mmas_us_madtsp, 210, 33353.35030153229, 1604.021766949312, 0.51, 13.706122448979592, 30053.038609388692);
        checkValues(mmas_us_madtsp, 211, 35135.4180558841, 1531.6203626377742, 0.5166666666666667, 33.39918367346939, 32154.152244677898);
        checkValues(mmas_us_madtsp, 215, 33337.83638548876, 1638.9899511653157, 0.6266666666666667, 12.975510204081633, 30605.15497579706);
        checkValues(mmas_us_madtsp, 220, 32903.3555071319, 1756.0505346905302, 0.5366666666666666, 15.670204081632653, 29267.63109333055);
        checkValues(mmas_us_madtsp, 221, 35593.709040926275, 1149.009334683547, 0.52, 12.51265306122449, 29955.745863402095);
        checkValues(mmas_us_madtsp, 225, 34051.239404952576, 1822.902495029117, 0.52, 18.582857142857144, 29955.745863402095);
        checkValues(mmas_us_madtsp, 230, 33249.82832172219, 1801.9430428576318, 0.52, 11.374693877551021, 29955.745863402095);
        checkValues(mmas_us_madtsp, 231, 33756.43267419595, 1696.691945604809, 0.5, 14.267755102040816, 29411.338514186504);
        checkValues(mmas_us_madtsp, 235, 32356.13140920603, 1745.138329944673, 0.5, 8.90857142857143, 29411.338514186504);
        checkValues(mmas_us_madtsp, 240, 31663.221689108177, 1370.2110121649373, 0.5, 8.12734693877551, 29306.32338482868);
        checkValues(mmas_us_madtsp, 241, 32857.65095222343, 1906.9855380636425, 0.51, 11.52, 29875.64664605061);
        checkValues(mmas_us_madtsp, 245, 31301.32993353018, 1855.880390780535, 0.65, 6.771428571428571, 29785.36199074324);
        checkValues(mmas_us_madtsp, 250, 31094.25192774526, 2053.747702419258, 0.5066666666666667, 3.7624489795918366, 29492.36199074324);
        checkValues(mmas_us_madtsp, 251, 35062.90846359958, 1001.9439498543421, 0.5033333333333333, 12.589387755102042, 29643.557637147496);
        checkValues(mmas_us_madtsp, 255, 31960.667875108713, 1927.980654963705, 0.5, 7.060408163265306, 29617.971641514432);
        checkValues(mmas_us_madtsp, 260, 31902.786789526966, 1989.3706514843605, 0.5, 7.62530612244898, 29617.971641514432);
        checkValues(mmas_us_madtsp, 261, 33565.54863068904, 2052.0912354346483, 0.5, 8.001632653061224, 29920.469021315184);
        checkValues(mmas_us_madtsp, 265, 31985.481584866226, 1935.1249871974298, 0.52, 6.587755102040816, 29670.07026996173);
        checkValues(mmas_us_madtsp, 270, 31902.340629609087, 2376.770062177744, 0.52, 5.963265306122449, 29670.07026996173);
        checkValues(mmas_us_madtsp, 271, 35457.67393669033, 1839.045874863435, 0.49, 19.61795918367347, 32338.906230179397);
        checkValues(mmas_us_madtsp, 275, 32956.84514817271, 1715.1882264953379, 0.5366666666666666, 8.29795918367347, 31298.55608437928);
        checkValues(mmas_us_madtsp, 280, 31601.748798346496, 1323.712340263484, 0.5133333333333333, 6.776326530612245, 30361.94755191819);
        checkValues(mmas_us_madtsp, 281, 33724.55636212088, 1181.1665788451753, 0.5166666666666667, 14.48408163265306, 29585.13794104484);
        checkValues(mmas_us_madtsp, 285, 30962.50031141654, 1803.8731188692927, 0.5166666666666667, 3.396734693877551, 29585.13794104484);
        checkValues(mmas_us_madtsp, 290, 30848.81286271663, 1673.5429259718114, 0.5166666666666667, 3.7085714285714286, 29585.13794104484);
        checkValues(mmas_us_madtsp, 291, 33390.163974794246, 2106.3713487421337, 0.5, 7.53469387755102, 29488.23894620029);
        checkValues(mmas_us_madtsp, 295, 31359.928103749287, 2191.6786471336495, 0.5, 6.73469387755102, 29488.23894620029);
        checkValues(mmas_us_madtsp, 300, 31334.57335405361, 2571.3488807369486, 0.5, 4.542040816326531, 29488.23894620029);
        checkValues(mmas_us_madtsp, 301, 35878.15215642865, 1596.162364452888, 0.49666666666666665, 15.000816326530613, 30624.526981769166);
        checkValues(mmas_us_madtsp, 305, 33301.63454784179, 1925.9600584803381, 0.6366666666666667, 10.257959183673469, 30006.72790243863);
        checkValues(mmas_us_madtsp, 310, 32730.514549239604, 2146.0099850483584, 0.5066666666666667, 6.478367346938776, 29953.72790243863);
        checkValues(mmas_us_madtsp, 311, 35195.59121427212, 1111.3479911757618, 0.49666666666666665, 11.13469387755102, 31318.869069328903);
        checkValues(mmas_us_madtsp, 315, 32330.96524188388, 1722.3170098669434, 0.5666666666666667, 8.673469387755102, 29712.51613813554);
        checkValues(mmas_us_madtsp, 320, 31594.623021761887, 2230.9573556629202, 0.5, 4.76, 29613.51613813554);
        checkValues(mmas_us_madtsp, 321, 32297.17367408428, 1840.9055355978035, 0.5266666666666666, 8.69061224489796, 29361.56538781312);
        checkValues(mmas_us_madtsp, 325, 31798.794256424415, 2198.0052646218633, 0.8066666666666666, 7.7306122448979595, 29174.56538781312);
        checkValues(mmas_us_madtsp, 330, 30580.774315319337, 1843.4305320392966, 0.5066666666666667, 6.043265306122449, 29078.16822576591);
        checkValues(mmas_us_madtsp, 331, 35351.40989031646, 2784.7951813581913, 0.5, 10.299591836734693, 29273.693153850345);
        checkValues(mmas_us_madtsp, 335, 30236.356663783514, 1372.352196593226, 0.5, 2.7877551020408164, 29273.693153850345);
        checkValues(mmas_us_madtsp, 340, 30702.931253502345, 1922.5278300633122, 0.5, 5.011428571428572, 29192.83956685994);
        checkValues(mmas_us_madtsp, 341, 32606.606250988254, 1210.9056445507872, 0.51, 9.006530612244898, 29047.45954592425);
        checkValues(mmas_us_madtsp, 345, 31885.347416012344, 2426.755676323682, 0.51, 5.480816326530612, 29047.45954592425);
        checkValues(mmas_us_madtsp, 350, 30115.77673389788, 1570.9240073244569, 0.51, 2.1248979591836736, 29047.45954592425);
        checkValues(mmas_us_madtsp, 351, 32694.29673171897, 1119.3787821101248, 0.5066666666666667, 12.081632653061224, 29948.5357168469);
        checkValues(mmas_us_madtsp, 355, 31578.3046419936, 2179.239027603861, 0.5066666666666667, 5.433469387755102, 29948.5357168469);
        checkValues(mmas_us_madtsp, 360, 31632.57382148664, 2127.1147284274957, 0.5066666666666667, 6.951836734693877, 29948.5357168469);
        checkValues(mmas_us_madtsp, 361, 32303.20045767735, 2519.732857131445, 0.5, 5.751020408163265, 29934.39871995179);
        checkValues(mmas_us_madtsp, 365, 31610.08844062663, 3053.2739666835228, 0.5233333333333333, 5.268571428571429, 29704.39871995179);
        checkValues(mmas_us_madtsp, 370, 31244.744100263928, 2612.359617669989, 0.5233333333333333, 2.9216326530612244, 29704.39871995179);
        checkValues(mmas_us_madtsp, 371, 36662.819814379895, 1556.085178444858, 0.49333333333333335, 22.824489795918367, 30632.01917827735);
        checkValues(mmas_us_madtsp, 375, 32412.318073368617, 1874.2982237066851, 0.61, 8.431836734693878, 30522.81958849813);
        checkValues(mmas_us_madtsp, 380, 32423.12340951811, 2134.137904414285, 0.5, 9.260408163265305, 30521.81958849813);
        checkValues(mmas_us_madtsp, 381, 35795.10922726592, 1147.9343975429274, 0.49333333333333335, 27.70530612244898, 31656.805413535436);
        checkValues(mmas_us_madtsp, 385, 32896.37318032449, 1687.0916601951772, 0.5633333333333334, 6.263673469387755, 31018.041673062493);
        checkValues(mmas_us_madtsp, 390, 31723.870179359736, 2030.6147344138296, 0.5166666666666667, 3.629387755102041, 30330.654093851805);
        checkValues(mmas_us_madtsp, 391, 32449.429060821487, 1937.4147150935696, 0.51, 4.550204081632653, 30461.135525626123);
        checkValues(mmas_us_madtsp, 395, 31463.646182990415, 1750.8635776131725, 0.5266666666666666, 3.8824489795918367, 30131.852251807657);
        checkValues(mmas_us_madtsp, 400, 31037.026690023573, 1476.5958973109794, 0.51, 2.3926530612244896, 30051.332176882617);
        checkValues(mmas_us_madtsp, 401, 32214.92540048739, 1843.8342913415768, 0.51, 5.176326530612245, 30011.522223340024);
        checkValues(mmas_us_madtsp, 405, 30888.65877084457, 1610.509042056248, 0.51, 1.9346938775510205, 30011.522223340024);
        checkValues(mmas_us_madtsp, 410, 30882.22500727291, 1546.2666338581755, 0.51, 1.8840816326530612, 30011.522223340024);
        checkValues(mmas_us_madtsp, 411, 33131.6660918304, 720.6944953509749, 0.49666666666666665, 4.812244897959184, 29987.105262567893);
        checkValues(mmas_us_madtsp, 415, 30529.290293733833, 1978.3258893736115, 0.5166666666666667, 2.596734693877551, 29484.827279912406);
        checkValues(mmas_us_madtsp, 420, 30704.744496040163, 2064.3678579587167, 0.5166666666666667, 2.5453061224489795, 29484.827279912406);
        checkValues(mmas_us_madtsp, 421, 30931.640006472717, 1701.9504608345699, 0.5, 2.4081632653061225, 29838.872555726);
        checkValues(mmas_us_madtsp, 425, 30612.91876744228, 1409.024070149583, 0.5, 2.088979591836735, 29838.872555726);
        checkValues(mmas_us_madtsp, 430, 30794.532163134707, 1522.2836010715496, 0.5, 2.5975510204081633, 29832.555628614744);
        checkValues(mmas_us_madtsp, 431, 32515.938829833703, 1353.6426127466673, 0.51, 5.9412244897959186, 30480.723122059175);
        checkValues(mmas_us_madtsp, 435, 31078.35436650594, 1710.27414112158, 0.5466666666666666, 2.7844897959183674, 29912.723122059175);
        checkValues(mmas_us_madtsp, 440, 31419.956392011052, 2066.29163046108, 0.5, 3.244081632653061, 29813.723122059175);
        checkValues(mmas_us_madtsp, 441, 36057.42598283177, 1511.3301946534425, 0.49666666666666665, 10.044897959183674, 29985.45085302312);
        checkValues(mmas_us_madtsp, 445, 32408.969314550945, 2220.4794313383254, 0.49666666666666665, 4.535510204081633, 29985.45085302312);
        checkValues(mmas_us_madtsp, 450, 33537.97012399716, 1319.0749159467352, 0.49666666666666665, 3.6318367346938776, 29985.45085302312);
        checkValues(mmas_us_madtsp, 451, 36142.66371474803, 1090.9960191068103, 0.4866666666666667, 13.962448979591837, 31063.127209959748);
        checkValues(mmas_us_madtsp, 455, 33866.76066534497, 1708.0343753556456, 0.5933333333333334, 4.099591836734694, 30207.86025771507);
        checkValues(mmas_us_madtsp, 460, 33977.44350461888, 1797.0553586723915, 0.5933333333333334, 4.764897959183673, 30207.86025771507);
        checkValues(mmas_us_madtsp, 461, 34325.981634933036, 1617.0920828493042, 0.49333333333333335, 5.429387755102041, 30187.547249127558);
        checkValues(mmas_us_madtsp, 465, 32067.441167675275, 2365.4028144665835, 0.53, 4.1387755102040815, 30067.711254031914);
        checkValues(mmas_us_madtsp, 470, 31821.476358155676, 2099.2516314083778, 0.53, 3.2767346938775512, 30067.711254031914);
        checkValues(mmas_us_madtsp, 471, 32402.64980997526, 2110.4929993769324, 0.5, 4.186938775510204, 30035.655880822662);
        checkValues(mmas_us_madtsp, 475, 31165.491139101774, 1706.6184060772025, 0.5, 2.342857142857143, 30035.655880822662);
        checkValues(mmas_us_madtsp, 480, 31584.971210864955, 2082.3107586294796, 0.5, 2.650612244897959, 30035.655880822662);
        checkValues(mmas_us_madtsp, 481, 35049.37758441334, 2118.690030331002, 0.49666666666666665, 5.434285714285714, 31073.24803298058);
        checkValues(mmas_us_madtsp, 485, 33890.87598311589, 2105.5874709750055, 0.5166666666666667, 4.686530612244898, 30701.242206211577);
        checkValues(mmas_us_madtsp, 490, 33513.19257087747, 2301.0982722283156, 0.5166666666666667, 3.736326530612245, 30701.242206211577);
        checkValues(mmas_us_madtsp, 491, 32551.855645567062, 2157.7465834066506, 0.49666666666666665, 2.556734693877551, 30705.00715369151);
        checkValues(mmas_us_madtsp, 495, 32071.74882556792, 2327.5826563632218, 0.49666666666666665, 3.605714285714286, 30705.00715369151);
        checkValues(mmas_us_madtsp, 500, 31691.458384019388, 1906.8425167520622, 0.49666666666666665, 3.4522448979591838, 30705.00715369151);
        checkValues(mmas_us_madtsp, 501, 36680.946981262496, 1718.50482972602, 0.49333333333333335, 10.541224489795919, 30503.81354314838);
        checkValues(mmas_us_madtsp, 505, 33359.68813008389, 2734.0299779812117, 0.49333333333333335, 3.3085714285714287, 30503.81354314838);
        checkValues(mmas_us_madtsp, 510, 33512.78488833762, 2789.021046981746, 0.5, 3.8971428571428572, 30433.560033211896);
        checkValues(mmas_us_madtsp, 511, 33503.13934881903, 2029.6946648597927, 0.5, 5.497959183673469, 31112.52248348092);
        checkValues(mmas_us_madtsp, 515, 31052.419967922837, 1506.4470001184359, 0.53, 1.88, 30400.236902362405);
        checkValues(mmas_us_madtsp, 520, 31241.987817533834, 1831.3247189213616, 0.53, 1.32, 30400.236902362405);
        checkValues(mmas_us_madtsp, 521, 33912.94804210139, 1917.1972290876695, 0.5, 6.49469387755102, 31376.388133764995);
        checkValues(mmas_us_madtsp, 525, 31323.237934722085, 1568.9387351626824, 0.52, 1.7755102040816326, 30584.217934722088);
        checkValues(mmas_us_madtsp, 530, 31935.79081830534, 2075.0128743997957, 0.52, 2.2089795918367345, 30584.217934722088);
        checkValues(mmas_us_madtsp, 531, 31332.35087268367, 1708.02549376586, 0.5, 1.2073469387755102, 30494.170578888425);
        checkValues(mmas_us_madtsp, 535, 31637.745924450475, 2082.951695283213, 0.5, 1.9469387755102041, 30494.170578888425);
        checkValues(mmas_us_madtsp, 540, 30244.809820283182, 238.8606706848156, 0.5, 0.12, 30211.029820283184);
        checkValues(mmas_us_madtsp, 541, 34984.74995870272, 707.2631286207129, 0.49666666666666665, 4.111836734693878, 30663.80105416956);
        checkValues(mmas_us_madtsp, 545, 33815.539384561, 2086.79973716659, 0.5066666666666667, 3.293061224489796, 30573.80105416956);
        checkValues(mmas_us_madtsp, 550, 34579.78498112572, 1500.5004891373983, 0.5066666666666667, 3.3877551020408165, 30573.80105416956);
        checkValues(mmas_us_madtsp, 551, 33323.80917486217, 2350.0306830291797, 0.49666666666666665, 4.1355102040816325, 30076.722647307928);
        checkValues(mmas_us_madtsp, 555, 30768.946298429688, 1535.634479797664, 0.49666666666666665, 1.1191836734693879, 30076.722647307928);
        checkValues(mmas_us_madtsp, 560, 30664.0370649324, 1431.3515528147407, 0.5, 1.3738775510204082, 30075.722647307928);
        checkValues(mmas_us_madtsp, 561, 32704.40798400007, 1376.6533913347719, 0.5033333333333333, 2.3469387755102042, 30100.503440422544);
        checkValues(mmas_us_madtsp, 565, 30346.195601884712, 979.6457362239221, 0.5033333333333333, 0.5575510204081633, 30100.503440422544);
        checkValues(mmas_us_madtsp, 570, 30738.66811889947, 1626.2223086415545, 0.5033333333333333, 0.926530612244898, 30100.503440422544);
        checkValues(mmas_us_madtsp, 571, 34376.0107458558, 1906.7607235012003, 0.5, 6.235102040816327, 29932.07896115189);
        checkValues(mmas_us_madtsp, 575, 32271.95607100258, 1569.1159131510942, 0.5, 4.208163265306123, 29932.07896115189);
        checkValues(mmas_us_madtsp, 580, 31136.315688091727, 1320.2251098971503, 0.5, 2.1387755102040815, 29932.07896115189);
        checkValues(mmas_us_madtsp, 581, 31214.969549794016, 1383.8828256274028, 0.49666666666666665, 1.8073469387755101, 30485.793755479383);
        checkValues(mmas_us_madtsp, 585, 31104.42796785068, 1502.1820670119728, 0.49666666666666665, 1.3926530612244898, 30485.793755479383);
        checkValues(mmas_us_madtsp, 590, 31498.36651908482, 1987.7068102993526, 0.49666666666666665, 2.364081632653061, 30442.379817485406);
        checkValues(mmas_us_madtsp, 591, 31466.419849296715, 1336.9499666759666, 0.49666666666666665, 2.2310204081632654, 30337.39491672444);
        checkValues(mmas_us_madtsp, 595, 31161.597419853373, 1587.5016361202486, 0.5033333333333333, 2.3289795918367346, 30292.25465246405);
        checkValues(mmas_us_madtsp, 600, 30842.408388348293, 1556.5424905024465, 0.5033333333333333, 1.7885714285714285, 30113.5447618745);
        checkValues(mmas_us_madtsp, 601, 31574.062822957036, 1606.105364284639, 0.5033333333333333, 3.459591836734694, 29783.14184194821);
        checkValues(mmas_us_madtsp, 605, 30835.754110851296, 2106.4574170132037, 0.5033333333333333, 1.6955102040816326, 29783.14184194821);
        checkValues(mmas_us_madtsp, 610, 30420.602041828573, 1471.9330138156688, 0.5033333333333333, 1.2938775510204081, 29783.14184194821);
        checkValues(mmas_us_madtsp, 611, 32239.10684042652, 2171.38991666636, 0.5, 3.0383673469387755, 30221.12395730275);
        checkValues(mmas_us_madtsp, 615, 30807.230324459026, 1648.1198248693763, 0.5, 1.1779591836734693, 30161.503440422544);
        checkValues(mmas_us_madtsp, 620, 31342.837996472274, 2065.4890576489097, 0.5, 1.8906122448979592, 30161.503440422544);
        checkValues(mmas_us_madtsp, 621, 31479.044341153392, 1795.581317858697, 0.5, 1.8718367346938776, 30088.64820727326);
        checkValues(mmas_us_madtsp, 625, 30816.959987960046, 1542.583217317881, 0.5166666666666667, 1.4195918367346938, 30082.610588625557);
        checkValues(mmas_us_madtsp, 630, 30900.962769142257, 1535.4415962066464, 0.5166666666666667, 1.7959183673469388, 30082.610588625557);
        checkValues(mmas_us_madtsp, 631, 30596.899408419387, 1088.6275847148388, 0.5, 1.2620408163265306, 29804.238242711348);
        checkValues(mmas_us_madtsp, 635, 31600.39449285914, 2266.5978379221615, 0.5, 3.3959183673469386, 29804.238242711348);
        checkValues(mmas_us_madtsp, 640, 30705.964477307232, 1635.3633812292287, 0.5, 1.6040816326530611, 29804.238242711348);
        checkValues(mmas_us_madtsp, 641, 32228.46586733933, 2498.076064279367, 0.5, 2.770612244897959, 30044.31307419693);
        checkValues(mmas_us_madtsp, 645, 30613.43908421038, 1695.5275456342831, 0.5, 0.7387755102040816, 30044.31307419693);
        checkValues(mmas_us_madtsp, 650, 30596.133074196925, 1414.7524437663499, 0.5, 0.8742857142857143, 30044.31307419693);
        checkValues(mmas_us_madtsp, 651, 32669.80331142465, 2079.5038116326773, 0.5, 4.856326530612245, 29837.259223079094);
        checkValues(mmas_us_madtsp, 655, 31423.278819440366, 1974.1913419286561, 0.5, 3.1012244897959182, 29837.259223079094);
        checkValues(mmas_us_madtsp, 660, 30989.543531168507, 1705.524084462619, 0.5, 2.769795918367347, 29837.259223079094);
        checkValues(mmas_us_madtsp, 661, 32550.486948225484, 2135.450585848967, 0.49666666666666665, 4.049795918367347, 30111.667141253543);
        checkValues(mmas_us_madtsp, 665, 31206.347141253576, 1748.5186668043511, 0.49666666666666665, 1.9363265306122448, 30111.667141253543);
        checkValues(mmas_us_madtsp, 670, 31729.699265898984, 2291.188140031732, 0.49666666666666665, 2.580408163265306, 30111.667141253543);
        checkValues(mmas_us_madtsp, 671, 31463.600315957246, 1276.742379019738, 0.5, 1.7820408163265307, 30547.599593843115);
        checkValues(mmas_us_madtsp, 675, 30882.272091311224, 1432.9970784980562, 0.5066666666666667, 1.5387755102040817, 30239.92059495372);
        checkValues(mmas_us_madtsp, 680, 30410.616343132464, 887.5285117484497, 0.5, 0.6318367346938776, 30197.92059495372);
        checkValues(mmas_us_madtsp, 681, 35018.43871434975, 781.6264437512514, 0.49333333333333335, 7.151020408163265, 30111.114146381944);
        checkValues(mmas_us_madtsp, 685, 31174.806700033, 1726.254124256641, 0.5266666666666666, 2.463673469387755, 29849.114146381944);
        checkValues(mmas_us_madtsp, 690, 30532.47177362613, 1283.6614223904662, 0.5266666666666666, 1.5681632653061224, 29849.114146381944);
        checkValues(mmas_us_madtsp, 691, 31479.153664269346, 2123.1070698877384, 0.5, 2.9616326530612245, 29926.31307419693);
        checkValues(mmas_us_madtsp, 695, 32165.435465776114, 3069.6379902986055, 0.5, 3.300408163265306, 29926.31307419693);
        checkValues(mmas_us_madtsp, 700, 31328.444212770377, 2212.197726939588, 0.5, 2.6685714285714286, 29926.31307419693);
        checkValues(mmas_us_madtsp, 701, 31133.745010244125, 1852.8151641136867, 0.5, 2.5159183673469387, 29911.31307419693);
        checkValues(mmas_us_madtsp, 705, 31583.271078273818, 1985.2602037242275, 0.5, 3.9436734693877553, 29911.31307419693);
        checkValues(mmas_us_madtsp, 710, 31085.267677295116, 1902.9319976561387, 0.5, 2.4571428571428573, 29911.31307419693);
        checkValues(mmas_us_madtsp, 711, 31782.295447544097, 1726.5104110968596, 0.49666666666666665, 2.3485714285714288, 30685.222184795017);
        checkValues(mmas_us_madtsp, 715, 31258.257325545957, 1320.0514393689314, 0.5166666666666667, 2.092244897959184, 30511.87585969887);
        checkValues(mmas_us_madtsp, 720, 30914.69873551467, 998.5233429929667, 0.5166666666666667, 0.8571428571428571, 30511.87585969887);
        checkValues(mmas_us_madtsp, 721, 38066.73442501345, 1367.1728817713106, 0.49666666666666665, 3.12, 30145.31307419693);
        checkValues(mmas_us_madtsp, 725, 30733.53826687352, 1093.1804439257485, 0.49666666666666665, 1.8538775510204082, 30145.31307419693);
        checkValues(mmas_us_madtsp, 730, 30808.738092865344, 1487.9464432719524, 0.49666666666666665, 1.229387755102041, 30145.31307419693);
        checkValues(mmas_us_madtsp, 731, 31642.10369150991, 1138.3630960227001, 0.49666666666666665, 1.583673469387755, 30702.31307419693);
        checkValues(mmas_us_madtsp, 735, 31125.10323627113, 1052.5161075942992, 0.49666666666666665, 0.9771428571428571, 30702.31307419693);
        checkValues(mmas_us_madtsp, 740, 30942.00455689399, 822.3815024572609, 0.49666666666666665, 0.6530612244897959, 30702.31307419693);
        checkValues(mmas_us_madtsp, 741, 31453.40335917385, 1309.7709717226685, 0.49666666666666665, 1.550204081632653, 30076.44335917388);
        checkValues(mmas_us_madtsp, 745, 30565.823359173854, 986.8730433411719, 0.49666666666666665, 1.196734693877551, 30076.44335917388);
        checkValues(mmas_us_madtsp, 750, 30770.362094135835, 1189.823451184574, 0.49666666666666665, 1.910204081632653, 30076.44335917388);
        checkValues(mmas_us_madtsp, 751, 31992.72037563762, 1544.2467815055936, 0.5, 3.5542857142857143, 30433.02420907748);
        checkValues(mmas_us_madtsp, 755, 30229.44483327507, 449.8613341908811, 0.51, 0.12, 30165.824833275085);
        checkValues(mmas_us_madtsp, 760, 30352.36436291194, 666.8623291678778, 0.51, 0.4710204081632653, 30165.824833275085);
        checkValues(mmas_us_madtsp, 761, 31186.642853915113, 1222.5142134691298, 0.5, 1.8408163265306123, 30150.759818516573);
        checkValues(mmas_us_madtsp, 765, 30680.150752780795, 1116.5029512545734, 0.5333333333333333, 1.1591836734693877, 30106.759818516573);
        checkValues(mmas_us_madtsp, 770, 30802.879818516598, 1220.2957928472968, 0.5333333333333333, 1.4261224489795918, 30106.759818516573);
        checkValues(mmas_us_madtsp, 771, 31161.97627568393, 1213.4966208097844, 0.5, 2.16, 30341.744653647293);
        checkValues(mmas_us_madtsp, 775, 30674.23363074562, 1071.1012727530738, 0.5166666666666667, 2.4057142857142857, 30126.31307419693);
        checkValues(mmas_us_madtsp, 780, 30823.58521833096, 1186.682695328172, 0.5166666666666667, 1.6595918367346938, 30126.31307419693);
        checkValues(mmas_us_madtsp, 781, 30522.233074196927, 910.7187975238376, 0.5, 1.0587755102040817, 30074.31307419693);
        checkValues(mmas_us_madtsp, 785, 30720.593259080433, 1191.9843367221074, 0.5, 1.3404081632653062, 30074.31307419693);
        checkValues(mmas_us_madtsp, 790, 30661.78648640676, 1063.463735374811, 0.5, 1.486530612244898, 30074.31307419693);
        checkValues(mmas_us_madtsp, 791, 32593.5475432909, 1974.7461367063574, 0.49666666666666665, 3.4751020408163265, 30608.31307419693);
        checkValues(mmas_us_madtsp, 795, 31196.72497836527, 1443.430977704615, 0.49666666666666665, 1.3983673469387754, 30608.31307419693);
        checkValues(mmas_us_madtsp, 800, 30652.268004582176, 143.11059588750072, 0.49666666666666665, 0.6106122448979592, 30608.31307419693);
        checkValues(mmas_us_madtsp, 801, 30713.217570078323, 775.6892795348572, 0.49666666666666665, 1.0416326530612245, 30109.31307419693);
        checkValues(mmas_us_madtsp, 805, 30315.413074196927, 517.3081129012662, 0.49666666666666665, 0.7812244897959184, 30109.31307419693);
        checkValues(mmas_us_madtsp, 810, 30320.913074196927, 531.3897451254489, 0.49666666666666665, 0.8253061224489796, 30109.31307419693);
        checkValues(mmas_us_madtsp, 811, 30307.021476077247, 412.30777275929194, 0.5, 0.8138775510204082, 30099.31307419693);
        checkValues(mmas_us_madtsp, 815, 30253.533074196926, 467.35859107655375, 0.5, 0.5608163265306122, 30099.31307419693);
        checkValues(mmas_us_madtsp, 820, 30130.893074196927, 218.3096555681533, 0.5, 0.2, 30099.31307419693);
        checkValues(mmas_us_madtsp, 821, 30304.465210745828, 243.16337854333435, 0.5, 0.313469387755102, 30074.31307419693);
        checkValues(mmas_us_madtsp, 825, 30106.693074196926, 210.347515181086, 0.5, 0.27755102040816326, 30074.31307419693);
        checkValues(mmas_us_madtsp, 830, 30133.304640988925, 291.97903564832507, 0.5, 0.23755102040816325, 30074.31307419693);
        checkValues(mmas_us_madtsp, 831, 30897.831683678076, 320.09035348561787, 0.49666666666666665, 1.206530612244898, 30133.31307419693);
        checkValues(mmas_us_madtsp, 835, 30166.94816713818, 237.8360230459978, 0.49666666666666665, 0.12, 30133.31307419693);
        checkValues(mmas_us_madtsp, 840, 30133.313074196925, 3.67491354901071E-12, 0.49666666666666665, 0.0, 30133.31307419693);
        checkValues(mmas_us_madtsp, 841, 30132.133074196925, 8.34386001800126, 0.5, 0.16, 30074.31307419693);
        checkValues(mmas_us_madtsp, 845, 30338.635292011666, 573.7946192024972, 0.5, 0.9657142857142857, 30074.31307419693);
        checkValues(mmas_us_madtsp, 850, 30331.713074196927, 555.184359892629, 0.5, 0.9648979591836735, 30074.31307419693);
        checkValues(mmas_us_madtsp, 851, 30885.37583558781, 628.5774320610152, 0.5, 2.039183673469388, 30099.31307419693);
        checkValues(mmas_us_madtsp, 855, 30130.193074196926, 218.35457403040581, 0.5, 0.12, 30099.31307419693);
        checkValues(mmas_us_madtsp, 860, 30187.253074196928, 352.6772479541172, 0.5, 0.35183673469387755, 30099.31307419693);
        checkValues(mmas_us_madtsp, 861, 30113.653074196925, 101.39911242215095, 0.5, 0.12, 30099.31307419693);
        checkValues(mmas_us_madtsp, 865, 30191.953074196925, 370.4024154723552, 0.5, 0.34530612244897957, 30099.31307419693);
        checkValues(mmas_us_madtsp, 870, 30128.253074196928, 204.63670247538693, 0.5, 0.12, 30099.31307419693);
        checkValues(mmas_us_madtsp, 871, 30212.978873769756, 2.572439484307497E-11, 0.5, 0.0, 30212.97887376978);
        checkValues(mmas_us_madtsp, 875, 30212.978873769756, 2.572439484307497E-11, 0.5, 0.0, 30212.97887376978);
        checkValues(mmas_us_madtsp, 880, 30212.978873769756, 2.572439484307497E-11, 0.5, 0.0, 30212.97887376978);
        checkValues(mmas_us_madtsp, 881, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 885, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 890, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 891, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 895, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 900, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 901, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 905, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 910, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 911, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 915, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 920, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 921, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 925, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 930, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 931, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 935, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 940, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 941, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 945, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 950, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 951, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 955, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 960, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 961, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 965, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 970, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 971, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 975, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 980, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 981, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 985, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 990, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 991, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 995, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        checkValues(mmas_us_madtsp, 1000, 30235.491699402224, 1.469965419604284E-11, 0.5, 0.0, 30235.49169940224);
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[0, 112, 71, 34, 26, 11, 148, 54, 82, 33, 134, 139, 67, 84, 100, 29, 120, 106, 38, 146, 36, 4, 145, 102, 32, 75, 12, 94, 125, 81, 95, 77, 51, 99, 40, 70, 47, 111, 131, 28, 13, 2, 45, 127, 42, 122, 114, 119, 135, 115, 49, 43, 1, 53, 39, 63, 143, 113, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 73, 20, 140, 58, 126, 103, 98, 101, 110, 35, 23, 37, 17, 136, 78, 133, 52, 15, 87, 21, 93, 69, 3, 64, 65, 123, 25, 117, 128, 118, 142, 96, 55, 138, 88, 41, 121, 30, 79, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 83, 9, 105, 18, 74, 91, 7, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 55, 142, 118, 117, 128, 25, 123, 64, 3, 65, 69, 21, 15, 87, 93, 136, 78, 17, 23, 37, 83, 9, 71, 20, 73, 140, 58, 126, 35, 103, 110, 101, 98, 14, 16, 10, 31, 108, 90, 97, 44, 22, 59, 76, 109, 61, 149, 34, 85, 26, 11, 19, 56, 6, 116, 8, 144, 86, 50, 124, 60, 24, 80, 134, 139, 82, 54, 148, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 84, 67, 72, 43, 113, 143, 1, 53, 39, 63, 68, 49, 115, 81, 125, 94, 32, 75, 12, 145, 102, 111, 131, 28, 45, 33, 57, 107, 66, 104, 141, 147, 27, 92, 130, 46, 112, 62, 5, 48, 74, 30, 79, 137, 132, 88, 41, 121, 138, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 142, 118, 117, 123, 25, 128, 64, 3, 65, 69, 21, 15, 87, 93, 136, 78, 17, 23, 37, 83, 9, 71, 20, 73, 140, 58, 126, 35, 103, 110, 101, 98, 14, 16, 10, 31, 108, 90, 97, 44, 22, 59, 109, 76, 61, 149, 34, 85, 26, 11, 19, 56, 6, 116, 8, 144, 86, 50, 124, 60, 24, 80, 139, 134, 84, 67, 72, 43, 113, 49, 115, 81, 125, 94, 32, 145, 102, 36, 4, 77, 51, 95, 100, 38, 120, 29, 106, 111, 131, 28, 45, 33, 82, 54, 148, 114, 119, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 146, 12, 75, 1, 53, 39, 63, 143, 68, 57, 107, 66, 104, 141, 147, 27, 92, 130, 46, 112, 62, 5, 48, 74, 138, 55, 79, 30, 88, 137, 132, 41, 121, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 138, 41, 121, 30, 79, 142, 55, 118, 117, 123, 25, 128, 64, 3, 65, 69, 21, 15, 93, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 140, 58, 126, 16, 14, 10, 31, 108, 90, 97, 44, 22, 59, 76, 109, 61, 149, 34, 85, 26, 11, 19, 56, 6, 116, 8, 144, 86, 50, 124, 60, 80, 24, 68, 113, 49, 43, 115, 1, 143, 63, 39, 53, 72, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 77, 51, 95, 29, 120, 106, 111, 131, 28, 45, 33, 82, 54, 148, 114, 119, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 100, 38, 84, 67, 139, 134, 57, 107, 66, 104, 141, 147, 137, 88, 132, 92, 27, 130, 46, 112, 62, 5, 48, 91, 7, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 140, 58, 126, 16, 14, 10, 31, 108, 90, 97, 44, 22, 59, 76, 109, 61, 149, 34, 85, 26, 11, 19, 56, 6, 116, 8, 144, 86, 50, 124, 60, 24, 80, 68, 113, 143, 63, 39, 53, 72, 43, 49, 115, 1, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 77, 51, 95, 29, 120, 106, 111, 131, 28, 45, 33, 82, 54, 148, 114, 119, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 100, 38, 84, 67, 139, 134, 57, 107, 66, 104, 141, 147, 137, 132, 88, 41, 121, 79, 30, 138, 7, 91, 129, 27, 92, 130, 46, 112, 48, 5, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 21, 15, 87, 93, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 140, 58, 126, 16, 14, 10, 31, 108, 90, 97, 44, 22, 59, 76, 109, 61, 149, 34, 85, 26, 11, 19, 56, 6, 116, 8, 86, 144, 50, 124, 60, 24, 80, 68, 113, 143, 63, 39, 53, 72, 49, 43, 115, 1, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 77, 51, 95, 29, 120, 106, 111, 131, 28, 45, 33, 54, 82, 148, 114, 119, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 100, 38, 84, 67, 134, 139, 57, 107, 66, 104, 141, 147, 137, 132, 88, 41, 121, 79, 30, 138, 7, 91, 129, 27, 92, 130, 46, 112, 48, 5, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 93, 21, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 112, 48, 5, 62, 27, 92, 57, 130, 46, 20, 73, 58, 126, 140, 16, 14, 10, 31, 108, 90, 97, 44, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 56, 6, 116, 8, 86, 144, 50, 124, 60, 24, 80, 68, 72, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 77, 51, 95, 29, 120, 106, 111, 131, 28, 45, 2, 13, 70, 40, 99, 47, 135, 82, 54, 148, 114, 119, 122, 42, 127, 33, 134, 139, 84, 67, 100, 38, 115, 107, 66, 104, 141, 147, 137, 132, 88, 41, 121, 30, 79, 138, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 93, 21, 15, 87, 136, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 58, 140, 126, 16, 14, 10, 31, 108, 90, 97, 44, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 56, 6, 116, 8, 86, 144, 50, 124, 60, 24, 80, 68, 63, 39, 53, 113, 143, 43, 72, 49, 106, 111, 131, 28, 45, 2, 13, 70, 40, 99, 47, 135, 42, 127, 122, 119, 114, 148, 54, 82, 33, 134, 139, 84, 67, 100, 38, 120, 29, 95, 77, 51, 146, 36, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 1, 107, 57, 27, 92, 130, 46, 112, 62, 48, 17, 78, 5, 91, 7, 138, 79, 30, 121, 41, 88, 132, 137, 147, 66, 104, 141, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 62, 5, 48, 91, 7, 138, 41, 121, 79, 30, 88, 132, 137, 147, 66, 104, 141, 27, 92, 130, 46, 112, 71, 20, 73, 140, 58, 126, 16, 14, 10, 31, 108, 90, 97, 44, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 56, 6, 116, 8, 86, 144, 50, 124, 60, 24, 80, 68, 63, 39, 53, 113, 143, 43, 72, 49, 67, 84, 106, 111, 131, 28, 45, 2, 13, 70, 40, 99, 47, 135, 42, 127, 122, 119, 114, 148, 54, 82, 33, 134, 139, 100, 38, 120, 29, 77, 51, 95, 146, 36, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 1, 107, 57, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 15, 87, 93, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 126, 58, 140, 14, 16, 10, 31, 108, 90, 44, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 116, 8, 6, 56, 50, 124, 86, 144, 139, 134, 33, 82, 54, 148, 119, 114, 42, 127, 122, 45, 2, 135, 99, 47, 70, 40, 13, 28, 131, 111, 100, 120, 29, 106, 38, 77, 51, 95, 146, 36, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 67, 84, 72, 113, 143, 1, 43, 63, 39, 53, 60, 24, 80, 68, 107, 66, 104, 141, 57, 27, 92, 130, 46, 112, 62, 5, 48, 91, 7, 138, 41, 121, 79, 30, 88, 132, 137, 147, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 126, 58, 140, 14, 16, 10, 31, 108, 90, 44, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 56, 116, 8, 6, 144, 86, 124, 50, 139, 134, 33, 82, 54, 148, 119, 114, 42, 127, 122, 45, 2, 135, 99, 47, 70, 40, 13, 28, 131, 111, 120, 29, 106, 100, 38, 77, 51, 95, 146, 36, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 67, 84, 72, 113, 143, 1, 43, 68, 63, 39, 53, 60, 24, 80, 107, 57, 27, 92, 130, 46, 112, 62, 5, 48, 91, 7, 138, 41, 121, 79, 30, 88, 132, 137, 147, 66, 104, 141, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 15, 87, 93, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 126, 58, 140, 16, 14, 10, 31, 108, 90, 44, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 56, 8, 6, 116, 54, 148, 119, 114, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 120, 29, 106, 100, 38, 77, 51, 95, 146, 36, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 63, 39, 68, 67, 84, 72, 124, 50, 139, 134, 33, 82, 45, 2, 122, 144, 86, 60, 24, 80, 107, 57, 27, 92, 130, 46, 112, 48, 62, 5, 91, 7, 138, 41, 121, 79, 30, 88, 132, 137, 147, 66, 104, 141, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 101, 110, 98, 35, 83, 9, 112, 46, 130, 92, 27, 57, 107, 60, 33, 134, 139, 144, 86, 50, 124, 24, 80, 72, 84, 67, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 51, 77, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 122, 42, 114, 119, 148, 82, 54, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 73, 20, 71, 62, 5, 48, 91, 7, 138, 41, 121, 79, 30, 88, 132, 137, 147, 66, 104, 141, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 112, 71, 20, 73, 58, 126, 140, 16, 14, 10, 31, 108, 90, 44, 22, 97, 130, 92, 27, 104, 66, 24, 80, 68, 53, 39, 63, 143, 1, 43, 113, 72, 67, 84, 77, 51, 95, 146, 36, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 40, 70, 99, 47, 13, 135, 127, 122, 42, 119, 114, 148, 54, 82, 33, 134, 139, 116, 8, 6, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 56, 144, 86, 50, 124, 60, 107, 57, 141, 91, 7, 138, 41, 121, 79, 30, 88, 132, 137, 147, 129, 62, 5, 48, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 5, 48, 62, 91, 7, 138, 41, 121, 79, 30, 88, 132, 137, 57, 107, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 47, 99, 70, 40, 127, 135, 13, 134, 6, 8, 116, 139, 33, 82, 54, 148, 119, 114, 122, 42, 2, 45, 28, 131, 111, 106, 29, 120, 100, 38, 84, 67, 72, 113, 43, 1, 143, 53, 39, 63, 68, 80, 24, 60, 124, 50, 86, 144, 56, 19, 11, 26, 85, 34, 149, 61, 59, 76, 109, 97, 22, 44, 90, 108, 31, 10, 14, 16, 126, 58, 140, 73, 20, 71, 112, 46, 130, 92, 27, 141, 104, 66, 147, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 62, 5, 48, 91, 7, 138, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 68, 80, 24, 60, 124, 50, 86, 144, 56, 8, 116, 6, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 148, 119, 114, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 84, 67, 72, 113, 43, 1, 143, 53, 39, 63, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 47, 99, 70, 40, 127, 135, 13, 42, 122, 82, 54, 33, 134, 139, 57, 92, 27, 130, 46, 108, 90, 97, 22, 44, 31, 10, 14, 16, 126, 58, 140, 73, 20, 71, 112, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 112, 71, 20, 73, 58, 126, 140, 14, 16, 10, 31, 108, 97, 22, 90, 44, 46, 62, 48, 5, 91, 7, 138, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 68, 80, 24, 60, 124, 50, 144, 86, 56, 8, 116, 6, 11, 26, 85, 34, 149, 61, 59, 109, 76, 19, 148, 54, 82, 119, 114, 122, 42, 131, 111, 106, 120, 29, 100, 38, 84, 67, 72, 113, 43, 1, 143, 53, 39, 63, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 47, 99, 70, 40, 127, 135, 13, 2, 45, 28, 33, 134, 139, 57, 92, 27, 130, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 9, 83, 16, 14, 10, 31, 44, 22, 97, 90, 108, 46, 112, 62, 48, 5, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 60, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 139, 134, 33, 28, 45, 2, 135, 42, 127, 122, 114, 119, 82, 54, 148, 19, 76, 109, 59, 61, 149, 34, 85, 26, 11, 6, 116, 8, 56, 86, 144, 50, 124, 57, 92, 27, 130, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 48, 5, 62, 129, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 90, 108, 10, 16, 14, 31, 44, 97, 22, 76, 109, 59, 61, 149, 34, 85, 26, 11, 6, 116, 8, 56, 86, 144, 50, 124, 60, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 139, 134, 33, 28, 45, 2, 135, 42, 127, 122, 114, 119, 82, 54, 148, 19, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 60, 24, 80, 124, 50, 86, 144, 56, 6, 8, 116, 139, 134, 33, 28, 45, 2, 135, 42, 127, 122, 114, 119, 82, 54, 148, 19, 85, 26, 11, 149, 34, 61, 59, 109, 76, 97, 22, 44, 90, 108, 31, 14, 16, 10, 46, 130, 92, 27, 67, 84, 38, 100, 120, 29, 106, 111, 131, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 20, 73, 140, 10, 16, 14, 31, 108, 90, 44, 22, 97, 76, 109, 59, 61, 149, 19, 34, 26, 85, 11, 148, 82, 54, 33, 45, 28, 38, 100, 29, 120, 106, 84, 67, 72, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 40, 70, 127, 119, 114, 122, 42, 135, 2, 13, 131, 111, 134, 139, 116, 8, 6, 56, 144, 86, 50, 124, 80, 24, 60, 57, 107, 66, 104, 141, 147, 132, 137, 88, 30, 79, 138, 121, 41, 7, 91, 48, 5, 62, 9, 83, 71, 112, 46, 130, 92, 27, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 112, 46, 130, 92, 27, 129, 66, 104, 141, 147, 132, 137, 88, 30, 79, 138, 121, 41, 7, 91, 48, 5, 62, 83, 9, 71, 16, 14, 10, 31, 108, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 19, 11, 148, 54, 82, 33, 45, 28, 111, 131, 120, 29, 106, 100, 38, 134, 139, 116, 8, 6, 56, 144, 86, 50, 124, 80, 24, 60, 57, 107, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 40, 70, 127, 119, 114, 122, 42, 135, 2, 13, 84, 67, 72, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 10, 31, 108, 90, 97, 44, 22, 76, 109, 59, 61, 19, 149, 34, 85, 26, 11, 134, 139, 116, 8, 6, 56, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 84, 38, 100, 106, 120, 29, 131, 111, 28, 45, 33, 82, 54, 148, 119, 114, 122, 127, 42, 2, 135, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 107, 57, 66, 104, 141, 147, 132, 137, 88, 30, 79, 121, 41, 138, 7, 91, 48, 5, 62, 9, 83, 71, 112, 46, 130, 92, 27, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 10, 31, 108, 90, 44, 97, 22, 76, 109, 59, 61, 19, 149, 34, 85, 26, 11, 134, 139, 116, 8, 6, 56, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 84, 38, 100, 106, 120, 29, 131, 111, 28, 45, 33, 82, 54, 148, 119, 114, 122, 2, 42, 127, 135, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 107, 57, 66, 104, 141, 147, 132, 137, 88, 30, 79, 121, 41, 138, 7, 91, 5, 48, 62, 112, 9, 83, 71, 46, 130, 92, 27, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 138, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 57, 107, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 135, 127, 42, 2, 122, 114, 119, 148, 54, 82, 33, 45, 28, 111, 131, 29, 120, 106, 100, 38, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 56, 6, 8, 116, 139, 134, 11, 26, 85, 34, 149, 19, 61, 59, 109, 76, 22, 97, 44, 90, 108, 31, 10, 46, 130, 92, 27, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 48, 5, 62, 91, 7, 138, 41, 121, 30, 79, 88, 137, 132, 147, 141, 104, 66, 107, 57, 60, 80, 24, 50, 124, 86, 144, 56, 6, 8, 116, 139, 134, 54, 82, 33, 45, 28, 111, 131, 120, 29, 106, 100, 38, 84, 67, 72, 68, 39, 53, 63, 143, 1, 113, 43, 49, 115, 81, 125, 94, 75, 12, 32, 145, 102, 36, 4, 146, 95, 77, 51, 47, 99, 40, 70, 13, 135, 127, 42, 2, 122, 114, 119, 148, 11, 26, 85, 34, 149, 19, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 46, 130, 92, 27, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 138, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 60, 80, 24, 124, 50, 86, 144, 56, 6, 8, 116, 139, 134, 54, 82, 33, 45, 28, 111, 131, 29, 120, 106, 100, 38, 84, 67, 72, 68, 39, 53, 63, 143, 1, 113, 43, 49, 115, 81, 125, 94, 75, 12, 32, 145, 102, 36, 4, 146, 95, 77, 51, 47, 99, 40, 70, 13, 135, 127, 42, 2, 122, 114, 119, 148, 11, 26, 85, 34, 149, 19, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 46, 130, 27, 92, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 138, 41, 121, 79, 30, 88, 132, 137, 147, 104, 66, 107, 57, 60, 80, 24, 50, 124, 144, 86, 56, 6, 8, 116, 139, 134, 33, 54, 82, 11, 26, 85, 34, 149, 19, 148, 114, 119, 122, 42, 127, 40, 70, 13, 135, 2, 45, 28, 111, 131, 29, 120, 106, 100, 38, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 75, 12, 32, 145, 102, 36, 4, 146, 77, 51, 95, 99, 47, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 46, 130, 92, 27, 141, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 138, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 60, 80, 24, 124, 50, 144, 86, 56, 8, 139, 134, 84, 67, 68, 72, 113, 143, 63, 39, 53, 1, 43, 49, 115, 81, 125, 94, 75, 12, 32, 145, 102, 36, 4, 146, 77, 51, 95, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 119, 114, 148, 54, 33, 82, 116, 6, 11, 19, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 10, 44, 46, 130, 92, 27, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 104, 141, 66, 107, 57, 60, 80, 24, 124, 50, 144, 86, 56, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 75, 12, 32, 145, 102, 146, 4, 36, 51, 77, 95, 100, 38, 29, 120, 106, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 119, 114, 148, 33, 82, 54, 11, 19, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 10, 44, 46, 130, 92, 27, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 132, 137, 147, 130, 46, 44, 10, 31, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 19, 11, 54, 82, 33, 148, 119, 114, 122, 42, 127, 40, 70, 99, 47, 13, 135, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 51, 77, 95, 36, 4, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 68, 72, 67, 84, 134, 139, 116, 6, 8, 56, 86, 144, 50, 124, 24, 80, 60, 57, 107, 66, 141, 104, 92, 27, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 130, 46, 10, 31, 108, 90, 44, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 19, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 40, 70, 99, 47, 13, 135, 2, 45, 28, 131, 111, 29, 120, 106, 100, 38, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 68, 72, 67, 84, 134, 139, 80, 6, 116, 8, 56, 144, 86, 24, 124, 50, 107, 60, 57, 92, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 104, 141, 66, 107, 57, 80, 24, 60, 124, 50, 86, 144, 56, 116, 8, 6, 139, 134, 84, 67, 72, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 106, 120, 29, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 85, 34, 26, 19, 149, 61, 59, 109, 76, 22, 97, 90, 44, 10, 31, 108, 46, 130, 27, 92, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 60, 24, 80, 124, 50, 144, 86, 56, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 75, 12, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 148, 54, 82, 33, 26, 85, 34, 11, 19, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 46, 130, 92, 27, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 27, 92, 130, 46, 108, 31, 10, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 40, 70, 99, 47, 13, 135, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 68, 72, 67, 84, 134, 139, 116, 8, 6, 56, 144, 86, 124, 50, 24, 80, 60, 57, 107, 66, 104, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 46, 108, 31, 10, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 40, 70, 99, 47, 13, 135, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 68, 80, 24, 60, 50, 124, 86, 144, 56, 6, 8, 116, 139, 134, 67, 84, 72, 57, 107, 66, 104, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 46, 108, 31, 10, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 19, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 40, 70, 99, 47, 13, 135, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 68, 80, 24, 60, 50, 124, 86, 144, 56, 6, 8, 116, 139, 134, 67, 84, 72, 107, 57, 66, 104, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 143, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 116, 8, 6, 56, 144, 86, 50, 124, 60, 24, 80, 68, 63, 39, 53, 1, 113, 72, 67, 84, 134, 139, 33, 82, 54, 148, 11, 19, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 44, 10, 31, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 46, 108, 31, 10, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 85, 26, 11, 19, 56, 8, 116, 6, 124, 50, 86, 144, 139, 80, 24, 60, 107, 68, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 13, 47, 99, 40, 70, 127, 42, 122, 114, 119, 148, 54, 82, 33, 134, 84, 67, 72, 43, 113, 143, 1, 53, 39, 63, 66, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 68, 24, 80, 60, 50, 124, 86, 144, 56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 63, 39, 53, 1, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 19, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 31, 10, 44, 108, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 86, 144, 56, 6, 8, 116, 139, 134, 84, 67, 68, 72, 113, 143, 63, 39, 53, 1, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 77, 51, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 19, 85, 26, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 10, 44, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 86, 144, 56, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 19, 85, 26, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 10, 44, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 19, 85, 26, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 44, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 75, 12, 32, 145, 102, 146, 36, 4, 95, 77, 51, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 19, 85, 26, 34, 149, 61, 59, 76, 109, 44, 22, 97, 90, 31, 10, 46, 108, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 40, 70, 99, 47, 13, 135, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115, 49, 43, 113, 1, 143, 53, 39, 63, 68, 72, 67, 84, 134, 139, 116, 8, 6, 19, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 44, 10, 31, 108, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 68, 63, 39, 53, 1, 143, 43, 113, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 100, 38, 146, 29, 120, 106, 111, 131, 28, 45, 42, 127, 40, 70, 99, 47, 13, 135, 2, 122, 114, 119, 33, 148, 54, 82, 19, 85, 26, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 10, 44, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 13, 47, 99, 40, 70, 135, 127, 42, 122, 114, 119, 33, 82, 54, 148, 26, 85, 34, 149, 19, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 33, 82, 54, 148, 26, 85, 34, 149, 19, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 119, 114, 33, 82, 54, 148, 26, 85, 34, 149, 19, 61, 59, 76, 109, 22, 97, 46, 10, 31, 108, 44, 90, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 119, 114, 33, 82, 54, 148, 26, 85, 34, 149, 19, 61, 59, 76, 109, 22, 97, 90, 44, 46, 10, 31, 108, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 1, 43, 143, 113, 49, 115, 81, 125, 94, 75, 12, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 106, 120, 29, 111, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 119, 114, 148, 54, 82, 33, 26, 85, 34, 149, 19, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 75, 12, 32, 145, 102, 146, 36, 4, 95, 77, 51, 38, 100, 106, 120, 29, 111, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 26, 85, 34, 149, 19, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 119, 114, 82, 54, 148, 33, 26, 85, 34, 149, 19, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 13, 47, 70, 40, 99, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 26, 85, 34, 149, 19, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 145, 32, 102, 146, 36, 4, 51, 77, 95, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 135, 13, 40, 70, 47, 99, 127, 42, 122, 114, 119, 148, 54, 82, 33, 26, 85, 34, 149, 19, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 75, 12, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 148, 54, 82, 33, 26, 85, 34, 149, 19, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 145, 32, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 119, 114, 148, 54, 82, 33, 26, 85, 34, 149, 19, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 120, 29, 106, 111, 131, 45, 28, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 13, 47, 99, 40, 70, 135, 127, 42, 122, 114, 119, 33, 82, 54, 148, 26, 85, 34, 149, 61, 59, 76, 109, 19, 22, 97, 44, 90, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 13, 47, 99, 40, 70, 135, 127, 42, 122, 114, 119, 33, 82, 54, 148, 26, 85, 34, 149, 19, 76, 109, 61, 59, 22, 97, 44, 108, 90, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 33, 82, 54, 148, 26, 85, 34, 149, 19, 61, 59, 76, 109, 22, 97, 90, 108, 44, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 38, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 40, 70, 135, 127, 42, 122, 114, 119, 33, 54, 82, 148, 26, 85, 34, 149, 19, 61, 59, 76, 109, 22, 97, 90, 108, 44, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 26, 85, 34, 149, 19, 61, 59, 76, 109, 22, 97, 90, 108, 44, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 106, 120, 29, 111, 131, 28, 45, 2, 13, 47, 99, 40, 70, 135, 127, 42, 122, 114, 119, 33, 82, 54, 148, 26, 19, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 28, 131, 13, 47, 99, 70, 40, 135, 2, 45, 42, 127, 122, 114, 119, 33, 82, 54, 148, 19, 85, 26, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 44, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 10, 31, 108, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 2, 45, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 2, 135, 40, 70, 99, 47, 13, 45, 42, 127, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 13, 47, 99, 70, 40, 135, 127, 42, 122, 2, 45, 28, 33, 82, 54, 148, 119, 114, 26, 34, 85, 19, 149, 61, 59, 109, 76, 22, 97, 90, 108, 44, 10, 31, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 40, 70, 99, 47, 13, 2, 122, 119, 114, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 10, 31, 108, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 40, 70, 99, 47, 13, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 10, 31, 108, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 70, 40, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 10, 31, 108, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 119, 114, 33, 82, 54, 148, 26, 19, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 44, 31, 10, 108, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 119, 114, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 31, 108, 46, 10, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 10, 31, 108, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 10, 31, 108, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 54, 82, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 10, 31, 108, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 10, 31, 108, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 10, 31, 108, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 109, 76, 22, 97, 90, 44, 31, 10, 46, 108, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 109, 76, 22, 97, 90, 44, 10, 31, 108, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 10, 31, 108, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 108, 44, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 10, 31, 108, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[0, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 74, 96, 55, 142, 118, 3, 64, 117, 123, 128, 25, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 16, 14, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 138, 79, 30, 88, 137, 132, 147, 141, 92, 27, 130, 57, 104, 66, 107, 24, 80, 60, 50, 124, 144, 86, 56, 11, 6, 8, 116, 139, 134, 84, 67, 72, 68, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 40, 70, 2, 122, 114, 119, 33, 82, 54, 148, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 46, 129, 0]");

        assertThat(mmas_us_madtsp.getGlobalStatistics().getTimeStatistics().get("MMAS Execution")).isLessThan(20000);
        assertThat(mmas_us_madtsp.getGlobalStatistics().getTimeStatistics().get("MMAS Initialization")).isLessThan(150);
    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA150_with_seed_1_mag_0_1_freq_100() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA150));
        MMAS_US_MADTSP mmas_us_madtsp = new MMAS_US_MADTSP(graph, 0.8, 1000, 0.1, 100);
        mmas_us_madtsp.setMmasSeed(1);
        mmas_us_madtsp.setDbgpSeed(1);
        mmas_us_madtsp.setStatisticInterval(1);
        mmas_us_madtsp.setShowLog(false);
        mmas_us_madtsp.run();
        assertThat(mmas_us_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(28827.307604586313);
        assertThat(mmas_us_madtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(28827.307604586313);
        assertThat(getTourString(mmas_us_madtsp)).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");

        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[0, 112, 71, 34, 26, 11, 148, 54, 82, 33, 134, 139, 67, 84, 100, 29, 120, 106, 38, 146, 36, 4, 145, 102, 32, 75, 12, 94, 125, 81, 95, 77, 51, 99, 40, 70, 47, 111, 131, 28, 13, 2, 45, 127, 42, 122, 114, 119, 135, 115, 49, 43, 1, 53, 39, 63, 143, 113, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 73, 20, 140, 58, 126, 103, 98, 101, 110, 35, 23, 37, 17, 136, 78, 133, 52, 15, 87, 21, 93, 69, 3, 64, 65, 123, 25, 117, 128, 118, 142, 96, 55, 138, 88, 41, 121, 30, 79, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 83, 9, 105, 18, 74, 91, 7, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 6, 56, 116, 54, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 80, 24, 67, 84, 134, 139, 111, 131, 28, 45, 33, 82, 148, 11, 19, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 73, 20, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 62, 91, 7, 121, 41, 79, 30, 138, 55, 142, 118, 96, 3, 64, 65, 123, 25, 117, 128, 69, 15, 87, 21, 93, 136, 78, 105, 133, 52, 18, 74, 88, 132, 137, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 6, 56, 116, 54, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 80, 24, 67, 84, 134, 139, 111, 131, 28, 45, 33, 82, 148, 11, 19, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 73, 20, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 62, 91, 7, 121, 41, 79, 30, 138, 55, 142, 118, 96, 3, 64, 65, 123, 25, 117, 128, 69, 15, 87, 21, 93, 136, 78, 105, 133, 52, 18, 74, 88, 132, 137, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 6, 56, 116, 54, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 80, 24, 67, 84, 134, 139, 111, 131, 28, 45, 33, 82, 148, 11, 19, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 73, 20, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 62, 91, 7, 121, 41, 79, 30, 138, 55, 142, 118, 96, 3, 64, 65, 123, 25, 117, 128, 69, 15, 87, 21, 93, 136, 78, 105, 133, 52, 18, 74, 88, 132, 137, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 6, 56, 116, 54, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 80, 24, 67, 84, 134, 139, 111, 131, 28, 45, 33, 82, 148, 11, 19, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 73, 20, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 62, 91, 7, 121, 41, 79, 30, 138, 55, 142, 118, 96, 3, 64, 65, 123, 25, 117, 128, 69, 15, 87, 21, 93, 136, 78, 105, 133, 52, 18, 74, 88, 132, 137, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 6, 56, 116, 54, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 80, 24, 67, 84, 134, 139, 111, 131, 28, 45, 33, 82, 148, 11, 19, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 73, 20, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 62, 91, 7, 121, 41, 79, 30, 138, 55, 142, 118, 96, 3, 64, 65, 123, 25, 117, 128, 69, 15, 87, 21, 93, 136, 78, 105, 133, 52, 18, 74, 88, 132, 137, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 6, 56, 116, 54, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 80, 24, 67, 84, 134, 139, 111, 131, 28, 45, 33, 82, 148, 11, 19, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 73, 20, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 62, 91, 7, 121, 41, 79, 30, 138, 55, 142, 118, 96, 3, 64, 65, 123, 25, 117, 128, 69, 15, 87, 21, 93, 136, 78, 105, 133, 52, 18, 74, 88, 132, 137, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 6, 56, 116, 54, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 80, 24, 67, 84, 134, 139, 111, 131, 28, 45, 33, 82, 148, 11, 19, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 73, 20, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 62, 91, 7, 121, 41, 79, 30, 138, 55, 142, 118, 96, 3, 64, 65, 123, 25, 117, 128, 69, 15, 87, 21, 93, 136, 78, 105, 133, 52, 18, 74, 88, 132, 137, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 6, 56, 116, 54, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 80, 24, 67, 84, 134, 139, 111, 131, 28, 45, 33, 82, 148, 11, 19, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 73, 20, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 62, 91, 7, 121, 41, 79, 30, 138, 55, 142, 118, 96, 3, 64, 65, 123, 25, 117, 128, 69, 15, 87, 21, 93, 136, 78, 105, 133, 52, 18, 74, 88, 132, 137, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 6, 56, 116, 54, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 80, 24, 67, 84, 134, 139, 111, 131, 28, 45, 33, 82, 148, 11, 19, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 73, 20, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 62, 91, 7, 121, 41, 79, 30, 138, 55, 142, 118, 96, 3, 64, 65, 123, 25, 117, 128, 69, 15, 87, 21, 93, 136, 78, 105, 133, 52, 18, 74, 88, 132, 137, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 56, 8, 116, 6, 82, 54, 148, 34, 85, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 73, 20, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 74, 18, 52, 133, 136, 78, 105, 15, 87, 21, 93, 69, 128, 123, 25, 117, 65, 3, 64, 142, 118, 55, 96, 138, 7, 121, 41, 79, 30, 88, 132, 137, 53, 39, 63, 143, 1, 43, 113, 49, 72, 68, 80, 24, 67, 84, 134, 139, 33, 28, 45, 131, 111, 106, 100, 38, 95, 77, 51, 4, 36, 146, 75, 12, 32, 145, 102, 94, 125, 81, 115, 120, 29, 47, 99, 70, 40, 13, 135, 2, 42, 127, 122, 114, 119, 11, 26, 19, 149, 62, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 84, 67, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 102, 145, 32, 12, 75, 146, 36, 4, 51, 77, 95, 38, 100, 106, 111, 131, 28, 45, 120, 29, 47, 99, 70, 40, 13, 135, 2, 42, 127, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 73, 20, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 136, 78, 105, 15, 87, 21, 93, 69, 128, 123, 25, 117, 65, 3, 64, 142, 118, 55, 96, 138, 7, 121, 41, 79, 30, 88, 132, 137, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 32, 12, 75, 145, 102, 146, 36, 4, 51, 77, 95, 84, 67, 38, 100, 106, 120, 29, 47, 99, 70, 40, 13, 135, 2, 28, 131, 111, 45, 42, 127, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 73, 20, 58, 140, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 136, 78, 105, 15, 87, 21, 93, 69, 128, 123, 25, 117, 65, 3, 64, 142, 118, 55, 96, 138, 7, 121, 41, 79, 30, 88, 132, 137, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 32, 12, 75, 145, 102, 146, 36, 4, 51, 77, 95, 84, 67, 38, 100, 106, 120, 29, 47, 99, 70, 40, 13, 135, 2, 28, 131, 111, 45, 42, 127, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 52, 133, 136, 78, 105, 15, 87, 21, 93, 69, 128, 123, 25, 117, 65, 3, 64, 142, 118, 55, 96, 138, 7, 121, 41, 79, 30, 88, 132, 137, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 75, 32, 12, 145, 102, 146, 36, 4, 51, 77, 95, 84, 67, 38, 100, 106, 120, 29, 47, 99, 70, 40, 13, 135, 2, 28, 131, 111, 45, 42, 127, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 52, 133, 136, 78, 105, 15, 87, 21, 93, 69, 128, 123, 25, 117, 65, 3, 64, 142, 118, 55, 96, 138, 7, 121, 41, 79, 30, 88, 132, 137, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 75, 32, 12, 145, 102, 146, 36, 4, 51, 77, 95, 84, 67, 38, 100, 106, 120, 29, 47, 99, 70, 40, 13, 135, 2, 28, 131, 111, 45, 42, 127, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 52, 133, 136, 78, 105, 15, 87, 21, 93, 69, 128, 123, 25, 117, 65, 3, 64, 142, 118, 96, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 75, 32, 12, 145, 102, 146, 36, 4, 51, 77, 95, 84, 67, 38, 100, 106, 120, 29, 47, 99, 70, 40, 13, 135, 2, 28, 131, 111, 45, 42, 127, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 52, 133, 136, 78, 105, 15, 87, 21, 93, 69, 128, 123, 25, 117, 64, 65, 3, 142, 118, 96, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 75, 32, 12, 145, 102, 146, 36, 4, 51, 77, 95, 84, 67, 38, 100, 106, 120, 29, 47, 99, 70, 40, 13, 135, 2, 28, 131, 111, 45, 42, 127, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 52, 133, 136, 78, 105, 93, 21, 87, 15, 69, 128, 25, 123, 117, 64, 65, 3, 142, 118, 96, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 75, 32, 12, 145, 102, 146, 36, 4, 51, 77, 95, 29, 106, 120, 100, 38, 67, 84, 111, 131, 47, 99, 70, 40, 13, 135, 2, 28, 45, 42, 127, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 52, 133, 136, 78, 105, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 142, 118, 96, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 75, 32, 12, 145, 102, 146, 36, 4, 51, 77, 95, 29, 106, 120, 100, 38, 67, 84, 111, 131, 28, 45, 2, 135, 40, 70, 99, 47, 13, 42, 127, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 52, 133, 136, 78, 105, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 142, 118, 96, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 29, 120, 106, 100, 38, 67, 84, 111, 131, 28, 45, 2, 135, 40, 70, 99, 47, 13, 42, 127, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 105, 78, 136, 52, 133, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 142, 118, 96, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 29, 120, 106, 100, 38, 67, 84, 111, 131, 28, 45, 2, 135, 40, 70, 99, 47, 13, 42, 127, 122, 114, 119, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 105, 78, 136, 52, 133, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 142, 118, 96, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 29, 120, 106, 100, 38, 67, 84, 111, 131, 28, 45, 2, 135, 40, 70, 99, 47, 13, 42, 127, 122, 114, 119, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 105, 78, 136, 52, 133, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 142, 118, 96, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 29, 120, 106, 100, 38, 67, 84, 111, 131, 28, 45, 2, 135, 40, 70, 99, 47, 13, 42, 127, 122, 114, 119, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 105, 78, 136, 52, 133, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 142, 118, 96, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 29, 120, 106, 100, 38, 67, 84, 111, 131, 28, 45, 2, 13, 47, 99, 40, 70, 135, 127, 122, 42, 114, 119, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 105, 78, 136, 52, 133, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 142, 118, 96, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 29, 120, 106, 100, 38, 67, 84, 111, 131, 28, 45, 2, 13, 47, 99, 40, 70, 135, 127, 122, 42, 114, 119, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 105, 133, 52, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 142, 118, 96, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 29, 120, 106, 100, 38, 67, 84, 111, 131, 28, 45, 2, 13, 47, 99, 40, 70, 135, 127, 122, 42, 114, 119, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 105, 133, 52, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 142, 118, 96, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 29, 120, 106, 100, 38, 67, 84, 111, 131, 28, 45, 2, 13, 47, 99, 40, 70, 135, 127, 42, 122, 114, 119, 26, 85, 149, 34, 61, 59, 109, 76, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 105, 133, 52, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 142, 118, 96, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 29, 120, 106, 100, 38, 67, 84, 111, 131, 28, 45, 2, 13, 47, 99, 40, 70, 135, 127, 42, 122, 114, 119, 26, 85, 149, 34, 61, 59, 109, 76, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 105, 133, 52, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 142, 118, 96, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 29, 120, 106, 100, 38, 67, 84, 111, 131, 28, 45, 2, 13, 47, 99, 40, 70, 135, 127, 42, 122, 114, 119, 26, 85, 149, 34, 61, 59, 109, 76, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 105, 133, 52, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 142, 118, 96, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 29, 120, 106, 100, 38, 67, 84, 111, 131, 28, 45, 2, 13, 47, 99, 40, 70, 135, 127, 42, 122, 114, 119, 26, 85, 149, 34, 61, 59, 109, 76, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 58, 140, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 105, 133, 52, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 142, 118, 96, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 29, 120, 106, 100, 38, 67, 84, 111, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 85, 149, 34, 61, 59, 109, 76, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 58, 140, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 105, 133, 52, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 142, 118, 96, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 85, 149, 34, 61, 59, 109, 76, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 58, 140, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 105, 133, 52, 78, 136, 15, 87, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 85, 149, 34, 61, 59, 109, 76, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 58, 140, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 105, 133, 52, 78, 136, 15, 87, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 118, 96, 142, 55, 138, 30, 88, 132, 137, 41, 121, 79, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 85, 149, 34, 61, 59, 109, 76, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 58, 140, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 105, 133, 52, 78, 136, 15, 87, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 118, 96, 142, 55, 138, 30, 79, 121, 41, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 85, 149, 34, 61, 59, 109, 76, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 58, 140, 126, 35, 98, 101, 110, 103, 23, 37, 17, 83, 9, 112, 62, 5, 48, 74, 18, 105, 133, 52, 78, 136, 15, 87, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 118, 96, 142, 55, 138, 30, 79, 121, 41, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 85, 149, 34, 61, 59, 109, 76, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 58, 140, 126, 35, 98, 101, 110, 103, 23, 37, 17, 83, 9, 112, 62, 5, 48, 74, 18, 105, 133, 52, 78, 136, 15, 87, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 118, 96, 142, 55, 138, 41, 121, 30, 79, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 85, 149, 34, 61, 59, 109, 76, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 58, 140, 126, 35, 98, 101, 110, 103, 23, 37, 17, 83, 9, 112, 62, 5, 48, 74, 18, 105, 52, 133, 78, 136, 15, 87, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 118, 96, 142, 55, 138, 41, 121, 30, 79, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 85, 149, 34, 61, 59, 109, 76, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 58, 140, 126, 35, 98, 101, 110, 103, 23, 37, 17, 83, 9, 112, 62, 5, 48, 74, 18, 105, 52, 133, 78, 136, 15, 87, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 118, 96, 142, 55, 138, 41, 121, 30, 79, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 85, 149, 34, 61, 59, 109, 76, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 58, 140, 126, 35, 98, 101, 110, 103, 23, 37, 17, 83, 9, 112, 62, 5, 48, 74, 18, 105, 52, 133, 78, 136, 15, 87, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 118, 96, 142, 55, 138, 121, 41, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 85, 149, 34, 61, 59, 109, 76, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 58, 140, 126, 35, 98, 101, 110, 103, 37, 17, 23, 83, 9, 112, 5, 48, 74, 18, 105, 52, 133, 78, 136, 15, 87, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 62, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 85, 149, 34, 61, 59, 109, 76, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 5, 48, 74, 18, 105, 133, 52, 78, 136, 15, 87, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 118, 96, 55, 142, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 62, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 74, 18, 105, 133, 52, 78, 136, 15, 87, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 118, 96, 55, 142, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 62, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 74, 18, 105, 133, 52, 78, 136, 15, 87, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 118, 96, 55, 142, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 62, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 74, 18, 105, 133, 52, 78, 136, 15, 87, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 118, 96, 55, 142, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 62, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 74, 18, 105, 133, 52, 78, 136, 15, 87, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 118, 142, 55, 96, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 62, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 74, 18, 105, 133, 52, 78, 136, 15, 87, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 118, 142, 55, 96, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 62, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 74, 18, 105, 133, 52, 78, 136, 15, 87, 93, 21, 69, 128, 123, 25, 117, 64, 65, 3, 118, 142, 55, 96, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 62, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 74, 18, 105, 133, 52, 78, 136, 15, 87, 93, 21, 69, 128, 123, 25, 117, 64, 65, 3, 118, 142, 55, 96, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 62, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 74, 18, 105, 133, 52, 78, 136, 15, 87, 93, 21, 69, 128, 123, 25, 117, 64, 65, 3, 118, 142, 55, 96, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 62, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 105, 133, 52, 18, 74, 48, 5, 62, 112, 71, 9, 83, 136, 15, 87, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 105, 133, 52, 18, 74, 48, 5, 62, 112, 71, 9, 83, 136, 15, 87, 93, 21, 69, 128, 25, 123, 117, 65, 64, 3, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 105, 133, 52, 18, 74, 48, 5, 62, 112, 71, 9, 83, 136, 87, 93, 21, 15, 69, 128, 25, 123, 117, 65, 64, 3, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 105, 133, 52, 18, 74, 48, 5, 62, 112, 71, 9, 83, 136, 87, 93, 21, 15, 69, 128, 25, 123, 117, 65, 64, 3, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 105, 133, 52, 18, 74, 48, 5, 62, 112, 71, 9, 83, 136, 87, 93, 21, 15, 69, 128, 25, 123, 117, 65, 64, 3, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 105, 133, 52, 18, 74, 48, 5, 62, 112, 71, 9, 83, 136, 87, 93, 21, 15, 69, 128, 25, 123, 117, 65, 64, 3, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 105, 133, 52, 18, 74, 48, 5, 62, 112, 71, 9, 83, 136, 87, 93, 21, 15, 69, 128, 25, 123, 117, 65, 64, 3, 118, 96, 142, 55, 138, 79, 30, 88, 137, 132, 41, 121, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 105, 133, 52, 18, 74, 48, 5, 62, 112, 71, 9, 83, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 65, 64, 3, 118, 96, 142, 55, 138, 79, 30, 88, 137, 132, 41, 121, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 105, 133, 52, 18, 74, 48, 5, 62, 112, 71, 9, 83, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 65, 64, 3, 118, 96, 142, 55, 138, 79, 30, 88, 137, 132, 41, 121, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 105, 133, 52, 18, 74, 48, 5, 62, 112, 71, 9, 83, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 65, 64, 3, 118, 96, 142, 55, 138, 79, 30, 88, 137, 132, 41, 121, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 79, 30, 88, 137, 132, 41, 121, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 79, 30, 88, 137, 132, 41, 121, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 79, 30, 88, 137, 132, 41, 121, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 79, 30, 88, 137, 132, 41, 121, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 79, 30, 88, 137, 132, 41, 121, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 79, 30, 88, 137, 132, 41, 121, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 79, 30, 88, 137, 132, 41, 121, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[0, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 24, 80, 68, 63, 39, 53, 1, 143, 113, 72, 49, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 84, 67, 100, 120, 29, 106, 131, 111, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        checkValues(mmas_us_madtsp, 1, 40111.719448483374, 2049.2615999305035, 0.0, 81.65795918367347, 34949.74724840918);
        checkValues(mmas_us_madtsp, 50, 34434.40350682029, 1431.5592164657085, 0.83, 14.368163265306123, 30543.35700392316);
        checkValues(mmas_us_madtsp, 100, 33657.87308902136, 1913.4221626602482, 0.5133333333333333, 5.182857142857143, 30543.35700392316);
        checkValues(mmas_us_madtsp, 101, 38422.19998990296, 1738.4656184194077, 0.5066666666666667, 26.997551020408164, 33900.84145015183);
        checkValues(mmas_us_madtsp, 150, 34142.4508385264, 2187.8525037804225, 0.5, 11.079183673469387, 30723.976146723224);
        checkValues(mmas_us_madtsp, 200, 31305.410895909088, 2024.466885597707, 0.49666666666666665, 5.0587755102040814, 29780.505441386438);
        checkValues(mmas_us_madtsp, 201, 36332.13862812792, 2557.183043822833, 0.49666666666666665, 11.417959183673469, 31152.466750377786);
        checkValues(mmas_us_madtsp, 250, 32728.598663337594, 1726.4046444303904, 0.49666666666666665, 8.306122448979592, 30425.999730731724);
        checkValues(mmas_us_madtsp, 300, 32316.268284107507, 1500.6708924537093, 0.49666666666666665, 8.886530612244899, 30182.075471566503);
        checkValues(mmas_us_madtsp, 301, 33594.92884354438, 2524.9176390614443, 0.49666666666666665, 7.1991836734693875, 30946.279643994723);
        checkValues(mmas_us_madtsp, 350, 31533.411737338924, 1856.510675744008, 0.49666666666666665, 5.045714285714285, 29711.023519173603);
        checkValues(mmas_us_madtsp, 400, 32530.540016901225, 2338.0104928052538, 0.49666666666666665, 5.69469387755102, 29587.023519173603);
        checkValues(mmas_us_madtsp, 401, 32699.07738268803, 1955.5295155438148, 0.49333333333333335, 10.568163265306122, 30829.538125173665);
        checkValues(mmas_us_madtsp, 450, 30774.503966677923, 1132.0947248185917, 0.49666666666666665, 4.6938775510204085, 29952.081845387554);
        checkValues(mmas_us_madtsp, 500, 30350.154170146783, 1146.326488994548, 0.49666666666666665, 4.012244897959183, 29614.263118370087);
        checkValues(mmas_us_madtsp, 501, 32897.583343902996, 1115.3825964196917, 0.49333333333333335, 10.096326530612245, 29421.86415772435);
        checkValues(mmas_us_madtsp, 550, 30417.147050490432, 1525.3237158833595, 0.5033333333333333, 4.635918367346939, 29090.643584668775);
        checkValues(mmas_us_madtsp, 600, 29716.56866238782, 1077.1579149378738, 0.49666666666666665, 3.7012244897959183, 28964.307604586313);
        checkValues(mmas_us_madtsp, 601, 29770.69101642566, 1233.385864497442, 0.49666666666666665, 3.0873469387755104, 28814.47511247731);
        checkValues(mmas_us_madtsp, 650, 29731.44520059669, 1095.5417147135156, 0.49666666666666665, 2.2342857142857144, 28814.47511247731);
        checkValues(mmas_us_madtsp, 700, 29396.07273702018, 1028.0677378493917, 0.49666666666666665, 1.609795918367347, 28807.47511247731);
        checkValues(mmas_us_madtsp, 701, 30150.74993253642, 1118.9433474767295, 0.49666666666666665, 2.043265306122449, 29420.903491318775);
        checkValues(mmas_us_madtsp, 750, 29927.1741387467, 1050.6071152092125, 0.49666666666666665, 2.2253061224489796, 29272.120579273498);
        checkValues(mmas_us_madtsp, 800, 29094.187604586306, 204.43048217136388, 0.49666666666666665, 0.35918367346938773, 29051.307604586313);
        checkValues(mmas_us_madtsp, 801, 29440.819349244604, 493.27002518477303, 0.49666666666666665, 1.0130612244897959, 28827.307604586313);
        checkValues(mmas_us_madtsp, 850, 28883.567604586304, 278.49704574698063, 0.49666666666666665, 0.23918367346938776, 28827.307604586313);
        checkValues(mmas_us_madtsp, 900, 28827.307604586305, 7.34982709802142E-12, 0.49666666666666665, 0.0, 28827.307604586313);
        checkValues(mmas_us_madtsp, 901, 28827.307604586305, 7.34982709802142E-12, 0.49666666666666665, 0.0, 28827.307604586313);
        checkValues(mmas_us_madtsp, 950, 28827.307604586305, 7.34982709802142E-12, 0.49666666666666665, 0.0, 28827.307604586313);
        checkValues(mmas_us_madtsp, 1000, 28827.307604586305, 7.34982709802142E-12, 0.49666666666666665, 0.0, 28827.307604586313);

        assertThat(mmas_us_madtsp.getGlobalStatistics().getTimeStatistics().get("MMAS Execution")).isLessThan(20000);
        assertThat(mmas_us_madtsp.getGlobalStatistics().getTimeStatistics().get("MMAS Initialization")).isLessThan(150);
    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA100_with_seed_1_mag_0_75_freq_10() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_US_MADTSP mmas_us_madtsp = new MMAS_US_MADTSP(graph, 0.8, 1000, 0.75, 10);
        mmas_us_madtsp.setMmasSeed(1);
        mmas_us_madtsp.setDbgpSeed(1);
        mmas_us_madtsp.setStatisticInterval(1);
        mmas_us_madtsp.setShowLog(false);
        mmas_us_madtsp.run();
        assertThat(mmas_us_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(38743.41775277011);
        assertThat(mmas_us_madtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(38743.41775277011);
        assertThat(getTourString(mmas_us_madtsp)).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 20, 73, 58, 14, 16, 10, 92, 27, 66, 57, 0]");

        checkValues(mmas_us_madtsp, 1, 46564.42118143889, 4349.664088172347, 0.0, 57.111836734693874, 32499.423638867313);
        checkValues(mmas_us_madtsp, 5, 37977.54231056649, 2518.6452064378705, 0.0, 13.30938775510204, 32499.423638867313);
        checkValues(mmas_us_madtsp, 10, 38478.644565444854, 2791.620567872461, 0.0, 14.29469387755102, 32499.423638867313);
        checkValues(mmas_us_madtsp, 11, 43611.344662118645, 3470.345191685222, 0.485, 40.24, 35252.05505911578);
        checkValues(mmas_us_madtsp, 15, 38021.788810949016, 2931.1362283631265, 0.595, 18.003265306122447, 33547.14590286469);
        checkValues(mmas_us_madtsp, 20, 37584.25348121808, 3053.11240020052, 0.49, 26.548571428571428, 30473.456962287495);
        checkValues(mmas_us_madtsp, 21, 45994.04842691919, 2561.944743263161, 0.545, 39.86693877551021, 36208.704714072446);
        checkValues(mmas_us_madtsp, 25, 42578.16812004221, 3013.649205144714, 0.545, 30.165714285714287, 36208.704714072446);
        checkValues(mmas_us_madtsp, 30, 42488.70657870491, 3424.935947176006, 0.545, 32.347755102040814, 36208.704714072446);
        checkValues(mmas_us_madtsp, 31, 46263.304686274, 3732.8066226001656, 0.555, 44.87183673469388, 32827.58151643264);
        checkValues(mmas_us_madtsp, 35, 34725.62390545605, 2956.808806574666, 0.555, 8.50530612244898, 32827.58151643264);
        checkValues(mmas_us_madtsp, 40, 34923.47779167237, 2287.343346863265, 0.49, 10.65469387755102, 32302.33368443332);
        checkValues(mmas_us_madtsp, 41, 42434.712515889405, 2568.1764329874645, 0.505, 30.528979591836734, 34308.18144658403);
        checkValues(mmas_us_madtsp, 45, 39783.79367630907, 3467.3268757090796, 0.505, 29.45795918367347, 34308.18144658403);
        checkValues(mmas_us_madtsp, 50, 40586.127431901776, 2813.4157971811637, 0.505, 28.53469387755102, 34308.18144658403);
        checkValues(mmas_us_madtsp, 51, 43673.68994924289, 3218.051149939226, 0.505, 42.13306122448979, 34902.43527795982);
        checkValues(mmas_us_madtsp, 55, 34580.65722296283, 3037.27503215916, 0.82, 13.893061224489795, 30738.77936135364);
        checkValues(mmas_us_madtsp, 60, 33398.923826661885, 3274.037893360693, 0.82, 8.38938775510204, 30738.77936135364);
        checkValues(mmas_us_madtsp, 61, 45426.45568007586, 3019.1088490205134, 0.475, 30.696326530612247, 38025.94019131444);
        checkValues(mmas_us_madtsp, 65, 40273.91997646923, 2454.711430141756, 0.75, 22.995102040816327, 34388.83093664936);
        checkValues(mmas_us_madtsp, 70, 39646.76653187224, 2244.2443447199985, 0.75, 20.313469387755102, 34388.83093664936);
        checkValues(mmas_us_madtsp, 71, 45685.03404406442, 3261.8731685272196, 0.53, 37.57551020408163, 36109.65527113532);
        checkValues(mmas_us_madtsp, 75, 40656.220322760164, 2933.286842807358, 0.53, 19.17469387755102, 36109.65527113532);
        checkValues(mmas_us_madtsp, 80, 37170.96210707989, 3322.2544757410055, 0.57, 9.326530612244898, 33186.77055889938);
        checkValues(mmas_us_madtsp, 81, 47317.8072732284, 4159.603098162736, 0.485, 40.011428571428574, 35778.284691080196);
        checkValues(mmas_us_madtsp, 85, 40795.026686174984, 2481.7546903258126, 0.575, 27.226938775510202, 34262.31811115137);
        checkValues(mmas_us_madtsp, 90, 38300.963098534405, 2841.159559422531, 0.575, 18.775510204081634, 34262.31811115137);
        checkValues(mmas_us_madtsp, 91, 45099.679992618185, 2600.75364068634, 0.515, 37.28081632653061, 35295.6384392437);
        checkValues(mmas_us_madtsp, 95, 42664.53263765603, 3611.2793617671678, 0.515, 12.69795918367347, 35295.6384392437);
        checkValues(mmas_us_madtsp, 100, 42670.69079395989, 4094.1875923054945, 0.535, 14.446530612244898, 35295.6384392437);
        checkValues(mmas_us_madtsp, 101, 47359.811640156666, 3288.568084541798, 0.515, 37.59102040816327, 37403.191561249245);
        checkValues(mmas_us_madtsp, 105, 41672.57710013922, 2877.2012716307595, 0.665, 20.18938775510204, 32342.905159945454);
        checkValues(mmas_us_madtsp, 110, 39336.535687253534, 2673.4380383217162, 0.595, 9.911836734693878, 31618.9367969086);
        checkValues(mmas_us_madtsp, 111, 44314.079776399434, 3714.651338397853, 0.515, 38.80897959183673, 33015.917870530146);
        checkValues(mmas_us_madtsp, 115, 34846.77655761884, 4103.6785418169675, 0.6, 4.463673469387755, 31901.383628065152);
        checkValues(mmas_us_madtsp, 120, 35274.99068966513, 3903.0133285076963, 0.6, 5.719183673469388, 31901.383628065152);
        checkValues(mmas_us_madtsp, 121, 47128.87827184294, 3630.498456620805, 0.475, 36.35836734693878, 35588.41654032102);
        checkValues(mmas_us_madtsp, 125, 39015.396733862835, 3495.4157638986935, 0.565, 20.36979591836735, 34282.52990760893);
        checkValues(mmas_us_madtsp, 130, 36951.28682146284, 2552.4733028227424, 0.565, 9.75673469387755, 34282.52990760893);
        checkValues(mmas_us_madtsp, 131, 43847.86175559774, 2749.8154732684884, 0.495, 32.76489795918367, 34241.41516808488);
        checkValues(mmas_us_madtsp, 135, 39807.92122526528, 2398.185573043046, 0.495, 17.990204081632655, 34241.41516808488);
        checkValues(mmas_us_madtsp, 140, 38375.22557336357, 3400.1230797350386, 0.605, 15.706938775510205, 32420.494839520536);
        checkValues(mmas_us_madtsp, 141, 44625.09562217417, 2118.173552463362, 0.54, 34.63428571428572, 35568.471278792626);
        checkValues(mmas_us_madtsp, 145, 38577.39172893665, 2633.123485780621, 0.56, 18.565714285714286, 34114.89767969423);
        checkValues(mmas_us_madtsp, 150, 40179.824536680484, 3536.864374632372, 0.56, 22.546938775510203, 34114.89767969423);
        checkValues(mmas_us_madtsp, 151, 46193.88530198848, 3794.535991500396, 0.555, 37.121632653061226, 38228.30054968198);
        checkValues(mmas_us_madtsp, 155, 39946.884142539144, 3001.816488597402, 0.785, 11.166530612244898, 34153.04508597769);
        checkValues(mmas_us_madtsp, 160, 39547.25817021445, 2864.0402693107385, 0.785, 9.737142857142857, 34153.04508597769);
        checkValues(mmas_us_madtsp, 161, 44375.26812970705, 3192.453224755713, 0.49, 36.10775510204082, 36273.65086712768);
        checkValues(mmas_us_madtsp, 165, 41070.62496102128, 4950.858972469932, 0.7, 10.150204081632653, 33160.826475508366);
        checkValues(mmas_us_madtsp, 170, 38440.28917448935, 3488.382252202513, 0.7, 8.795918367346939, 33160.826475508366);
        checkValues(mmas_us_madtsp, 171, 45882.20495950975, 3907.783624199568, 0.535, 36.79020408163265, 34423.35783353473);
        checkValues(mmas_us_madtsp, 175, 39134.65521211776, 3566.023326387867, 0.535, 13.520816326530612, 34423.35783353473);
        checkValues(mmas_us_madtsp, 180, 40457.8943491862, 2650.7590150752817, 0.535, 23.65877551020408, 34423.35783353473);
        checkValues(mmas_us_madtsp, 181, 44777.03619161867, 3745.6634313420946, 0.595, 35.4065306122449, 35813.39988670431);
        checkValues(mmas_us_madtsp, 185, 35581.64257584315, 3374.232990752651, 0.745, 6.963265306122449, 32677.38769535109);
        checkValues(mmas_us_madtsp, 190, 34984.04142209853, 2798.2082911956436, 0.745, 5.32, 32677.38769535109);
        checkValues(mmas_us_madtsp, 191, 47579.02872436691, 3694.0214025542477, 0.49, 28.204897959183672, 35524.82206780667);
        checkValues(mmas_us_madtsp, 195, 40109.1013557836, 2847.711932997963, 0.49, 15.842448979591836, 35524.82206780667);
        checkValues(mmas_us_madtsp, 200, 37607.78606384411, 1830.9920327705188, 0.575, 17.54204081632653, 33300.309499896866);
        checkValues(mmas_us_madtsp, 201, 42771.80342115527, 3370.6181910287014, 0.565, 28.09387755102041, 33996.123473305284);
        checkValues(mmas_us_madtsp, 205, 37286.94214873286, 2702.712745867527, 0.565, 8.422857142857143, 33996.123473305284);
        checkValues(mmas_us_madtsp, 210, 35633.13114898791, 3167.817364219092, 0.645, 6.791836734693877, 32580.725768428256);
        checkValues(mmas_us_madtsp, 211, 42530.127901764325, 3242.9305088485635, 0.475, 25.662857142857142, 33769.70603440735);
        checkValues(mmas_us_madtsp, 215, 40288.381736816555, 2941.2192111387403, 0.475, 13.387755102040817, 33769.70603440735);
        checkValues(mmas_us_madtsp, 220, 39234.7699023053, 3223.337584158037, 0.475, 13.644897959183673, 33769.70603440735);
        checkValues(mmas_us_madtsp, 221, 47375.70390268845, 3986.422917913764, 0.555, 33.53061224489796, 36407.63298688555);
        checkValues(mmas_us_madtsp, 225, 41929.626231881215, 2543.590863263218, 0.555, 11.28734693877551, 36407.63298688555);
        checkValues(mmas_us_madtsp, 230, 40847.21383790927, 2208.8182738303713, 0.595, 8.801632653061224, 34680.88188609269);
        checkValues(mmas_us_madtsp, 231, 47523.67901404464, 3162.4961501183475, 0.515, 30.780408163265307, 36827.19308184151);
        checkValues(mmas_us_madtsp, 235, 38180.77994422134, 2366.4740243072592, 0.68, 8.396734693877551, 33501.964461416625);
        checkValues(mmas_us_madtsp, 240, 34368.45440988824, 2691.5663544289605, 0.535, 5.37469387755102, 31728.1126144879);
        checkValues(mmas_us_madtsp, 241, 46289.33566865212, 3058.777018608417, 0.53, 31.372244897959185, 35709.319017093505);
        checkValues(mmas_us_madtsp, 245, 37247.98684332421, 3304.987489441728, 0.53, 7.013877551020408, 34231.873455196415);
        checkValues(mmas_us_madtsp, 250, 38682.99729990871, 3151.9580149794933, 0.52, 9.09469387755102, 33028.10163489476);
        checkValues(mmas_us_madtsp, 251, 45227.02417375709, 3751.723183335758, 0.505, 22.86938775510204, 36521.38417043696);
        checkValues(mmas_us_madtsp, 255, 37932.131106339264, 3586.2716357380014, 0.67, 9.993469387755102, 33700.62138735437);
        checkValues(mmas_us_madtsp, 260, 35431.28782929625, 2880.7272109576306, 0.565, 4.933061224489796, 32892.41935620612);
        checkValues(mmas_us_madtsp, 261, 45021.856428130726, 4959.332904713928, 0.475, 28.52081632653061, 32678.84239437946);
        checkValues(mmas_us_madtsp, 265, 35830.8577235044, 2978.1495086442906, 0.475, 7.570612244897959, 32678.84239437946);
        checkValues(mmas_us_madtsp, 270, 35366.014173147705, 3059.3056030588523, 0.495, 8.444081632653061, 32158.452441651003);
        checkValues(mmas_us_madtsp, 271, 43532.22843326352, 3319.250894249007, 0.495, 22.755102040816325, 36037.849719014754);
        checkValues(mmas_us_madtsp, 275, 37117.126502652914, 3215.8477758389154, 0.77, 12.678367346938776, 33329.36967128655);
        checkValues(mmas_us_madtsp, 280, 35386.08565045819, 1920.1911494647068, 0.77, 6.193469387755102, 33329.36967128655);
        checkValues(mmas_us_madtsp, 281, 43438.75089635347, 3079.633800069535, 0.5, 23.492244897959182, 36360.74016554162);
        checkValues(mmas_us_madtsp, 285, 37849.07034073939, 1890.4325146436245, 0.68, 7.197551020408163, 35699.11717260228);
        checkValues(mmas_us_madtsp, 290, 35580.11900670583, 1218.935534181881, 0.555, 4.333877551020408, 34706.08360313507);
        checkValues(mmas_us_madtsp, 291, 43761.63906530631, 2888.8841347921707, 0.465, 29.41551020408163, 35641.39387762567);
        checkValues(mmas_us_madtsp, 295, 38203.80825612446, 2544.9378445398766, 0.575, 12.50530612244898, 34870.404675719714);
        checkValues(mmas_us_madtsp, 300, 35277.63433551468, 1676.897883107627, 0.505, 3.500408163265306, 33733.68563878165);
        checkValues(mmas_us_madtsp, 301, 46024.21543644737, 3292.195861773375, 0.48, 30.68081632653061, 36233.688838384645);
        checkValues(mmas_us_madtsp, 305, 35548.41889294761, 2039.9589285083293, 0.625, 9.81795918367347, 32597.067166122484);
        checkValues(mmas_us_madtsp, 310, 35511.33922767293, 2822.1045074393605, 0.625, 7.751836734693877, 32597.067166122484);
        checkValues(mmas_us_madtsp, 311, 42030.36863055681, 3158.664722550017, 0.495, 24.090612244897958, 33968.05147571462);
        checkValues(mmas_us_madtsp, 315, 37728.69929558268, 3157.603416618466, 0.635, 13.177959183673469, 31299.88651801724);
        checkValues(mmas_us_madtsp, 320, 36396.11664082061, 3344.0159029293163, 0.635, 7.333877551020408, 31299.88651801724);
        checkValues(mmas_us_madtsp, 321, 42678.15219049142, 2708.3399528989785, 0.485, 20.324081632653062, 33832.597743241684);
        checkValues(mmas_us_madtsp, 325, 38909.02565312909, 3062.379055316348, 0.485, 10.351836734693878, 33832.597743241684);
        checkValues(mmas_us_madtsp, 330, 34952.68993556821, 3078.673587060351, 0.545, 7.773877551020409, 32418.294678585968);
        checkValues(mmas_us_madtsp, 331, 44289.08651951043, 3282.553538361026, 0.515, 28.06122448979592, 35202.269584376154);
        checkValues(mmas_us_madtsp, 335, 39579.88894988738, 2514.4570177130354, 0.615, 12.186938775510203, 34232.21690631741);
        checkValues(mmas_us_madtsp, 340, 37685.81880524577, 2449.924739989146, 0.615, 7.688979591836735, 34232.21690631741);
        checkValues(mmas_us_madtsp, 341, 44454.3282205447, 4098.508116171726, 0.47, 27.6734693877551, 35612.97081668204);
        checkValues(mmas_us_madtsp, 345, 34975.591264153394, 3048.5206572163856, 0.61, 9.070204081632653, 31505.69041202749);
        checkValues(mmas_us_madtsp, 350, 32942.267779610695, 3668.9926154479454, 0.61, 1.9812244897959184, 31505.69041202749);
        checkValues(mmas_us_madtsp, 351, 42722.8760389335, 3801.2755272987624, 0.475, 24.586938775510205, 34535.718820033224);
        checkValues(mmas_us_madtsp, 355, 38727.197165222635, 3316.4634455887217, 0.625, 14.257959183673469, 33748.95875883557);
        checkValues(mmas_us_madtsp, 360, 37151.380455398044, 3192.830115291336, 0.625, 9.125714285714286, 33748.95875883557);
        checkValues(mmas_us_madtsp, 361, 44303.00935359265, 2692.14920350259, 0.505, 30.456326530612245, 34073.86042056663);
        checkValues(mmas_us_madtsp, 365, 35745.67077919325, 1490.9661126360033, 0.505, 4.741224489795918, 34073.86042056663);
        checkValues(mmas_us_madtsp, 370, 35714.39963708972, 2256.9021683550345, 0.51, 7.8277551020408165, 33853.13119896253);
        checkValues(mmas_us_madtsp, 371, 43795.56330574554, 2094.436194274928, 0.51, 23.388571428571428, 38155.18349249366);
        checkValues(mmas_us_madtsp, 375, 37630.418730848156, 2396.6825797649244, 0.63, 6.01795918367347, 35317.81183099762);
        checkValues(mmas_us_madtsp, 380, 37702.084291619445, 1922.4321945491681, 0.63, 4.547755102040816, 35317.81183099762);
        checkValues(mmas_us_madtsp, 381, 45911.27094179401, 2662.3695654711055, 0.475, 24.069387755102042, 36944.663520631126);
        checkValues(mmas_us_madtsp, 385, 38194.396405949316, 1339.4337723102487, 0.6, 12.949387755102041, 35339.7731112206);
        checkValues(mmas_us_madtsp, 390, 36360.8723879468, 1397.081180479955, 0.6, 3.286530612244898, 35339.7731112206);
        checkValues(mmas_us_madtsp, 391, 46081.032707410144, 2723.9667849644256, 0.49, 24.499591836734695, 40914.57744560006);
        checkValues(mmas_us_madtsp, 395, 35180.85024533766, 1655.2586911381559, 0.64, 6.0383673469387755, 34209.63477415048);
        checkValues(mmas_us_madtsp, 400, 35233.43796923854, 1555.0040358662882, 0.495, 4.085714285714285, 34209.63477415048);
        checkValues(mmas_us_madtsp, 401, 40702.21998821143, 1844.3529279580412, 0.485, 20.408979591836733, 35453.48444765573);
        checkValues(mmas_us_madtsp, 405, 35746.536083572224, 1298.1066333521092, 0.645, 5.877551020408164, 34164.51616741109);
        checkValues(mmas_us_madtsp, 410, 34872.64992107321, 870.8340871823985, 0.645, 1.5404081632653062, 34164.51616741109);
        checkValues(mmas_us_madtsp, 411, 42017.63256058756, 2850.0456292413437, 0.495, 16.29061224489796, 34588.9994905653);
        checkValues(mmas_us_madtsp, 415, 35991.65083799531, 2520.250209289766, 0.545, 4.141224489795919, 34027.71639576378);
        checkValues(mmas_us_madtsp, 420, 35668.92081767592, 3329.787414964191, 0.565, 3.337142857142857, 33680.4074080068);
        checkValues(mmas_us_madtsp, 421, 42007.27867102161, 1923.8761059636004, 0.485, 17.45877551020408, 36132.938568218);
        checkValues(mmas_us_madtsp, 425, 37201.62166466074, 1658.9985580507785, 0.68, 7.473469387755102, 33985.77114202907);
        checkValues(mmas_us_madtsp, 430, 36432.65222974856, 2105.5815361153477, 0.68, 5.460408163265306, 33985.77114202907);
        checkValues(mmas_us_madtsp, 431, 42424.881170125765, 2874.1823775618545, 0.49, 17.78612244897959, 33794.43808466712);
        checkValues(mmas_us_madtsp, 435, 35411.048094141435, 2289.890573999627, 0.49, 4.551836734693878, 33794.43808466712);
        checkValues(mmas_us_madtsp, 440, 35365.95554689367, 1631.887410915559, 0.49, 4.711836734693877, 33794.43808466712);
        checkValues(mmas_us_madtsp, 441, 43042.06091829817, 2957.8995149723905, 0.485, 20.505306122448978, 36070.24916165608);
        checkValues(mmas_us_madtsp, 445, 36819.75542882994, 2209.4632838199113, 0.65, 7.322448979591837, 34880.74997805593);
        checkValues(mmas_us_madtsp, 450, 35628.21271735352, 1515.1535148579324, 0.5, 4.890612244897959, 34417.9819526182);
        checkValues(mmas_us_madtsp, 451, 42373.78770219973, 2167.4156697553262, 0.495, 20.024489795918367, 37337.523074759985);
        checkValues(mmas_us_madtsp, 455, 37063.23481152384, 1993.5097834083842, 0.635, 8.302857142857142, 35339.64376092473);
        checkValues(mmas_us_madtsp, 460, 36371.46015151848, 2320.6764771853063, 0.5, 5.373877551020408, 34143.91423356231);
        checkValues(mmas_us_madtsp, 461, 45081.30805325588, 3025.955759718013, 0.48, 26.219591836734693, 37146.23949592244);
        checkValues(mmas_us_madtsp, 465, 36848.344597705734, 1967.247721684547, 0.675, 5.525714285714286, 34472.849273393746);
        checkValues(mmas_us_madtsp, 470, 36990.416483509485, 1878.1537948801786, 0.675, 6.2693877551020405, 34472.849273393746);
        checkValues(mmas_us_madtsp, 471, 42876.114947090435, 2286.5690757899793, 0.485, 20.492244897959182, 35444.24471735796);
        checkValues(mmas_us_madtsp, 475, 37531.52470177411, 2523.176376961934, 0.485, 3.1648979591836737, 35444.24471735796);
        checkValues(mmas_us_madtsp, 480, 35601.059350341, 1128.5643187246392, 0.535, 2.682448979591837, 35113.135716433884);
        checkValues(mmas_us_madtsp, 481, 43322.55739446431, 2176.5132825117203, 0.49, 20.344489795918367, 37316.19263084213);
        checkValues(mmas_us_madtsp, 485, 38392.89482489407, 1379.6092879897246, 0.68, 11.43265306122449, 34669.48941526196);
        checkValues(mmas_us_madtsp, 490, 36914.87219153279, 1625.1300912824595, 0.68, 5.366530612244898, 34669.48941526196);
        checkValues(mmas_us_madtsp, 491, 42393.94527565515, 2943.804900411686, 0.49, 25.792653061224488, 35828.69576172488);
        checkValues(mmas_us_madtsp, 495, 36144.91110197747, 1722.6637678486625, 0.685, 4.1387755102040815, 34293.79988319523);
        checkValues(mmas_us_madtsp, 500, 35715.36104716108, 1554.8514802018474, 0.53, 4.227755102040816, 34293.79988319523);
        checkValues(mmas_us_madtsp, 501, 41233.97481907226, 1899.7803199799757, 0.515, 15.456326530612245, 34211.626690842546);
        checkValues(mmas_us_madtsp, 505, 37267.56392012311, 1650.9518520475103, 0.515, 6.380408163265306, 34211.626690842546);
        checkValues(mmas_us_madtsp, 510, 36772.23400764411, 1467.8258068659504, 0.5, 5.537959183673469, 34000.0803550145);
        checkValues(mmas_us_madtsp, 511, 41211.5222082219, 2812.912199571612, 0.49, 18.426938775510205, 35191.18931591495);
        checkValues(mmas_us_madtsp, 515, 36960.67166414706, 2856.9526677702365, 0.51, 4.489795918367347, 34379.92411008762);
        checkValues(mmas_us_madtsp, 520, 37550.54791691003, 3613.339577872762, 0.51, 3.7379591836734694, 34379.92411008762);
        checkValues(mmas_us_madtsp, 521, 41681.73866557504, 1653.4483834765751, 0.495, 13.242448979591837, 37010.15950849665);
        checkValues(mmas_us_madtsp, 525, 38123.95113761243, 1942.6634049063944, 0.63, 8.186938775510203, 35326.17298404044);
        checkValues(mmas_us_madtsp, 530, 37698.69539606045, 1741.5583520320336, 0.63, 5.621224489795918, 35326.17298404044);
        checkValues(mmas_us_madtsp, 531, 43021.446102171, 2563.5301278526654, 0.495, 20.525714285714287, 37395.28460554811);
        checkValues(mmas_us_madtsp, 535, 37919.89902071641, 1386.4750407801705, 0.61, 12.019591836734694, 35205.9051269793);
        checkValues(mmas_us_madtsp, 540, 37785.26419495501, 1275.8164631529996, 0.61, 9.333061224489796, 35205.9051269793);
        checkValues(mmas_us_madtsp, 541, 41411.561012890976, 1512.504181662207, 0.47, 20.25469387755102, 36784.85678359875);
        checkValues(mmas_us_madtsp, 545, 35827.19089097309, 2074.4545637718493, 0.615, 4.925714285714286, 34530.50866185724);
        checkValues(mmas_us_madtsp, 550, 35426.24777329808, 1653.4695825841932, 0.615, 2.633469387755102, 34530.50866185724);
        checkValues(mmas_us_madtsp, 551, 41749.33143274307, 2777.7551419336887, 0.5, 15.248163265306122, 34549.159902605024);
        checkValues(mmas_us_madtsp, 555, 38466.53899128262, 1694.3772455920803, 0.5, 5.359183673469388, 34549.159902605024);
        checkValues(mmas_us_madtsp, 560, 38519.30590019072, 1067.0369468854162, 0.5, 4.4130612244897955, 34549.159902605024);
        checkValues(mmas_us_madtsp, 561, 41528.49709781978, 1911.429115224249, 0.48, 18.44326530612245, 36005.604590760544);
        checkValues(mmas_us_madtsp, 565, 37508.927499720994, 2142.513393248589, 0.55, 5.026938775510204, 34543.87654198537);
        checkValues(mmas_us_madtsp, 570, 35159.10431949028, 1327.857617564245, 0.55, 1.8432653061224489, 34543.87654198537);
        checkValues(mmas_us_madtsp, 571, 41525.41705677987, 1512.81974554638, 0.485, 15.946122448979592, 36453.14789032549);
        checkValues(mmas_us_madtsp, 575, 37650.97022107772, 1261.3795964696267, 0.485, 9.053061224489795, 36453.14789032549);
        checkValues(mmas_us_madtsp, 580, 37896.36567856014, 1666.5217870730123, 0.485, 8.052244897959184, 36453.14789032549);
        checkValues(mmas_us_madtsp, 581, 43277.34920991105, 2084.378167371954, 0.49, 9.79265306122449, 36436.20499272701);
        checkValues(mmas_us_madtsp, 585, 38350.49389452719, 3074.940578711102, 0.61, 6.79265306122449, 35075.89719739836);
        checkValues(mmas_us_madtsp, 590, 38197.0583216043, 3199.8907387564495, 0.61, 5.8644897959183675, 35075.89719739836);
        checkValues(mmas_us_madtsp, 591, 40249.73899368914, 2039.3877784650588, 0.475, 13.609795918367347, 35847.4082329428);
        checkValues(mmas_us_madtsp, 595, 37075.96228599422, 1896.3441092365706, 0.57, 5.643265306122449, 35329.010184195);
        checkValues(mmas_us_madtsp, 600, 36487.23788126887, 1803.4953331691456, 0.5, 2.9436734693877553, 35329.010184195);
        checkValues(mmas_us_madtsp, 601, 42305.019137791765, 1767.027094386575, 0.49, 14.944489795918367, 37933.89043113209);
        checkValues(mmas_us_madtsp, 605, 37626.70900426249, 1748.0396168157024, 0.635, 4.949387755102041, 35950.859882581964);
        checkValues(mmas_us_madtsp, 610, 37742.629725679595, 1912.7223181469894, 0.635, 4.895510204081632, 35950.859882581964);
        checkValues(mmas_us_madtsp, 611, 43229.05569811369, 2312.953545150552, 0.485, 16.724897959183675, 36901.092385800126);
        checkValues(mmas_us_madtsp, 615, 38823.00038705458, 1391.9306003480115, 0.485, 5.640816326530612, 36901.092385800126);
        checkValues(mmas_us_madtsp, 620, 38700.94242964684, 1995.4972519899443, 0.485, 4.176326530612245, 36901.092385800126);
        checkValues(mmas_us_madtsp, 621, 42243.58719109784, 2696.65118256717, 0.49, 14.904489795918368, 34395.83621785968);
        checkValues(mmas_us_madtsp, 625, 39736.76320629462, 2504.1782272182427, 0.49, 4.491428571428571, 34395.83621785968);
        checkValues(mmas_us_madtsp, 630, 40198.896691777125, 3151.64789345425, 0.49, 5.423673469387755, 34395.83621785968);
        checkValues(mmas_us_madtsp, 631, 42284.49301251813, 1822.7231178429229, 0.495, 11.139591836734693, 36918.652313434395);
        checkValues(mmas_us_madtsp, 635, 38956.11238610678, 1518.1731899439244, 0.495, 3.357551020408163, 36918.652313434395);
        checkValues(mmas_us_madtsp, 640, 38483.73626187861, 1657.8912001555705, 0.495, 3.012244897959184, 36918.652313434395);
        checkValues(mmas_us_madtsp, 641, 42294.35964731005, 2065.048281360375, 0.485, 15.579591836734695, 35923.76413362637);
        checkValues(mmas_us_madtsp, 645, 38055.78190912644, 2075.5592596096335, 0.485, 6.104489795918368, 35923.76413362637);
        checkValues(mmas_us_madtsp, 650, 38738.566521739864, 1756.871198437384, 0.485, 7.582857142857143, 35923.76413362637);
        checkValues(mmas_us_madtsp, 651, 43159.78454722851, 1845.2415767056273, 0.49, 16.711020408163265, 37606.26100504661);
        checkValues(mmas_us_madtsp, 655, 38507.8160709941, 666.7295259589035, 0.49, 3.023673469387755, 37606.26100504661);
        checkValues(mmas_us_madtsp, 660, 37993.320531204095, 2725.272522200227, 0.5, 3.876734693877551, 35430.56799988888);
        checkValues(mmas_us_madtsp, 661, 41976.11265127703, 2681.693417377782, 0.515, 13.409795918367347, 36344.66111408787);
        checkValues(mmas_us_madtsp, 665, 36260.634343201615, 1293.7837912142388, 0.585, 4.106938775510204, 35365.307330692915);
        checkValues(mmas_us_madtsp, 670, 35977.966527524644, 1033.9485745650722, 0.585, 3.220408163265306, 35365.307330692915);
        checkValues(mmas_us_madtsp, 671, 39641.82411506412, 1356.864103580411, 0.485, 12.948571428571428, 36113.40306649947);
        checkValues(mmas_us_madtsp, 675, 36674.738534969685, 995.7782648461052, 0.485, 1.56, 36113.40306649947);
        checkValues(mmas_us_madtsp, 680, 36440.101336759806, 623.1727151756364, 0.485, 1.0889795918367347, 36113.40306649947);
        checkValues(mmas_us_madtsp, 681, 39316.13314680089, 1631.2970610634807, 0.48, 10.801632653061224, 34686.89883536819);
        checkValues(mmas_us_madtsp, 685, 35014.42823862867, 1182.2746941814833, 0.48, 0.9102040816326531, 34686.89883536819);
        checkValues(mmas_us_madtsp, 690, 35011.72669179602, 1146.1397805201566, 0.48, 1.1004081632653062, 34686.89883536819);
        checkValues(mmas_us_madtsp, 691, 41336.71867653902, 1595.7585820077181, 0.48, 14.616326530612245, 36015.529715633274);
        checkValues(mmas_us_madtsp, 695, 38420.60831130709, 1869.3445642503818, 0.5, 4.490612244897959, 35932.54959458603);
        checkValues(mmas_us_madtsp, 700, 37243.65758448787, 1771.3515587940144, 0.5, 3.913469387755102, 35932.54959458603);
        checkValues(mmas_us_madtsp, 701, 40259.295033454604, 1795.457564568426, 0.495, 9.341224489795918, 35326.416603580365);
        checkValues(mmas_us_madtsp, 705, 37599.39038636621, 1931.4924435628332, 0.495, 5.7240816326530615, 35326.416603580365);
        checkValues(mmas_us_madtsp, 710, 37757.50216041075, 1953.8049667195003, 0.495, 5.7240816326530615, 35326.416603580365);
        checkValues(mmas_us_madtsp, 711, 41110.14072307349, 2326.062422574049, 0.48, 13.377142857142857, 35902.66413383835);
        checkValues(mmas_us_madtsp, 715, 36750.95180878029, 1433.2388978374242, 0.48, 0.9640816326530612, 35902.66413383835);
        checkValues(mmas_us_madtsp, 720, 36691.68234526469, 1416.5629399582758, 0.48, 1.393469387755102, 35902.66413383835);
        checkValues(mmas_us_madtsp, 721, 42192.54223200099, 1362.2783899820658, 0.5, 9.729795918367348, 36756.31360244877);
        checkValues(mmas_us_madtsp, 725, 37156.5388302938, 1429.9385395871095, 0.61, 1.1289795918367347, 36564.5179675777);
        checkValues(mmas_us_madtsp, 730, 37215.20594204844, 1423.161642421691, 0.61, 1.2546938775510204, 36564.5179675777);
        checkValues(mmas_us_madtsp, 731, 40520.511006436376, 2175.8495934715634, 0.49, 10.744489795918367, 35997.34499217459);
        checkValues(mmas_us_madtsp, 735, 37598.18782636503, 1889.7433033093762, 0.49, 2.700408163265306, 35997.34499217459);
        checkValues(mmas_us_madtsp, 740, 37226.75002335076, 1476.9236644795703, 0.49, 2.021224489795918, 35997.34499217459);
        checkValues(mmas_us_madtsp, 741, 41737.51795199925, 2080.4698710319594, 0.485, 8.88408163265306, 36365.86561215878);
        checkValues(mmas_us_madtsp, 745, 37377.665802435586, 1791.3867431659562, 0.485, 1.3844897959183673, 36365.86561215878);
        checkValues(mmas_us_madtsp, 750, 37234.52141159154, 1506.5724897203647, 0.485, 1.596734693877551, 36365.86561215878);
        checkValues(mmas_us_madtsp, 751, 42122.306358696806, 1908.5655457225369, 0.495, 7.448163265306122, 37815.26276644785);
        checkValues(mmas_us_madtsp, 755, 37858.27604756782, 1525.2969678523548, 0.535, 2.529795918367347, 36208.90292415472);
        checkValues(mmas_us_madtsp, 760, 37097.24080563776, 1409.795611554008, 0.535, 1.7363265306122448, 36208.90292415472);
        checkValues(mmas_us_madtsp, 761, 39553.12104903428, 1642.4555088525854, 0.495, 6.1053061224489795, 36615.39702422411);
        checkValues(mmas_us_madtsp, 765, 36793.14453619372, 813.5143872697897, 0.495, 0.5844897959183674, 36615.39702422411);
        checkValues(mmas_us_madtsp, 770, 37093.027810139196, 1215.6713206159138, 0.495, 1.457142857142857, 36615.39702422411);
        checkValues(mmas_us_madtsp, 771, 41610.94140824068, 1525.3303449261077, 0.495, 6.945306122448979, 36518.91841514043);
        checkValues(mmas_us_madtsp, 775, 37704.11536135254, 1456.9920962727394, 0.495, 1.9648979591836735, 36518.91841514043);
        checkValues(mmas_us_madtsp, 780, 37706.45179618841, 1570.857847848712, 0.495, 2.5240816326530613, 36518.91841514043);
        checkValues(mmas_us_madtsp, 781, 40709.69791309566, 2051.7768524000808, 0.515, 7.2, 36351.67661861791);
        checkValues(mmas_us_madtsp, 785, 37357.63702165777, 1923.4193446423058, 0.515, 1.1314285714285715, 36351.67661861791);
        checkValues(mmas_us_madtsp, 790, 37048.242400727846, 1644.0556865306885, 0.515, 1.1828571428571428, 36351.67661861791);
        checkValues(mmas_us_madtsp, 791, 41723.35176015135, 2386.027956469293, 0.495, 5.582040816326531, 36844.403676430775);
        checkValues(mmas_us_madtsp, 795, 37076.59170591298, 733.6515096208371, 0.495, 0.2, 36844.403676430775);
        checkValues(mmas_us_madtsp, 800, 36987.33155797967, 529.8637904893947, 0.495, 0.39346938775510204, 36844.403676430775);
        checkValues(mmas_us_madtsp, 801, 42777.587317844314, 2693.5694204305923, 0.495, 3.3436734693877552, 35850.56074015162);
        checkValues(mmas_us_madtsp, 805, 36307.53161611359, 842.4153515954506, 0.495, 0.27755102040816326, 35850.56074015162);
        checkValues(mmas_us_madtsp, 810, 36419.8709665735, 1069.711021521234, 0.495, 0.6669387755102041, 35850.56074015162);
        checkValues(mmas_us_madtsp, 811, 41076.51408615718, 2763.368250359046, 0.495, 2.7224489795918365, 36400.99475880475);
        checkValues(mmas_us_madtsp, 815, 37925.531242025245, 892.124954934987, 0.495, 0.43755102040816324, 36400.99475880475);
        checkValues(mmas_us_madtsp, 820, 37902.80070994381, 752.3382481973815, 0.495, 0.47183673469387755, 36400.99475880475);
        checkValues(mmas_us_madtsp, 821, 38436.44939858078, 1471.0033883666338, 0.5, 4.036734693877551, 35873.584788922206);
        checkValues(mmas_us_madtsp, 825, 35874.519288616146, 6.607910705907287, 0.5, 0.12, 35873.584788922206);
        checkValues(mmas_us_madtsp, 830, 35873.58478892221, 7.34982709802142E-12, 0.5, 0.0, 35873.584788922206);
        checkValues(mmas_us_madtsp, 831, 37879.39464835132, 701.2287435763379, 0.49, 4.415510204081633, 37214.02186163613);
        checkValues(mmas_us_madtsp, 835, 37544.80727576003, 566.4646720629117, 0.49, 1.7526530612244897, 37214.02186163613);
        checkValues(mmas_us_madtsp, 840, 37587.139482861414, 919.8589547102605, 0.49, 1.4889795918367348, 37214.02186163613);
        checkValues(mmas_us_madtsp, 841, 37698.573735081016, 567.2476148948651, 0.49, 3.6889795918367345, 36619.22203963615);
        checkValues(mmas_us_madtsp, 845, 36711.58038562405, 603.5031397195698, 0.49, 0.2, 36619.22203963615);
        checkValues(mmas_us_madtsp, 850, 36754.990147268734, 859.5563077327253, 0.49, 0.276734693877551, 36619.22203963615);
        checkValues(mmas_us_madtsp, 851, 38582.56795550582, 709.7603242793192, 0.5, 2.449795918367347, 36399.13753967789);
        checkValues(mmas_us_madtsp, 855, 36692.288780657895, 453.9941055048911, 0.5, 2.2155102040816326, 36399.13753967789);
        checkValues(mmas_us_madtsp, 860, 36711.43411634665, 493.23070907992036, 0.5, 2.097142857142857, 36399.13753967789);
        checkValues(mmas_us_madtsp, 861, 39454.21207021269, 1065.8539438755784, 0.495, 3.4473469387755102, 36752.85551090778);
        checkValues(mmas_us_madtsp, 865, 36866.650331617704, 490.5830119750457, 0.495, 0.5093877551020408, 36752.85551090778);
        checkValues(mmas_us_madtsp, 870, 36788.095819438386, 188.76993246354368, 0.495, 0.3877551020408163, 36752.85551090778);
        checkValues(mmas_us_madtsp, 871, 39675.064308772984, 2087.9759077604695, 0.495, 4.119183673469387, 36449.20356087825);
        checkValues(mmas_us_madtsp, 875, 37157.73265125558, 343.7136559611736, 0.495, 0.7853061224489796, 36449.20356087825);
        checkValues(mmas_us_madtsp, 880, 37142.21816900317, 334.66220672723944, 0.495, 0.7444897959183674, 36449.20356087825);
        checkValues(mmas_us_madtsp, 881, 38487.552763675485, 770.3896121291408, 0.49, 1.0612244897959184, 36880.212780442875);
        checkValues(mmas_us_madtsp, 885, 36778.75697410671, 3.67491354901071E-11, 0.54, 0.0, 36778.75697410675);
        checkValues(mmas_us_madtsp, 890, 36778.75697410671, 3.67491354901071E-11, 0.54, 0.0, 36778.75697410675);
        checkValues(mmas_us_madtsp, 891, 38649.257108959944, 1780.0629338507945, 0.49, 3.9991836734693877, 36693.725949449145);
        checkValues(mmas_us_madtsp, 895, 36693.725949449174, 2.939930839208568E-11, 0.49, 0.0, 36693.725949449145);
        checkValues(mmas_us_madtsp, 900, 36693.725949449174, 2.939930839208568E-11, 0.5, 0.0, 36693.725949449145);
        checkValues(mmas_us_madtsp, 901, 38508.62938152846, 853.8774395955926, 0.49, 4.2726530612244895, 37455.159310497926);
        checkValues(mmas_us_madtsp, 905, 37699.09136769317, 3.67491354901071E-11, 0.49, 0.0, 37455.159310497926);
        checkValues(mmas_us_madtsp, 910, 37807.727646591375, 499.09847345110575, 0.49, 0.4726530612244898, 37455.159310497926);
        checkValues(mmas_us_madtsp, 911, 37475.09552551424, 660.818527669646, 0.5, 2.0016326530612245, 36639.21115032363);
        checkValues(mmas_us_madtsp, 915, 36693.275376645804, 228.2713641200596, 0.5, 0.5093877551020408, 36639.21115032363);
        checkValues(mmas_us_madtsp, 920, 36640.42320185124, 8.570498542908211, 0.5, 0.12, 36639.21115032363);
        checkValues(mmas_us_madtsp, 921, 37441.266798558216, 179.05385212294698, 0.5, 0.23918367346938776, 37190.827936676425);
        checkValues(mmas_us_madtsp, 925, 37234.70403942644, 217.13039771770414, 0.5, 0.156734693877551, 37190.827936676425);
        checkValues(mmas_us_madtsp, 930, 37207.534431762666, 118.13275965360549, 0.5, 0.12, 37190.827936676425);
        checkValues(mmas_us_madtsp, 931, 38091.56916283253, 581.006534695091, 0.495, 2.396734693877551, 37052.15950389092);
        checkValues(mmas_us_madtsp, 935, 37052.15950389091, 1.469965419604284E-11, 0.495, 0.0, 37052.15950389092);
        checkValues(mmas_us_madtsp, 940, 37663.34298138093, 496.5139470931175, 0.5, 1.2922448979591836, 36897.64306230377);
        checkValues(mmas_us_madtsp, 941, 37144.30211993351, 89.41057616392501, 0.5, 0.19755102040816327, 37127.63728758767);
        checkValues(mmas_us_madtsp, 945, 37127.63728758765, 2.204948129406426E-11, 0.5, 0.0, 37127.63728758767);
        checkValues(mmas_us_madtsp, 950, 37126.81565130706, 5.8098458566978, 0.5, 0.12, 37086.555473558474);
        checkValues(mmas_us_madtsp, 951, 37815.490079763986, 2.939930839208568E-11, 0.51, 0.0, 37815.49007976396);
        checkValues(mmas_us_madtsp, 955, 37815.490079763986, 2.939930839208568E-11, 0.51, 0.0, 37815.49007976396);
        checkValues(mmas_us_madtsp, 960, 37815.490079763986, 2.939930839208568E-11, 0.51, 0.0, 37815.49007976396);
        checkValues(mmas_us_madtsp, 961, 38870.545241392014, 110.95807130977836, 0.49, 0.08, 38101.645035816866);
        checkValues(mmas_us_madtsp, 965, 38101.64503581684, 2.939930839208568E-11, 0.49, 0.0, 38101.645035816866);
        checkValues(mmas_us_madtsp, 970, 38101.64503581684, 2.939930839208568E-11, 0.49, 0.0, 38101.645035816866);
        checkValues(mmas_us_madtsp, 971, 37944.82927963818, 2.939930839208568E-11, 0.49, 0.0, 37944.82927963821);
        checkValues(mmas_us_madtsp, 975, 37944.82927963818, 2.939930839208568E-11, 0.49, 0.0, 37944.82927963821);
        checkValues(mmas_us_madtsp, 980, 37944.82927963818, 2.939930839208568E-11, 0.49, 0.0, 37944.82927963821);
        checkValues(mmas_us_madtsp, 981, 38946.93145893071, 187.52923759631034, 0.49, 0.08, 37647.42014229479);
        checkValues(mmas_us_madtsp, 985, 37647.420142294824, 3.67491354901071E-11, 0.49, 0.0, 37647.42014229479);
        checkValues(mmas_us_madtsp, 990, 37647.420142294824, 3.67491354901071E-11, 0.49, 0.0, 37647.42014229479);
        checkValues(mmas_us_madtsp, 991, 38743.41775277007, 4.409896258812852E-11, 0.49, 0.0, 38743.41775277011);
        checkValues(mmas_us_madtsp, 995, 38743.41775277007, 4.409896258812852E-11, 0.49, 0.0, 38743.41775277011);
        checkValues(mmas_us_madtsp, 1000, 38743.41775277007, 4.409896258812852E-11, 0.49, 0.0, 38743.41775277011);
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 71, 20, 58, 73, 10, 16, 14, 90, 97, 22, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 81, 94, 12, 75, 32, 4, 36, 38, 51, 77, 95, 29, 13, 47, 99, 70, 40, 42, 2, 28, 45, 54, 82, 33, 6, 11, 26, 85, 34, 19, 56, 8, 86, 57, 92, 27, 66, 46, 44, 31, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 96, 74, 91, 41, 30, 79, 88, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[0, 46, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 78, 17, 37, 98, 35, 23, 93, 21, 87, 15, 69, 25, 65, 3, 64, 96, 74, 91, 41, 79, 88, 30, 55, 7, 5, 48, 62, 52, 18, 22, 97, 44, 90, 59, 76, 61, 50, 60, 24, 80, 68, 63, 53, 39, 43, 1, 72, 49, 67, 84, 33, 54, 82, 6, 8, 86, 34, 19, 85, 26, 11, 56, 57, 92, 27, 66, 81, 94, 75, 32, 12, 4, 36, 51, 77, 95, 38, 29, 13, 42, 40, 99, 70, 47, 28, 2, 45, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[0, 46, 90, 44, 22, 76, 61, 59, 92, 57, 60, 50, 24, 80, 67, 49, 43, 72, 68, 39, 63, 53, 1, 81, 94, 32, 12, 75, 36, 4, 77, 51, 95, 38, 84, 29, 47, 99, 70, 40, 13, 42, 2, 28, 45, 82, 33, 6, 8, 54, 26, 34, 85, 19, 11, 56, 86, 66, 27, 97, 31, 16, 14, 10, 73, 58, 20, 71, 83, 9, 78, 18, 52, 21, 65, 87, 93, 17, 98, 35, 37, 23, 89, 15, 69, 25, 64, 3, 74, 96, 55, 79, 30, 41, 88, 7, 91, 5, 48, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[0, 46, 90, 97, 22, 44, 31, 16, 14, 10, 73, 58, 20, 71, 9, 89, 48, 5, 62, 91, 7, 41, 30, 88, 79, 55, 96, 74, 18, 52, 87, 21, 93, 17, 23, 37, 98, 35, 83, 78, 15, 69, 64, 25, 65, 3, 66, 57, 80, 60, 24, 50, 86, 56, 8, 6, 19, 26, 54, 82, 45, 28, 2, 13, 47, 51, 77, 95, 38, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94, 12, 75, 32, 36, 4, 29, 99, 70, 40, 42, 33, 11, 85, 34, 76, 61, 59, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[0, 46, 90, 97, 31, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 52, 87, 15, 21, 69, 64, 25, 65, 3, 83, 17, 93, 78, 23, 37, 98, 35, 27, 92, 57, 66, 63, 53, 39, 1, 43, 72, 49, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 40, 99, 70, 47, 13, 33, 82, 54, 28, 2, 42, 45, 29, 38, 84, 67, 68, 80, 24, 60, 50, 6, 8, 56, 86, 19, 26, 11, 85, 34, 61, 59, 76, 22, 44, 14, 16, 10, 58, 73, 20, 71, 9, 89, 48, 5, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 76, 59, 61, 34, 26, 85, 8, 56, 86, 50, 60, 24, 80, 6, 11, 19, 54, 82, 33, 28, 45, 42, 2, 13, 40, 70, 99, 47, 77, 38, 49, 43, 72, 67, 68, 39, 63, 53, 1, 81, 94, 12, 75, 32, 4, 36, 51, 95, 29, 84, 57, 92, 27, 66, 88, 30, 79, 41, 91, 74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 23, 37, 98, 35, 73, 20, 58, 71, 9, 89, 48, 5, 62, 14, 16, 10, 83, 3, 64, 65, 96, 25, 55, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 76, 6, 56, 8, 86, 50, 60, 80, 24, 57, 68, 72, 39, 63, 53, 1, 43, 49, 81, 94, 12, 75, 32, 84, 67, 38, 29, 36, 4, 95, 77, 51, 47, 99, 70, 40, 42, 2, 45, 13, 28, 54, 33, 82, 11, 34, 85, 26, 19, 61, 59, 27, 92, 55, 79, 30, 41, 91, 62, 5, 48, 89, 96, 3, 25, 64, 65, 18, 74, 7, 10, 14, 16, 73, 58, 20, 83, 9, 71, 98, 35, 37, 23, 17, 78, 87, 21, 93, 69, 52, 15, 88, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 19, 26, 11, 54, 82, 33, 56, 6, 8, 86, 50, 60, 24, 57, 92, 27, 66, 91, 62, 5, 48, 89, 74, 55, 96, 3, 25, 64, 65, 18, 52, 15, 21, 93, 69, 87, 17, 78, 9, 71, 20, 73, 58, 35, 98, 37, 23, 83, 16, 14, 10, 61, 34, 59, 76, 80, 67, 84, 95, 77, 51, 99, 47, 70, 40, 13, 28, 45, 2, 42, 29, 38, 4, 36, 75, 32, 12, 94, 81, 43, 49, 72, 68, 1, 53, 39, 63, 88, 30, 41, 79, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 19, 11, 6, 8, 56, 86, 57, 50, 60, 80, 24, 67, 84, 38, 29, 51, 77, 95, 4, 36, 75, 32, 12, 94, 81, 43, 49, 72, 63, 1, 53, 39, 68, 66, 27, 92, 41, 88, 30, 79, 55, 96, 74, 18, 52, 69, 15, 93, 21, 87, 17, 23, 37, 35, 98, 71, 20, 10, 14, 16, 59, 61, 76, 82, 54, 33, 45, 2, 13, 42, 70, 40, 99, 47, 28, 5, 48, 62, 89, 9, 83, 58, 73, 78, 25, 65, 64, 3, 91, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 11, 19, 6, 8, 56, 86, 50, 60, 80, 24, 76, 59, 61, 33, 28, 45, 42, 2, 47, 77, 51, 29, 95, 4, 36, 38, 67, 84, 82, 54, 70, 40, 99, 13, 32, 75, 94, 12, 81, 49, 43, 72, 1, 53, 39, 63, 68, 57, 27, 92, 66, 41, 88, 30, 79, 55, 96, 74, 18, 52, 87, 15, 21, 93, 69, 3, 65, 25, 64, 89, 78, 17, 37, 83, 9, 98, 23, 35, 73, 16, 14, 10, 58, 20, 71, 48, 5, 62, 91, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 19, 56, 6, 8, 50, 86, 60, 80, 24, 68, 63, 39, 53, 49, 67, 72, 43, 1, 75, 32, 12, 94, 81, 38, 84, 29, 77, 4, 36, 51, 95, 47, 13, 70, 99, 40, 42, 2, 45, 28, 33, 54, 82, 11, 76, 14, 16, 10, 20, 71, 48, 5, 62, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 89, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 17, 23, 35, 83, 9, 98, 37, 73, 58, 66, 57, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 19, 11, 54, 82, 33, 28, 45, 2, 42, 47, 99, 40, 70, 13, 29, 38, 77, 95, 51, 36, 4, 12, 94, 75, 32, 81, 63, 39, 53, 1, 43, 49, 72, 84, 67, 68, 60, 80, 24, 50, 86, 56, 8, 6, 76, 57, 92, 27, 66, 41, 88, 30, 79, 7, 55, 96, 74, 5, 48, 89, 78, 52, 18, 3, 65, 64, 25, 15, 87, 69, 21, 93, 23, 37, 35, 98, 17, 83, 9, 71, 20, 73, 58, 10, 16, 14, 62, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 8, 6, 56, 19, 11, 82, 54, 33, 81, 94, 12, 32, 75, 36, 4, 95, 77, 51, 47, 99, 70, 40, 2, 13, 45, 42, 28, 29, 38, 84, 67, 49, 63, 39, 53, 1, 43, 72, 80, 24, 57, 60, 50, 86, 68, 66, 92, 27, 5, 62, 89, 78, 52, 18, 96, 74, 55, 79, 30, 88, 41, 7, 91, 48, 73, 58, 10, 16, 14, 20, 71, 35, 98, 9, 83, 17, 37, 23, 93, 15, 87, 21, 69, 25, 3, 65, 64, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 8, 11, 19, 56, 6, 82, 54, 33, 45, 28, 13, 42, 2, 70, 40, 99, 47, 51, 77, 4, 36, 95, 29, 84, 38, 32, 12, 75, 94, 81, 49, 72, 39, 63, 53, 1, 43, 67, 50, 60, 80, 24, 68, 66, 27, 92, 57, 62, 5, 48, 89, 9, 20, 73, 58, 14, 16, 10, 71, 83, 35, 98, 37, 23, 17, 93, 87, 15, 78, 52, 18, 74, 21, 69, 65, 25, 64, 3, 96, 55, 41, 79, 88, 30, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 66, 27, 92, 57, 56, 8, 11, 19, 6, 54, 82, 33, 45, 42, 2, 70, 40, 99, 47, 51, 95, 77, 4, 36, 94, 75, 12, 32, 81, 72, 49, 43, 1, 53, 39, 63, 68, 80, 24, 67, 84, 38, 29, 13, 28, 88, 30, 79, 55, 41, 7, 91, 74, 18, 96, 3, 25, 64, 65, 69, 15, 21, 93, 87, 52, 78, 17, 23, 37, 98, 35, 83, 9, 89, 48, 5, 62, 10, 14, 16, 20, 71, 73, 58, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 6, 8, 56, 19, 11, 33, 54, 82, 45, 42, 2, 13, 70, 40, 99, 47, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 28, 84, 67, 68, 72, 49, 43, 1, 53, 39, 63, 57, 66, 27, 92, 7, 91, 55, 74, 18, 96, 3, 64, 65, 69, 15, 87, 21, 93, 17, 78, 52, 48, 62, 5, 9, 83, 37, 35, 98, 23, 89, 79, 30, 41, 88, 25, 71, 73, 58, 20, 16, 14, 10, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 68, 72, 43, 1, 53, 39, 63, 49, 66, 92, 27, 57, 56, 8, 6, 82, 54, 33, 28, 42, 45, 13, 99, 40, 70, 47, 2, 67, 84, 38, 4, 36, 32, 75, 12, 94, 81, 29, 51, 95, 77, 11, 19, 20, 71, 10, 14, 16, 58, 73, 35, 98, 37, 23, 17, 78, 52, 18, 96, 74, 55, 7, 91, 5, 48, 62, 89, 9, 83, 87, 15, 21, 93, 69, 25, 65, 64, 3, 79, 30, 88, 41, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 57, 88, 41, 79, 30, 55, 96, 74, 91, 7, 62, 48, 5, 89, 83, 9, 73, 58, 71, 20, 10, 14, 16, 35, 98, 23, 17, 78, 18, 3, 25, 64, 65, 69, 52, 21, 15, 93, 87, 37, 19, 6, 8, 56, 11, 82, 54, 33, 2, 42, 45, 28, 13, 99, 40, 70, 47, 77, 38, 51, 95, 4, 36, 32, 75, 12, 94, 81, 67, 84, 29, 49, 72, 43, 1, 53, 39, 68, 63, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 19, 11, 56, 54, 82, 33, 45, 28, 42, 2, 70, 40, 99, 13, 47, 29, 38, 77, 51, 95, 4, 36, 32, 75, 12, 94, 81, 49, 43, 1, 63, 39, 53, 84, 72, 68, 67, 57, 27, 92, 66, 88, 41, 30, 79, 7, 91, 74, 55, 96, 18, 3, 25, 64, 65, 69, 52, 21, 15, 87, 93, 17, 78, 83, 9, 73, 58, 71, 20, 10, 14, 16, 98, 23, 37, 35, 89, 48, 5, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 11, 19, 82, 54, 33, 28, 47, 13, 40, 70, 99, 45, 2, 42, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 49, 43, 1, 63, 39, 53, 68, 72, 67, 84, 38, 57, 92, 27, 66, 88, 41, 55, 30, 79, 7, 91, 74, 96, 5, 83, 9, 71, 58, 73, 14, 16, 10, 20, 98, 35, 23, 37, 17, 93, 15, 87, 21, 69, 25, 65, 64, 3, 52, 18, 78, 89, 48, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 11, 19, 54, 82, 33, 28, 45, 2, 42, 13, 40, 70, 99, 47, 67, 84, 38, 29, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 1, 43, 72, 49, 68, 39, 53, 63, 27, 66, 57, 92, 16, 10, 14, 73, 20, 35, 98, 37, 23, 17, 18, 74, 52, 89, 9, 71, 58, 83, 78, 87, 93, 21, 15, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 62, 48, 5, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 33, 82, 54, 42, 2, 45, 28, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 32, 75, 12, 81, 94, 1, 43, 49, 84, 67, 72, 39, 53, 63, 68, 66, 57, 92, 27, 88, 41, 79, 30, 55, 7, 91, 62, 71, 73, 58, 20, 10, 16, 14, 78, 17, 23, 37, 9, 83, 35, 98, 15, 87, 52, 93, 21, 69, 25, 3, 65, 64, 74, 96, 18, 89, 5, 48, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 45, 28, 2, 42, 70, 40, 47, 99, 13, 29, 38, 77, 95, 51, 4, 36, 75, 32, 12, 81, 94, 1, 43, 49, 72, 67, 84, 68, 63, 39, 53, 88, 41, 55, 79, 30, 18, 52, 93, 21, 15, 87, 69, 65, 64, 25, 96, 3, 78, 17, 23, 37, 35, 98, 62, 71, 10, 16, 14, 73, 20, 58, 83, 9, 89, 74, 48, 5, 91, 7, 27, 92, 57, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 70, 40, 99, 13, 28, 45, 2, 29, 38, 36, 4, 47, 77, 51, 95, 84, 67, 53, 39, 63, 43, 49, 72, 1, 81, 94, 12, 32, 75, 68, 66, 57, 7, 55, 79, 96, 25, 21, 93, 52, 18, 3, 64, 65, 69, 15, 87, 78, 17, 23, 98, 37, 35, 89, 62, 5, 48, 83, 20, 73, 58, 16, 14, 10, 71, 9, 74, 91, 88, 41, 30, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 28, 2, 45, 42, 13, 99, 40, 70, 47, 29, 51, 77, 95, 38, 4, 36, 12, 75, 32, 94, 81, 1, 43, 49, 72, 84, 67, 39, 53, 63, 68, 57, 92, 27, 66, 41, 88, 91, 5, 48, 89, 9, 83, 71, 20, 73, 58, 14, 16, 10, 35, 98, 37, 23, 17, 87, 15, 21, 69, 78, 52, 93, 62, 18, 3, 64, 65, 25, 74, 96, 30, 79, 55, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 28, 45, 2, 42, 13, 40, 70, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 49, 72, 84, 67, 68, 43, 63, 1, 39, 53, 55, 96, 74, 5, 62, 48, 18, 89, 9, 83, 71, 20, 73, 58, 14, 16, 10, 35, 98, 37, 23, 17, 87, 15, 93, 52, 78, 69, 21, 64, 65, 25, 3, 88, 79, 30, 41, 7, 91, 27, 92, 57, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 40, 70, 99, 47, 29, 95, 77, 51, 38, 4, 36, 32, 12, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 67, 84, 68, 92, 27, 57, 66, 91, 18, 52, 87, 93, 21, 15, 69, 25, 65, 64, 3, 74, 96, 55, 30, 79, 41, 88, 7, 23, 37, 35, 98, 9, 58, 73, 20, 16, 14, 10, 71, 83, 17, 78, 89, 48, 5, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 40, 99, 47, 51, 77, 95, 36, 4, 29, 38, 81, 12, 75, 32, 94, 63, 39, 53, 1, 43, 49, 68, 72, 67, 84, 66, 7, 79, 30, 41, 88, 55, 96, 3, 64, 65, 25, 69, 21, 52, 18, 74, 91, 62, 5, 48, 89, 83, 9, 37, 23, 17, 78, 87, 15, 93, 98, 35, 71, 73, 58, 20, 10, 14, 16, 57, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 47, 40, 70, 99, 51, 77, 32, 75, 12, 36, 4, 95, 38, 29, 84, 67, 49, 94, 81, 72, 43, 1, 53, 39, 63, 68, 66, 57, 92, 27, 91, 5, 62, 89, 9, 73, 58, 20, 71, 83, 37, 23, 35, 98, 93, 69, 21, 87, 15, 52, 78, 17, 48, 18, 74, 96, 55, 7, 41, 88, 30, 79, 3, 65, 64, 25, 10, 14, 16, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 99, 70, 40, 47, 95, 29, 38, 84, 67, 77, 51, 4, 36, 12, 32, 75, 94, 81, 1, 53, 39, 63, 43, 72, 49, 68, 57, 27, 92, 66, 5, 48, 74, 96, 55, 7, 41, 79, 30, 88, 91, 52, 15, 21, 69, 93, 87, 18, 3, 64, 65, 25, 17, 78, 37, 23, 35, 98, 83, 9, 71, 73, 58, 20, 14, 16, 10, 89, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 47, 99, 70, 40, 51, 95, 77, 29, 84, 67, 43, 49, 68, 57, 27, 92, 66, 72, 63, 53, 39, 1, 81, 94, 75, 32, 12, 36, 4, 38, 62, 89, 48, 5, 91, 7, 79, 30, 41, 88, 55, 96, 18, 74, 65, 64, 3, 25, 69, 93, 21, 15, 78, 52, 87, 17, 23, 37, 98, 35, 83, 9, 58, 73, 20, 71, 14, 16, 10, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 49, 67, 84, 29, 38, 43, 63, 39, 53, 1, 72, 68, 66, 27, 92, 57, 41, 88, 79, 30, 55, 96, 3, 18, 48, 62, 5, 89, 78, 52, 69, 15, 21, 87, 93, 17, 35, 83, 9, 71, 73, 58, 20, 16, 14, 10, 23, 98, 37, 64, 25, 65, 74, 91, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 40, 47, 36, 32, 75, 12, 94, 81, 95, 77, 51, 4, 38, 29, 49, 72, 67, 84, 68, 1, 43, 63, 53, 39, 57, 27, 92, 66, 41, 88, 30, 79, 96, 25, 64, 65, 3, 69, 15, 93, 21, 87, 78, 17, 37, 23, 98, 35, 83, 9, 20, 73, 58, 14, 16, 10, 71, 62, 48, 5, 89, 52, 18, 74, 55, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 51, 77, 95, 29, 38, 4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 43, 72, 68, 1, 39, 53, 63, 79, 30, 88, 55, 41, 7, 91, 74, 96, 3, 65, 25, 64, 78, 89, 18, 52, 69, 21, 93, 15, 87, 17, 98, 35, 23, 37, 83, 9, 71, 73, 58, 20, 16, 14, 10, 62, 5, 48, 27, 92, 57, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 84, 67, 68, 72, 49, 43, 39, 53, 63, 1, 81, 94, 75, 12, 32, 77, 51, 95, 4, 36, 38, 29, 27, 92, 66, 57, 41, 30, 79, 55, 96, 3, 65, 64, 25, 69, 21, 15, 87, 93, 78, 52, 18, 74, 7, 91, 62, 5, 48, 89, 9, 83, 17, 37, 23, 98, 35, 71, 20, 73, 58, 10, 16, 14, 88, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 29, 38, 36, 4, 12, 32, 75, 94, 81, 1, 43, 63, 53, 39, 68, 84, 67, 49, 72, 27, 92, 66, 57, 10, 14, 16, 58, 73, 20, 71, 9, 83, 23, 98, 35, 37, 17, 87, 21, 93, 69, 15, 52, 78, 89, 5, 62, 48, 74, 96, 3, 65, 25, 64, 18, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 36, 4, 32, 94, 12, 75, 81, 1, 63, 53, 39, 43, 72, 49, 67, 84, 38, 29, 68, 27, 57, 66, 92, 74, 5, 48, 91, 7, 41, 88, 30, 79, 96, 55, 3, 64, 65, 25, 69, 21, 93, 15, 87, 78, 18, 52, 89, 83, 17, 23, 37, 35, 98, 20, 73, 58, 10, 14, 16, 71, 9, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 4, 29, 38, 36, 32, 75, 12, 94, 81, 1, 43, 49, 67, 84, 72, 68, 53, 39, 63, 66, 92, 27, 57, 41, 88, 30, 79, 55, 3, 64, 65, 25, 7, 91, 48, 5, 74, 89, 52, 78, 18, 96, 69, 21, 93, 15, 87, 17, 23, 37, 35, 9, 83, 71, 20, 73, 58, 10, 14, 16, 98, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 4, 36, 75, 32, 12, 94, 81, 49, 72, 67, 84, 63, 39, 53, 1, 43, 68, 66, 92, 57, 27, 79, 30, 88, 55, 41, 74, 89, 52, 78, 17, 15, 87, 21, 93, 64, 65, 25, 69, 98, 23, 37, 83, 9, 48, 5, 62, 10, 14, 16, 73, 58, 71, 20, 35, 18, 96, 3, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 84, 67, 72, 68, 49, 43, 1, 63, 39, 53, 81, 94, 32, 75, 12, 36, 4, 92, 27, 66, 30, 79, 88, 41, 96, 55, 91, 48, 5, 62, 73, 20, 58, 71, 9, 83, 35, 98, 78, 52, 89, 74, 18, 3, 64, 65, 25, 69, 21, 15, 87, 17, 23, 37, 93, 7, 57, 10, 16, 14, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 75, 32, 81, 94, 1, 43, 49, 72, 84, 67, 68, 63, 39, 53, 66, 10, 16, 14, 20, 73, 58, 71, 83, 23, 35, 98, 37, 17, 78, 87, 15, 21, 69, 93, 52, 18, 3, 25, 65, 64, 55, 96, 74, 5, 48, 89, 9, 62, 27, 92, 57, 7, 41, 30, 79, 88, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 75, 12, 32, 94, 81, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 79, 30, 88, 41, 55, 96, 74, 48, 5, 89, 9, 83, 35, 98, 20, 10, 16, 14, 58, 73, 71, 62, 18, 3, 65, 25, 64, 69, 93, 21, 15, 87, 52, 78, 17, 23, 37, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 75, 32, 94, 81, 49, 72, 67, 84, 43, 1, 53, 63, 39, 68, 57, 91, 7, 41, 88, 66, 27, 92, 30, 79, 55, 96, 74, 18, 3, 64, 65, 25, 78, 17, 87, 52, 69, 15, 21, 93, 35, 98, 37, 23, 83, 9, 71, 20, 73, 58, 16, 14, 10, 62, 89, 5, 48, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 84, 67, 49, 43, 1, 53, 39, 63, 72, 68, 57, 66, 27, 92, 7, 91, 41, 88, 30, 79, 96, 55, 74, 48, 5, 62, 16, 14, 10, 73, 58, 20, 71, 9, 83, 23, 37, 98, 35, 17, 93, 21, 15, 87, 69, 65, 25, 64, 3, 18, 52, 78, 89, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 81, 94, 49, 43, 1, 53, 39, 63, 72, 84, 67, 68, 92, 27, 57, 66, 7, 41, 88, 79, 30, 55, 96, 74, 48, 5, 83, 9, 89, 78, 15, 87, 69, 65, 25, 64, 3, 18, 52, 93, 21, 37, 23, 17, 98, 35, 71, 58, 20, 73, 10, 16, 14, 91, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 1, 53, 39, 63, 72, 49, 43, 68, 84, 67, 57, 92, 27, 66, 62, 91, 48, 5, 89, 74, 96, 18, 78, 17, 98, 35, 71, 73, 20, 58, 10, 16, 14, 9, 83, 23, 37, 15, 87, 52, 21, 69, 93, 3, 64, 65, 25, 55, 88, 30, 79, 41, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 1, 39, 53, 63, 68, 57, 66, 27, 92, 5, 48, 74, 55, 30, 79, 88, 41, 7, 62, 89, 83, 9, 17, 23, 37, 98, 35, 73, 20, 71, 10, 14, 16, 58, 78, 52, 87, 15, 21, 69, 93, 65, 64, 3, 25, 96, 18, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 43, 1, 49, 72, 63, 53, 39, 68, 92, 27, 57, 66, 62, 91, 5, 48, 89, 78, 23, 37, 98, 71, 35, 58, 73, 20, 10, 14, 16, 9, 83, 17, 93, 21, 15, 87, 52, 18, 65, 64, 3, 25, 69, 74, 55, 96, 30, 79, 88, 41, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 72, 43, 49, 1, 39, 53, 63, 68, 27, 92, 66, 57, 41, 79, 30, 88, 62, 5, 48, 71, 20, 73, 58, 16, 14, 10, 78, 87, 93, 15, 21, 69, 98, 35, 37, 23, 83, 9, 89, 17, 52, 64, 65, 25, 3, 18, 96, 74, 55, 91, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 39, 53, 1, 49, 72, 43, 66, 92, 27, 57, 88, 41, 79, 30, 55, 96, 74, 18, 69, 21, 15, 87, 93, 78, 23, 37, 98, 35, 58, 73, 10, 16, 14, 20, 71, 9, 83, 89, 5, 48, 62, 91, 7, 3, 65, 64, 25, 52, 17, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 39, 53, 1, 43, 49, 72, 66, 92, 27, 57, 10, 16, 14, 71, 58, 20, 73, 35, 98, 37, 23, 17, 93, 69, 21, 87, 15, 18, 3, 25, 64, 65, 52, 78, 89, 9, 83, 5, 48, 91, 7, 41, 88, 79, 30, 55, 96, 74, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 1, 53, 39, 66, 92, 27, 57, 62, 48, 5, 74, 18, 87, 93, 21, 15, 69, 52, 78, 17, 23, 37, 98, 35, 71, 73, 58, 20, 10, 16, 14, 91, 7, 88, 79, 30, 41, 55, 96, 65, 25, 64, 3, 9, 83, 89, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 1, 39, 53, 57, 27, 92, 66, 5, 48, 18, 65, 69, 52, 87, 15, 21, 93, 17, 37, 98, 23, 35, 58, 73, 20, 14, 16, 10, 83, 89, 91, 7, 88, 79, 30, 41, 55, 96, 74, 64, 3, 25, 78, 9, 71, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 1, 39, 53, 88, 41, 30, 79, 55, 96, 3, 64, 65, 25, 69, 87, 21, 15, 93, 17, 23, 37, 98, 35, 58, 73, 20, 14, 16, 10, 83, 9, 71, 62, 5, 48, 89, 78, 52, 18, 74, 7, 91, 27, 92, 57, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 1, 53, 66, 57, 92, 27, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 18, 74, 5, 62, 9, 83, 35, 37, 23, 98, 17, 78, 52, 87, 93, 21, 15, 69, 89, 73, 20, 10, 16, 14, 58, 71, 48, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 57, 66, 27, 92, 7, 91, 74, 41, 88, 30, 79, 55, 96, 64, 25, 65, 3, 18, 52, 93, 21, 15, 69, 87, 78, 17, 23, 35, 98, 37, 83, 71, 58, 10, 14, 16, 20, 73, 9, 89, 5, 48, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 57, 66, 27, 92, 48, 62, 5, 89, 74, 18, 52, 21, 93, 15, 87, 78, 17, 23, 37, 9, 83, 71, 20, 73, 58, 10, 14, 16, 35, 98, 69, 65, 3, 64, 25, 96, 55, 30, 79, 88, 41, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 7, 91, 62, 5, 48, 89, 78, 15, 93, 21, 69, 87, 65, 25, 64, 3, 96, 55, 79, 30, 41, 66, 57, 27, 92, 16, 14, 10, 58, 20, 73, 71, 9, 83, 35, 23, 37, 98, 17, 52, 18, 74, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 41, 7, 91, 5, 89, 52, 87, 15, 21, 93, 17, 23, 37, 98, 35, 83, 9, 71, 10, 14, 16, 58, 73, 20, 92, 57, 27, 66, 74, 96, 55, 78, 69, 25, 64, 65, 3, 18, 48, 62, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 41, 55, 18, 52, 78, 93, 15, 21, 87, 69, 17, 98, 35, 37, 23, 9, 83, 71, 20, 73, 58, 16, 14, 10, 27, 92, 57, 66, 96, 74, 65, 25, 64, 3, 89, 48, 5, 62, 91, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 74, 96, 18, 52, 87, 17, 23, 83, 71, 20, 73, 58, 14, 16, 10, 89, 62, 5, 48, 91, 7, 66, 92, 27, 57, 3, 65, 64, 25, 93, 69, 21, 15, 78, 37, 98, 35, 9, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 27, 92, 66, 57, 62, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 3, 65, 64, 25, 74, 96, 52, 93, 87, 15, 21, 69, 18, 89, 48, 5, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 62, 5, 89, 48, 74, 18, 3, 96, 64, 25, 65, 69, 15, 93, 21, 52, 78, 87, 17, 23, 37, 35, 98, 9, 83, 71, 20, 73, 58, 16, 14, 10, 92, 27, 57, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 62, 5, 48, 74, 96, 18, 3, 64, 25, 65, 69, 87, 93, 21, 15, 52, 78, 17, 23, 37, 35, 71, 89, 98, 83, 9, 20, 58, 73, 16, 14, 10, 92, 66, 57, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 17, 9, 35, 58, 10, 16, 14, 73, 20, 71, 83, 98, 37, 23, 78, 52, 87, 15, 93, 21, 69, 25, 64, 65, 3, 96, 74, 18, 62, 66, 57, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 20, 16, 14, 10, 73, 58, 71, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 3, 96, 74, 18, 78, 52, 65, 64, 25, 62, 66, 92, 57, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 62, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 69, 25, 3, 65, 64, 96, 74, 18, 87, 15, 93, 21, 92, 27, 57, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 93, 21, 15, 69, 52, 18, 3, 25, 65, 64, 96, 74, 62, 92, 27, 66, 57, 16, 14, 10, 58, 73, 71, 20, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 93, 87, 21, 15, 69, 65, 64, 25, 3, 18, 78, 52, 96, 74, 62, 71, 20, 73, 58, 16, 14, 10, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 18, 74, 96, 3, 25, 64, 65, 52, 15, 93, 69, 21, 87, 78, 17, 37, 23, 98, 35, 71, 20, 73, 58, 14, 16, 10, 27, 92, 57, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 65, 25, 64, 3, 69, 15, 21, 93, 87, 52, 78, 17, 37, 23, 98, 35, 73, 20, 58, 16, 14, 10, 92, 27, 57, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 64, 65, 25, 3, 96, 74, 78, 52, 93, 69, 21, 15, 87, 17, 23, 37, 98, 35, 20, 73, 58, 10, 14, 16, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 64, 3, 65, 25, 69, 87, 15, 21, 93, 52, 78, 17, 23, 98, 35, 37, 20, 73, 58, 10, 14, 16, 66, 57, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 64, 25, 3, 65, 69, 15, 21, 93, 87, 52, 78, 17, 23, 98, 37, 35, 20, 73, 58, 10, 16, 14, 27, 92, 57, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 64, 3, 65, 69, 52, 87, 15, 21, 93, 17, 78, 37, 23, 98, 35, 58, 73, 20, 14, 16, 10, 92, 27, 66, 57, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 69, 21, 15, 87, 93, 17, 23, 37, 35, 20, 73, 58, 14, 16, 10, 98, 78, 52, 27, 92, 57, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 87, 15, 78, 93, 17, 37, 23, 98, 35, 20, 73, 58, 14, 16, 10, 57, 66, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 69, 87, 15, 21, 93, 78, 52, 17, 35, 37, 23, 98, 20, 58, 73, 16, 14, 10, 66, 57, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 93, 21, 15, 87, 78, 17, 23, 35, 98, 37, 20, 73, 58, 16, 14, 10, 92, 27, 57, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 15, 21, 87, 93, 78, 17, 23, 37, 35, 98, 73, 20, 58, 14, 16, 10, 66, 57, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 93, 87, 15, 78, 17, 23, 37, 98, 35, 20, 73, 58, 14, 16, 10, 57, 27, 66, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 23, 98, 35, 37, 58, 20, 73, 14, 16, 10, 27, 92, 57, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 23, 37, 35, 98, 73, 20, 58, 16, 14, 10, 27, 92, 57, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 23, 37, 35, 98, 10, 16, 14, 73, 58, 20, 57, 27, 92, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 23, 37, 98, 35, 20, 73, 58, 10, 14, 16, 92, 27, 57, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 35, 98, 73, 58, 20, 10, 16, 14, 66, 57, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 20, 73, 58, 10, 16, 14, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 35, 98, 58, 73, 20, 16, 14, 10, 66, 57, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 14, 16, 20, 73, 58, 10, 57, 92, 27, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 58, 73, 20, 14, 16, 10, 27, 92, 66, 57, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 20, 58, 73, 10, 16, 14, 57, 66, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 20, 73, 58, 16, 14, 10, 57, 66, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 20, 73, 58, 16, 14, 10, 57, 66, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 20, 73, 58, 14, 16, 10, 92, 27, 57, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 20, 73, 58, 14, 16, 10, 92, 27, 57, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 20, 73, 58, 14, 16, 10, 92, 27, 66, 57, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 20, 73, 58, 14, 16, 10, 92, 27, 57, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 20, 73, 58, 14, 16, 10, 92, 27, 57, 66, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 20, 73, 58, 14, 16, 10, 92, 27, 66, 57, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 20, 73, 58, 14, 16, 10, 92, 27, 66, 57, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 20, 73, 58, 14, 16, 10, 92, 27, 66, 57, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[0, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[0, 46, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 20, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 20, 73, 58, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 20, 73, 58, 14, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 20, 73, 58, 14, 16, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 20, 73, 58, 14, 16, 10, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 20, 73, 58, 14, 16, 10, 92, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 20, 73, 58, 14, 16, 10, 92, 27, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 20, 73, 58, 14, 16, 10, 92, 27, 66, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 20, 73, 58, 14, 16, 10, 92, 27, 66, 57, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[0, 46, 90, 97, 31, 44, 22, 85, 26, 34, 61, 59, 76, 86, 50, 60, 24, 80, 8, 6, 56, 19, 11, 82, 54, 33, 42, 2, 45, 28, 13, 70, 99, 47, 40, 95, 51, 77, 38, 29, 36, 4, 12, 32, 75, 94, 81, 67, 84, 68, 63, 49, 72, 43, 39, 53, 1, 88, 30, 79, 55, 41, 7, 91, 5, 48, 89, 9, 83, 62, 71, 18, 74, 96, 25, 65, 3, 64, 52, 69, 21, 15, 87, 93, 78, 17, 37, 23, 98, 35, 20, 73, 58, 14, 16, 10, 92, 27, 66, 57, 0]");

        assertThat(mmas_us_madtsp.getGlobalStatistics().getTimeStatistics().get("MMAS Execution")).isLessThan(10000);
        assertThat(mmas_us_madtsp.getGlobalStatistics().getTimeStatistics().get("MMAS Initialization")).isLessThan(150);
    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA100_with_seed_1_mag_0_75_freq_100() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_US_MADTSP mmas_us_madtsp = new MMAS_US_MADTSP(graph, 0.8, 1000, 0.75, 100);
        mmas_us_madtsp.setMmasSeed(1);
        mmas_us_madtsp.setDbgpSeed(1);
        mmas_us_madtsp.setStatisticInterval(1);
        mmas_us_madtsp.setShowLog(false);
        mmas_us_madtsp.run();
        assertThat(mmas_us_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(33284.911121445904);
        assertThat(mmas_us_madtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(33284.911121445904);
        assertThat(getTourString(mmas_us_madtsp)).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 52, 87, 15, 21, 93, 69, 3, 65, 25, 64, 0]");

        checkValues(mmas_us_madtsp, 1, 46564.42118143889, 4349.664088172347, 0.0, 57.111836734693874, 32499.423638867313);
        checkValues(mmas_us_madtsp, 50, 37619.67723063652, 2257.6047459213773, 0.0, 11.94204081632653, 32499.423638867313);
        checkValues(mmas_us_madtsp, 100, 35794.19605471539, 3141.8778275339996, 0.5, 11.463673469387755, 31866.214906619967);
        checkValues(mmas_us_madtsp, 101, 41439.61356565841, 2815.3659080730945, 0.485, 34.19265306122449, 32194.785820580295);
        checkValues(mmas_us_madtsp, 150, 33339.433005712875, 3305.7400357279253, 0.5, 8.528979591836734, 29967.089662289483);
        checkValues(mmas_us_madtsp, 200, 33702.06412323582, 2990.1149277896347, 0.5, 9.817142857142857, 29551.752869126813);
        checkValues(mmas_us_madtsp, 201, 42104.42092795687, 2847.1225432456326, 0.49, 24.536326530612246, 35057.09537442007);
        checkValues(mmas_us_madtsp, 250, 34122.88489351615, 2423.187743969788, 0.54, 7.915918367346939, 31193.61996252596);
        checkValues(mmas_us_madtsp, 300, 34474.751119972425, 2838.0027134807333, 0.5, 11.24326530612245, 31193.61996252596);
        checkValues(mmas_us_madtsp, 301, 43700.85649939773, 3173.8490138317056, 0.47, 30.32081632653061, 34038.36741096135);
        checkValues(mmas_us_madtsp, 350, 33517.66964859611, 2862.519475506695, 0.57, 2.1510204081632653, 31967.073237292);
        checkValues(mmas_us_madtsp, 400, 32059.751956690747, 528.1737044694288, 0.5, 0.47836734693877553, 31967.073237292);
        checkValues(mmas_us_madtsp, 401, 38852.21883319432, 1920.7726561252853, 0.495, 19.528979591836734, 32227.807072401352);
        checkValues(mmas_us_madtsp, 450, 33082.74655262526, 2592.733248483353, 0.575, 5.322448979591837, 30888.41183829493);
        checkValues(mmas_us_madtsp, 500, 33469.399570667774, 3356.912944718237, 0.5, 4.8342857142857145, 30888.41183829493);
        checkValues(mmas_us_madtsp, 501, 40576.53361495664, 3069.18474875454, 0.485, 15.291428571428572, 31376.747399202377);
        checkValues(mmas_us_madtsp, 550, 33288.45886071786, 2741.2358567291108, 0.5, 3.893061224489796, 30742.568668042273);
        checkValues(mmas_us_madtsp, 600, 32806.342620193805, 2483.6853778086033, 0.5, 3.3722448979591837, 30742.568668042273);
        checkValues(mmas_us_madtsp, 601, 39621.336680618624, 3085.3044189810716, 0.495, 9.867755102040816, 32776.7764722777);
        checkValues(mmas_us_madtsp, 650, 32850.93914045385, 1633.8482069520007, 0.65, 2.0073469387755103, 32183.09527988457);
        checkValues(mmas_us_madtsp, 700, 32842.01966653815, 1107.913508965737, 0.5, 2.537959183673469, 32183.09527988457);
        checkValues(mmas_us_madtsp, 701, 36378.3186570509, 1198.215303161538, 0.485, 10.73795918367347, 32953.33362489886);
        checkValues(mmas_us_madtsp, 750, 32579.92117161891, 941.3770052541644, 0.5, 2.1297959183673467, 32132.096743757404);
        checkValues(mmas_us_madtsp, 800, 32501.494335659852, 949.2415310128708, 0.5, 1.6424489795918367, 32132.096743757404);
        checkValues(mmas_us_madtsp, 801, 34570.59953976338, 1017.0669069502701, 0.485, 9.43673469387755, 32565.922245478017);
        checkValues(mmas_us_madtsp, 850, 33388.24904345235, 844.6832297494147, 0.485, 2.555918367346939, 32565.922245478017);
        checkValues(mmas_us_madtsp, 900, 33255.816004635366, 842.6853457030251, 0.5, 1.6644897959183673, 32565.922245478017);
        checkValues(mmas_us_madtsp, 901, 36701.11130830302, 797.410958545349, 0.485, 5.186938775510204, 33284.911121445904);
        checkValues(mmas_us_madtsp, 950, 35157.183439267974, 1179.4206998923103, 0.485, 0.8228571428571428, 33284.911121445904);
        checkValues(mmas_us_madtsp, 1000, 33284.911121445926, 2.204948129406426E-11, 0.49, 0.0, 33284.911121445904);
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 71, 20, 58, 73, 10, 16, 14, 90, 97, 22, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 81, 94, 12, 75, 32, 4, 36, 38, 51, 77, 95, 29, 13, 47, 99, 70, 40, 42, 2, 28, 45, 54, 82, 33, 6, 11, 26, 85, 34, 19, 56, 8, 86, 57, 92, 27, 66, 46, 44, 31, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 96, 74, 91, 41, 30, 79, 88, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 71, 20, 58, 73, 10, 16, 14, 90, 97, 22, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 81, 94, 12, 75, 32, 4, 36, 38, 51, 77, 95, 29, 13, 47, 99, 70, 40, 42, 2, 28, 45, 54, 82, 33, 6, 11, 26, 85, 34, 19, 56, 8, 86, 57, 92, 27, 66, 46, 44, 31, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 96, 74, 91, 41, 30, 79, 88, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 71, 20, 58, 73, 10, 16, 14, 90, 97, 22, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 81, 94, 12, 75, 32, 4, 36, 38, 51, 77, 95, 29, 13, 47, 99, 70, 40, 42, 2, 28, 45, 54, 82, 33, 6, 11, 26, 85, 34, 19, 56, 8, 86, 57, 92, 27, 66, 46, 44, 31, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 96, 74, 91, 41, 30, 79, 88, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 71, 20, 58, 73, 10, 16, 14, 90, 97, 22, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 81, 94, 12, 75, 32, 4, 36, 38, 51, 77, 95, 29, 13, 47, 99, 70, 40, 42, 2, 28, 45, 54, 82, 33, 6, 11, 26, 85, 34, 19, 56, 8, 86, 57, 92, 27, 66, 46, 44, 31, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 96, 74, 91, 41, 30, 79, 88, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 71, 20, 58, 73, 10, 16, 14, 90, 97, 22, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 81, 94, 12, 75, 32, 4, 36, 38, 51, 77, 95, 29, 13, 47, 99, 70, 40, 42, 2, 28, 45, 54, 82, 33, 6, 11, 26, 85, 34, 19, 56, 8, 86, 57, 92, 27, 66, 46, 44, 31, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 96, 74, 91, 41, 30, 79, 88, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 71, 20, 58, 73, 10, 16, 14, 90, 97, 22, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 81, 94, 12, 75, 32, 4, 36, 38, 51, 77, 95, 29, 13, 47, 99, 70, 40, 42, 2, 28, 45, 54, 82, 33, 6, 11, 26, 85, 34, 19, 56, 8, 86, 57, 92, 27, 66, 46, 44, 31, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 96, 74, 91, 41, 30, 79, 88, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 71, 20, 58, 73, 10, 16, 14, 90, 97, 22, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 81, 94, 12, 75, 32, 4, 36, 38, 51, 77, 95, 29, 13, 47, 99, 70, 40, 42, 2, 28, 45, 54, 82, 33, 6, 11, 26, 85, 34, 19, 56, 8, 86, 57, 92, 27, 66, 46, 44, 31, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 96, 74, 91, 41, 30, 79, 88, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 71, 20, 58, 73, 10, 16, 14, 90, 97, 22, 59, 61, 76, 50, 60, 24, 80, 84, 67, 72, 49, 1, 63, 39, 53, 68, 43, 81, 94, 75, 32, 12, 36, 4, 38, 51, 77, 95, 29, 13, 47, 99, 70, 40, 42, 2, 45, 28, 33, 82, 54, 11, 26, 85, 34, 19, 56, 6, 8, 86, 57, 92, 27, 66, 46, 31, 44, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 96, 74, 91, 41, 30, 79, 88, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 71, 20, 58, 73, 10, 16, 14, 90, 97, 22, 59, 61, 76, 50, 60, 24, 80, 84, 67, 72, 49, 1, 63, 39, 53, 68, 43, 81, 94, 75, 32, 12, 36, 4, 38, 51, 77, 95, 29, 13, 47, 99, 70, 40, 42, 2, 45, 28, 33, 82, 54, 11, 26, 85, 34, 19, 56, 6, 8, 86, 57, 92, 27, 66, 46, 31, 44, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 96, 74, 91, 41, 30, 79, 88, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 71, 20, 58, 73, 10, 16, 14, 90, 97, 22, 59, 61, 76, 50, 60, 24, 80, 84, 67, 72, 49, 1, 63, 39, 53, 68, 43, 81, 94, 75, 32, 12, 36, 4, 38, 51, 77, 95, 29, 13, 47, 99, 70, 40, 42, 2, 45, 28, 33, 82, 54, 11, 26, 85, 34, 19, 56, 6, 8, 86, 57, 92, 27, 66, 46, 31, 44, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 96, 74, 91, 41, 30, 79, 88, 7, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 61, 59, 76, 57, 60, 24, 80, 68, 63, 53, 39, 43, 1, 81, 94, 75, 32, 12, 4, 36, 51, 77, 95, 47, 38, 29, 13, 99, 70, 40, 28, 42, 2, 45, 54, 82, 33, 11, 85, 26, 34, 19, 8, 6, 56, 50, 86, 72, 49, 67, 84, 66, 46, 73, 20, 71, 83, 9, 21, 93, 87, 15, 52, 69, 25, 65, 3, 64, 96, 74, 91, 7, 55, 79, 88, 30, 41, 27, 92, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 61, 59, 76, 57, 60, 24, 80, 68, 63, 53, 39, 43, 49, 1, 81, 94, 75, 32, 12, 4, 36, 51, 77, 95, 38, 29, 13, 99, 70, 40, 47, 28, 42, 2, 45, 54, 82, 33, 11, 85, 26, 34, 19, 8, 6, 56, 50, 86, 84, 67, 72, 66, 27, 92, 46, 73, 20, 71, 83, 9, 21, 87, 15, 52, 93, 69, 25, 64, 65, 3, 74, 96, 55, 79, 88, 30, 41, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 61, 59, 76, 57, 60, 24, 80, 68, 63, 53, 39, 43, 49, 1, 81, 94, 75, 32, 12, 4, 36, 51, 77, 95, 38, 29, 13, 99, 70, 40, 47, 28, 42, 2, 45, 54, 82, 33, 11, 85, 26, 34, 19, 50, 86, 8, 6, 56, 84, 67, 72, 66, 27, 92, 46, 73, 20, 71, 83, 9, 21, 87, 15, 52, 93, 69, 25, 64, 65, 3, 74, 96, 55, 79, 88, 30, 41, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 61, 59, 76, 57, 60, 24, 80, 68, 63, 53, 39, 43, 49, 1, 81, 94, 75, 32, 12, 4, 36, 51, 77, 95, 38, 29, 13, 99, 70, 40, 47, 28, 42, 2, 45, 54, 82, 33, 11, 85, 26, 34, 19, 50, 86, 8, 6, 56, 84, 67, 72, 66, 27, 92, 46, 73, 20, 71, 83, 9, 21, 87, 15, 52, 93, 69, 25, 64, 65, 3, 74, 96, 55, 79, 88, 30, 41, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 61, 59, 76, 57, 60, 24, 80, 68, 63, 53, 39, 43, 49, 1, 81, 94, 75, 32, 12, 4, 36, 51, 77, 95, 38, 29, 13, 99, 70, 40, 47, 28, 42, 2, 45, 54, 82, 33, 11, 85, 26, 34, 19, 50, 86, 8, 6, 56, 84, 67, 72, 66, 27, 92, 46, 73, 20, 71, 83, 9, 21, 87, 15, 52, 93, 69, 25, 64, 65, 3, 74, 96, 55, 79, 88, 30, 41, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 61, 59, 76, 57, 60, 24, 80, 68, 63, 53, 39, 43, 49, 1, 81, 94, 75, 32, 12, 4, 36, 51, 77, 95, 38, 29, 13, 99, 70, 40, 47, 28, 42, 2, 45, 54, 82, 33, 11, 85, 26, 34, 19, 50, 86, 8, 6, 56, 84, 67, 72, 66, 27, 92, 46, 73, 20, 71, 83, 9, 21, 87, 15, 52, 93, 69, 25, 64, 65, 3, 74, 96, 55, 79, 88, 30, 41, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 50, 86, 8, 6, 56, 84, 67, 72, 68, 63, 53, 39, 43, 49, 1, 81, 94, 75, 32, 12, 4, 36, 51, 77, 95, 38, 29, 13, 99, 70, 40, 47, 28, 42, 2, 45, 54, 82, 33, 80, 24, 60, 57, 66, 27, 92, 46, 73, 20, 71, 83, 9, 21, 87, 15, 52, 93, 69, 25, 64, 65, 3, 74, 96, 55, 79, 88, 30, 41, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 50, 86, 8, 6, 56, 84, 67, 72, 68, 63, 53, 39, 43, 49, 1, 81, 94, 75, 32, 12, 4, 36, 51, 77, 95, 38, 29, 13, 99, 70, 40, 47, 28, 42, 2, 45, 54, 82, 33, 80, 24, 60, 57, 66, 27, 92, 46, 73, 20, 71, 83, 9, 21, 87, 15, 52, 93, 69, 25, 64, 65, 3, 74, 96, 55, 79, 88, 30, 41, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 50, 86, 8, 6, 56, 84, 67, 72, 68, 63, 53, 39, 43, 49, 1, 81, 94, 75, 32, 12, 4, 36, 51, 77, 95, 38, 29, 13, 99, 70, 40, 47, 28, 42, 2, 45, 54, 82, 33, 80, 24, 60, 57, 66, 27, 92, 46, 73, 20, 71, 83, 9, 21, 87, 15, 52, 93, 69, 25, 64, 65, 3, 74, 96, 55, 79, 88, 30, 41, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 50, 86, 8, 6, 56, 84, 67, 72, 68, 63, 53, 39, 43, 49, 1, 81, 94, 75, 32, 12, 4, 36, 51, 77, 95, 38, 29, 13, 99, 70, 40, 47, 28, 42, 2, 45, 54, 82, 33, 80, 24, 60, 57, 66, 27, 92, 46, 73, 20, 71, 83, 9, 21, 87, 15, 52, 93, 69, 25, 64, 65, 3, 74, 96, 55, 79, 88, 30, 41, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 56, 86, 57, 66, 27, 92, 46, 73, 20, 71, 83, 9, 87, 15, 21, 93, 52, 69, 25, 64, 65, 3, 74, 96, 55, 79, 30, 41, 88, 7, 91, 50, 24, 80, 60, 67, 49, 1, 81, 94, 75, 32, 12, 4, 36, 51, 77, 95, 29, 84, 38, 47, 99, 70, 40, 13, 42, 2, 28, 45, 82, 54, 33, 6, 8, 68, 39, 63, 53, 43, 72, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 56, 86, 50, 24, 80, 60, 67, 49, 1, 43, 72, 68, 39, 63, 53, 81, 94, 75, 32, 12, 4, 36, 51, 77, 95, 29, 84, 38, 47, 99, 70, 40, 13, 42, 2, 28, 45, 82, 33, 54, 8, 6, 57, 66, 27, 92, 46, 20, 73, 71, 83, 9, 87, 93, 52, 21, 15, 69, 25, 64, 65, 3, 74, 96, 55, 79, 30, 41, 88, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 84, 67, 49, 53, 39, 63, 68, 43, 1, 72, 81, 94, 32, 75, 12, 4, 36, 51, 77, 95, 29, 38, 47, 99, 70, 40, 13, 2, 28, 45, 42, 6, 8, 56, 86, 24, 80, 60, 50, 57, 66, 27, 92, 46, 20, 73, 9, 71, 83, 87, 93, 52, 21, 15, 69, 25, 64, 65, 3, 74, 96, 55, 79, 30, 41, 88, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 84, 67, 49, 53, 39, 63, 68, 43, 1, 72, 81, 94, 32, 75, 12, 4, 36, 51, 77, 95, 29, 38, 47, 99, 70, 40, 13, 2, 28, 45, 42, 6, 8, 56, 86, 24, 80, 60, 50, 57, 66, 27, 92, 46, 20, 73, 9, 71, 83, 87, 93, 52, 21, 15, 69, 25, 64, 65, 3, 74, 96, 55, 79, 30, 41, 88, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 84, 67, 49, 53, 39, 63, 68, 43, 1, 72, 81, 94, 32, 75, 12, 4, 36, 51, 77, 95, 29, 38, 47, 99, 70, 40, 13, 2, 28, 45, 42, 6, 8, 56, 86, 24, 80, 60, 50, 57, 66, 27, 92, 46, 20, 73, 9, 71, 83, 87, 93, 52, 21, 15, 69, 25, 64, 65, 3, 74, 96, 55, 79, 30, 41, 88, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 84, 67, 49, 53, 39, 63, 68, 43, 1, 72, 81, 94, 32, 75, 12, 4, 36, 51, 77, 95, 29, 38, 47, 99, 70, 40, 13, 2, 28, 45, 42, 6, 8, 56, 86, 24, 80, 60, 50, 57, 66, 27, 92, 46, 20, 73, 9, 71, 83, 87, 93, 52, 21, 15, 69, 25, 64, 65, 3, 74, 96, 55, 79, 30, 41, 88, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 84, 67, 49, 53, 39, 63, 68, 43, 1, 72, 81, 94, 32, 75, 12, 4, 36, 51, 77, 95, 29, 38, 47, 99, 70, 40, 13, 2, 28, 45, 42, 6, 8, 56, 86, 24, 80, 60, 50, 57, 66, 27, 92, 46, 20, 73, 9, 71, 83, 87, 93, 52, 21, 15, 69, 25, 64, 65, 3, 74, 96, 55, 79, 30, 41, 88, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 84, 67, 49, 53, 39, 63, 68, 43, 1, 72, 81, 94, 32, 75, 12, 4, 36, 51, 77, 95, 29, 38, 47, 99, 70, 40, 13, 2, 28, 45, 42, 6, 8, 56, 86, 24, 80, 60, 50, 57, 66, 27, 92, 46, 20, 73, 9, 71, 83, 87, 93, 52, 21, 15, 69, 25, 64, 65, 3, 74, 96, 55, 79, 30, 41, 88, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 84, 67, 49, 53, 39, 63, 68, 43, 1, 72, 81, 94, 32, 75, 12, 4, 36, 51, 77, 95, 29, 38, 47, 99, 70, 40, 13, 2, 28, 45, 42, 6, 8, 56, 86, 24, 80, 60, 50, 57, 66, 27, 92, 46, 20, 73, 9, 71, 83, 87, 93, 52, 21, 15, 69, 25, 64, 65, 3, 74, 96, 55, 79, 30, 41, 88, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 84, 67, 49, 53, 39, 63, 68, 43, 1, 72, 81, 94, 32, 75, 12, 4, 36, 51, 77, 95, 29, 38, 47, 99, 70, 40, 13, 2, 28, 45, 42, 6, 8, 56, 86, 24, 80, 60, 50, 57, 66, 27, 92, 46, 20, 73, 9, 71, 83, 87, 93, 52, 21, 15, 69, 25, 64, 65, 3, 74, 96, 55, 79, 30, 41, 88, 7, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 28, 2, 42, 45, 99, 70, 40, 13, 47, 36, 4, 95, 51, 77, 29, 38, 84, 67, 72, 81, 75, 32, 12, 94, 1, 53, 39, 63, 68, 43, 49, 8, 6, 56, 86, 50, 60, 24, 80, 66, 57, 27, 92, 46, 52, 87, 93, 15, 21, 69, 65, 3, 64, 25, 96, 55, 30, 88, 79, 7, 41, 91, 74, 71, 20, 73, 83, 9, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 36, 4, 95, 51, 77, 29, 38, 84, 67, 72, 49, 81, 75, 32, 12, 94, 1, 53, 39, 63, 68, 43, 56, 8, 6, 86, 50, 60, 24, 80, 66, 57, 27, 92, 46, 71, 20, 73, 83, 9, 3, 64, 25, 65, 69, 93, 15, 21, 87, 52, 91, 7, 41, 30, 88, 79, 55, 96, 74, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 38, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94, 12, 75, 32, 36, 4, 29, 8, 6, 56, 86, 50, 60, 24, 80, 66, 57, 27, 92, 46, 71, 20, 73, 83, 9, 3, 64, 25, 65, 69, 93, 21, 87, 15, 52, 91, 7, 41, 30, 88, 79, 55, 96, 74, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 38, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94, 12, 75, 32, 36, 4, 29, 8, 6, 56, 86, 50, 60, 24, 80, 66, 57, 27, 92, 46, 71, 20, 73, 83, 9, 3, 64, 25, 65, 69, 93, 21, 87, 15, 52, 91, 7, 41, 30, 88, 79, 55, 96, 74, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 38, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94, 12, 75, 32, 36, 4, 29, 8, 6, 56, 86, 50, 60, 24, 80, 66, 57, 27, 92, 46, 71, 20, 73, 83, 9, 3, 64, 25, 65, 69, 93, 21, 87, 15, 52, 91, 7, 41, 30, 88, 79, 55, 96, 74, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 38, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94, 12, 75, 32, 36, 4, 29, 8, 6, 56, 86, 50, 60, 24, 80, 66, 57, 27, 92, 46, 71, 20, 73, 83, 9, 3, 64, 25, 65, 69, 93, 21, 87, 15, 52, 91, 7, 41, 30, 88, 79, 55, 96, 74, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 38, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94, 12, 75, 32, 36, 4, 29, 8, 6, 56, 86, 50, 60, 24, 80, 66, 57, 27, 92, 46, 71, 20, 73, 83, 9, 3, 64, 25, 65, 69, 93, 21, 87, 15, 52, 91, 7, 41, 30, 88, 79, 55, 96, 74, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 38, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94, 12, 75, 32, 36, 4, 29, 8, 6, 56, 86, 50, 60, 24, 80, 66, 57, 27, 92, 46, 71, 20, 73, 83, 9, 3, 64, 25, 65, 69, 93, 21, 87, 15, 52, 91, 7, 41, 30, 88, 79, 55, 96, 74, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 38, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94, 12, 75, 32, 36, 4, 29, 8, 6, 56, 86, 50, 60, 24, 80, 66, 57, 27, 92, 46, 71, 20, 73, 83, 9, 3, 64, 25, 65, 69, 93, 21, 87, 15, 52, 91, 7, 41, 30, 88, 79, 55, 96, 74, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 38, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94, 12, 75, 32, 36, 4, 29, 8, 6, 56, 86, 50, 60, 24, 80, 66, 57, 27, 92, 46, 71, 20, 73, 83, 9, 3, 64, 25, 65, 69, 93, 21, 87, 15, 52, 91, 7, 41, 30, 88, 79, 55, 96, 74, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 29, 56, 6, 8, 86, 50, 60, 80, 24, 91, 7, 41, 88, 30, 79, 55, 96, 74, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 83, 9, 71, 73, 20, 46, 92, 57, 66, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 80, 24, 67, 84, 38, 29, 56, 6, 8, 86, 60, 50, 57, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 83, 9, 71, 73, 20, 46, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 80, 24, 67, 84, 38, 29, 56, 6, 8, 86, 60, 50, 57, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 83, 9, 71, 73, 20, 46, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 80, 24, 67, 84, 38, 29, 56, 6, 8, 86, 60, 50, 57, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 83, 9, 71, 73, 20, 46, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 80, 24, 67, 84, 38, 29, 56, 6, 8, 86, 60, 50, 57, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 83, 9, 71, 73, 20, 46, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 80, 24, 67, 84, 38, 29, 56, 6, 8, 86, 60, 50, 57, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 83, 9, 71, 73, 20, 46, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 80, 24, 67, 84, 38, 29, 56, 6, 8, 86, 60, 50, 57, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 83, 9, 71, 73, 20, 46, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 80, 24, 67, 84, 38, 29, 56, 6, 8, 86, 60, 50, 57, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 83, 9, 71, 73, 20, 46, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 80, 24, 67, 84, 38, 29, 56, 6, 8, 86, 60, 50, 57, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 83, 9, 71, 73, 20, 46, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 80, 24, 67, 84, 38, 29, 56, 6, 8, 86, 60, 50, 57, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 83, 9, 71, 73, 20, 46, 92, 27, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 84, 38, 29, 6, 8, 56, 86, 50, 60, 24, 80, 66, 57, 92, 27, 91, 7, 41, 88, 30, 79, 55, 96, 74, 52, 87, 15, 69, 65, 64, 3, 25, 21, 93, 83, 9, 71, 20, 73, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 84, 38, 29, 6, 8, 56, 86, 50, 60, 24, 80, 66, 57, 92, 27, 91, 7, 41, 88, 30, 79, 55, 96, 74, 52, 87, 15, 69, 65, 64, 3, 25, 21, 93, 83, 9, 71, 20, 73, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 84, 38, 29, 6, 8, 56, 86, 50, 60, 24, 80, 66, 57, 92, 27, 91, 7, 41, 88, 30, 79, 55, 74, 96, 3, 25, 64, 65, 52, 87, 15, 69, 21, 93, 83, 9, 71, 20, 73, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 84, 38, 29, 6, 8, 56, 86, 50, 60, 24, 80, 66, 57, 92, 27, 91, 7, 41, 88, 30, 79, 55, 74, 96, 3, 25, 64, 65, 52, 87, 15, 69, 21, 93, 83, 9, 71, 20, 73, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 84, 38, 29, 6, 8, 56, 86, 50, 60, 24, 80, 66, 57, 92, 27, 91, 7, 41, 88, 30, 79, 55, 74, 96, 3, 25, 64, 65, 52, 87, 15, 69, 21, 93, 83, 9, 71, 20, 73, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 84, 38, 29, 6, 8, 56, 86, 50, 60, 24, 80, 66, 57, 92, 27, 91, 7, 41, 88, 30, 79, 55, 74, 96, 3, 25, 64, 65, 52, 87, 15, 69, 21, 93, 83, 9, 71, 20, 73, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 84, 38, 29, 6, 8, 56, 86, 50, 60, 24, 80, 66, 57, 92, 27, 91, 7, 41, 88, 30, 79, 55, 74, 96, 3, 25, 64, 65, 52, 87, 15, 69, 21, 93, 83, 9, 71, 20, 73, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 84, 38, 29, 6, 8, 56, 86, 50, 60, 24, 80, 66, 57, 92, 27, 91, 7, 41, 88, 30, 79, 55, 74, 96, 3, 25, 64, 65, 52, 87, 15, 69, 21, 93, 83, 9, 71, 20, 73, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 84, 38, 29, 6, 8, 56, 86, 50, 60, 24, 80, 66, 57, 92, 27, 91, 7, 41, 88, 30, 79, 55, 74, 96, 3, 25, 64, 65, 52, 87, 15, 69, 21, 93, 83, 9, 71, 20, 73, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 84, 38, 29, 6, 8, 56, 86, 50, 60, 24, 80, 66, 57, 92, 27, 91, 7, 41, 88, 30, 79, 55, 74, 96, 3, 25, 64, 65, 52, 87, 15, 69, 21, 93, 83, 9, 71, 20, 73, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 56, 6, 8, 50, 86, 60, 80, 24, 57, 92, 27, 66, 79, 30, 7, 91, 88, 41, 55, 74, 96, 52, 93, 21, 69, 65, 25, 64, 3, 15, 87, 83, 71, 20, 73, 9, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 79, 30, 7, 91, 88, 41, 55, 74, 96, 3, 65, 25, 64, 69, 21, 93, 87, 15, 52, 71, 73, 20, 83, 9, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 79, 30, 7, 91, 88, 41, 55, 74, 96, 3, 65, 25, 64, 69, 21, 93, 87, 15, 52, 71, 73, 20, 83, 9, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 79, 30, 7, 91, 88, 41, 55, 74, 96, 3, 65, 25, 64, 69, 21, 93, 87, 15, 52, 71, 73, 20, 83, 9, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 79, 30, 7, 91, 88, 41, 55, 74, 96, 3, 65, 25, 64, 69, 21, 93, 87, 15, 52, 71, 73, 20, 83, 9, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 79, 30, 7, 91, 88, 41, 55, 74, 96, 3, 65, 25, 64, 69, 21, 93, 87, 15, 52, 71, 73, 20, 83, 9, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 79, 30, 7, 91, 88, 41, 55, 74, 96, 3, 65, 25, 64, 69, 21, 93, 87, 15, 52, 71, 73, 20, 83, 9, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 79, 30, 7, 91, 88, 41, 55, 74, 96, 3, 65, 25, 64, 69, 21, 93, 87, 15, 52, 71, 73, 20, 83, 9, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 79, 30, 7, 91, 88, 41, 55, 74, 96, 3, 65, 25, 64, 69, 21, 93, 87, 15, 52, 71, 73, 20, 83, 9, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 79, 30, 7, 91, 88, 41, 55, 74, 96, 3, 65, 25, 64, 69, 21, 93, 87, 15, 52, 71, 73, 20, 83, 9, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 41, 79, 7, 88, 30, 55, 74, 96, 3, 25, 64, 65, 69, 93, 21, 15, 87, 52, 46, 71, 73, 20, 83, 9, 91, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 41, 88, 30, 79, 55, 74, 52, 21, 15, 87, 93, 69, 64, 65, 25, 3, 96, 91, 7, 46, 71, 20, 73, 83, 9, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 41, 88, 30, 79, 55, 74, 52, 21, 15, 87, 93, 69, 64, 65, 25, 3, 96, 91, 7, 46, 71, 20, 73, 83, 9, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 41, 88, 30, 79, 55, 74, 52, 21, 15, 87, 93, 69, 64, 65, 25, 3, 96, 91, 7, 46, 71, 20, 73, 83, 9, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 41, 88, 30, 79, 55, 74, 52, 21, 15, 87, 93, 69, 64, 65, 25, 3, 96, 91, 7, 46, 71, 20, 73, 83, 9, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 74, 52, 21, 15, 87, 93, 69, 64, 65, 25, 3, 96, 9, 83, 73, 71, 20, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 74, 52, 21, 15, 87, 93, 69, 64, 65, 25, 3, 96, 9, 83, 73, 71, 20, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 74, 52, 21, 15, 87, 93, 69, 64, 65, 25, 3, 96, 9, 83, 73, 71, 20, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 74, 52, 21, 15, 87, 93, 69, 64, 65, 25, 3, 96, 9, 83, 73, 71, 20, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 74, 52, 21, 15, 87, 93, 69, 64, 65, 25, 3, 96, 9, 83, 73, 71, 20, 46, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 93, 15, 87, 21, 69, 65, 64, 25, 3, 52, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 93, 15, 87, 21, 69, 65, 64, 25, 3, 52, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 93, 15, 87, 21, 69, 65, 64, 25, 3, 52, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 93, 15, 87, 21, 69, 65, 64, 25, 3, 52, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 93, 15, 87, 21, 69, 65, 64, 25, 3, 52, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 93, 15, 87, 21, 69, 65, 64, 25, 3, 52, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 93, 15, 87, 21, 69, 65, 64, 25, 3, 52, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 93, 15, 87, 21, 69, 65, 64, 25, 3, 52, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 93, 15, 87, 21, 69, 65, 64, 25, 3, 52, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 93, 15, 87, 21, 69, 65, 64, 25, 3, 52, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 52, 87, 15, 21, 93, 69, 3, 65, 25, 64, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 52, 87, 15, 21, 93, 69, 3, 65, 25, 64, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 52, 87, 15, 21, 93, 69, 3, 65, 25, 64, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 52, 87, 15, 21, 93, 69, 3, 65, 25, 64, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 52, 87, 15, 21, 93, 69, 3, 65, 25, 64, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 52, 87, 15, 21, 93, 69, 3, 65, 25, 64, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 52, 87, 15, 21, 93, 69, 3, 65, 25, 64, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 52, 87, 15, 21, 93, 69, 3, 65, 25, 64, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 52, 87, 15, 21, 93, 69, 3, 65, 25, 64, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 52, 87, 15, 21, 93, 69, 3, 65, 25, 64, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 52, 87, 15, 21, 93, 69, 3, 65, 25, 64, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[0, 5, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 52, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 52, 87, 15, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 52, 87, 15, 21, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 52, 87, 15, 21, 93, 0, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 52, 87, 15, 21, 93, 69, 0, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 52, 87, 15, 21, 93, 69, 3, 0, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 52, 87, 15, 21, 93, 69, 3, 65, 0, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 52, 87, 15, 21, 93, 69, 3, 65, 25, 0, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 52, 87, 15, 21, 93, 69, 3, 65, 25, 64, 0]");
        assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 43, 39, 53, 1, 63, 68, 49, 72, 67, 38, 29, 84, 80, 50, 8, 56, 6, 86, 60, 24, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 96, 74, 73, 20, 46, 71, 9, 83, 52, 87, 15, 21, 93, 69, 3, 65, 25, 64, 0]");

        assertThat(mmas_us_madtsp.getGlobalStatistics().getTimeStatistics().get("MMAS Execution")).isLessThan(15000);
        assertThat(mmas_us_madtsp.getGlobalStatistics().getTimeStatistics().get("MMAS Initialization")).isLessThan(150);
    }

    private void printRoutes(MMAS_US_MADTSP mmas_us_madtsp) {
        for (IterationStatistic iter : mmas_us_madtsp.getIterationStatistics()) {
            if ((iter.getIteration() - 1) == 0 || (iter.getIteration() - 1) % 10 == 0 || iter.getIteration() == mmas_us_madtsp.getIterationStatistics().size())
                System.out.println(
                        "assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(" + ((int) iter.getIteration() - 1) +
                                ").getTour())).isEqualTo(\"" +
                                getTourString(mmas_us_madtsp.getIterationStatistics().get((int) iter.getIteration() - 1).getTour()) +
                                "\");"
                );
        }
        for (IterationStatistic iter : mmas_us_madtsp.getIterationStatistics()) {
            if ((iter.getIteration() - 1) == 0 || (iter.getIteration() - 1) % 10 == 0 || iter.getIteration() == mmas_us_madtsp.getIterationStatistics().size())
                System.out.println(
                        "assertThat(getTourString(mmas_us_madtsp.getIterationStatistics().get(" + ((int) iter.getIteration() - 1) +
                                ").getMvsbTour())).isEqualTo(\"" +
                                getTourString(mmas_us_madtsp.getIterationStatistics().get((int) iter.getIteration() - 1).getMvsbTour()) +
                                "\");"
                );
        }
    }

    private void printTest10(MMAS_US_MADTSP mmas_us_madtsp) {
        for (IterationStatistic iter : mmas_us_madtsp.getIterationStatistics()) {
            if (iter.getIteration() % 10 == 0 || (iter.getIteration() - 1) % 10 == 0 || (iter.getIteration() - 5) % 10 == 0)
                System.out.println(
                        "checkValues(mmas_us_madtsp, " +
                                ((int) iter.getIteration()) + ", " +
                                iter.getIterationMean() + ", " +
                                iter.getIterationSd() + ", " +
                                iter.getBranchFactor() + ", " +
                                iter.getDiversity() + ", " +
                                iter.getBestSoFar() + ");"
                );
        }
    }

    private void printTest100(MMAS_US_MADTSP mmas_us_madtsp) {
        for (IterationStatistic iter : mmas_us_madtsp.getIterationStatistics()) {
            if (iter.getIteration() % 100 == 0 || (iter.getIteration() - 1) % 100 == 0 || (iter.getIteration() - 50) % 100 == 0)
                System.out.println(
                        "checkValues(mmas_us_madtsp, " +
                                ((int) iter.getIteration()) + ", " +
                                iter.getIterationMean() + ", " +
                                iter.getIterationSd() + ", " +
                                iter.getBranchFactor() + ", " +
                                iter.getDiversity() + ", " +
                                iter.getBestSoFar() + ");"
                );
        }
    }

    private void checkValues(MMAS_US_MADTSP mmas_us_madtsp, int iteration, double mean, double sd, double branchFactor, double div, double bsf) {
        assertThat(mmas_us_madtsp.getIterationStatistics().get(iteration - 1).getIteration()).isEqualTo(iteration);
        assertThat(round(mmas_us_madtsp.getIterationStatistics().get(iteration - 1).getIterationMean())).isEqualTo(round(mean));
        assertThat(round(mmas_us_madtsp.getIterationStatistics().get(iteration - 1).getIterationSd())).isEqualTo(round(sd));
        assertThat(round(mmas_us_madtsp.getIterationStatistics().get(iteration - 1).getBranchFactor())).isEqualTo(round(branchFactor));
        assertThat(round(mmas_us_madtsp.getIterationStatistics().get(iteration - 1).getDiversity())).isEqualTo(round(div));
        assertThat(round(mmas_us_madtsp.getIterationStatistics().get(iteration - 1).getBestSoFar())).isEqualTo(round(bsf));
    }

    private String getTourString(int[] tourAnt) {
        StringBuilder tour = new StringBuilder("[");
        for (int vertex : tourAnt) {
            tour.append(vertex).append(", ");
        }
        tour.delete(tour.length() - 2, tour.length()).append("]");
        return tour.toString();
    }

    private String getTourString(MMAS_US_MADTSP mmas_us_madtsp) {
        StringBuilder tour = new StringBuilder("[");
        for (Vertex vertex : mmas_us_madtsp.getGlobalStatistics().getBestRoute()) {
            tour.append(vertex.getId()).append(", ");
        }
        tour.delete(tour.length() - 2, tour.length()).append("]");
        return tour.toString();
    }

    private double round(double value) {
        return Double.valueOf(String.format(Locale.US, "%.2f", value));
    }
}
