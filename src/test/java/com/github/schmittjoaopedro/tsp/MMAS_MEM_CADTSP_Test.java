package com.github.schmittjoaopedro.tsp;

import com.github.schmittjoaopedro.tsp.algorithms.MMAS_MEM_CADTSP;
import com.github.schmittjoaopedro.tsp.graph.Graph;
import com.github.schmittjoaopedro.tsp.graph.GraphFactory;
import org.junit.Before;
import org.junit.Test;

import java.io.File;

import static org.assertj.core.api.Assertions.assertThat;

public class MMAS_MEM_CADTSP_Test {

    private String kroA100;

    private String kroA150;

    @Before
    public void beforeClass() {
        kroA100 = getClass().getClassLoader().getResource("tsp/KroA100.tsp").getFile();
        kroA150 = getClass().getClassLoader().getResource("tsp/KroA150.tsp").getFile();
    }

    @Test
    public void test_mmas_mem_cycle_moving_adtsp_freq_10_mag_0_5_kroA100() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_MEM_CADTSP mmas_mem_cadtsp = new MMAS_MEM_CADTSP(graph, 0.8, 1000, 0.5, 10, 4);
        mmas_mem_cadtsp.setMmasSeed(1);
        mmas_mem_cadtsp.setDbgpSeed(1);
        mmas_mem_cadtsp.setStatisticInterval(1);
        mmas_mem_cadtsp.setShowLog(false);
        mmas_mem_cadtsp.run();
        assertThat(mmas_mem_cadtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(29496.314103651886);
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getGlobalStatistics())).isEqualTo("[49, 43, 72, 67, 84, 38, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 60, 24, 80, 86, 50, 56, 6, 8, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 16, 14, 10, 31, 46, 0, 62, 5, 48, 89, 83, 9, 71, 20, 73, 58, 98, 35, 17, 23, 37, 78, 52, 21, 15, 87, 93, 69, 64, 3, 65, 25, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 92, 27, 66, 57, 54, 82, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 49]");

        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 1, 39601.077353207074, 3256.4480241212223, 0.0, 57.137142857142855, 34060.60184509465);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 5, 35093.36663113069, 3012.158777956462, 0.745, 26.75265306122449, 30137.91208367386);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 10, 32728.033038147525, 3748.392097061801, 0.57, 17.355918367346938, 29548.785494226304);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 11, 32348.708530172018, 3073.3784947023364, 0.57, 13.769795918367347, 29548.785494226304);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 15, 31722.053861275886, 2640.2122129934496, 0.5, 14.453061224489796, 29221.011909211848);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 20, 31803.31175455098, 2743.7849639547603, 0.5, 14.822040816326531, 29108.495617017532);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 21, 40690.351509609, 2256.9942799376117, 0.49, 32.19673469387755, 36513.785333909174);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 25, 36047.30678899195, 2743.070153643492, 1.445, 41.74530612244898, 31473.619002362488);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 30, 34146.218102481624, 2401.2540347340423, 1.675, 35.4734693877551, 29820.305441658602);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 31, 38418.31259538856, 2626.997928248568, 1.545, 43.28081632653061, 33974.01701050253);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 35, 37476.44808784623, 2749.6123162603762, 1.875, 42.073469387755104, 31479.434859072542);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 40, 37238.66820324327, 3298.9030345115266, 1.94, 39.22938775510204, 30902.251929874514);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 41, 38021.14217236685, 2824.8298499955927, 1.9, 41.07918367346939, 32225.663884652473);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 45, 37582.53062164758, 3822.8320385038573, 2.125, 39.68244897959184, 30012.43855966626);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 50, 35801.09729291892, 2242.5282560442784, 2.25, 38.61795918367347, 29592.184790170686);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 51, 37325.42168830746, 3357.266911921286, 2.16, 40.98204081632653, 31653.412323211483);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 55, 36971.802459267135, 3082.4673297808754, 2.22, 42.43102040816326, 30599.569517681233);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 60, 35157.582967565446, 3239.090238697985, 2.305, 38.42448979591837, 29837.441267763086);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 61, 35000.93796739156, 2494.168930207443, 2.36, 38.69877551020408, 30340.14300342847);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 65, 35573.451176957264, 2988.0376436980964, 2.375, 39.33714285714286, 30154.613406561475);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 70, 35106.95467873304, 2832.5141336955035, 2.385, 36.903673469387755, 29196.91248508404);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 71, 37453.92453584387, 2548.9606971891512, 2.29, 41.80326530612245, 31790.90934570904);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 75, 38073.98972877504, 3304.0832110795477, 2.29, 41.8065306122449, 31790.90934570904);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 80, 37543.54995291964, 3491.1091581689807, 2.285, 40.21142857142857, 30855.399278048066);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 81, 36633.10843682533, 2929.3670824996393, 2.215, 40.82775510204082, 31795.246167110774);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 85, 36422.11262818252, 2847.6078400881274, 2.26, 37.89795918367347, 30817.929050557344);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 90, 35877.70569487607, 3125.9529033076096, 2.32, 37.99755102040816, 30512.18113896181);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 91, 36525.69493920893, 3161.442545105996, 2.26, 40.97959183673469, 31183.026181979334);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 95, 36201.37944764302, 2764.674654036117, 2.265, 39.51591836734694, 30720.313800384232);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 100, 35933.03408919373, 2570.372192651526, 2.375, 38.52, 30475.235495939978);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 101, 35559.39852690453, 2551.8790410991473, 2.345, 39.46938775510204, 29720.560382909032);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 105, 35397.51246726732, 2606.1445179758607, 2.355, 39.16897959183674, 29704.5898693762);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 110, 35324.78191572914, 3784.140822252359, 2.355, 37.732244897959184, 29125.339250039695);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 111, 37188.926357662356, 2804.3254248095636, 2.295, 43.36163265306122, 31854.1329090631);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 115, 37723.40983139549, 2587.3717887459547, 2.295, 41.5534693877551, 31854.1329090631);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 120, 37313.35346474065, 3066.4279047785135, 2.295, 41.97795918367347, 31854.1329090631);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 121, 36445.96798915983, 3086.33960142996, 2.32, 38.98122448979592, 31908.906848991934);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 125, 36322.677686116636, 2791.0968408351923, 2.32, 38.18693877551021, 30014.92697343042);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 130, 36519.8414844768, 2741.8421851625744, 2.34, 37.561632653061224, 27750.302494261323);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 131, 37821.18015466002, 3615.0657748713365, 2.295, 42.15102040816326, 31606.691111276006);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 135, 36792.53880617541, 3301.9207415329715, 2.37, 40.55510204081633, 29951.704993531086);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 140, 36883.25957211386, 3659.3174667431904, 2.38, 41.04081632653061, 29450.50914474943);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 141, 35731.645730773496, 2777.7276312412837, 2.405, 40.7469387755102, 31212.32507579108);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 145, 35991.846981826515, 3315.098636544123, 2.47, 39.648979591836735, 30166.554879375428);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 150, 35648.85898406455, 3627.904998406865, 2.475, 37.49061224489796, 29003.67334385891);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 151, 39072.778493441976, 3708.2612190588243, 2.37, 43.77795918367347, 33074.463541987716);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 155, 37365.13064495185, 3695.6337590925564, 2.435, 43.412244897959184, 31170.52573157625);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 160, 37962.83348792283, 3333.542528902492, 2.435, 43.799183673469386, 31170.52573157625);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 161, 36850.152497723735, 3544.2171120752196, 2.44, 40.13061224489796, 31719.05106287131);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 165, 36456.122910029415, 3950.900313914429, 2.445, 38.42775510204082, 28535.357628232796);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 170, 36972.84928175317, 3122.9869005796904, 2.445, 40.63591836734694, 28535.357628232796);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 171, 35724.50986504738, 3109.5317583858073, 2.33, 42.372244897959185, 29586.862934129906);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 175, 35706.74537828735, 2675.0477310250494, 2.33, 42.88979591836735, 29586.862934129906);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 180, 35833.16868722393, 2706.954437766195, 2.33, 41.95836734693878, 29586.862934129906);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 181, 36237.500512264894, 2820.075366745408, 2.355, 39.76326530612245, 31839.72374584925);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 185, 36308.20018611538, 3325.645317802526, 2.43, 39.19183673469388, 29342.52940376235);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 190, 35347.5795223036, 2681.635567318154, 2.43, 39.27183673469388, 29342.52940376235);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 191, 38099.34320519126, 3082.4307388685083, 2.395, 43.70612244897959, 32639.28433839416);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 195, 37520.72581489739, 3591.6527094233315, 2.41, 42.32163265306122, 30503.516295049616);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 200, 38485.84256439309, 4498.635245530012, 2.395, 42.89551020408163, 30492.66962921905);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 201, 37401.75733971776, 3441.111041925437, 2.375, 40.351020408163265, 31368.88098166408);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 205, 36603.62614170141, 3315.812353232369, 2.42, 39.97469387755102, 30462.509066940995);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 210, 36351.3227787453, 2563.7150430480706, 2.415, 40.14530612244898, 30146.645728169096);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 211, 36737.50151135053, 3444.3453649536114, 2.455, 43.289795918367346, 29657.99901794895);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 215, 36333.60627913558, 3133.8895799988954, 2.48, 43.37469387755102, 28838.307293526952);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 220, 35860.16146435603, 2879.774698307067, 2.48, 42.59918367346939, 28838.307293526952);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 221, 35201.69473156936, 2408.0095362426546, 2.435, 40.29714285714286, 31269.225213148125);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 225, 36187.32453701601, 3162.445931367957, 2.53, 40.61387755102041, 29855.471693409592);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 230, 35505.37909112672, 2615.1870836907574, 2.555, 40.4334693877551, 29343.609825600543);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 231, 38670.70545583473, 4761.655907105374, 2.51, 43.97795918367347, 30958.591978718003);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 235, 37958.728637402906, 2834.897503037316, 2.525, 42.158367346938775, 29213.61964370845);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 240, 37290.15471343732, 3455.080482587043, 2.49, 40.74040816326531, 28588.947954667496);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 241, 36898.42701381307, 3126.526935096269, 2.465, 41.370612244897956, 31533.80763656937);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 245, 37324.91049623284, 3749.230334057651, 2.485, 41.19102040816327, 28875.12818636449);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 250, 37321.29223663449, 3594.0494032426586, 2.485, 39.391836734693875, 28875.12818636449);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 251, 35626.7317216891, 3009.8756837677956, 2.475, 44.08489795918367, 30203.733080424863);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 255, 35873.93425567059, 3123.8039019501325, 2.515, 43.031836734693876, 28307.001368821446);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 260, 35189.80375990965, 2926.520281297411, 2.515, 42.928979591836736, 28307.001368821446);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 261, 36144.589776444554, 3105.502407332882, 2.445, 40.93959183673469, 31766.22727747575);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 265, 36384.84907441636, 2781.6946876205816, 2.535, 40.70612244897959, 29886.613138961377);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 270, 34998.06107197653, 2997.015421217948, 2.53, 40.013061224489796, 29368.91678175367);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 271, 38940.99135399217, 3979.615227782711, 2.485, 42.64408163265306, 32752.72863501767);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 275, 36968.731596535494, 3501.861418341265, 2.505, 41.968979591836735, 28229.744535035294);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 280, 36963.815910116864, 3253.131642197638, 2.505, 41.751836734693875, 28229.744535035294);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 281, 36733.12370602295, 3085.3473079178516, 2.495, 42.40897959183673, 29945.470946181336);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 285, 36550.59259031694, 4024.6847325110407, 2.52, 40.689795918367345, 28415.614852094655);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 290, 36838.878765451525, 3626.4150464838513, 2.52, 41.07591836734694, 28415.614852094655);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 291, 35215.59836537074, 3061.8473467872, 2.49, 43.38285714285714, 30367.07556079998);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 295, 34752.296611579986, 2803.833181305474, 2.54, 43.08326530612245, 29806.81155355714);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 300, 34962.347645168054, 2828.059174713902, 2.56, 41.710204081632654, 28668.55643392944);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 301, 35540.39889351371, 3337.165103661767, 2.515, 40.053061224489795, 30012.836899019534);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 305, 35234.92040381008, 3056.331737920905, 2.535, 41.38448979591837, 28777.011307593704);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 310, 34607.99228598661, 2521.936406354298, 2.535, 40.59673469387755, 28777.011307593704);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 311, 36913.04914745199, 3148.7480235392836, 2.45, 42.712653061224486, 30348.70217201748);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 315, 37607.95900381529, 3471.6666388708622, 2.45, 41.590204081632656, 30348.70217201748);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 320, 37069.18474646645, 3477.159455935887, 2.46, 40.44, 29237.263534076494);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 321, 36889.453197230905, 3430.9287996288385, 2.45, 40.74122448979592, 30289.846994826974);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 325, 36320.51221813102, 3360.8142379733317, 2.505, 40.71836734693878, 28467.24405117975);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 330, 36242.94236947712, 3910.3987339078435, 2.505, 39.60979591836735, 28467.24405117975);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 331, 35495.75685086344, 3198.9907792117087, 2.49, 43.16816326530612, 30325.963152345063);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 335, 34873.58037141029, 2713.2366310650355, 2.535, 42.98367346938775, 29180.72819335086);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 340, 34208.687502781104, 2267.1613380897884, 2.555, 40.9730612244898, 28212.309702158906);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 341, 36231.00758481624, 3175.198993523719, 2.445, 41.199183673469385, 29959.193174051725);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 345, 36056.34453428797, 2884.404153441951, 2.535, 41.84897959183674, 29661.900938653213);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 350, 35682.16507447472, 3293.819705287222, 2.535, 40.89632653061224, 29269.190536567818);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 351, 37278.80458653831, 2718.611524398896, 2.505, 43.071836734693875, 30368.14891344707);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 355, 37988.90306170183, 3823.754268687729, 2.505, 43.1534693877551, 30368.14891344707);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 360, 37208.86455631129, 3964.0591218777035, 2.555, 41.266122448979594, 30153.826875823743);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 361, 38029.767233914485, 3320.630498114454, 2.53, 42.79020408163265, 33266.21733052585);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 365, 36077.709428096365, 3066.6729463040974, 2.565, 41.179591836734694, 29961.08592201796);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 370, 35928.06269637954, 3255.9970524314613, 2.53, 40.844897959183676, 27634.47987072614);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 371, 35612.72421184976, 3402.3107883752396, 2.525, 44.137959183673466, 30695.18095067829);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 375, 34925.90701752354, 2356.1980414084733, 2.56, 42.48897959183673, 29309.946501785962);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 380, 34535.04589560672, 2328.6311965679215, 2.56, 41.86857142857143, 29309.946501785962);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 381, 35668.04688347295, 2604.1512336929554, 2.455, 41.121632653061226, 30358.54142776078);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 385, 35440.887799646676, 3021.9592443747097, 2.475, 39.68489795918367, 29974.275749703305);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 390, 36027.41689455984, 3352.214121544999, 2.49, 40.395102040816326, 29326.09545388227);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 391, 36775.79990964387, 3361.232142920165, 2.535, 42.204081632653065, 30877.714704716924);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 395, 37441.94181744227, 3862.7137295575008, 2.535, 42.755102040816325, 30877.714704716924);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 400, 37592.99133786557, 2989.827311285767, 2.58, 41.602448979591834, 30877.714704716924);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 401, 36839.06736441566, 3496.382373744922, 2.485, 39.754285714285714, 29653.387520357326);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 405, 36352.63922148122, 2903.861956913306, 2.485, 39.23102040816327, 29653.387520357326);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 410, 36294.8079558792, 3801.7835937936206, 2.455, 39.13142857142857, 27419.765146089874);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 411, 35651.299715018664, 3249.5774945204394, 2.48, 43.87183673469388, 29862.065567511527);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 415, 35613.84914866103, 2811.0708675584797, 2.48, 42.91102040816327, 29862.065567511527);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 420, 34578.47122347943, 2269.066999746333, 2.5, 44.304489795918364, 29270.49200595685);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 421, 35379.739733982125, 2999.4490515652933, 2.405, 40.501224489795916, 29317.473585139353);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 425, 35578.33537646786, 2544.6178148340164, 2.405, 41.19102040816327, 29317.473585139353);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 430, 34994.040085889006, 2976.7989954938394, 2.375, 38.3665306122449, 29112.92488059458);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 431, 38056.934106129134, 4010.685234641452, 2.38, 41.51265306122449, 32520.13605187136);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 435, 37925.89785583671, 3717.0329321552877, 2.45, 41.51428571428571, 31761.676299022336);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 440, 36567.28873952068, 3442.761603192864, 2.465, 39.729795918367344, 30801.522629336116);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 441, 37192.2774587591, 2817.7132652860987, 2.41, 41.70857142857143, 32396.66308591293);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 445, 37047.776560518585, 3792.578593458686, 2.45, 41.04816326530612, 29403.11465986698);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 450, 36573.38279898625, 3505.1579490553627, 2.485, 40.071020408163264, 28488.799327708603);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 451, 35500.05313134031, 2676.9526637244453, 2.45, 43.248163265306125, 30822.77315475501);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 455, 35905.00219336395, 3058.6303479010567, 2.555, 44.01469387755102, 30167.31809088578);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 460, 33832.67480273479, 2949.494048519506, 2.595, 42.39673469387755, 29671.803261317014);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 461, 35632.59424553927, 2498.938402011036, 2.405, 40.3004081632653, 30977.54733365043);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 465, 35434.28944767568, 3374.684946988083, 2.42, 39.56979591836735, 29279.360632128904);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 470, 35813.71607812568, 3146.6555440543643, 2.42, 38.68734693877551, 29279.360632128904);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 471, 37185.88140324875, 3450.1923330690233, 2.4, 41.245714285714286, 32142.701941583313);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 475, 37000.49783468727, 3427.2622901614004, 2.465, 41.270204081632656, 29690.737711737995);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 480, 36865.76216080109, 2770.507981995507, 2.465, 41.630204081632655, 29690.737711737995);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 481, 36232.41918181915, 3601.6629034962248, 2.465, 40.668571428571425, 29231.227227710235);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 485, 36697.33732794191, 3740.2928999725823, 2.465, 40.10857142857143, 29231.227227710235);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 490, 35497.05901106904, 3420.486963719129, 2.505, 39.17551020408163, 28244.479798302855);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 491, 34749.49212422953, 2767.8666487184637, 2.47, 44.74938775510204, 30098.164877633513);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 495, 35429.87025598649, 2886.0970382311816, 2.5, 42.8, 28608.563833137137);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 500, 35296.037434953156, 2913.4856203818963, 2.49, 43.02530612244898, 28608.563833137137);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 501, 35068.847627898, 3037.8476969143867, 2.39, 38.50204081632653, 29706.361781819105);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 505, 35237.82518258993, 2902.0361289088114, 2.45, 38.328163265306124, 29245.218676333887);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 510, 35234.519779337, 2415.966845257572, 2.44, 38.18448979591837, 29162.456148199097);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 511, 37983.45700039207, 4289.920455888114, 2.415, 40.416326530612245, 32635.349679315394);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 515, 37847.19144428617, 3448.3793716967034, 2.455, 40.735510204081635, 30673.558410193626);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 520, 38117.675691600416, 3595.336598769202, 2.47, 40.16897959183674, 29984.926145506633);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 521, 36114.7305314401, 2674.242546855726, 2.39, 40.19020408163265, 29400.266688214728);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 525, 37005.498731703585, 3937.1351240764, 2.41, 40.48897959183673, 29010.08131733431);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 530, 37487.7506865467, 4218.760678994155, 2.47, 40.29061224489796, 28757.179328648133);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 531, 35250.166943733755, 2913.0564320434264, 2.47, 43.822857142857146, 29446.919185829287);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 535, 34726.50615332291, 2886.2927453805237, 2.455, 43.36408163265306, 28475.00881802929);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 540, 34720.54534072587, 2834.426772784258, 2.455, 41.7395918367347, 28475.00881802929);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 541, 34724.34584406094, 2939.296648128457, 2.37, 36.91591836734694, 29551.675085616585);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 545, 35053.08774888274, 3460.9842693029173, 2.41, 38.309387755102044, 29340.339241050366);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 550, 35389.50167263115, 3181.687769646542, 2.425, 37.02367346938775, 28370.60056653966);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 551, 36522.488465634575, 3053.727778622182, 2.395, 39.14938775510204, 32168.171384213285);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 555, 36618.037688000404, 3074.0455757726327, 2.415, 40.36244897959184, 28794.795767556618);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 560, 36780.94991991026, 2483.5425228565337, 2.415, 39.58938775510204, 28794.795767556618);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 561, 36259.00516869586, 3234.6641308712688, 2.4, 38.88897959183674, 29788.394179535757);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 565, 36460.13908534711, 3628.0941302981946, 2.44, 39.540408163265305, 27478.985479216662);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 570, 35894.53470596065, 3849.5337796966987, 2.44, 38.181224489795916, 27478.985479216662);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 571, 35358.265962078265, 2636.3449121221106, 2.35, 42.86448979591837, 30113.979094353013);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 575, 34864.287210402756, 3032.751137641704, 2.385, 41.968979591836735, 29279.866686627403);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 580, 34513.976003809104, 2291.0966731737253, 2.43, 42.72734693877551, 28966.378174112233);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 581, 35295.29527877136, 2697.8174290618426, 2.405, 37.332244897959185, 30821.239384831406);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 585, 35239.69923270528, 3157.434527985816, 2.46, 37.31918367346939, 29541.18855221033);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 590, 34622.64667929763, 2841.6840034613087, 2.45, 34.816326530612244, 27798.734066196128);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 591, 37745.298749473375, 3591.2180620569984, 2.395, 40.244081632653064, 31228.64746144257);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 595, 37162.29918903388, 2695.0870690249367, 2.445, 40.736326530612246, 30632.304769859526);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 600, 37144.961388231095, 2558.1569170605408, 2.45, 38.99591836734694, 30163.244325446823);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 601, 36199.706772055615, 3193.160622868399, 2.39, 38.43265306122449, 30988.93822381243);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 605, 36962.20720475502, 4204.057224601251, 2.425, 38.371428571428574, 28952.11709755673);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 610, 35198.49217487337, 3800.7656762978622, 2.395, 37.33959183673469, 28101.334774987077);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 611, 35180.925697856714, 2824.1463806476154, 2.395, 43.25061224489796, 30535.859980179874);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 615, 35758.556480461106, 3479.0417801874546, 2.425, 43.29142857142857, 29549.646480708685);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 620, 35280.80768808021, 3542.6318619901795, 2.41, 42.629387755102044, 28976.26762953526);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 621, 34933.24234338938, 2430.3221964449917, 2.39, 37.12897959183673, 29809.895693359627);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 625, 35241.348243388435, 3260.429421371951, 2.44, 36.33551020408163, 29328.681132696394);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 630, 35235.28790573776, 3127.8511135854246, 2.455, 35.82938775510204, 28075.961530402532);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 631, 38216.75630412977, 3761.8071357440326, 2.415, 41.46530612244898, 31228.25829954668);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 635, 37188.57856170242, 2710.4595449827984, 2.435, 40.3869387755102, 30874.49423697592);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 640, 37244.309343646404, 3621.057559597751, 2.455, 40.05795918367347, 30182.2638561814);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 641, 36364.80525653858, 4274.188462869082, 2.35, 39.65959183673469, 30273.981059117155);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 645, 35594.11204825961, 3652.8546576879344, 2.465, 38.23183673469388, 29151.285713314213);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 650, 36539.317333844316, 3548.725657249519, 2.455, 38.21959183673469, 28592.569430302);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 651, 35150.06843603287, 2621.8242017461685, 2.44, 43.2065306122449, 30531.175022694955);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 655, 35616.06515500162, 3257.277259693009, 2.44, 43.16244897959184, 28102.92846283542);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 660, 35229.57081458163, 3047.728506521603, 2.44, 42.18938775510204, 27895.84726023408);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 661, 34915.286313781246, 3040.168898161768, 2.355, 37.182040816326534, 29806.617703461172);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 665, 34711.869209213306, 2194.1389441537212, 2.385, 36.82204081632653, 28679.741815070534);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 670, 34473.3988979336, 2866.3576355136875, 2.38, 37.1665306122449, 27824.867465554686);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 671, 37365.94045431158, 2960.929866742783, 2.39, 41.292244897959186, 31909.950199971918);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 675, 37242.988721431844, 3280.12315726788, 2.485, 39.993469387755106, 30718.793075604335);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 680, 37267.82238614222, 3406.040350663683, 2.45, 40.38530612244898, 30250.822547446747);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 681, 35426.39427006138, 3126.699730004388, 2.34, 37.93714285714286, 28734.05112101398);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 685, 36256.57607280367, 3682.017846077075, 2.39, 38.713469387755104, 28429.345204216115);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 690, 36380.019008455114, 3291.079721478321, 2.385, 37.81224489795918, 27187.33297360179);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 691, 35372.604685525366, 2621.377005725047, 2.405, 42.755102040816325, 30556.184108562913);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 695, 35147.31769007242, 3349.4847060660695, 2.475, 42.36244897959184, 30094.2990947356);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 700, 35003.29375835216, 2280.838176080646, 2.495, 41.99918367346939, 29597.05449513932);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 701, 35625.23661549415, 3265.491530189579, 2.38, 38.306938775510204, 30201.750309607465);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 705, 35139.68637758282, 3179.3164885450883, 2.44, 38.14448979591837, 28313.58786112258);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 710, 34829.77351131246, 3272.2960096388324, 2.44, 36.4734693877551, 28313.58786112258);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 711, 37870.92880640262, 3836.6619745873463, 2.345, 41.65469387755102, 31197.457251666932);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 715, 37527.43322397017, 2589.0099478630445, 2.405, 40.11102040816326, 30377.679464508485);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 720, 36772.25703058058, 3855.1992299960352, 2.405, 41.26857142857143, 30377.679464508485);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 721, 35833.742077231545, 2807.832666055892, 2.325, 39.57795918367347, 29345.193213797087);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 725, 36593.71919966182, 3956.487456734605, 2.315, 38.06285714285714, 28631.611017634288);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 730, 34353.626581534554, 3747.0875404015533, 2.34, 37.14530612244898, 27807.33238321138);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 731, 34979.10123193586, 2978.5750994620885, 2.35, 43.06204081632653, 30817.324135554656);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 735, 35377.3029513924, 2915.4487642416725, 2.38, 41.306938775510204, 29877.909368729128);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 740, 34825.971099656665, 2797.2304519022714, 2.405, 40.962448979591834, 29204.785593080764);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 741, 34586.53613857498, 2461.735403865559, 2.32, 37.435918367346936, 30645.16979588175);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 745, 35471.43303577734, 2778.920545024971, 2.33, 36.78775510204082, 29014.797846255762);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 750, 34284.9019681557, 2794.613062921917, 2.335, 34.624489795918365, 28394.147712592992);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 751, 37619.79226703752, 3575.8569469895265, 2.295, 40.61061224489796, 31030.959172618055);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 755, 38006.06383259206, 3550.1544039601085, 2.355, 40.2065306122449, 30731.669974738656);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 760, 37822.87179970525, 3355.0509254774465, 2.365, 41.0269387755102, 30264.04094902901);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 761, 35558.97710356231, 3084.4307741820166, 2.325, 37.88979591836735, 29928.114581734208);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 765, 35441.874059552254, 3393.8632015956705, 2.375, 37.818775510204084, 28791.91447345369);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 770, 35203.50729535577, 3443.5016628022936, 2.31, 36.373877551020406, 28369.979123935806);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 771, 35157.692913906016, 2774.670254890428, 2.27, 41.652244897959186, 29989.782018087986);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 775, 35181.5207163746, 2967.8792227141485, 2.325, 40.08734693877551, 29456.478157676444);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 780, 35139.08251801004, 3069.2792170559196, 2.325, 42.226938775510206, 29456.478157676444);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 781, 34759.99989960465, 2881.6196577554233, 2.31, 36.97469387755102, 30534.503120607053);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 785, 35596.1730856148, 3076.8757646963777, 2.34, 36.17877551020408, 29384.632952005195);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 790, 34792.39809983746, 3158.7864372795802, 2.34, 36.799183673469386, 29384.632952005195);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 791, 38781.62211040863, 3697.4614971718997, 2.26, 40.608979591836736, 32345.0848713853);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 795, 37619.51248709757, 2764.6153887466426, 2.335, 41.14448979591837, 29742.946026971873);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 800, 37391.473913055765, 4044.2022188652804, 2.31, 40.37469387755102, 29742.946026971873);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 801, 36130.698119685614, 3157.4942878556967, 2.27, 38.81551020408163, 31256.728025788136);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 805, 35781.746407815976, 3893.5198983866903, 2.33, 38.15020408163265, 28461.100450128917);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 810, 35007.91742329481, 3606.5558555615144, 2.33, 35.860408163265305, 28461.100450128917);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 811, 35368.337616294826, 3068.8385450387527, 2.295, 43.292244897959186, 30887.401231460095);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 815, 34726.385062232635, 2960.9214471286086, 2.35, 42.17142857142857, 29248.619793479247);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 820, 35245.2976332819, 2886.21759254692, 2.35, 42.19510204081632, 29248.619793479247);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 821, 35307.21065597608, 3287.9158693404247, 2.31, 37.00244897959184, 29323.07846520387);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 825, 34964.65420721327, 2854.1818731276135, 2.295, 36.23265306122449, 27749.07433060636);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 830, 34245.69289143129, 3171.8489340437845, 2.295, 35.35673469387755, 27749.07433060636);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 831, 38054.97445805064, 3649.192051457288, 2.26, 41.498775510204084, 32115.488380360533);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 835, 37575.89572744823, 3155.2999063420866, 2.32, 40.83020408163265, 29728.69173824918);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 840, 37505.93597850191, 3310.306044637053, 2.32, 39.76, 29728.69173824918);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 841, 36141.8249685577, 3412.763889920071, 2.27, 38.30122448979592, 29347.082509659198);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 845, 34963.60732015892, 2867.856560013493, 2.295, 37.502857142857145, 28526.037969544024);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 850, 34840.1445104171, 3398.7375174857793, 2.36, 36.242448979591835, 27817.018513470128);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 851, 35390.19970714108, 2695.055011747894, 2.31, 42.53877551020408, 31324.44617307155);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 855, 34842.60088703836, 2743.319063603013, 2.395, 42.204897959183675, 30220.981854582988);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 860, 35217.681237566496, 2628.2425168581467, 2.395, 42.01469387755102, 30169.62465815413);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 861, 36142.80252448954, 2886.8999917507263, 2.335, 37.92979591836735, 30629.034952054877);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 865, 34479.89028409813, 2503.6059752070323, 2.35, 35.605714285714285, 28403.034354327665);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 870, 34477.06034624578, 2423.9989608453766, 2.35, 35.79673469387755, 28403.034354327665);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 871, 37851.240597863616, 2991.523033140121, 2.24, 40.857142857142854, 31008.512180417198);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 875, 37553.48196064082, 3746.6987078131083, 2.26, 40.87102040816327, 29849.167534195476);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 880, 38144.55535967484, 3291.463663489992, 2.26, 40.23918367346939, 29849.167534195476);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 881, 35962.12990076703, 3218.7447275955215, 2.265, 38.2930612244898, 29670.85639675865);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 885, 35350.67186295467, 3487.912396998501, 2.25, 37.902857142857144, 29233.393253269154);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 890, 35573.013988863386, 3715.1574417413367, 2.26, 36.81387755102041, 28551.133629729826);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 891, 34998.99969621788, 2583.02010598378, 2.215, 42.40244897959184, 30020.018022454173);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 895, 35548.37877824271, 3647.1846077995338, 2.25, 41.62204081632653, 28902.430991426307);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 900, 35659.506029837474, 3650.997301769204, 2.26, 40.93224489795919, 28902.430991426307);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 901, 34634.7778667817, 3081.4313641868684, 2.215, 37.19591836734694, 28973.077102479307);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 905, 34814.878734689264, 3468.8853133348534, 2.265, 36.89795918367347, 28877.7977074026);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 910, 34564.93247163806, 2743.221519356292, 2.265, 35.78938775510204, 28877.7977074026);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 911, 37600.56740624858, 4100.444574694377, 2.26, 39.78040816326531, 32065.54912771452);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 915, 37368.94688360721, 3645.959347685536, 2.32, 39.45469387755102, 30620.654407275044);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 920, 37649.794904439645, 3102.8865524896264, 2.32, 41.16326530612245, 30620.654407275044);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 921, 35647.10106760718, 3451.2538291521337, 2.265, 39.4465306122449, 29746.254613200344);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 925, 35184.577432737424, 3508.0654802814356, 2.27, 37.94857142857143, 29704.24693624062);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 930, 34980.232708428375, 3282.402296873205, 2.33, 37.331428571428575, 28474.739418655114);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 931, 35256.174723337936, 2521.441837469612, 2.29, 42.27755102040816, 30488.165072401247);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 935, 34977.55591112448, 2831.1534229808635, 2.305, 42.369795918367345, 28636.9827127232);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 940, 35242.94070952923, 2684.3722873462657, 2.305, 42.542857142857144, 28636.9827127232);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 941, 35474.93500942391, 2622.8776969999817, 2.335, 38.38367346938775, 30736.0498169485);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 945, 35404.955051626705, 3080.3881639584206, 2.355, 36.14693877551021, 29069.830960341675);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 950, 34754.75774595195, 3208.162511941494, 2.335, 35.38938775510204, 28199.88254382153);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 951, 36949.43688941498, 3024.898934892666, 2.285, 39.46448979591837, 28907.174234228085);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 955, 37147.62631942429, 3102.915925174372, 2.285, 40.714285714285715, 28907.174234228085);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 960, 36674.809800840274, 3736.6490358016295, 2.285, 39.38204081632653, 28907.174234228085);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 961, 36323.98047618854, 3273.7340375209233, 2.27, 38.542857142857144, 30274.330337749405);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 965, 35566.535674687395, 3464.2167329402014, 2.32, 37.946938775510205, 27654.46792825139);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 970, 35108.59851299562, 3836.8451923156695, 2.32, 37.12, 27654.46792825139);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 971, 35579.87345117867, 2892.836851407114, 2.23, 41.85469387755102, 29687.577140387006);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 975, 35786.321125172835, 3508.274913019599, 2.23, 43.52979591836735, 29687.577140387006);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 980, 34558.2993988673, 2433.8185985900295, 2.295, 42.79020408163265, 29429.03955971259);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 981, 35352.106355352145, 3530.617024640155, 2.235, 37.08489795918367, 30573.04742451058);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 985, 34620.24804600278, 2881.472793233566, 2.28, 37.056326530612246, 29250.25006218362);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 990, 35378.388347983346, 3357.2345623439746, 2.315, 36.393469387755104, 28342.402109453666);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 991, 37040.92482951755, 2561.930839593645, 2.215, 40.25795918367347, 32734.263997016064);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 995, 37596.33814074406, 3343.6431973830745, 2.28, 41.878367346938774, 29496.314103651886);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 1000, 35943.24937781106, 2469.0426075990363, 2.315, 40.38938775510204, 29496.314103651886);

        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[59, 61, 76, 11, 19, 56, 6, 8, 86, 50, 60, 80, 24, 84, 67, 72, 43, 49, 77, 51, 95, 29, 38, 4, 36, 32, 75, 12, 94, 81, 63, 39, 53, 1, 68, 57, 27, 92, 7, 91, 74, 18, 3, 25, 65, 64, 69, 21, 15, 87, 78, 17, 93, 52, 89, 48, 5, 62, 20, 73, 58, 16, 14, 10, 90, 97, 22, 31, 44, 46, 71, 83, 9, 0, 66, 41, 88, 30, 79, 55, 96, 37, 98, 35, 23, 85, 26, 34, 82, 54, 33, 42, 2, 45, 13, 99, 70, 40, 47, 28, 59]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[4, 36, 32, 75, 12, 94, 81, 1, 68, 24, 80, 60, 50, 86, 56, 6, 8, 29, 84, 67, 72, 49, 43, 63, 39, 53, 57, 92, 27, 66, 41, 88, 30, 79, 91, 74, 18, 52, 21, 15, 87, 78, 17, 93, 69, 65, 64, 3, 25, 96, 55, 7, 0, 62, 48, 5, 89, 83, 9, 20, 73, 58, 16, 14, 10, 71, 35, 37, 23, 98, 31, 44, 90, 97, 22, 46, 76, 59, 61, 34, 26, 85, 11, 19, 54, 82, 33, 42, 2, 28, 45, 13, 99, 70, 40, 47, 51, 77, 95, 38, 4]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[60, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 13, 99, 70, 40, 47, 51, 77, 95, 38, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 43, 49, 72, 67, 84, 24, 80, 19, 11, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 3, 25, 96, 55, 7, 0, 62, 48, 5, 89, 83, 9, 78, 52, 18, 74, 91, 88, 30, 79, 41, 66, 27, 92, 46, 98, 57, 68, 29, 60]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[4, 36, 32, 75, 12, 94, 81, 1, 63, 53, 39, 68, 72, 43, 49, 67, 84, 38, 29, 99, 13, 28, 33, 54, 82, 11, 85, 26, 34, 19, 8, 6, 56, 86, 50, 60, 80, 24, 57, 66, 27, 92, 46, 97, 90, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 78, 52, 87, 15, 21, 93, 17, 23, 37, 35, 98, 69, 65, 64, 3, 96, 55, 74, 18, 5, 48, 89, 62, 91, 7, 0, 41, 88, 30, 79, 25, 22, 44, 59, 61, 76, 45, 2, 42, 40, 70, 47, 51, 77, 95, 4]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[96, 55, 79, 30, 88, 41, 7, 62, 48, 5, 74, 18, 3, 65, 64, 25, 15, 21, 93, 69, 87, 78, 23, 37, 35, 71, 73, 58, 20, 16, 14, 10, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 11, 19, 8, 6, 56, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 29, 13, 2, 42, 45, 28, 33, 82, 54, 70, 40, 99, 47, 95, 77, 51, 36, 4, 12, 94, 81, 32, 75, 57, 66, 27, 92, 46, 0, 91, 89, 9, 83, 98, 17, 52, 96]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[69, 21, 93, 87, 15, 78, 17, 37, 23, 98, 35, 83, 9, 89, 5, 48, 62, 46, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 11, 19, 56, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 4, 36, 32, 75, 12, 94, 81, 51, 77, 95, 47, 99, 70, 40, 28, 45, 2, 42, 13, 29, 33, 54, 82, 8, 6, 57, 92, 27, 66, 0, 91, 74, 96, 55, 79, 30, 88, 41, 7, 18, 52, 3, 64, 25, 65, 71, 69]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[13, 99, 40, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 72, 49, 43, 67, 84, 38, 29, 28, 33, 54, 82, 11, 26, 85, 34, 19, 8, 6, 56, 86, 50, 60, 80, 24, 57, 66, 27, 92, 46, 90, 97, 22, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 98, 35, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 96, 74, 18, 3, 55, 79, 30, 88, 41, 7, 0, 91, 62, 48, 5, 89, 59, 61, 76, 2, 42, 45, 13]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 67, 84, 38, 29, 13, 42, 45, 2, 28, 33, 54, 82, 11, 26, 85, 19, 8, 6, 56, 86, 50, 60, 80, 24, 57, 92, 27, 66, 91, 7, 0, 62, 89, 5, 48, 9, 83, 71, 73, 58, 20, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 46, 35, 98, 17, 23, 37, 78, 52, 87, 15, 21, 93, 69, 65, 64, 3, 96, 55, 74, 18, 25, 79, 30, 88, 41, 53, 39, 63, 68, 40, 70, 99, 47, 51]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[98, 35, 37, 23, 17, 87, 15, 21, 93, 69, 52, 78, 83, 71, 73, 58, 20, 10, 16, 14, 44, 31, 90, 97, 22, 76, 59, 61, 34, 26, 85, 19, 11, 54, 82, 33, 28, 45, 70, 99, 47, 13, 2, 42, 40, 77, 51, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 72, 67, 84, 38, 29, 8, 6, 56, 86, 50, 60, 80, 24, 68, 63, 39, 53, 79, 30, 88, 41, 7, 74, 96, 55, 18, 3, 64, 65, 25, 62, 48, 5, 89, 9, 46, 92, 27, 57, 66, 0, 91, 98]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[83, 9, 89, 5, 48, 62, 46, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 11, 19, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 99, 70, 13, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 67, 84, 38, 29, 86, 50, 60, 80, 24, 72, 63, 39, 53, 68, 57, 92, 27, 66, 0, 91, 74, 18, 52, 87, 15, 21, 78, 17, 37, 23, 98, 35, 93, 69, 65, 64, 3, 96, 55, 41, 88, 30, 79, 7, 25, 71, 83]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[43, 72, 49, 39, 63, 53, 68, 60, 50, 80, 24, 57, 66, 27, 92, 46, 90, 97, 22, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 98, 35, 37, 23, 17, 78, 52, 87, 93, 69, 21, 15, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 0, 91, 62, 48, 5, 89, 59, 61, 76, 86, 8, 6, 56, 19, 11, 26, 85, 34, 82, 54, 33, 28, 45, 2, 42, 70, 40, 99, 13, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 67, 84, 38, 29, 43]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[29, 38, 4, 36, 32, 75, 12, 94, 81, 1, 43, 67, 84, 24, 80, 60, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 51, 77, 95, 72, 49, 39, 53, 63, 68, 57, 92, 27, 66, 97, 22, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 23, 37, 35, 98, 17, 93, 87, 15, 21, 69, 52, 18, 74, 96, 55, 79, 30, 88, 41, 7, 0, 91, 62, 89, 5, 48, 3, 64, 65, 25, 78, 46, 59, 61, 76, 19, 11, 26, 85, 34, 29]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[95, 77, 51, 29, 38, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 80, 24, 60, 50, 86, 56, 6, 8, 54, 82, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 48, 5, 62, 46, 92, 27, 57, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 52, 78, 17, 23, 37, 35, 98, 87, 15, 21, 69, 93, 65, 64, 25, 3, 89, 33, 28, 45, 2, 42, 40, 70, 99, 13, 47, 4, 36, 32, 75, 12, 94, 81, 19, 95]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[95, 77, 51, 36, 4, 47, 99, 70, 40, 13, 42, 2, 45, 28, 33, 11, 54, 82, 19, 56, 6, 8, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 57, 92, 27, 66, 0, 91, 74, 18, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 96, 55, 41, 88, 30, 79, 7, 5, 62, 48, 89, 78, 17, 37, 23, 98, 35, 83, 9, 71, 73, 58, 20, 10, 16, 14, 22, 97, 90, 44, 31, 46, 76, 59, 61, 34, 26, 85, 67, 84, 38, 29, 81, 32, 75, 12, 94, 95]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[14, 16, 10, 90, 97, 22, 44, 31, 46, 62, 48, 5, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0, 27, 92, 66, 57, 24, 80, 60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 82, 54, 33, 28, 2, 45, 42, 70, 40, 99, 13, 47, 29, 38, 4, 36, 32, 75, 12, 94, 81, 51, 77, 95, 84, 67, 72, 49, 43, 1, 63, 39, 53, 68, 89, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 17, 23, 37, 35, 83, 9, 71, 73, 20, 58, 98, 14]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[53, 39, 63, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 11, 26, 85, 34, 82, 54, 33, 28, 13, 70, 40, 99, 47, 38, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 67, 84, 2, 45, 42, 61, 59, 76, 57, 66, 27, 92, 46, 97, 90, 22, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 23, 37, 35, 98, 17, 87, 15, 21, 93, 69, 52, 18, 74, 96, 55, 30, 79, 88, 41, 7, 0, 91, 62, 89, 5, 48, 3, 64, 65, 25, 78, 53]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 86, 50, 60, 80, 24, 72, 49, 43, 67, 84, 38, 29, 95, 77, 51, 36, 4, 12, 94, 81, 1, 53, 39, 63, 68, 57, 92, 27, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 48, 5, 62, 46, 31, 10, 16, 14, 20, 71, 73, 58, 83, 9, 23, 37, 35, 98, 17, 87, 15, 21, 93, 69, 52, 78, 65, 64, 25, 3, 89, 90, 97, 22, 44, 59, 76, 61, 34, 26, 85, 19, 11, 47, 70, 99, 40, 75, 32, 13]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 24, 80, 60, 50, 86, 56, 6, 8, 19, 11, 26, 85, 34, 61, 76, 59, 22, 90, 44, 97, 46, 31, 10, 16, 14, 20, 73, 58, 83, 9, 89, 5, 62, 48, 0, 91, 74, 96, 55, 79, 30, 88, 41, 7, 18, 3, 64, 25, 65, 69, 52, 87, 15, 21, 93, 78, 17, 37, 23, 98, 35, 71, 92, 27, 57, 66, 54, 82, 33, 28, 13, 2, 45, 42, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 38, 29, 84]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 11, 26, 85, 34, 61, 59, 76, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 89, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 55, 79, 30, 88, 41, 7, 74, 96, 18, 17, 23, 37, 35, 98, 62, 48, 5, 91, 0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 19, 22, 97, 90, 46, 80, 24, 72, 49, 43, 1, 63, 39, 53, 68, 67, 84, 38, 4, 36, 51, 77, 95, 29, 81, 32, 75, 12, 94, 47]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[26, 85, 19, 11, 54, 82, 33, 28, 13, 42, 45, 2, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 38, 29, 67, 84, 49, 43, 72, 86, 56, 8, 6, 80, 24, 50, 60, 68, 63, 39, 53, 1, 57, 92, 27, 66, 91, 7, 0, 62, 46, 97, 90, 22, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 89, 78, 52, 18, 74, 96, 55, 79, 30, 88, 41, 3, 64, 25, 65, 69, 21, 93, 87, 15, 23, 17, 37, 35, 98, 5, 48, 59, 61, 76, 34, 26]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 24, 80, 50, 60, 57, 92, 27, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 48, 5, 62, 46, 97, 90, 44, 31, 10, 16, 14, 20, 71, 73, 58, 83, 9, 23, 37, 35, 98, 17, 87, 15, 21, 93, 69, 52, 78, 65, 64, 25, 3, 89, 22, 76, 59, 61, 34, 26, 85, 19, 11, 54, 82, 8, 6, 56, 86, 2, 45, 28, 33, 42, 70, 99, 40, 13, 47, 29, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 38, 84]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[45, 42, 2, 28, 13, 47, 99, 70, 40, 4, 36, 32, 75, 12, 94, 81, 51, 77, 95, 29, 38, 72, 49, 43, 1, 53, 39, 63, 68, 57, 92, 27, 66, 0, 91, 62, 48, 5, 89, 78, 17, 93, 87, 15, 21, 69, 52, 18, 3, 65, 64, 25, 74, 96, 55, 41, 88, 30, 79, 7, 83, 9, 23, 37, 98, 35, 58, 73, 20, 71, 97, 22, 90, 44, 31, 10, 16, 14, 46, 76, 59, 61, 34, 26, 85, 19, 11, 54, 82, 33, 6, 8, 56, 86, 50, 60, 80, 24, 67, 84, 45]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[85, 26, 11, 19, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 20, 71, 58, 83, 9, 89, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 17, 23, 37, 35, 98, 62, 48, 5, 74, 18, 0, 91, 7, 41, 88, 30, 79, 55, 96, 46, 92, 27, 57, 66, 80, 24, 60, 50, 86, 8, 6, 56, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 4, 36, 32, 75, 12, 94, 81, 51, 77, 95, 84, 67, 72, 49, 43, 1, 63, 39, 53, 68, 85]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[64, 3, 65, 69, 21, 15, 87, 78, 52, 18, 74, 96, 55, 30, 79, 88, 41, 7, 0, 62, 89, 5, 48, 91, 17, 23, 37, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 39, 53, 63, 68, 67, 84, 38, 29, 24, 80, 60, 50, 86, 56, 6, 8, 57, 92, 27, 66, 46, 98, 93, 25, 64]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[61, 59, 76, 34, 26, 85, 19, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 13, 47, 29, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 49, 43, 72, 67, 84, 38, 24, 80, 50, 60, 68, 63, 39, 53, 1, 66, 57, 27, 92, 46, 97, 22, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 23, 37, 35, 98, 17, 87, 15, 21, 93, 69, 52, 78, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 48, 5, 62, 0, 18, 89, 86, 56, 6, 8, 61]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[96, 55, 41, 88, 30, 79, 91, 62, 48, 5, 74, 18, 52, 87, 15, 21, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 71, 20, 73, 58, 16, 14, 10, 31, 46, 92, 27, 66, 57, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 4, 36, 32, 75, 12, 94, 81, 51, 77, 95, 29, 28, 45, 42, 2, 70, 40, 99, 47, 13, 82, 54, 33, 11, 19, 56, 6, 8, 86, 50, 76, 59, 61, 34, 26, 85, 44, 90, 22, 97, 0, 7, 65, 64, 25, 3, 69, 96]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[20, 58, 73, 71, 9, 83, 23, 37, 35, 98, 78, 52, 87, 93, 69, 21, 15, 18, 74, 96, 55, 79, 30, 88, 41, 7, 0, 62, 48, 5, 89, 91, 3, 65, 64, 25, 17, 46, 97, 90, 44, 31, 10, 14, 16, 22, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 28, 45, 2, 42, 40, 70, 99, 13, 47, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 72, 49, 43, 1, 63, 53, 39, 68, 67, 84, 24, 80, 60, 50, 86, 8, 6, 56, 57, 66, 27, 92, 20]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 5, 48, 89, 78, 52, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 46, 31, 10, 16, 14, 73, 20, 71, 9, 83, 23, 17, 87, 15, 21, 93, 69, 65, 64, 3, 25, 37, 35, 98, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 19, 11, 54, 82, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 39, 53, 63, 68, 67, 84, 24, 80, 60, 50, 86, 56, 6, 8, 29, 38, 57, 92, 27, 66, 58, 0]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[55, 96, 18, 74, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 3, 64, 65, 25, 87, 15, 21, 93, 69, 52, 78, 17, 37, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 76, 59, 61, 34, 26, 85, 19, 11, 54, 82, 33, 28, 45, 70, 99, 40, 2, 42, 13, 47, 29, 38, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 49, 43, 1, 53, 39, 63, 68, 72, 67, 84, 8, 6, 56, 86, 50, 60, 80, 24, 27, 92, 66, 57, 46, 44, 89, 23, 98, 55]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[57, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 47, 99, 70, 40, 45, 2, 42, 13, 29, 28, 33, 54, 82, 85, 26, 19, 11, 6, 8, 56, 86, 50, 76, 59, 61, 34, 44, 22, 97, 90, 31, 10, 16, 14, 73, 58, 20, 71, 83, 9, 89, 5, 48, 62, 46, 92, 27, 66, 0, 91, 74, 96, 55, 30, 79, 88, 41, 7, 18, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 78, 17, 37, 23, 98, 35, 57]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[35, 37, 23, 17, 78, 52, 87, 93, 21, 15, 69, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 0, 91, 62, 48, 5, 74, 18, 89, 83, 9, 71, 73, 20, 58, 10, 14, 16, 31, 44, 97, 90, 22, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 28, 2, 45, 42, 40, 99, 47, 70, 13, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 72, 49, 43, 1, 63, 39, 53, 68, 67, 84, 8, 6, 56, 86, 50, 60, 80, 24, 57, 66, 27, 92, 46, 98, 35]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[78, 52, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 46, 0, 5, 48, 89, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 54, 82, 33, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 39, 53, 63, 68, 67, 84, 38, 29, 2, 45, 42, 26, 85, 34, 6, 8, 56, 86, 50, 60, 80, 24, 57, 66, 27, 92, 3, 65, 64, 25, 87, 15, 21, 93, 17, 37, 23, 98, 35, 69, 78]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[6, 56, 86, 50, 60, 80, 24, 72, 49, 43, 67, 84, 38, 29, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 1, 53, 39, 63, 68, 57, 27, 92, 66, 0, 5, 48, 62, 46, 31, 10, 14, 16, 73, 20, 71, 58, 37, 98, 35, 17, 23, 93, 21, 15, 87, 78, 52, 65, 64, 25, 3, 96, 55, 41, 88, 30, 79, 74, 91, 7, 89, 9, 83, 18, 69, 97, 90, 44, 22, 76, 59, 61, 34, 26, 85, 19, 11, 54, 82, 33, 28, 45, 2, 42, 13, 47, 99, 40, 70, 8, 6]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[85, 26, 19, 56, 6, 8, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 57, 92, 27, 66, 0, 91, 62, 48, 5, 89, 83, 9, 23, 37, 98, 35, 17, 93, 21, 15, 87, 78, 52, 18, 3, 64, 25, 65, 69, 96, 55, 30, 88, 41, 7, 74, 79, 71, 20, 73, 58, 16, 14, 10, 31, 90, 44, 22, 97, 46, 76, 59, 61, 34, 82, 54, 33, 42, 2, 45, 28, 13, 47, 70, 40, 99, 38, 4, 36, 32, 75, 12, 94, 81, 51, 77, 95, 29, 84, 67, 11, 85]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[75, 12, 32, 4, 36, 77, 51, 95, 29, 38, 84, 67, 49, 72, 43, 1, 63, 39, 53, 68, 60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 46, 0, 91, 7, 41, 30, 79, 88, 55, 74, 96, 3, 65, 64, 25, 69, 21, 15, 87, 93, 17, 23, 37, 35, 83, 9, 71, 20, 73, 58, 10, 14, 16, 98, 78, 52, 18, 5, 48, 89, 62, 92, 27, 57, 66, 80, 24, 33, 54, 82, 42, 2, 45, 28, 13, 70, 40, 99, 47, 94, 81, 75]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[45, 2, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 39, 53, 63, 68, 80, 24, 50, 60, 6, 8, 56, 86, 59, 61, 76, 22, 97, 90, 44, 16, 14, 10, 31, 46, 0, 5, 48, 89, 83, 9, 71, 20, 73, 58, 35, 98, 17, 93, 87, 15, 21, 69, 52, 78, 23, 37, 62, 74, 18, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 92, 27, 66, 57, 19, 11, 26, 85, 34, 82, 54, 33, 42, 29, 38, 67, 84, 45]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[34, 26, 85, 19, 11, 54, 82, 33, 28, 45, 2, 42, 13, 70, 99, 40, 47, 29, 38, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 49, 72, 43, 67, 84, 8, 6, 56, 86, 50, 60, 80, 24, 39, 63, 53, 68, 57, 27, 92, 66, 0, 5, 48, 62, 46, 97, 90, 44, 31, 10, 16, 14, 73, 20, 58, 71, 83, 9, 23, 37, 35, 98, 17, 87, 15, 21, 69, 52, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 89, 78, 93, 3, 64, 65, 25, 22, 76, 59, 61, 1, 34]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[18, 3, 64, 25, 65, 69, 21, 15, 87, 78, 52, 89, 5, 48, 62, 46, 31, 10, 16, 14, 73, 58, 20, 71, 83, 9, 23, 37, 98, 35, 17, 93, 74, 96, 55, 30, 79, 88, 41, 7, 91, 0, 92, 27, 57, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 47, 99, 70, 40, 45, 2, 42, 29, 28, 13, 82, 54, 33, 56, 6, 8, 86, 50, 76, 59, 61, 34, 26, 85, 11, 19, 22, 90, 97, 44, 66, 18]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 91, 0, 62, 48, 5, 89, 83, 9, 71, 20, 73, 58, 10, 14, 16, 90, 97, 22, 44, 31, 46, 76, 59, 61, 34, 26, 85, 11, 54, 82, 33, 28, 2, 42, 45, 70, 40, 99, 13, 47, 29, 38, 4, 36, 32, 75, 12, 94, 81, 51, 77, 95, 84, 67, 49, 72, 43, 1, 63, 53, 39, 68, 60, 50, 86, 8, 6, 56, 19, 80, 24, 57, 27, 92, 66, 18, 74, 17, 23, 37, 98, 35, 78]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[25, 3, 64, 65, 69, 21, 15, 87, 78, 52, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 71, 73, 58, 20, 10, 16, 14, 46, 0, 66, 57, 60, 50, 86, 56, 6, 8, 54, 82, 33, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 39, 53, 63, 68, 80, 24, 67, 84, 38, 29, 2, 45, 42, 26, 85, 19, 11, 34, 61, 59, 76, 22, 97, 90, 31, 44, 27, 92, 23, 17, 37, 35, 98, 93, 25]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 48, 5, 62, 46, 97, 90, 44, 22, 76, 59, 61, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 80, 24, 67, 84, 38, 29, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 57, 27, 92, 66, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 8, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 23, 37, 98, 35, 17, 87, 15, 21, 93, 69, 52, 78, 65, 64, 25, 3, 89, 0]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[71, 20, 73, 58, 16, 14, 10, 31, 90, 44, 22, 97, 46, 92, 27, 57, 60, 80, 24, 67, 84, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 39, 63, 53, 68, 50, 86, 56, 6, 8, 54, 82, 33, 42, 2, 45, 28, 13, 99, 70, 40, 47, 29, 76, 59, 61, 34, 26, 85, 19, 11, 72, 66, 0, 62, 48, 5, 89, 83, 9, 23, 37, 98, 35, 17, 93, 87, 15, 21, 69, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 74, 18, 52, 78, 71]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[89, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 0, 62, 5, 48, 74, 18, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 10, 14, 16, 90, 97, 22, 44, 31, 46, 92, 27, 57, 66, 80, 24, 60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 54, 82, 33, 28, 2, 42, 45, 70, 40, 99, 13, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 72, 43, 1, 63, 39, 53, 68, 89]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[5, 48, 89, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 39, 53, 63, 68, 60, 50, 86, 8, 6, 56, 67, 84, 38, 29, 24, 80, 57, 66, 46, 0, 62, 91, 7, 41, 30, 79, 55, 74, 18, 52, 87, 15, 21, 93, 78, 17, 23, 37, 35, 98, 69, 65, 64, 3, 96, 88, 25, 92, 27, 5]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[44, 22, 97, 90, 46, 76, 59, 61, 34, 26, 85, 11, 19, 56, 6, 8, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 47, 99, 40, 70, 13, 2, 45, 28, 33, 82, 54, 42, 57, 92, 27, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 5, 48, 62, 74, 18, 52, 78, 17, 37, 98, 35, 71, 73, 20, 58, 10, 14, 16, 31, 83, 9, 23, 93, 21, 15, 87, 69, 89, 44]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[45, 42, 2, 28, 13, 99, 70, 40, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 43, 1, 53, 39, 63, 68, 24, 80, 60, 50, 86, 56, 6, 8, 54, 82, 33, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 73, 20, 71, 83, 9, 89, 48, 5, 62, 46, 92, 27, 66, 0, 91, 74, 96, 55, 30, 79, 88, 41, 7, 18, 3, 64, 65, 25, 69, 21, 15, 87, 78, 52, 93, 17, 37, 23, 98, 35, 58, 57, 19, 29, 38, 72, 67, 84, 45]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[40, 70, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 72, 49, 43, 67, 84, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 20, 58, 46, 62, 5, 48, 74, 18, 52, 78, 17, 23, 37, 98, 35, 83, 9, 71, 89, 0, 91, 7, 41, 88, 30, 79, 55, 96, 3, 65, 64, 25, 69, 87, 93, 21, 15, 92, 27, 57, 66, 80, 24, 86, 50, 60, 33, 54, 82, 42, 2, 45, 28, 13, 40]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[5, 48, 89, 78, 52, 87, 15, 21, 93, 17, 37, 23, 98, 35, 83, 9, 71, 73, 20, 10, 14, 16, 31, 90, 97, 22, 46, 92, 27, 57, 66, 80, 24, 50, 60, 6, 8, 56, 86, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 39, 53, 63, 68, 67, 84, 38, 29, 76, 59, 61, 34, 85, 26, 11, 19, 44, 58, 0, 91, 7, 55, 96, 18, 74, 64, 25, 3, 65, 69, 62, 79, 30, 88, 41, 5]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[62, 5, 48, 89, 78, 17, 23, 37, 35, 58, 73, 20, 71, 83, 9, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 64, 65, 25, 3, 52, 87, 15, 21, 93, 69, 98, 31, 10, 14, 16, 90, 97, 44, 22, 76, 59, 61, 34, 26, 85, 11, 19, 56, 6, 8, 54, 82, 33, 28, 45, 70, 99, 40, 47, 13, 2, 42, 29, 38, 95, 77, 51, 36, 4, 12, 75, 32, 94, 81, 1, 43, 49, 72, 67, 84, 86, 50, 60, 80, 24, 68, 63, 39, 53, 66, 57, 92, 27, 46, 62]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[97, 22, 90, 44, 31, 10, 16, 14, 20, 73, 58, 83, 9, 89, 48, 5, 62, 46, 92, 27, 66, 57, 60, 80, 24, 67, 84, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 72, 39, 63, 53, 68, 50, 86, 56, 6, 8, 19, 11, 26, 85, 34, 61, 76, 59, 54, 82, 33, 42, 45, 2, 28, 13, 99, 70, 40, 47, 29, 0, 91, 74, 18, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 78, 17, 37, 23, 98, 35, 71, 97]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[81, 12, 32, 75, 94, 36, 4, 95, 77, 51, 29, 38, 84, 67, 49, 72, 43, 1, 53, 39, 63, 68, 60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 20, 71, 83, 9, 89, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 0, 91, 62, 5, 48, 74, 18, 17, 23, 37, 98, 35, 58, 46, 92, 27, 57, 66, 80, 24, 33, 54, 82, 28, 2, 42, 45, 70, 40, 99, 47, 13, 81]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[78, 52, 3, 65, 64, 25, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 71, 73, 20, 10, 16, 14, 58, 35, 98, 37, 23, 17, 87, 15, 21, 93, 69, 18, 0, 66, 80, 24, 60, 50, 86, 56, 8, 6, 19, 11, 54, 82, 33, 28, 13, 99, 70, 40, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 39, 53, 63, 68, 67, 84, 38, 29, 45, 2, 42, 26, 85, 34, 61, 59, 22, 97, 90, 44, 31, 46, 92, 27, 57, 76, 78]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 65, 25, 15, 87, 78, 17, 23, 37, 35, 98, 9, 83, 71, 20, 58, 73, 16, 14, 10, 31, 90, 97, 44, 22, 76, 59, 61, 34, 26, 85, 11, 19, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 13, 70, 99, 40, 47, 29, 38, 95, 77, 51, 36, 4, 12, 75, 32, 94, 81, 49, 72, 43, 67, 84, 86, 50, 60, 80, 24, 68, 63, 39, 53, 1, 57, 27, 92, 66, 0, 46, 62, 5, 48, 89, 52, 21, 69, 93, 91]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 46, 74, 18, 52, 78, 17, 93, 87, 15, 21, 69, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 62, 48, 5, 89, 0, 92, 27, 66, 57, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 50, 86, 56, 6, 8, 54, 82, 33, 42, 2, 28, 45, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 38, 29, 76, 59, 61, 34, 26, 85, 11, 19, 22, 90, 97, 44, 37, 23, 98, 35, 83]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[3, 65, 64, 25, 69, 21, 15, 87, 78, 52, 89, 83, 9, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 76, 59, 61, 34, 85, 26, 11, 54, 82, 33, 28, 2, 45, 42, 13, 99, 40, 70, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 72, 43, 1, 63, 39, 53, 68, 60, 50, 86, 8, 6, 56, 19, 80, 24, 57, 27, 92, 66, 46, 62, 5, 48, 74, 18, 17, 23, 37, 35, 98, 93, 55, 30, 79, 88, 41, 7, 91, 0, 96, 3]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[39, 53, 63, 68, 60, 50, 86, 56, 6, 8, 54, 82, 33, 28, 13, 99, 70, 40, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 67, 84, 38, 29, 45, 2, 42, 26, 85, 19, 11, 34, 61, 59, 76, 22, 97, 90, 44, 16, 14, 10, 31, 46, 0, 66, 57, 92, 27, 5, 48, 89, 78, 52, 87, 15, 21, 93, 17, 23, 37, 35, 83, 9, 71, 20, 73, 58, 98, 69, 64, 25, 3, 65, 96, 55, 30, 79, 88, 41, 7, 91, 62, 74, 18, 24, 80, 39]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[81, 49, 72, 43, 1, 53, 39, 63, 68, 80, 24, 50, 60, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 48, 5, 62, 46, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 23, 37, 35, 98, 17, 87, 15, 21, 93, 69, 52, 78, 64, 65, 25, 3, 89, 90, 97, 22, 76, 59, 61, 34, 26, 85, 19, 11, 54, 82, 33, 28, 45, 2, 42, 13, 70, 99, 40, 47, 29, 95, 77, 51, 36, 4, 12, 94, 32, 75, 38, 84, 67, 86, 56, 6, 8, 81]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 42, 2, 45, 13, 99, 70, 40, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 72, 67, 84, 38, 29, 28, 19, 11, 26, 85, 34, 61, 76, 59, 22, 90, 97, 44, 31, 10, 16, 14, 73, 58, 20, 71, 83, 9, 89, 48, 5, 62, 46, 92, 27, 66, 57, 0, 91, 74, 18, 52, 87, 15, 21, 93, 78, 17, 23, 37, 98, 35, 69, 65, 64, 3, 96, 55, 30, 79, 88, 41, 7, 25, 53, 39, 63, 68, 60]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[81, 84, 67, 49, 72, 43, 1, 63, 53, 39, 68, 80, 24, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 46, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 52, 78, 15, 21, 93, 87, 69, 65, 64, 25, 3, 89, 83, 9, 71, 20, 73, 58, 10, 14, 16, 98, 35, 37, 23, 17, 62, 5, 48, 92, 27, 57, 66, 60, 33, 54, 82, 28, 2, 42, 45, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 38, 29, 81]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[69, 21, 15, 87, 93, 17, 23, 37, 35, 83, 9, 71, 73, 58, 20, 10, 16, 14, 46, 0, 62, 5, 48, 89, 78, 52, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 66, 57, 92, 27, 60, 24, 80, 86, 50, 8, 6, 56, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 39, 53, 63, 68, 67, 84, 38, 29, 76, 59, 61, 22, 97, 90, 44, 31, 98, 3, 64, 65, 25, 69]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[39, 63, 68, 80, 24, 67, 84, 38, 29, 95, 77, 51, 36, 4, 12, 75, 32, 94, 81, 1, 43, 49, 72, 53, 66, 57, 60, 50, 86, 56, 8, 6, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 73, 20, 58, 71, 83, 9, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 65, 25, 15, 87, 93, 21, 69, 52, 78, 17, 23, 37, 35, 98, 89, 46, 92, 27, 54, 82, 33, 28, 2, 42, 45, 13, 70, 99, 40, 47, 39]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 91, 62, 48, 89, 5, 74, 18, 52, 87, 15, 21, 93, 78, 17, 37, 23, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 44, 22, 90, 97, 46, 92, 27, 66, 57, 60, 80, 24, 86, 56, 6, 8, 19, 11, 26, 85, 34, 61, 76, 59, 54, 82, 33, 28, 45, 42, 2, 13, 99, 70, 40, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 43, 1, 53, 39, 63, 72, 67, 84, 38, 29, 68, 50, 30, 79, 88, 41, 7, 96, 55, 64, 3, 65, 25, 69, 0]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 72, 43, 1, 63, 39, 53, 68, 60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 89, 78, 52, 87, 93, 69, 21, 15, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 0, 91, 62, 5, 48, 18, 74, 17, 23, 37, 35, 98, 46, 92, 27, 57, 66, 80, 24, 33, 82, 54, 45, 42, 2, 28, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[89, 48, 5, 62, 91, 7, 41, 30, 79, 88, 55, 74, 96, 18, 52, 78, 87, 15, 21, 93, 17, 23, 37, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 99, 40, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 67, 84, 38, 29, 56, 6, 8, 86, 50, 60, 80, 24, 68, 63, 39, 53, 66, 57, 92, 27, 46, 0, 25, 3, 64, 65, 69, 98, 89]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[11, 26, 85, 34, 61, 59, 76, 8, 6, 56, 86, 50, 60, 24, 80, 66, 57, 27, 92, 0, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 87, 15, 21, 93, 69, 52, 78, 17, 23, 37, 35, 71, 73, 20, 58, 16, 14, 10, 31, 90, 97, 22, 44, 46, 62, 48, 5, 74, 18, 89, 9, 83, 98, 19, 82, 54, 33, 28, 45, 42, 2, 13, 70, 99, 40, 47, 29, 38, 84, 67, 72, 49, 43, 1, 53, 63, 39, 68, 81, 94, 32, 75, 12, 4, 36, 51, 77, 95, 11]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[48, 5, 62, 46, 31, 10, 16, 14, 73, 20, 71, 83, 9, 89, 78, 17, 37, 23, 98, 35, 58, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 11, 19, 56, 6, 8, 86, 50, 60, 80, 24, 67, 84, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 57, 27, 92, 0, 91, 74, 18, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 66, 72, 43, 49, 29, 28, 45, 42, 2, 13, 99, 70, 40, 47, 33, 54, 82, 48]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 72, 43, 1, 63, 39, 53, 68, 60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 20, 58, 83, 9, 71, 23, 37, 35, 98, 87, 15, 21, 93, 69, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 0, 62, 48, 5, 74, 18, 52, 78, 17, 89, 46, 92, 27, 57, 66, 80, 24, 82, 54, 33, 28, 2, 42, 45, 13, 99, 70, 40, 47, 29, 38, 51, 77]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[13, 99, 70, 40, 2, 28, 45, 42, 54, 82, 33, 84, 67, 49, 43, 72, 24, 80, 60, 50, 86, 56, 6, 8, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 20, 71, 35, 37, 23, 17, 87, 15, 21, 93, 78, 52, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 58, 98, 69, 65, 64, 3, 25, 0, 46, 92, 27, 57, 66, 39, 53, 63, 68, 1, 81, 94, 12, 32, 75, 36, 4, 95, 77, 51, 38, 29, 47, 13]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[6, 56, 86, 50, 60, 24, 80, 72, 67, 84, 38, 29, 95, 77, 51, 36, 4, 12, 75, 32, 94, 81, 1, 43, 49, 39, 63, 53, 68, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 48, 5, 62, 46, 44, 31, 10, 16, 14, 73, 20, 71, 58, 83, 9, 23, 37, 98, 35, 17, 87, 15, 21, 93, 69, 52, 78, 64, 65, 25, 3, 89, 90, 97, 22, 76, 59, 61, 34, 26, 85, 19, 11, 54, 82, 33, 28, 45, 2, 42, 13, 70, 40, 99, 47, 8, 6]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[78, 17, 37, 23, 98, 35, 83, 9, 89, 5, 48, 62, 46, 92, 27, 66, 57, 60, 80, 24, 86, 56, 6, 8, 54, 82, 33, 42, 2, 28, 45, 13, 99, 70, 40, 47, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 72, 67, 84, 38, 29, 76, 59, 61, 34, 26, 85, 11, 19, 50, 68, 63, 39, 53, 41, 88, 30, 79, 55, 74, 18, 3, 64, 25, 65, 69, 21, 15, 87, 93, 52, 73, 20, 71, 58, 16, 14, 10, 31, 44, 22, 90, 97, 0, 91, 7, 96, 78]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[44, 22, 97, 90, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 89, 78, 52, 87, 93, 69, 21, 15, 65, 64, 25, 3, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 48, 5, 0, 92, 27, 57, 66, 80, 24, 50, 60, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 72, 43, 1, 63, 39, 53, 68, 46, 35, 37, 23, 17, 98, 44]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[42, 45, 2, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 39, 53, 63, 68, 80, 24, 50, 60, 86, 56, 6, 8, 76, 59, 61, 34, 26, 85, 19, 11, 82, 54, 33, 84, 67, 57, 92, 27, 66, 91, 7, 41, 88, 30, 79, 55, 74, 96, 3, 64, 25, 65, 69, 21, 15, 87, 93, 17, 37, 23, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 90, 97, 22, 44, 62, 5, 48, 89, 78, 52, 18, 0, 46, 29, 38, 42]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[80, 24, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 36, 4, 12, 75, 32, 94, 81, 49, 43, 1, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 48, 5, 62, 46, 31, 10, 16, 14, 73, 58, 20, 71, 83, 9, 23, 37, 35, 98, 17, 87, 15, 21, 93, 69, 52, 78, 64, 65, 25, 3, 89, 90, 97, 44, 22, 76, 59, 61, 34, 26, 85, 19, 11, 50, 60, 72, 67, 84, 80]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 31, 10, 16, 14, 73, 58, 20, 71, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 11, 54, 82, 33, 42, 2, 45, 13, 99, 70, 40, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 39, 63, 53, 68, 67, 84, 38, 29, 28, 19, 56, 6, 8, 86, 50, 60, 80, 24, 72, 57, 27, 92, 66, 91, 7, 41, 88, 30, 79, 55, 74, 18, 52, 87, 15, 21, 69, 93, 3, 65, 64, 25, 96, 0, 78]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[5, 48, 89, 83, 9, 71, 73, 58, 16, 14, 10, 31, 44, 22, 97, 90, 46, 0, 91, 7, 41, 30, 79, 88, 55, 74, 18, 52, 87, 93, 21, 15, 69, 65, 64, 25, 3, 96, 78, 17, 23, 37, 98, 35, 20, 62, 92, 27, 57, 66, 80, 24, 50, 60, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 54, 82, 33, 28, 2, 42, 45, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 72, 43, 1, 63, 39, 53, 68, 5]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 76, 59, 61, 34, 26, 85, 19, 11, 54, 82, 33, 42, 45, 2, 28, 13, 99, 70, 40, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 39, 53, 63, 68, 80, 24, 50, 60, 86, 56, 6, 8, 29, 38, 84, 67, 57, 92, 27, 66, 91, 7, 0, 5, 48, 89, 78, 52, 18, 74, 96, 55, 30, 79, 88, 41, 62, 46, 44, 37, 23, 17, 93, 21, 15, 87, 69, 65, 64, 3, 25, 98]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[47, 13, 70, 99, 40, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 86, 50, 60, 24, 80, 72, 43, 49, 67, 84, 38, 29, 95, 77, 51, 36, 4, 12, 94, 81, 1, 53, 39, 63, 68, 57, 27, 92, 66, 0, 46, 62, 5, 48, 89, 78, 17, 23, 37, 35, 58, 73, 20, 71, 83, 9, 52, 18, 74, 96, 55, 91, 7, 41, 88, 30, 79, 3, 64, 65, 25, 15, 21, 93, 69, 87, 98, 14, 16, 10, 31, 90, 97, 44, 22, 76, 59, 61, 34, 26, 85, 19, 11, 32, 75, 47]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[31, 90, 44, 97, 22, 46, 92, 27, 57, 60, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 29, 28, 13, 99, 70, 40, 47, 2, 45, 42, 85, 26, 34, 61, 76, 59, 19, 11, 54, 82, 33, 56, 6, 8, 86, 50, 66, 0, 91, 62, 48, 5, 89, 83, 9, 71, 20, 73, 58, 16, 14, 10, 98, 35, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 74, 18, 31]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[83, 9, 89, 78, 52, 87, 93, 21, 15, 69, 65, 64, 25, 3, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 5, 48, 71, 20, 58, 73, 16, 14, 10, 90, 97, 22, 44, 31, 46, 92, 27, 57, 66, 80, 24, 50, 60, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 54, 82, 33, 28, 2, 45, 42, 13, 99, 40, 70, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 72, 67, 84, 68, 63, 39, 53, 1, 43, 0, 17, 23, 37, 35, 98, 83]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[62, 5, 48, 89, 78, 52, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 92, 27, 66, 57, 60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 39, 53, 63, 68, 67, 84, 38, 29, 24, 80, 76, 59, 61, 44, 97, 90, 31, 10, 14, 16, 73, 20, 71, 83, 9, 58, 98, 35, 37, 23, 17, 87, 15, 21, 93, 69, 65, 64, 3, 25, 0, 46, 22, 62]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[70, 99, 40, 47, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 86, 50, 60, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 48, 5, 62, 46, 97, 90, 44, 31, 10, 14, 16, 73, 20, 58, 71, 83, 9, 23, 37, 35, 98, 17, 87, 15, 21, 93, 69, 52, 78, 64, 65, 25, 3, 89, 61, 59, 76, 34, 26, 85, 19, 11, 22, 67, 84, 38, 29, 95, 77, 51, 36, 4, 12, 94, 81, 32, 75, 70]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[18, 52, 87, 15, 21, 93, 78, 17, 37, 23, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 46, 92, 27, 66, 57, 60, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 29, 45, 13, 2, 42, 40, 70, 99, 47, 33, 28, 26, 85, 11, 19, 56, 6, 8, 54, 82, 34, 61, 76, 59, 86, 50, 0, 91, 62, 48, 5, 89, 74, 96, 55, 30, 79, 88, 41, 7, 65, 64, 3, 25, 69, 18]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 72, 43, 1, 53, 39, 63, 68, 60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 89, 48, 5, 62, 46, 0, 91, 7, 41, 30, 79, 88, 55, 74, 96, 3, 65, 64, 25, 69, 21, 15, 87, 93, 17, 78, 52, 18, 37, 23, 98, 35, 92, 27, 57, 66, 80, 24, 82, 54, 33, 28, 2, 42, 45, 13, 99, 40, 70, 47, 29, 38, 51, 77, 95, 4]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[71, 83, 9, 89, 48, 5, 74, 96, 55, 30, 79, 88, 41, 7, 0, 91, 62, 46, 44, 97, 90, 31, 10, 14, 16, 73, 20, 58, 98, 35, 23, 37, 17, 87, 15, 21, 93, 78, 52, 18, 3, 64, 65, 25, 69, 27, 92, 66, 57, 60, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 45, 2, 42, 40, 70, 99, 47, 13, 28, 33, 54, 82, 34, 26, 85, 19, 11, 6, 8, 56, 86, 50, 76, 59, 61, 22, 71]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[29, 38, 95, 77, 51, 36, 4, 12, 75, 32, 94, 81, 1, 43, 49, 72, 67, 84, 8, 6, 56, 86, 50, 60, 24, 80, 68, 63, 39, 53, 66, 57, 27, 92, 0, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 69, 21, 15, 87, 93, 78, 17, 23, 37, 35, 58, 73, 20, 71, 83, 9, 48, 5, 62, 46, 44, 22, 97, 90, 31, 10, 14, 16, 98, 89, 52, 18, 74, 76, 59, 61, 34, 26, 85, 19, 11, 54, 82, 33, 28, 45, 2, 42, 13, 70, 40, 99, 47, 29]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[5, 48, 89, 83, 9, 23, 37, 98, 35, 58, 73, 20, 71, 10, 16, 14, 97, 22, 90, 44, 31, 46, 92, 27, 66, 57, 60, 24, 80, 50, 86, 56, 6, 8, 19, 11, 26, 85, 34, 61, 76, 59, 54, 82, 33, 42, 2, 28, 13, 99, 70, 40, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 43, 1, 53, 39, 63, 68, 72, 38, 29, 45, 7, 91, 62, 0, 74, 96, 55, 30, 79, 88, 41, 3, 64, 25, 65, 69, 21, 15, 87, 93, 78, 17, 52, 18, 5]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[3, 64, 65, 25, 69, 21, 15, 87, 93, 17, 23, 37, 98, 35, 83, 9, 89, 48, 5, 62, 46, 0, 91, 7, 41, 30, 79, 88, 55, 74, 96, 18, 52, 78, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 76, 59, 61, 34, 26, 85, 11, 54, 82, 33, 28, 2, 45, 42, 13, 99, 40, 70, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 72, 43, 1, 63, 39, 53, 68, 60, 50, 86, 8, 6, 56, 19, 80, 24, 57, 66, 27, 92, 3]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[87, 15, 21, 93, 17, 37, 23, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 46, 92, 27, 66, 57, 60, 50, 86, 56, 6, 8, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 99, 70, 40, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 39, 53, 63, 68, 67, 84, 38, 29, 24, 80, 76, 59, 61, 44, 62, 5, 48, 89, 78, 52, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 0, 25, 65, 64, 3, 69, 87]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 29, 95, 77, 51, 36, 4, 12, 75, 32, 94, 81, 47, 13, 70, 40, 99, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 86, 50, 60, 24, 80, 68, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 48, 5, 62, 46, 44, 31, 10, 14, 16, 73, 20, 71, 58, 83, 9, 23, 37, 35, 98, 17, 87, 15, 21, 93, 69, 52, 78, 64, 65, 25, 3, 89, 90, 97, 22, 76, 59, 61, 34, 26, 85, 19, 11, 63]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[82, 54, 8, 6, 11, 26, 85, 19, 56, 86, 50, 60, 80, 24, 67, 84, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 1, 43, 49, 72, 39, 63, 53, 68, 57, 27, 92, 66, 0, 91, 62, 48, 5, 89, 78, 52, 87, 15, 21, 93, 69, 65, 64, 3, 25, 79, 55, 30, 88, 41, 7, 96, 74, 18, 17, 37, 23, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 44, 22, 97, 46, 76, 59, 61, 34, 28, 13, 99, 70, 40, 47, 29, 45, 42, 2, 33, 82]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 72, 43, 1, 63, 39, 53, 68, 60, 50, 80, 24, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 46, 0, 91, 7, 41, 30, 79, 88, 55, 74, 96, 3, 65, 64, 25, 69, 21, 15, 87, 93, 17, 78, 52, 18, 5, 48, 89, 83, 9, 71, 20, 73, 58, 10, 14, 16, 98, 35, 37, 23, 62, 92, 27, 57, 66, 82, 54, 33, 28, 2, 42, 45, 13, 99, 70, 40, 47, 29, 38, 51]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[35, 98, 17, 87, 15, 21, 93, 69, 52, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 71, 73, 20, 58, 16, 14, 10, 31, 46, 92, 27, 66, 57, 60, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 45, 2, 28, 13, 70, 40, 99, 47, 11, 26, 85, 19, 34, 82, 54, 33, 42, 8, 6, 56, 86, 50, 76, 59, 61, 44, 90, 97, 22, 0, 78, 65, 64, 3, 25, 23, 37, 35]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[85, 26, 11, 6, 56, 86, 50, 60, 24, 80, 72, 67, 84, 38, 29, 95, 77, 51, 36, 4, 12, 75, 32, 94, 81, 1, 43, 49, 39, 63, 53, 68, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 48, 5, 62, 46, 31, 10, 14, 16, 73, 20, 58, 71, 83, 9, 23, 37, 98, 35, 17, 87, 15, 21, 93, 69, 52, 78, 65, 64, 25, 3, 89, 90, 97, 22, 44, 59, 61, 76, 34, 82, 54, 33, 28, 45, 42, 2, 13, 40, 70, 99, 47, 8, 19, 85]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[86, 56, 6, 8, 54, 82, 33, 28, 13, 99, 70, 40, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 72, 67, 84, 38, 29, 45, 42, 2, 85, 26, 34, 61, 76, 59, 22, 90, 97, 44, 31, 10, 16, 14, 73, 20, 71, 58, 62, 48, 5, 89, 83, 9, 23, 37, 98, 35, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 3, 64, 96, 55, 30, 79, 88, 41, 7, 91, 74, 18, 0, 46, 92, 27, 57, 60, 24, 80, 50, 66, 39, 63, 53, 68, 19, 11, 86]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[23, 37, 35, 83, 9, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 76, 59, 61, 34, 85, 26, 11, 54, 82, 33, 28, 2, 42, 45, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 72, 43, 1, 63, 39, 53, 68, 86, 8, 6, 56, 19, 80, 24, 60, 50, 57, 66, 27, 92, 0, 91, 7, 41, 88, 30, 79, 55, 74, 18, 52, 87, 93, 21, 15, 69, 65, 64, 25, 3, 96, 5, 48, 89, 78, 17, 98, 62, 46, 23]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[17, 87, 15, 21, 93, 78, 52, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 71, 73, 20, 58, 14, 16, 10, 31, 90, 97, 22, 46, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 67, 84, 38, 29, 56, 6, 8, 86, 50, 60, 24, 80, 68, 63, 39, 53, 66, 57, 92, 27, 0, 25, 3, 64, 65, 69, 23, 37, 35, 98, 17]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[79, 30, 88, 41, 7, 91, 74, 48, 5, 62, 0, 92, 27, 57, 60, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 29, 95, 77, 51, 36, 4, 12, 75, 32, 94, 81, 47, 13, 70, 40, 99, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 86, 50, 76, 59, 61, 34, 26, 85, 19, 11, 22, 97, 90, 44, 31, 10, 14, 16, 73, 20, 58, 83, 9, 71, 46, 66, 96, 55, 25, 3, 64, 65, 69, 21, 15, 87, 93, 78, 17, 37, 35, 23, 98, 89, 52, 18, 79]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[3, 65, 64, 25, 69, 21, 15, 87, 93, 78, 52, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 48, 5, 89, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 44, 22, 90, 97, 46, 92, 27, 57, 60, 80, 24, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 54, 82, 33, 28, 45, 2, 42, 40, 99, 70, 13, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 72, 67, 84, 63, 39, 53, 68, 50, 66, 0, 23, 37, 98, 35, 17, 3]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[24, 80, 72, 43, 1, 63, 39, 53, 68, 60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 20, 58, 83, 9, 71, 46, 0, 91, 7, 41, 30, 79, 88, 55, 74, 18, 52, 87, 93, 21, 15, 69, 65, 64, 25, 3, 96, 5, 48, 89, 78, 17, 23, 37, 35, 98, 62, 92, 27, 57, 66, 84, 67, 49, 94, 81, 12, 75, 32, 36, 4, 51, 77, 95, 2, 42, 45, 28, 33, 82, 54, 13, 99, 40, 70, 47, 29, 38, 24]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[97, 22, 90, 31, 10, 14, 16, 73, 20, 71, 83, 9, 89, 48, 5, 62, 46, 92, 27, 66, 57, 60, 50, 80, 24, 67, 84, 38, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 39, 53, 63, 68, 86, 56, 6, 8, 54, 82, 33, 28, 13, 99, 40, 70, 47, 2, 45, 42, 11, 26, 85, 34, 61, 59, 76, 19, 44, 58, 98, 35, 37, 23, 17, 87, 15, 21, 93, 78, 52, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 0, 25, 3, 64, 65, 69, 97]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[49, 43, 72, 67, 84, 38, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 60, 24, 80, 86, 50, 56, 6, 8, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 16, 14, 10, 31, 46, 0, 62, 5, 48, 89, 83, 9, 71, 20, 73, 58, 98, 35, 17, 23, 37, 78, 52, 21, 15, 87, 93, 69, 64, 3, 65, 25, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 92, 27, 66, 57, 54, 82, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 49]");

    }

    @Test
    public void test_mmas_mem_cycle_moving_adtsp_freq_100_mag_0_5_kroA100() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_MEM_CADTSP mmas_mem_cadtsp = new MMAS_MEM_CADTSP(graph, 0.8, 1000, 0.5, 100, 4);
        mmas_mem_cadtsp.setMmasSeed(1);
        mmas_mem_cadtsp.setDbgpSeed(1);
        mmas_mem_cadtsp.setStatisticInterval(1);
        mmas_mem_cadtsp.setShowLog(false);
        mmas_mem_cadtsp.run();
        assertThat(mmas_mem_cadtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(27634.447604021225);
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getGlobalStatistics())).isEqualTo("[87, 15, 21, 69, 52, 78, 17, 23, 37, 98, 35, 83, 9, 89, 48, 5, 62, 46, 31, 10, 16, 14, 73, 20, 71, 58, 44, 97, 22, 90, 76, 59, 61, 34, 85, 26, 19, 11, 54, 82, 33, 42, 45, 2, 28, 13, 99, 70, 40, 47, 29, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 24, 80, 60, 50, 86, 56, 6, 8, 84, 67, 57, 92, 27, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 25, 65, 93, 87]");

        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 1, 39601.077353207074, 3256.4480241212223, 0.0, 57.137142857142855, 34060.60184509465);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 50, 30285.553821772126, 4153.619885883611, 0.515, 11.17142857142857, 26898.47302896224);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 100, 31145.108045453508, 5362.717765279795, 0.5, 11.053061224489795, 26372.04167417616);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 101, 29911.460089305117, 3691.095720326003, 0.5, 9.539591836734694, 26372.04167417616);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 150, 30908.95211651056, 4557.408063743787, 0.5, 9.491428571428571, 26372.04167417616);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 200, 29739.48150809578, 3703.437467409388, 0.5, 8.769795918367347, 26372.04167417616);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 201, 40358.38679171794, 2571.0722143816733, 0.485, 31.450612244897957, 35493.88468977867);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 250, 34945.81338326544, 2728.949425701659, 1.37, 27.053061224489795, 27253.993900850368);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 300, 33576.04045005093, 3378.457415352916, 1.3, 24.01142857142857, 27253.993900850368);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 301, 40097.5435018335, 3753.821700666413, 1.22, 38.32244897959184, 33325.794231260035);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 350, 35598.51175707714, 3405.7919062955616, 1.74, 31.293877551020408, 29761.43572176058);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 400, 35148.36489032893, 3201.3783925158677, 1.655, 31.064489795918366, 29602.08886008127);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 401, 37899.61124498835, 3233.876355127609, 1.56, 41.82693877551021, 31808.299690676904);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 450, 35358.853038214664, 3694.37064312413, 1.79, 34.69469387755102, 27958.896847652995);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 500, 32917.660279026204, 2736.99417016541, 1.645, 30.675102040816327, 27255.560127178465);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 501, 38085.68171858, 2559.7424936711204, 1.47, 38.08489795918367, 33586.50374441508);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 550, 34338.0045262635, 3074.464401515975, 1.84, 36.537142857142854, 28493.678046734003);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 600, 33771.26233182093, 2780.6104281573494, 1.755, 37.42122448979592, 27253.791279598103);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 601, 37707.28609039198, 2872.993800856169, 1.7, 38.12816326530612, 33297.604592227086);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 650, 34824.510173946284, 2485.9389743674315, 1.985, 33.36734693877551, 27625.756340280077);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 700, 33566.40697161456, 2938.097179605704, 1.705, 28.38204081632653, 27326.589619889175);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 701, 37669.35088822597, 2677.878196828329, 1.65, 40.351836734693876, 32437.544700758823);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 750, 36089.56740131488, 3657.9366103008233, 1.915, 33.817959183673466, 29216.39011413737);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 800, 35188.30706983877, 2757.026636554835, 1.62, 33.31265306122449, 28930.568160833078);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 801, 38813.56882750705, 3293.7018019458246, 1.535, 40.648979591836735, 31866.140104734128);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 850, 34844.64489355112, 3894.62779023589, 1.915, 28.142857142857142, 27840.23966111917);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 900, 34035.53938851377, 3557.2474450714776, 1.69, 29.78530612244898, 27130.61271935702);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 901, 37862.54122906063, 3569.9388736962155, 1.455, 40.182040816326534, 31726.57734625126);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 950, 34619.55715792611, 2846.484577911765, 1.855, 35.19102040816327, 28314.80961536457);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 1000, 35038.70190391137, 3486.266834263743, 1.765, 34.224489795918366, 27634.447604021225);

        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[59, 61, 76, 11, 19, 56, 6, 8, 86, 50, 60, 80, 24, 84, 67, 72, 43, 49, 77, 51, 95, 29, 38, 4, 36, 32, 75, 12, 94, 81, 63, 39, 53, 1, 68, 57, 27, 92, 7, 91, 74, 18, 3, 25, 65, 64, 69, 21, 15, 87, 78, 17, 93, 52, 89, 48, 5, 62, 20, 73, 58, 16, 14, 10, 90, 97, 22, 31, 44, 46, 71, 83, 9, 0, 66, 41, 88, 30, 79, 55, 96, 37, 98, 35, 23, 85, 26, 34, 82, 54, 33, 42, 2, 45, 13, 99, 70, 40, 47, 28, 59]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[4, 36, 32, 75, 12, 94, 81, 1, 68, 24, 80, 60, 50, 86, 56, 6, 8, 29, 84, 67, 72, 49, 43, 63, 39, 53, 57, 92, 27, 66, 41, 88, 30, 79, 91, 74, 18, 52, 21, 15, 87, 78, 17, 93, 69, 65, 64, 3, 25, 96, 55, 7, 0, 62, 48, 5, 89, 83, 9, 20, 73, 58, 16, 14, 10, 71, 35, 37, 23, 98, 31, 44, 90, 97, 22, 46, 76, 59, 61, 34, 26, 85, 11, 19, 54, 82, 33, 42, 2, 28, 45, 13, 99, 70, 40, 47, 51, 77, 95, 38, 4]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[92, 27, 66, 41, 88, 30, 79, 91, 74, 18, 52, 78, 17, 93, 87, 15, 21, 69, 65, 64, 3, 25, 96, 55, 7, 0, 62, 48, 5, 89, 83, 9, 20, 73, 58, 16, 14, 10, 71, 35, 37, 23, 98, 31, 44, 90, 97, 22, 46, 76, 59, 61, 34, 26, 85, 11, 19, 54, 82, 33, 42, 2, 28, 45, 13, 99, 70, 40, 47, 51, 77, 95, 38, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 43, 49, 80, 24, 60, 50, 86, 56, 6, 8, 29, 84, 67, 72, 68, 57, 92]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[9, 89, 48, 5, 62, 0, 91, 74, 18, 52, 78, 17, 93, 87, 15, 21, 69, 65, 64, 3, 25, 96, 55, 7, 30, 79, 41, 88, 66, 92, 27, 57, 68, 63, 39, 53, 1, 72, 67, 84, 29, 33, 42, 2, 28, 45, 13, 99, 70, 40, 47, 51, 77, 95, 38, 4, 36, 32, 75, 12, 94, 81, 43, 49, 80, 24, 60, 50, 86, 56, 6, 8, 54, 82, 19, 11, 26, 85, 34, 61, 76, 59, 22, 90, 97, 46, 31, 44, 16, 14, 10, 71, 20, 73, 58, 35, 37, 23, 98, 83, 9]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[91, 74, 18, 52, 78, 17, 93, 87, 15, 21, 69, 65, 64, 3, 25, 96, 55, 30, 79, 41, 88, 66, 92, 27, 57, 68, 63, 39, 53, 1, 72, 67, 84, 29, 33, 42, 2, 28, 45, 13, 99, 70, 40, 47, 51, 77, 95, 38, 4, 36, 32, 75, 12, 94, 81, 43, 49, 80, 24, 60, 50, 86, 56, 6, 8, 54, 82, 19, 11, 26, 85, 34, 61, 76, 59, 22, 90, 97, 46, 31, 44, 14, 16, 10, 71, 20, 73, 58, 35, 37, 23, 98, 83, 9, 89, 48, 5, 62, 0, 7, 91]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[97, 46, 31, 44, 14, 16, 10, 71, 20, 73, 58, 35, 37, 23, 98, 83, 9, 89, 48, 5, 62, 0, 7, 91, 74, 18, 52, 78, 17, 93, 87, 15, 21, 69, 25, 65, 64, 3, 96, 55, 30, 79, 41, 88, 66, 92, 27, 57, 68, 63, 39, 53, 1, 72, 67, 84, 29, 33, 42, 2, 28, 45, 13, 99, 70, 40, 47, 51, 77, 95, 38, 4, 36, 32, 75, 12, 94, 81, 43, 49, 80, 24, 60, 50, 86, 56, 6, 8, 54, 82, 19, 11, 26, 85, 34, 61, 76, 59, 22, 90, 97]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[97, 46, 31, 44, 14, 16, 10, 71, 20, 73, 58, 35, 37, 23, 98, 83, 9, 89, 48, 5, 62, 0, 7, 91, 74, 18, 52, 78, 17, 93, 87, 15, 21, 69, 25, 65, 64, 3, 96, 55, 30, 79, 41, 88, 66, 92, 27, 57, 68, 63, 39, 53, 1, 72, 67, 84, 29, 33, 42, 2, 28, 45, 13, 99, 70, 40, 47, 51, 77, 95, 38, 4, 36, 32, 75, 12, 94, 81, 43, 49, 80, 24, 60, 50, 86, 56, 6, 8, 54, 82, 19, 11, 26, 85, 34, 61, 76, 59, 22, 90, 97]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[80, 24, 60, 50, 86, 56, 6, 8, 54, 82, 33, 42, 2, 28, 45, 13, 99, 70, 40, 47, 51, 77, 95, 38, 4, 36, 32, 75, 12, 94, 81, 43, 49, 68, 63, 39, 53, 1, 72, 67, 84, 29, 19, 11, 26, 85, 34, 61, 76, 59, 22, 90, 97, 46, 31, 44, 14, 16, 10, 71, 20, 73, 58, 35, 37, 23, 98, 83, 9, 89, 48, 5, 62, 0, 7, 91, 74, 18, 52, 78, 17, 93, 87, 15, 21, 69, 25, 65, 64, 3, 96, 55, 30, 79, 41, 88, 66, 92, 27, 57, 80]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[5, 62, 48, 0, 7, 91, 74, 18, 52, 78, 17, 93, 87, 15, 21, 69, 25, 65, 64, 3, 96, 55, 30, 79, 41, 88, 66, 92, 27, 57, 80, 24, 60, 50, 86, 56, 6, 8, 54, 82, 33, 42, 2, 45, 13, 99, 70, 40, 47, 51, 77, 95, 38, 4, 36, 32, 75, 12, 94, 81, 43, 49, 68, 63, 39, 53, 1, 72, 67, 84, 29, 28, 19, 11, 26, 85, 34, 61, 76, 59, 22, 90, 97, 46, 31, 44, 14, 16, 10, 71, 20, 73, 58, 35, 37, 23, 98, 83, 9, 89, 5]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[32, 75, 12, 94, 81, 43, 49, 68, 63, 39, 53, 1, 72, 67, 84, 29, 28, 19, 11, 26, 85, 34, 61, 76, 59, 22, 90, 97, 46, 31, 44, 14, 16, 10, 71, 20, 73, 58, 35, 37, 23, 98, 83, 9, 89, 5, 62, 48, 0, 7, 91, 74, 18, 52, 78, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 30, 79, 41, 88, 66, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 42, 2, 45, 13, 99, 70, 40, 47, 51, 77, 95, 38, 4, 36, 32]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[26, 85, 34, 61, 76, 59, 22, 90, 97, 46, 31, 44, 14, 16, 10, 71, 20, 73, 58, 35, 37, 23, 98, 83, 9, 89, 5, 62, 48, 0, 7, 91, 74, 18, 52, 78, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 30, 79, 41, 88, 66, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 42, 2, 45, 13, 99, 70, 40, 47, 51, 77, 95, 38, 4, 36, 32, 75, 12, 94, 81, 43, 49, 68, 63, 39, 53, 1, 72, 67, 84, 29, 28, 19, 11, 26]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[26, 85, 34, 61, 76, 59, 22, 90, 97, 46, 31, 44, 14, 16, 10, 71, 20, 73, 58, 35, 37, 23, 98, 83, 9, 89, 5, 62, 48, 0, 7, 91, 74, 18, 52, 78, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 30, 79, 41, 88, 66, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 42, 2, 45, 13, 99, 70, 40, 47, 51, 77, 95, 38, 4, 36, 32, 75, 12, 94, 81, 43, 49, 68, 63, 39, 53, 1, 72, 67, 84, 29, 28, 19, 11, 26]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[26, 85, 34, 61, 76, 59, 22, 90, 97, 46, 31, 44, 14, 16, 10, 71, 20, 73, 58, 35, 37, 23, 98, 83, 9, 89, 5, 62, 48, 0, 7, 91, 74, 18, 52, 78, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 30, 79, 41, 88, 66, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 42, 2, 45, 13, 99, 70, 40, 47, 51, 77, 95, 38, 4, 36, 32, 75, 12, 94, 81, 43, 49, 68, 63, 39, 53, 1, 72, 67, 84, 29, 28, 19, 11, 26]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[26, 85, 34, 61, 76, 59, 22, 90, 97, 46, 31, 44, 14, 16, 10, 71, 20, 73, 58, 35, 37, 23, 98, 83, 9, 89, 5, 62, 48, 0, 7, 91, 74, 18, 52, 78, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 30, 79, 41, 88, 66, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 42, 2, 45, 13, 99, 70, 40, 47, 51, 77, 95, 38, 4, 36, 32, 75, 12, 94, 81, 43, 49, 68, 63, 39, 53, 1, 72, 67, 84, 29, 28, 19, 11, 26]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[26, 85, 34, 61, 76, 59, 22, 90, 97, 46, 31, 44, 14, 16, 10, 71, 20, 73, 58, 35, 37, 23, 98, 83, 9, 89, 5, 62, 48, 0, 7, 91, 74, 18, 52, 78, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 30, 79, 41, 88, 66, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 42, 2, 45, 13, 99, 70, 40, 47, 51, 77, 95, 38, 4, 36, 32, 75, 12, 94, 81, 43, 49, 68, 63, 39, 53, 1, 72, 67, 84, 29, 28, 19, 11, 26]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[26, 85, 34, 61, 76, 59, 22, 90, 97, 46, 31, 44, 14, 16, 10, 71, 20, 73, 58, 35, 37, 23, 98, 83, 9, 89, 5, 62, 48, 0, 7, 91, 74, 18, 52, 78, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 30, 79, 41, 88, 66, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 42, 2, 45, 13, 99, 70, 40, 47, 51, 77, 95, 38, 4, 36, 32, 75, 12, 94, 81, 43, 49, 68, 63, 39, 53, 1, 72, 67, 84, 29, 28, 19, 11, 26]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[26, 85, 34, 61, 76, 59, 22, 90, 97, 46, 31, 44, 14, 16, 10, 71, 20, 73, 58, 35, 37, 23, 98, 83, 9, 89, 5, 62, 48, 0, 7, 91, 74, 18, 52, 78, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 30, 79, 41, 88, 66, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 42, 2, 45, 13, 99, 70, 40, 47, 51, 77, 95, 38, 4, 36, 32, 75, 12, 94, 81, 43, 49, 68, 63, 39, 53, 1, 72, 67, 84, 29, 28, 19, 11, 26]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[26, 85, 34, 61, 76, 59, 22, 90, 97, 46, 31, 44, 14, 16, 10, 71, 20, 73, 58, 35, 37, 23, 98, 83, 9, 89, 5, 62, 48, 0, 7, 91, 74, 18, 52, 78, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 30, 79, 41, 88, 66, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 42, 2, 45, 13, 99, 70, 40, 47, 51, 77, 95, 38, 4, 36, 32, 75, 12, 94, 81, 43, 49, 68, 63, 39, 53, 1, 72, 67, 84, 29, 28, 19, 11, 26]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[26, 85, 34, 61, 76, 59, 22, 90, 97, 46, 31, 44, 14, 16, 10, 71, 20, 73, 58, 35, 37, 23, 98, 83, 9, 89, 5, 62, 48, 0, 7, 91, 74, 18, 52, 78, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 30, 79, 41, 88, 66, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 42, 2, 45, 13, 99, 70, 40, 47, 51, 77, 95, 38, 4, 36, 32, 75, 12, 94, 81, 43, 49, 68, 63, 39, 53, 1, 72, 67, 84, 29, 28, 19, 11, 26]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[26, 85, 34, 61, 76, 59, 22, 90, 97, 46, 31, 44, 14, 16, 10, 71, 20, 73, 58, 35, 37, 23, 98, 83, 9, 89, 5, 62, 48, 0, 7, 91, 74, 18, 52, 78, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 30, 79, 41, 88, 66, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 42, 2, 45, 13, 99, 70, 40, 47, 51, 77, 95, 38, 4, 36, 32, 75, 12, 94, 81, 43, 49, 68, 63, 39, 53, 1, 72, 67, 84, 29, 28, 19, 11, 26]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[31, 44, 90, 97, 22, 46, 0, 7, 91, 74, 18, 52, 78, 21, 15, 87, 93, 69, 65, 25, 64, 3, 96, 55, 30, 79, 88, 41, 62, 48, 5, 89, 23, 37, 35, 17, 83, 9, 71, 20, 73, 58, 10, 14, 16, 98, 59, 61, 76, 57, 66, 92, 27, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 2, 45, 28, 42, 26, 85, 34, 19, 11, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 43, 49, 68, 63, 39, 53, 1, 72, 95, 77, 51, 47, 70, 40, 99, 13, 60, 31]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 43, 1, 63, 39, 53, 68, 60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 14, 16, 10, 20, 73, 58, 46, 0, 62, 5, 48, 89, 83, 9, 71, 98, 35, 37, 23, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 52, 78, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 27, 92, 66, 57, 24, 80, 54, 82, 33, 2, 45, 28, 42, 13, 99, 40, 70, 47, 51, 77, 95, 49, 72]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[84, 67, 49, 72, 43, 1, 63, 39, 53, 68, 60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 14, 16, 10, 20, 73, 58, 46, 0, 62, 5, 48, 89, 83, 9, 71, 98, 35, 37, 23, 17, 15, 21, 87, 93, 69, 65, 25, 64, 3, 52, 78, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 27, 92, 66, 57, 24, 80, 54, 82, 33, 2, 42, 45, 28, 47, 70, 40, 99, 13, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[84, 67, 49, 72, 43, 1, 63, 39, 53, 68, 60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 14, 16, 10, 20, 73, 58, 46, 0, 62, 5, 48, 89, 83, 9, 71, 98, 35, 37, 23, 17, 15, 21, 87, 93, 69, 65, 25, 64, 3, 52, 78, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 27, 92, 66, 57, 24, 80, 54, 82, 33, 2, 42, 45, 28, 47, 70, 40, 99, 13, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[84, 67, 49, 72, 43, 1, 63, 39, 53, 68, 60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 14, 16, 10, 20, 73, 58, 46, 0, 62, 5, 48, 89, 83, 9, 71, 98, 35, 37, 23, 17, 15, 21, 87, 93, 69, 65, 25, 64, 3, 52, 78, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 27, 92, 66, 57, 24, 80, 54, 82, 33, 2, 42, 45, 28, 47, 70, 40, 99, 13, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 46, 0, 62, 5, 48, 89, 83, 9, 71, 20, 73, 58, 10, 14, 16, 98, 35, 37, 23, 17, 78, 21, 15, 87, 93, 69, 65, 25, 64, 3, 52, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 27, 92, 66, 57, 24, 80, 54, 82, 33, 2, 42, 45, 28, 47, 70, 40, 99, 13, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 72, 43, 1, 63, 39, 53, 68, 60]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 46, 0, 62, 5, 48, 89, 83, 9, 71, 20, 73, 58, 10, 14, 16, 98, 35, 37, 23, 17, 78, 21, 15, 87, 93, 69, 65, 25, 64, 3, 52, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 27, 92, 66, 57, 24, 80, 54, 82, 33, 2, 42, 45, 28, 47, 70, 40, 99, 13, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 72, 43, 1, 63, 39, 53, 68, 60]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 46, 0, 62, 5, 48, 89, 83, 9, 71, 20, 73, 58, 10, 14, 16, 98, 35, 37, 23, 17, 78, 21, 15, 87, 93, 69, 65, 25, 64, 3, 52, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 27, 92, 66, 57, 24, 80, 54, 82, 33, 2, 42, 45, 28, 47, 70, 40, 99, 13, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 72, 43, 1, 63, 39, 53, 68, 60]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 46, 0, 62, 5, 48, 89, 83, 9, 71, 20, 73, 58, 10, 14, 16, 98, 35, 37, 23, 17, 78, 21, 15, 87, 93, 69, 65, 25, 64, 3, 52, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 27, 92, 66, 57, 24, 80, 54, 82, 33, 2, 42, 45, 28, 47, 70, 40, 99, 13, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 72, 43, 1, 63, 39, 53, 68, 60]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 46, 0, 62, 5, 48, 89, 83, 9, 71, 20, 73, 58, 10, 14, 16, 98, 35, 37, 23, 17, 78, 21, 15, 87, 93, 69, 65, 25, 64, 3, 52, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 27, 92, 66, 57, 24, 80, 54, 82, 33, 2, 42, 45, 28, 47, 70, 40, 99, 13, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 72, 43, 1, 63, 39, 53, 68, 60]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[1, 72, 49, 43, 81, 32, 75, 12, 94, 36, 4, 77, 51, 95, 38, 29, 13, 99, 40, 70, 47, 28, 54, 82, 33, 2, 45, 42, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 14, 16, 10, 20, 73, 58, 46, 0, 62, 5, 48, 89, 83, 9, 71, 98, 35, 37, 23, 17, 78, 52, 15, 21, 87, 93, 69, 65, 64, 3, 96, 55, 30, 79, 88, 41, 7, 91, 74, 18, 25, 92, 27, 66, 57, 24, 80, 60, 50, 86, 56, 8, 6, 19, 11, 84, 67, 53, 39, 63, 68, 1]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[98, 35, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 5, 48, 89, 83, 9, 71, 20, 73, 58, 14, 16, 10, 31, 46, 0, 62, 44, 90, 97, 22, 59, 61, 76, 19, 11, 26, 85, 34, 6, 8, 56, 86, 50, 60, 24, 80, 54, 82, 33, 2, 45, 28, 47, 13, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 67, 84, 42, 40, 70, 99, 68, 63, 39, 53, 66, 57, 92, 27, 25, 98]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[37, 23, 17, 15, 21, 69, 65, 64, 3, 96, 55, 74, 18, 52, 78, 5, 48, 89, 83, 9, 71, 20, 73, 58, 14, 16, 10, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 8, 56, 86, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 72, 49, 67, 84, 38, 29, 95, 77, 51, 47, 13, 99, 40, 70, 45, 2, 42, 82, 54, 33, 28, 4, 36, 32, 75, 12, 94, 81, 66, 57, 92, 27, 46, 0, 62, 91, 7, 88, 41, 30, 79, 25, 87, 93, 35, 98, 37]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[98, 35, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 71, 20, 73, 58, 14, 16, 10, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 8, 56, 86, 50, 60, 24, 80, 68, 63, 39, 53, 1, 72, 49, 43, 81, 94, 12, 32, 75, 36, 4, 77, 51, 95, 38, 29, 13, 99, 40, 70, 45, 28, 33, 54, 82, 2, 42, 47, 84, 67, 57, 92, 27, 66, 46, 0, 78, 3, 65, 64, 25, 98]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[98, 35, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 71, 20, 73, 58, 14, 16, 10, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 8, 56, 86, 50, 60, 24, 80, 68, 63, 39, 53, 1, 72, 49, 43, 81, 94, 12, 32, 75, 36, 4, 77, 51, 95, 38, 29, 13, 99, 40, 70, 45, 28, 33, 54, 82, 2, 42, 47, 84, 67, 57, 92, 27, 66, 46, 0, 78, 3, 65, 64, 25, 98]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 71, 20, 73, 58, 14, 16, 10, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 8, 56, 86, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 72, 49, 67, 84, 38, 29, 13, 99, 40, 70, 45, 2, 28, 33, 54, 82, 42, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 66, 57, 92, 27, 46, 0, 78, 23, 37, 35, 98, 17, 93, 87, 15, 21, 69, 52, 3, 64, 25, 65, 18]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 71, 20, 73, 58, 14, 16, 10, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 8, 56, 86, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 72, 49, 67, 84, 38, 29, 13, 99, 40, 70, 45, 2, 28, 33, 54, 82, 42, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 66, 57, 92, 27, 46, 0, 78, 23, 37, 35, 98, 17, 93, 87, 15, 21, 69, 52, 3, 64, 25, 65, 18]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 71, 20, 73, 58, 14, 16, 10, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 8, 56, 86, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 72, 49, 67, 84, 38, 29, 13, 99, 40, 70, 45, 2, 28, 33, 54, 82, 42, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 66, 57, 92, 27, 46, 0, 78, 23, 37, 35, 98, 17, 93, 87, 15, 21, 69, 52, 3, 64, 25, 65, 18]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 71, 20, 73, 58, 14, 16, 10, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 8, 56, 86, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 72, 49, 67, 84, 38, 29, 13, 99, 40, 70, 45, 2, 28, 33, 54, 82, 42, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 66, 57, 92, 27, 46, 0, 78, 23, 37, 35, 98, 17, 93, 87, 15, 21, 69, 52, 3, 64, 25, 65, 18]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 71, 20, 73, 58, 14, 16, 10, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 8, 56, 86, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 72, 49, 81, 94, 12, 32, 75, 36, 4, 77, 51, 95, 38, 29, 13, 99, 40, 70, 45, 28, 33, 54, 82, 2, 42, 47, 84, 67, 57, 92, 27, 66, 46, 0, 78, 3, 64, 25, 65, 35, 98, 37]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[76, 59, 61, 22, 97, 90, 44, 31, 46, 92, 27, 57, 60, 24, 80, 86, 56, 8, 6, 19, 11, 26, 85, 34, 54, 82, 33, 2, 45, 28, 47, 13, 70, 99, 40, 42, 29, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 50, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 5, 48, 89, 78, 23, 37, 35, 98, 17, 15, 21, 69, 52, 3, 64, 65, 25, 87, 93, 83, 9, 71, 20, 73, 58, 14, 16, 10, 62, 66, 76]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[92, 27, 57, 60, 24, 80, 50, 86, 56, 8, 6, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 71, 20, 98, 35, 37, 23, 17, 15, 21, 69, 52, 78, 87, 93, 65, 64, 25, 3, 96, 55, 18, 74, 5, 48, 89, 9, 83, 62, 91, 7, 41, 88, 30, 79, 0, 46, 66, 68, 63, 39, 53, 1, 43, 72, 49, 67, 84, 38, 29, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 47, 13, 70, 99, 40, 2, 42, 45, 28, 33, 54, 82, 92]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[10, 31, 90, 97, 22, 44, 59, 61, 76, 85, 34, 26, 11, 19, 6, 56, 86, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 29, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 47, 13, 70, 99, 40, 2, 42, 45, 28, 33, 54, 82, 8, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 5, 48, 89, 9, 83, 71, 20, 73, 58, 14, 16, 98, 35, 37, 23, 17, 15, 87, 93, 21, 69, 52, 78, 3, 64, 65, 25, 62, 46, 10]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[62, 5, 48, 89, 9, 83, 71, 20, 73, 58, 14, 16, 10, 31, 90, 97, 22, 44, 59, 61, 76, 86, 56, 8, 6, 19, 11, 26, 85, 34, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 60, 24, 80, 50, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 64, 65, 25, 3, 52, 78, 87, 15, 21, 69, 93, 17, 23, 37, 35, 98, 46, 62]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[5, 48, 89, 9, 83, 71, 20, 73, 58, 14, 16, 10, 31, 90, 97, 22, 44, 59, 61, 76, 86, 56, 8, 6, 19, 11, 26, 85, 34, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 24, 80, 50, 60, 57, 27, 92, 66, 0, 46, 62, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 64, 65, 25, 3, 52, 78, 87, 15, 21, 69, 93, 17, 23, 37, 35, 98, 5]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[5, 48, 89, 9, 83, 71, 20, 73, 58, 14, 16, 10, 31, 90, 97, 22, 44, 59, 61, 76, 86, 56, 8, 6, 19, 11, 26, 85, 34, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 24, 80, 50, 60, 57, 27, 92, 66, 0, 46, 62, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 64, 65, 25, 3, 52, 78, 87, 15, 21, 69, 93, 17, 23, 37, 35, 98, 5]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[5, 48, 89, 9, 83, 71, 20, 73, 58, 14, 16, 10, 31, 90, 97, 22, 44, 59, 61, 76, 86, 56, 8, 6, 19, 11, 26, 85, 34, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 24, 80, 50, 60, 57, 27, 92, 66, 0, 46, 62, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 64, 65, 25, 3, 52, 78, 87, 15, 21, 69, 93, 17, 23, 37, 35, 98, 5]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[5, 48, 89, 9, 83, 71, 20, 73, 58, 14, 16, 10, 31, 90, 97, 22, 44, 59, 61, 76, 86, 56, 8, 6, 19, 11, 26, 85, 34, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 24, 80, 50, 60, 57, 27, 92, 66, 0, 46, 62, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 64, 65, 25, 3, 52, 78, 87, 15, 21, 69, 93, 17, 23, 37, 35, 98, 5]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[9, 83, 71, 20, 73, 58, 14, 16, 10, 31, 90, 97, 22, 44, 59, 61, 76, 85, 34, 26, 11, 19, 6, 56, 86, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 29, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 47, 13, 70, 99, 40, 2, 42, 45, 28, 33, 82, 54, 8, 57, 27, 92, 66, 0, 46, 62, 5, 48, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 64, 65, 25, 3, 52, 78, 87, 15, 21, 69, 93, 17, 23, 37, 35, 98, 89, 9]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[48, 5, 62, 46, 71, 20, 73, 58, 14, 16, 10, 31, 90, 97, 22, 44, 59, 61, 76, 85, 34, 26, 11, 19, 6, 56, 86, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 29, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 47, 13, 70, 99, 40, 2, 42, 45, 28, 33, 82, 54, 8, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 64, 65, 25, 3, 52, 78, 87, 15, 21, 69, 93, 17, 23, 37, 35, 98, 9, 83, 89, 48]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[29, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 6, 8, 56, 86, 50, 60, 24, 80, 49, 43, 72, 67, 84, 1, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 5, 48, 89, 83, 9, 71, 20, 73, 58, 35, 37, 23, 17, 78, 52, 18, 74, 96, 55, 30, 79, 88, 41, 7, 65, 64, 3, 25, 87, 15, 21, 69, 93, 98, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 85, 26, 34, 19, 11, 62, 46, 29]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[97, 22, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 89, 48, 5, 62, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 19, 11, 26, 85, 34, 61, 76, 59, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 43, 49, 72, 67, 84, 1, 53, 39, 63, 68, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 52, 78, 17, 93, 21, 15, 87, 69, 65, 64, 3, 25, 23, 37, 98, 35, 97]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[90, 97, 22, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 89, 48, 5, 62, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 19, 11, 26, 85, 34, 61, 76, 59, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 43, 49, 72, 67, 84, 1, 53, 39, 63, 68, 66, 0, 91, 74, 96, 55, 30, 79, 88, 41, 7, 18, 3, 64, 25, 65, 21, 69, 93, 87, 15, 52, 78, 17, 37, 23, 98, 35, 90]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[90, 97, 22, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 89, 48, 5, 62, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 19, 11, 26, 85, 34, 61, 76, 59, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 43, 49, 72, 67, 84, 1, 53, 39, 63, 68, 66, 0, 91, 74, 96, 55, 30, 79, 88, 41, 7, 18, 3, 64, 25, 65, 21, 69, 93, 87, 15, 52, 78, 17, 37, 23, 98, 35, 90]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[52, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 90, 44, 97, 22, 59, 61, 76, 85, 26, 34, 11, 19, 56, 6, 8, 82, 54, 33, 28, 45, 2, 42, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 67, 84, 38, 29, 13, 68, 63, 39, 53, 1, 43, 49, 72, 24, 80, 50, 86, 60, 57, 92, 27, 66, 0, 91, 74, 96, 55, 30, 79, 88, 41, 7, 18, 3, 64, 65, 25, 87, 15, 21, 69, 93, 52]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[52, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 90, 44, 97, 22, 59, 61, 76, 85, 26, 34, 11, 19, 56, 6, 8, 82, 54, 33, 28, 45, 2, 42, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 67, 84, 38, 29, 13, 68, 63, 39, 53, 1, 43, 49, 72, 24, 80, 50, 86, 60, 57, 92, 27, 66, 0, 91, 74, 96, 55, 30, 79, 88, 41, 7, 18, 3, 64, 65, 25, 87, 15, 21, 69, 93, 52]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[52, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 90, 44, 97, 22, 59, 61, 76, 85, 26, 34, 11, 19, 56, 6, 8, 82, 54, 33, 28, 45, 2, 42, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 67, 84, 38, 29, 13, 68, 63, 39, 53, 1, 43, 49, 72, 24, 80, 50, 86, 60, 57, 92, 27, 66, 0, 91, 74, 96, 55, 30, 79, 88, 41, 7, 18, 3, 64, 65, 25, 87, 15, 21, 69, 93, 52]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[52, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 90, 44, 97, 22, 59, 61, 76, 85, 26, 34, 11, 19, 56, 6, 8, 82, 54, 33, 28, 45, 2, 42, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 67, 84, 38, 29, 13, 68, 63, 39, 53, 1, 43, 49, 72, 24, 80, 50, 86, 60, 57, 92, 27, 66, 0, 91, 74, 96, 55, 30, 79, 88, 41, 7, 18, 3, 64, 65, 25, 87, 15, 21, 69, 93, 52]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[49, 43, 72, 67, 84, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 29, 28, 13, 99, 70, 40, 47, 45, 42, 2, 82, 54, 33, 11, 19, 56, 6, 8, 24, 80, 60, 57, 92, 27, 66, 0, 91, 74, 96, 55, 30, 79, 88, 41, 7, 18, 3, 64, 65, 25, 69, 93, 87, 15, 21, 52, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 90, 44, 97, 22, 59, 61, 76, 85, 26, 34, 86, 50, 68, 63, 39, 53, 1, 49]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[49, 43, 72, 67, 84, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 29, 28, 13, 99, 70, 40, 47, 45, 42, 2, 82, 54, 33, 11, 19, 56, 6, 8, 24, 80, 60, 57, 92, 27, 66, 0, 91, 74, 96, 55, 30, 79, 88, 41, 7, 18, 3, 64, 65, 25, 69, 93, 87, 15, 21, 52, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 90, 44, 97, 22, 59, 61, 76, 85, 26, 34, 86, 50, 68, 63, 39, 53, 1, 49]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[97, 22, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 89, 23, 37, 98, 35, 17, 78, 52, 87, 69, 21, 15, 93, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 74, 18, 5, 48, 62, 46, 0, 27, 92, 66, 57, 60, 50, 86, 56, 8, 6, 19, 11, 26, 85, 34, 61, 76, 59, 54, 82, 33, 28, 2, 42, 45, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 72, 67, 84, 38, 29, 13, 80, 24, 68, 63, 39, 53, 1, 49, 97]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[45, 28, 33, 54, 82, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 89, 48, 5, 62, 46, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 65, 64, 25, 69, 21, 15, 87, 93, 17, 23, 37, 35, 98, 78, 52, 92, 27, 57, 66, 68, 63, 39, 53, 1, 72, 67, 84, 38, 29, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 49, 80, 24, 60, 50, 42, 2, 45]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[84, 67, 49, 72, 43, 1, 53, 39, 63, 68, 60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 14, 16, 10, 58, 73, 20, 71, 83, 9, 89, 18, 3, 65, 64, 25, 69, 21, 15, 87, 93, 17, 23, 37, 35, 98, 78, 52, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0, 62, 5, 48, 46, 92, 27, 57, 66, 80, 24, 33, 54, 82, 45, 28, 2, 42, 40, 70, 13, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 38, 29, 84]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[84, 67, 49, 72, 43, 1, 53, 39, 63, 68, 60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 14, 16, 10, 58, 73, 20, 71, 83, 9, 89, 18, 3, 65, 64, 25, 69, 21, 15, 87, 93, 17, 23, 37, 35, 98, 78, 52, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0, 62, 5, 48, 46, 92, 27, 57, 66, 80, 24, 33, 54, 82, 45, 28, 2, 42, 40, 70, 13, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 38, 29, 84]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 63, 39, 53, 68, 60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 14, 16, 10, 58, 73, 20, 71, 83, 9, 89, 18, 3, 65, 64, 25, 69, 21, 15, 87, 93, 17, 23, 37, 35, 98, 78, 52, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0, 62, 5, 48, 46, 92, 27, 57, 66, 80, 24, 67, 84, 38, 29, 28, 2, 42, 45, 54, 82, 33, 13, 40]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 63, 39, 53, 68, 60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 14, 16, 10, 58, 73, 20, 71, 83, 9, 89, 18, 3, 65, 64, 25, 69, 21, 15, 87, 93, 17, 23, 37, 35, 98, 78, 52, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0, 62, 5, 48, 46, 92, 27, 57, 66, 80, 24, 67, 84, 38, 29, 28, 2, 42, 45, 54, 82, 33, 13, 40]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 63, 39, 53, 68, 60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 14, 16, 10, 58, 73, 20, 71, 83, 9, 89, 18, 3, 65, 64, 25, 69, 21, 15, 87, 93, 17, 23, 37, 35, 98, 78, 52, 74, 96, 55, 79, 30, 88, 41, 7, 0, 91, 62, 5, 48, 46, 92, 27, 57, 66, 80, 24, 67, 84, 38, 29, 28, 2, 42, 45, 54, 82, 33, 13, 99, 40, 70, 47, 51, 77]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 63, 39, 53, 68, 60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 14, 16, 10, 58, 73, 20, 71, 83, 9, 89, 18, 3, 65, 64, 25, 69, 21, 15, 87, 93, 17, 23, 37, 35, 98, 78, 52, 74, 96, 55, 79, 30, 88, 41, 7, 0, 91, 62, 5, 48, 46, 92, 27, 57, 66, 80, 24, 67, 84, 38, 29, 28, 2, 42, 45, 54, 82, 33, 13, 99, 40, 70, 47, 51, 77]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 14, 16, 10, 58, 73, 20, 71, 83, 9, 89, 18, 3, 65, 64, 25, 69, 21, 15, 87, 93, 17, 23, 37, 35, 98, 78, 52, 74, 96, 55, 79, 30, 88, 41, 7, 0, 91, 62, 5, 48, 46, 92, 27, 57, 66, 80, 24, 67, 84, 38, 29, 28, 2, 42, 45, 54, 82, 33, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 63, 39, 53, 68, 60, 50, 86]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[43, 1, 63, 39, 53, 68, 60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 14, 16, 10, 58, 73, 20, 71, 83, 9, 89, 18, 3, 65, 64, 25, 69, 21, 15, 87, 93, 17, 23, 37, 35, 98, 78, 52, 74, 96, 55, 79, 30, 88, 41, 7, 0, 91, 62, 5, 48, 46, 92, 27, 57, 66, 80, 24, 67, 84, 38, 29, 28, 2, 42, 45, 54, 82, 33, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 72, 43]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[41, 7, 91, 62, 5, 48, 89, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 44, 59, 61, 76, 34, 85, 26, 11, 54, 82, 6, 8, 56, 86, 50, 60, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 28, 13, 99, 47, 2, 45, 33, 42, 40, 70, 19, 57, 66, 46, 92, 27, 0, 88, 30, 79, 55, 96, 18, 74, 64, 25, 3, 65, 69, 21, 15, 87, 93, 17, 78, 52, 23, 37, 35, 98, 41]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 60, 24, 80, 86, 50, 8, 56, 6, 19, 11, 26, 85, 34, 61, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 48, 5, 62, 74, 18, 52, 87, 15, 21, 93, 17, 23, 37, 35, 98, 78, 69, 64, 25, 3, 65, 96, 55, 30, 79, 88, 41, 7, 91, 0, 46, 92, 27, 66, 57, 76, 54, 82, 33, 28, 13, 99, 70, 40, 2, 45, 42, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 38, 29, 84]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[64, 25, 3, 65, 52, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 8, 56, 86, 50, 60, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 29, 13, 99, 40, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 28, 33, 54, 82, 45, 2, 42, 92, 27, 57, 66, 46, 0, 78, 23, 37, 35, 98, 17, 93, 87, 15, 21, 69, 64]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[65, 64, 25, 3, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 44, 59, 61, 76, 34, 85, 26, 11, 54, 82, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 80, 24, 67, 84, 38, 29, 56, 6, 8, 19, 86, 50, 60, 57, 66, 46, 92, 27, 0, 78, 52, 87, 15, 21, 93, 17, 23, 37, 35, 98, 69, 65]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[65, 64, 25, 3, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 44, 59, 61, 76, 34, 85, 26, 11, 54, 82, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 80, 24, 67, 84, 38, 29, 56, 6, 8, 19, 86, 50, 60, 57, 66, 46, 92, 27, 0, 78, 52, 87, 15, 21, 93, 17, 23, 37, 35, 98, 69, 65]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[3, 64, 65, 69, 21, 15, 87, 78, 52, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 39, 53, 63, 68, 67, 84, 38, 29, 56, 6, 8, 86, 50, 60, 24, 80, 66, 57, 92, 27, 0, 46, 35, 98, 17, 93, 37, 23, 25, 3]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[3, 64, 65, 69, 21, 15, 87, 78, 52, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 39, 53, 63, 68, 67, 84, 38, 29, 56, 6, 8, 86, 50, 60, 24, 80, 66, 57, 92, 27, 0, 46, 35, 98, 17, 93, 37, 23, 25, 3]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[3, 64, 65, 69, 21, 15, 87, 78, 52, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 39, 53, 63, 68, 67, 84, 38, 29, 56, 6, 8, 86, 50, 60, 24, 80, 66, 57, 92, 27, 0, 46, 35, 98, 17, 93, 37, 23, 25, 3]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[15, 21, 93, 87, 78, 52, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 39, 53, 63, 68, 80, 24, 67, 84, 38, 29, 56, 6, 8, 86, 50, 60, 57, 92, 27, 66, 46, 0, 25, 3, 64, 65, 69, 23, 37, 35, 98, 17, 15]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[15, 21, 93, 87, 78, 52, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 39, 53, 63, 68, 80, 24, 67, 84, 38, 29, 56, 6, 8, 86, 50, 60, 57, 92, 27, 66, 46, 0, 25, 3, 64, 65, 69, 23, 37, 35, 98, 17, 15]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[10, 31, 90, 97, 22, 44, 59, 61, 76, 8, 6, 56, 86, 50, 60, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 47, 13, 70, 99, 40, 2, 42, 45, 28, 33, 82, 54, 19, 11, 26, 85, 34, 57, 92, 27, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 65, 25, 87, 15, 21, 93, 17, 23, 37, 35, 98, 89, 62, 5, 48, 46, 71, 20, 73, 58, 16, 14, 9, 83, 52, 78, 69, 10]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[6, 56, 86, 50, 60, 24, 80, 72, 49, 43, 1, 53, 63, 39, 68, 67, 84, 38, 29, 95, 77, 51, 36, 4, 12, 94, 81, 32, 75, 47, 13, 70, 99, 40, 2, 42, 45, 28, 33, 82, 54, 19, 11, 26, 85, 34, 61, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 64, 65, 25, 3, 89, 78, 52, 15, 87, 93, 21, 69, 23, 37, 35, 98, 17, 46, 92, 27, 57, 66, 76, 8, 6]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 64, 65, 25, 3, 52, 78, 23, 37, 35, 98, 17, 15, 21, 69, 87, 93, 89, 46, 92, 27, 57, 66, 50, 60, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 29, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 47, 13, 70, 40, 99, 2, 42, 45, 28, 33, 54, 82, 11, 26, 85, 34, 61, 19, 56, 86, 6, 8, 76]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 64, 65, 25, 3, 52, 78, 87, 15, 21, 93, 69, 23, 37, 35, 98, 17, 89, 46, 92, 27, 57, 66, 50, 60, 24, 80, 72, 49, 43, 63, 39, 53, 1, 68, 67, 84, 38, 29, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 47, 13, 70, 99, 40, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 86, 26, 85, 34, 11, 19, 61, 76, 59, 22, 97]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 64, 65, 25, 3, 52, 78, 87, 15, 21, 93, 69, 23, 37, 35, 98, 17, 89, 46, 92, 27, 57, 66, 50, 60, 24, 80, 72, 49, 43, 63, 39, 53, 1, 68, 67, 84, 38, 29, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 47, 13, 70, 99, 40, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 86, 26, 85, 34, 11, 19, 61, 76, 59, 22, 97]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 64, 65, 25, 3, 52, 78, 87, 15, 21, 93, 69, 23, 37, 35, 98, 17, 89, 46, 92, 27, 57, 66, 50, 60, 24, 80, 72, 49, 43, 63, 39, 53, 1, 68, 67, 84, 38, 29, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 47, 13, 70, 99, 40, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 86, 26, 85, 34, 11, 19, 61, 76, 59, 22, 97]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 64, 65, 25, 3, 52, 78, 87, 15, 21, 93, 69, 23, 37, 35, 98, 17, 89, 46, 92, 27, 57, 66, 50, 60, 24, 80, 72, 49, 43, 63, 39, 53, 1, 68, 67, 84, 38, 29, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 47, 13, 70, 99, 40, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 86, 26, 85, 34, 11, 19, 61, 76, 59, 22, 97]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 64, 65, 25, 3, 52, 78, 87, 15, 21, 93, 69, 23, 37, 35, 98, 17, 89, 46, 92, 27, 57, 66, 50, 60, 24, 80, 72, 49, 43, 63, 39, 53, 1, 68, 67, 84, 38, 29, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 47, 13, 70, 99, 40, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 86, 26, 85, 34, 11, 19, 61, 76, 59, 22, 97]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[27, 92, 66, 57, 60, 24, 80, 72, 49, 43, 63, 39, 53, 1, 68, 67, 84, 38, 29, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 86, 50, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 64, 65, 25, 3, 52, 78, 23, 37, 35, 98, 17, 15, 87, 93, 21, 69, 89, 46, 27]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[27, 92, 66, 57, 60, 24, 80, 72, 49, 43, 63, 39, 53, 1, 68, 67, 84, 38, 29, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 86, 50, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 64, 65, 25, 3, 52, 78, 23, 37, 35, 98, 17, 15, 87, 93, 21, 69, 89, 46, 27]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[76, 59, 61, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 53, 39, 63, 68, 80, 24, 60, 50, 86, 56, 6, 8, 29, 38, 49, 67, 84, 72, 57, 92, 27, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 89, 83, 9, 48, 5, 62, 46, 31, 10, 16, 14, 73, 58, 20, 71, 35, 37, 23, 17, 15, 21, 93, 87, 78, 52, 18, 3, 64, 65, 25, 69, 98, 44, 22, 97, 90, 76]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 80, 24, 60, 50, 86, 56, 6, 8, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 73, 58, 20, 71, 83, 9, 89, 48, 5, 62, 46, 92, 27, 57, 66, 0, 91, 74, 18, 3, 64, 65, 25, 87, 15, 21, 69, 52, 78, 17, 93, 37, 98, 35, 23, 96, 55, 30, 79, 88, 41, 7, 54, 82, 33, 42, 45, 2, 28, 13, 99, 70, 40, 47, 29, 38, 49, 43, 72, 67, 84, 95]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[41, 88, 30, 79, 55, 96, 74, 18, 52, 78, 17, 93, 87, 15, 21, 69, 65, 64, 3, 25, 23, 37, 98, 35, 83, 9, 89, 48, 5, 62, 46, 31, 10, 16, 14, 73, 20, 71, 58, 44, 97, 22, 90, 76, 59, 61, 34, 85, 26, 19, 11, 54, 82, 33, 42, 45, 2, 99, 70, 40, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 80, 24, 60, 50, 86, 56, 6, 8, 29, 38, 13, 28, 84, 67, 57, 92, 27, 66, 0, 91, 7, 41]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[87, 15, 21, 93, 52, 78, 17, 23, 37, 98, 35, 83, 9, 89, 48, 5, 62, 46, 31, 10, 16, 14, 73, 20, 71, 58, 44, 97, 22, 90, 76, 59, 61, 34, 11, 26, 85, 56, 6, 8, 19, 54, 82, 33, 42, 45, 2, 28, 13, 99, 70, 40, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 29, 86, 50, 60, 24, 80, 57, 92, 27, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 65, 25, 69, 87]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[87, 15, 21, 93, 52, 78, 17, 23, 37, 98, 35, 83, 9, 89, 48, 5, 62, 46, 31, 10, 16, 14, 73, 20, 71, 58, 44, 97, 22, 90, 76, 59, 61, 34, 11, 26, 85, 56, 6, 8, 19, 54, 82, 33, 42, 45, 2, 28, 13, 99, 70, 40, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 29, 86, 50, 60, 24, 80, 57, 92, 27, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 65, 25, 69, 87]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[87, 15, 21, 93, 52, 78, 17, 23, 37, 98, 35, 83, 9, 89, 48, 5, 62, 46, 31, 10, 16, 14, 73, 20, 71, 58, 44, 97, 22, 90, 76, 59, 61, 34, 11, 26, 85, 56, 6, 8, 19, 54, 82, 33, 42, 45, 2, 28, 13, 99, 70, 40, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 29, 86, 50, 60, 24, 80, 57, 92, 27, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 65, 25, 69, 87]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[21, 15, 87, 69, 65, 64, 25, 3, 96, 74, 18, 52, 78, 17, 23, 37, 98, 35, 83, 9, 89, 48, 5, 62, 46, 31, 10, 16, 14, 73, 20, 71, 58, 44, 97, 22, 90, 76, 59, 61, 34, 85, 26, 19, 11, 54, 82, 33, 42, 45, 2, 28, 13, 99, 70, 40, 47, 29, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 24, 80, 60, 50, 86, 56, 6, 8, 84, 67, 57, 92, 27, 66, 0, 91, 7, 41, 88, 30, 79, 55, 93, 21]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[21, 15, 87, 69, 65, 64, 25, 3, 96, 74, 18, 52, 78, 17, 23, 37, 98, 35, 83, 9, 89, 48, 5, 62, 46, 31, 10, 16, 14, 73, 20, 71, 58, 44, 97, 22, 90, 76, 59, 61, 34, 85, 26, 19, 11, 54, 82, 33, 42, 45, 2, 28, 13, 99, 70, 40, 47, 29, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 24, 80, 60, 50, 86, 56, 6, 8, 84, 67, 57, 92, 27, 66, 0, 91, 7, 41, 88, 30, 79, 55, 93, 21]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[21, 15, 87, 69, 65, 64, 25, 3, 96, 74, 18, 52, 78, 17, 23, 37, 98, 35, 83, 9, 89, 48, 5, 62, 46, 31, 10, 16, 14, 73, 20, 71, 58, 44, 97, 22, 90, 76, 59, 61, 34, 85, 26, 19, 11, 54, 82, 33, 42, 45, 2, 28, 13, 99, 70, 40, 47, 29, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 24, 80, 60, 50, 86, 56, 6, 8, 84, 67, 57, 92, 27, 66, 0, 91, 7, 41, 88, 30, 79, 55, 93, 21]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[21, 15, 87, 69, 65, 64, 25, 3, 96, 74, 18, 52, 78, 17, 23, 37, 98, 35, 83, 9, 89, 48, 5, 62, 46, 31, 10, 16, 14, 73, 20, 71, 58, 44, 97, 22, 90, 76, 59, 61, 34, 85, 26, 19, 11, 54, 82, 33, 42, 45, 2, 28, 13, 99, 70, 40, 47, 29, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 24, 80, 60, 50, 86, 56, 6, 8, 84, 67, 57, 92, 27, 66, 0, 91, 7, 41, 88, 30, 79, 55, 93, 21]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[87, 15, 21, 69, 52, 78, 17, 23, 37, 98, 35, 83, 9, 89, 48, 5, 62, 46, 31, 10, 16, 14, 73, 20, 71, 58, 44, 97, 22, 90, 76, 59, 61, 34, 85, 26, 19, 11, 54, 82, 33, 42, 45, 2, 28, 13, 99, 70, 40, 47, 29, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 24, 80, 60, 50, 86, 56, 6, 8, 84, 67, 57, 92, 27, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 25, 65, 93, 87]");

    }

    @Test
    public void test_mmas_mem_cycle_moving_adtsp_freq_10_mag_0_5_kroA150() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA150));
        MMAS_MEM_CADTSP mmas_mem_cadtsp = new MMAS_MEM_CADTSP(graph, 0.8, 1000, 0.5, 10, 4);
        mmas_mem_cadtsp.setMmasSeed(1);
        mmas_mem_cadtsp.setDbgpSeed(1);
        mmas_mem_cadtsp.setStatisticInterval(1);
        mmas_mem_cadtsp.setShowLog(false);
        mmas_mem_cadtsp.run();
        assertThat(mmas_mem_cadtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(37479.30498430028);
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getGlobalStatistics())).isEqualTo("[85, 26, 34, 149, 19, 6, 8, 116, 56, 86, 144, 50, 124, 60, 80, 24, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 42, 122, 127, 2, 135, 13, 70, 40, 99, 47, 51, 77, 95, 72, 68, 104, 141, 147, 66, 107, 57, 27, 92, 130, 46, 112, 71, 20, 73, 140, 58, 126, 35, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 52, 133, 21, 15, 87, 93, 69, 64, 3, 65, 128, 25, 123, 117, 142, 55, 138, 121, 41, 88, 79, 30, 132, 137, 7, 91, 129, 0, 62, 48, 5, 89, 18, 74, 96, 118, 9, 83, 10, 14, 16, 108, 90, 97, 22, 44, 31, 76, 109, 59, 61, 54, 82, 33, 148, 119, 114, 11, 85]");

        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 1, 47612.67939543519, 2940.9855025489237, 0.0, 84.57142857142857, 42683.170205531416);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 5, 42446.2994842632, 2472.3937899817183, 0.6166666666666667, 33.90775510204082, 38125.12309197618);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 10, 41691.20871307949, 2672.970348937761, 0.49, 23.90122448979592, 37464.90262316576);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 11, 41190.30329630829, 2488.4340127466203, 0.53, 21.823673469387757, 37227.133964760105);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 15, 40415.585069748704, 2417.043615336617, 0.52, 18.821224489795917, 37218.49897458281);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 20, 40800.56222323402, 2997.840003193957, 0.49333333333333335, 17.90204081632653, 37218.498974582806);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 21, 49252.64638864587, 2807.8394371955483, 0.4633333333333333, 47.544489795918366, 43934.027062917194);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 25, 45183.45622091638, 3123.360647816524, 1.3666666666666667, 54.115102040816325, 38638.63095692351);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 30, 44532.48844729345, 2863.935053819692, 1.3666666666666667, 49.06612244897959, 38638.63095692351);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 31, 46929.4515306121, 3267.0657912342945, 1.46, 60.40897959183673, 41190.91095578379);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 35, 45084.144608277194, 2734.3449547687387, 1.7166666666666666, 56.61714285714286, 39776.286334121454);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 40, 44507.095712321505, 2845.2844408753463, 1.8233333333333333, 55.142857142857146, 39102.742619021396);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 41, 47694.59651791247, 3248.580609483659, 1.72, 58.39673469387755, 43485.41333036475);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 45, 46122.57657178793, 2234.6173578955922, 1.9333333333333333, 57.35918367346939, 42090.69164947139);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 50, 45651.00637422707, 2758.6128262330576, 2.1366666666666667, 58.9404081632653, 41043.21378527136);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 51, 43674.48266556755, 2973.770857070464, 2.033333333333333, 54.12489795918367, 40204.243901680864);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 55, 44077.71956499321, 2815.654270672197, 2.09, 54.98530612244898, 38337.716465960104);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 60, 43136.82625702844, 2677.631393783248, 2.1333333333333333, 53.968979591836735, 38324.58858497634);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 61, 45328.411546704105, 3037.5573023946185, 2.16, 59.22938775510204, 38796.31964521552);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 65, 44157.444702731824, 2448.706099579023, 2.16, 56.16408163265306, 38796.31964521552);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 70, 43896.081105222824, 2722.624672155288, 2.2133333333333334, 52.947755102040816, 37766.657351549504);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 71, 44850.65276713703, 2836.8722750151205, 2.0966666666666667, 58.645714285714284, 39744.90151319366);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 75, 44654.485363501735, 2600.0033841398613, 2.23, 59.85469387755102, 39230.9012589052);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 80, 44446.7366192996, 2270.7083848497236, 2.2333333333333334, 59.76571428571429, 38494.25946359048);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 81, 45893.531603090705, 3212.964037706592, 2.1033333333333335, 62.86612244897959, 39246.70580762457);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 85, 45790.955646070084, 3031.1523787240412, 2.1033333333333335, 62.72244897959184, 39246.70580762457);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 90, 44857.40074573678, 2211.04377543918, 2.183333333333333, 63.12408163265306, 38832.34588918829);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 91, 43910.350730220394, 3686.200486613548, 2.183333333333333, 56.85877551020408, 37214.086507688815);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 95, 43029.931730393175, 2788.775879769285, 2.183333333333333, 54.691428571428574, 37214.086507688815);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 100, 43202.15665594978, 3118.2465639328143, 2.2333333333333334, 54.66612244897959, 36782.83880595388);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 101, 44457.23582701466, 2979.000143864953, 2.31, 59.44734693877551, 38737.06291483089);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 105, 44928.78516705894, 3204.5920009189485, 2.31, 60.64326530612245, 37809.18656824126);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 110, 44505.525854509695, 2221.196510269269, 2.31, 58.47102040816326, 37809.18656824126);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 111, 44271.622455989185, 2730.853554790476, 2.263333333333333, 61.201632653061225, 37720.37566971011);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 115, 44109.46223861085, 2166.94134085626, 2.263333333333333, 59.59183673469388, 37720.37566971011);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 120, 43905.929294412635, 2811.2337355293935, 2.263333333333333, 59.629387755102044, 37720.37566971011);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 121, 45573.53632447703, 2806.383226404926, 2.26, 64.70530612244897, 40056.132296631804);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 125, 45116.46906397394, 3080.552075889428, 2.316666666666667, 64.33469387755102, 39530.033018882306);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 130, 44859.750730388754, 2829.4286188568353, 2.3466666666666667, 63.459591836734695, 38306.40965458614);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 131, 43247.7348354701, 2739.2126256761785, 2.296666666666667, 58.32489795918367, 37019.384637330535);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 135, 44089.06277696997, 3175.1035374492717, 2.296666666666667, 56.41877551020408, 37019.384637330535);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 140, 42975.73993821393, 2766.2166916253127, 2.296666666666667, 56.17632653061224, 37019.384637330535);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 141, 45386.377191165186, 3077.025259041012, 2.3333333333333335, 63.395102040816326, 40142.53452364432);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 145, 45173.04883344622, 3047.1219822707167, 2.37, 60.72244897959184, 38935.96126979511);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 150, 45299.64281475248, 3335.182299525098, 2.37, 60.55020408163265, 38935.96126979511);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 151, 44675.84121486607, 3225.817263287262, 2.3766666666666665, 62.22938775510204, 39651.87183185275);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 155, 44369.02177256881, 3302.326060701776, 2.3933333333333335, 59.53551020408163, 38634.11030561776);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 160, 44100.66037081325, 3092.8351422020564, 2.4366666666666665, 57.98367346938775, 37640.27743768005);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 161, 45947.26321229905, 2771.6540926702464, 2.4233333333333333, 67.69469387755102, 41339.13883757617);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 165, 45556.64308808141, 2898.322639361858, 2.4966666666666666, 66.61142857142858, 38970.027818690745);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 170, 44589.7112421632, 2994.0878877705113, 2.54, 64.60816326530612, 38854.77314415974);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 171, 44389.46685649394, 3950.271283605263, 2.473333333333333, 56.83428571428571, 38528.12188772849);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 175, 43338.92158584089, 2988.1198705263255, 2.473333333333333, 56.969795918367346, 38528.12188772849);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 180, 43221.29749616891, 3117.9085691271107, 2.5033333333333334, 57.92408163265306, 37317.33627893589);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 181, 45338.55729789359, 2861.750775704679, 2.506666666666667, 63.17632653061224, 38296.29151418345);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 185, 44380.784449060506, 2907.727730784451, 2.506666666666667, 62.14938775510204, 38296.29151418345);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 190, 44826.30885251185, 2708.7131309686292, 2.506666666666667, 60.44244897959184, 38296.29151418345);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 191, 44006.70497331645, 2643.710223237432, 2.4633333333333334, 60.308571428571426, 38836.04274028578);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 195, 43852.49716639402, 2825.33483445395, 2.48, 61.48816326530612, 37495.2432142498);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 200, 42770.62938529676, 2771.0267953023945, 2.433333333333333, 59.027755102040814, 37495.2432142498);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 201, 45300.74526372871, 2853.8191313670122, 2.4633333333333334, 65.58857142857143, 38805.703518947645);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 205, 44788.72517690058, 2773.4246304087933, 2.4633333333333334, 65.4734693877551, 38805.703518947645);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 210, 44506.53194041537, 2719.9560754131994, 2.4633333333333334, 63.08571428571429, 38805.703518947645);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 211, 43473.8918066572, 2819.6424240171614, 2.37, 58.50530612244898, 38789.7693143096);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 215, 43040.45630007095, 3131.175760591611, 2.39, 55.64244897959183, 38005.91094585862);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 220, 42227.874433334015, 3035.2759390021088, 2.4133333333333336, 55.4865306122449, 34623.62917342601);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 221, 44847.457028965575, 3137.2020114620946, 2.39, 60.59265306122449, 39691.329131580365);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 225, 44395.630770570104, 2381.0407912918668, 2.43, 60.590204081632656, 38995.30866751677);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 230, 45370.61317230319, 3255.0883014884444, 2.453333333333333, 58.91183673469388, 38262.30980060756);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 231, 43394.22143037513, 2658.7598035587885, 2.3233333333333333, 58.02040816326531, 38470.04078066714);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 235, 44084.4340214573, 3515.831625600576, 2.3233333333333333, 59.67836734693878, 38470.04078066714);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 240, 43364.08332581247, 2907.6605589727405, 2.3333333333333335, 58.689795918367345, 37940.412015311544);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 241, 44920.83433505513, 2936.691343821492, 2.3733333333333335, 66.24244897959184, 40532.54298344194);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 245, 44661.604703654506, 2516.806001483729, 2.433333333333333, 66.96408163265306, 39525.35219840259);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 250, 44448.67955465216, 2450.308374017307, 2.453333333333333, 64.87265306122448, 39337.07369151102);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 251, 42852.92956520411, 2390.7949907820334, 2.3666666666666667, 58.00734693877551, 36964.55994191775);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 255, 42727.99597138472, 2953.4611854110585, 2.3766666666666665, 56.629387755102044, 36392.361585446095);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 260, 42481.57572401202, 2740.8989758558405, 2.3766666666666665, 54.62285714285714, 36392.361585446095);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 261, 45418.45510805239, 3300.4379042639353, 2.33, 61.83591836734694, 38633.71477803999);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 265, 44698.10266691181, 3366.6765877161274, 2.35, 59.75265306122449, 37455.55819875806);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 270, 44718.54731571138, 2795.9399900004, 2.35, 60.60081632653061, 37455.55819875806);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 271, 43577.235505944096, 2871.846085415613, 2.256666666666667, 59.97795918367347, 38498.65103458131);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 275, 43711.20811728648, 2211.8473873256626, 2.296666666666667, 59.87183673469388, 37792.67453433882);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 280, 42998.01113739603, 2814.115553620303, 2.3533333333333335, 58.08734693877551, 35824.94357313771);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 281, 44895.056170767864, 2689.7344193858944, 2.36, 64.65714285714286, 39908.42185892212);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 285, 44827.21587358388, 3471.9695358019403, 2.4166666666666665, 64.28081632653061, 38272.13848783707);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 290, 44405.053393705544, 2387.5356176337464, 2.4166666666666665, 64.53877551020408, 38272.13848783707);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 291, 42672.15390445462, 2765.9005001217397, 2.3866666666666667, 53.32489795918367, 36449.75226852908);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 295, 42914.03269026857, 2650.3995549212873, 2.3766666666666665, 55.90938775510204, 35927.74067807912);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 300, 42457.1258615421, 3490.5522554749364, 2.3366666666666664, 53.63183673469388, 35927.74067807912);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 301, 44495.30192973322, 2992.3487207025532, 2.35, 61.76081632653061, 39948.36709390027);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 305, 44895.02197036127, 2763.9617662470287, 2.35, 62.76571428571429, 39948.36709390027);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 310, 44142.618959458574, 3475.84332025327, 2.3633333333333333, 60.39591836734694, 38440.621952744);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 311, 44634.69811238211, 3225.5177953903526, 2.316666666666667, 61.14204081632653, 37632.902064877686);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 315, 44585.135215610426, 2521.7887822324474, 2.316666666666667, 61.03265306122449, 37632.902064877686);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 320, 44115.47490075441, 3417.6329436659835, 2.316666666666667, 59.817959183673466, 37632.902064877686);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 321, 44359.25057438689, 2780.759750728033, 2.3566666666666665, 66.94367346938776, 39796.7557032439);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 325, 45879.843898038474, 3102.83143956698, 2.433333333333333, 65.69877551020409, 38883.284417582116);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 330, 44510.246265196845, 3026.2143444376247, 2.486666666666667, 64.32897959183674, 37858.90921979677);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 331, 43536.881426715, 3484.9364049503465, 2.32, 57.81551020408163, 38785.83336164363);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 335, 42108.47310006313, 2715.094892256257, 2.34, 55.627755102040815, 35861.48188911656);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 340, 42420.90353565772, 2937.155144335896, 2.34, 54.23755102040816, 35861.48188911656);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 341, 44534.90706550267, 2707.994533252702, 2.3133333333333335, 61.542040816326534, 39221.96845618883);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 345, 44244.01193645183, 2472.6527124522077, 2.3133333333333335, 59.54938775510204, 39221.96845618883);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 350, 44939.07290535586, 2505.4596078678564, 2.3466666666666667, 62.01469387755102, 38277.43230962328);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 351, 44715.42044094035, 2832.963407192412, 2.4, 61.40326530612245, 38898.86636285056);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 355, 44096.17498262936, 3216.3958483759493, 2.4433333333333334, 60.31183673469388, 38527.36580989075);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 360, 43615.99172268256, 2786.4603201433074, 2.473333333333333, 60.835102040816324, 38244.75153096593);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 361, 44487.27280343449, 2706.655468201137, 2.4966666666666666, 65.36816326530612, 39931.742580256185);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 365, 44717.620662728164, 3540.0779514472097, 2.533333333333333, 64.82204081632653, 39307.501851853754);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 370, 44377.36696136729, 2922.2835034751392, 2.533333333333333, 65.33632653061224, 39307.501851853754);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 371, 43099.29512870102, 3226.972237634083, 2.4066666666666667, 54.7665306122449, 37901.77775082042);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 375, 42924.67889592547, 3243.700884995945, 2.43, 55.409795918367344, 35036.56494990031);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 380, 42651.4561303078, 3396.2514369367514, 2.43, 52.67918367346939, 35036.56494990031);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 381, 45160.48882771437, 3384.636656345015, 2.38, 61.69877551020408, 38408.199337887534);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 385, 44114.821996164654, 2858.8280247352077, 2.42, 62.115918367346936, 37324.010720456215);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 390, 43870.17813624261, 2829.8516200491895, 2.42, 61.18938775510204, 37324.010720456215);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 391, 44294.20881126785, 3650.9862447721403, 2.3833333333333333, 60.35918367346939, 38409.91023530051);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 395, 44265.84770068908, 3391.6860371012895, 2.42, 61.64489795918367, 36740.23733641445);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 400, 44314.30056701387, 2638.8294015040146, 2.3866666666666667, 59.2530612244898, 36740.23733641445);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 401, 44310.680113589464, 2444.985026517244, 2.38, 66.2326530612245, 39861.33861128559);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 405, 44885.07579379101, 2860.9071491705104, 2.43, 65.91265306122449, 39710.261995584886);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 410, 44082.99670448843, 2427.858689087729, 2.41, 63.50938775510204, 38265.79477747157);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 411, 42900.09891176748, 2759.7329200178956, 2.37, 55.80897959183673, 37242.200151508405);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 415, 43606.02310937614, 3381.0059875825395, 2.3866666666666667, 55.7665306122449, 34943.38311547223);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 420, 42570.77882390805, 3294.3151647734217, 2.3866666666666667, 53.85224489795918, 34943.38311547223);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 421, 45011.29081870659, 2739.1832052843965, 2.2933333333333334, 62.35673469387755, 39966.75360856989);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 425, 44490.761932646994, 2893.4325055136715, 2.3533333333333335, 59.72408163265306, 38144.223109523155);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 430, 45359.20715879029, 4096.784201355738, 2.39, 61.630204081632655, 37535.92893204383);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 431, 43836.25455331148, 3229.4990125143995, 2.3366666666666664, 60.34367346938775, 38172.28858760721);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 435, 43885.08250537488, 3555.373604616739, 2.3233333333333333, 59.114285714285714, 36791.981249313205);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 440, 42445.11693122607, 3184.6409001415745, 2.3566666666666665, 58.01469387755102, 35610.90417041071);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 441, 44268.38478674011, 2407.8149931758276, 2.34, 64.55020408163266, 39851.06986733102);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 445, 44943.88295758429, 2383.2571650076634, 2.3766666666666665, 65.14285714285714, 39108.36946238478);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 450, 44533.77274195776, 3274.3047769379264, 2.3766666666666665, 64.62285714285714, 39108.36946238478);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 451, 43204.689597736135, 3153.3569778615283, 2.34, 57.65877551020408, 36889.499595695954);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 455, 42668.42346819101, 3308.150401129545, 2.3466666666666667, 54.757551020408165, 35953.90372460066);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 460, 42522.5004249421, 3061.537402355883, 2.3466666666666667, 55.16816326530612, 35953.90372460066);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 461, 44420.203714637646, 2367.7400497170256, 2.316666666666667, 61.91673469387755, 39842.604864525565);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 465, 44631.56426794543, 2814.1115279948003, 2.3933333333333335, 62.95591836734694, 38039.11621677221);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 470, 44525.78100943819, 2746.468009574448, 2.3933333333333335, 62.328163265306124, 38039.11621677221);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 471, 44239.33767142141, 3506.876282772844, 2.3066666666666666, 61.56, 38762.55138321059);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 475, 42842.14924471466, 2466.165238380653, 2.3433333333333333, 60.55183673469388, 38344.13433381459);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 480, 43893.36333687248, 3029.838192668421, 2.3766666666666665, 61.20734693877551, 36040.096544128166);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 481, 44675.13757135668, 2639.058531573147, 2.39, 64.6930612244898, 37521.70917061719);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 485, 44568.377710032386, 2036.4339376384612, 2.39, 64.80734693877551, 37521.70917061719);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 490, 44615.4901727417, 2790.182247914041, 2.39, 63.61632653061225, 37521.70917061719);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 491, 42714.62820294713, 3116.097044123857, 2.2933333333333334, 56.241632653061224, 36895.508261676354);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 495, 42959.694431761855, 2942.193211020925, 2.2933333333333334, 58.44, 36895.508261676354);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 500, 42506.06798800313, 2974.4784321561015, 2.31, 54.88081632653061, 36755.1746094058);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 501, 44620.644875456885, 2875.4889732899087, 2.3033333333333332, 62.56081632653061, 39081.23885477447);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 505, 44140.567892865045, 2603.08026228209, 2.3133333333333335, 62.630204081632655, 38526.38298123308);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 510, 44746.08960430519, 3069.8073616332135, 2.3133333333333335, 63.79183673469388, 38526.38298123308);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 511, 43883.869565905894, 2718.6903860024577, 2.2866666666666666, 62.68081632653061, 38516.78963295975);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 515, 42975.70473211735, 2948.221213974062, 2.3233333333333333, 61.76081632653061, 37655.45027717172);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 520, 42972.56678955013, 2728.5331826073743, 2.3466666666666667, 60.55183673469388, 36656.926262066845);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 521, 45118.595120759455, 3123.3667716065474, 2.36, 64.79510204081633, 40315.86571448997);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 525, 44852.57595196263, 3500.014090605693, 2.38, 64.09142857142857, 38756.27716930952);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 530, 44005.55300266069, 2748.643327680688, 2.4633333333333334, 63.841632653061225, 37683.54487153062);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 531, 43701.59001723432, 3000.0388185277316, 2.3666666666666667, 57.02285714285714, 37845.286829129625);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 535, 43254.176954386094, 3732.982575844073, 2.3866666666666667, 56.288979591836735, 35894.21011776824);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 540, 42274.978543259436, 2958.66106411999, 2.3866666666666667, 54.91183673469388, 35894.21011776824);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 541, 44216.70599760685, 3024.9560751200693, 2.316666666666667, 61.10448979591837, 38646.885950890384);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 545, 44253.35608080819, 2592.156740685201, 2.316666666666667, 62.586938775510205, 38646.885950890384);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 550, 44012.642578605664, 2743.891975510101, 2.3633333333333333, 61.94857142857143, 37509.383680149745);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 551, 43374.55365512816, 2374.4363366261214, 2.3533333333333335, 62.37877551020408, 38282.39913113827);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 555, 44119.35137154467, 3036.28023834646, 2.36, 61.42530612244898, 36795.85579839951);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 560, 43487.744576966536, 2926.506768204829, 2.36, 60.07265306122449, 36795.85579839951);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 561, 45654.83326376349, 3524.4937084094718, 2.3033333333333332, 65.53469387755102, 40680.55933163166);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 565, 44114.20686295865, 2569.983902106022, 2.3733333333333335, 64.84408163265306, 38858.6314936492);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 570, 44590.45022472532, 3101.480958641897, 2.3933333333333335, 64.58122448979591, 38826.47551044196);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 571, 43322.524125794174, 2566.077630979606, 2.3266666666666667, 55.91183673469388, 38978.82301047225);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 575, 42896.25714526495, 2897.328496531998, 2.3566666666666665, 54.95918367346939, 37136.92772501904);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 580, 41969.85365082381, 2531.50168563432, 2.34, 52.29551020408163, 35731.32684658315);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 581, 45122.51928590907, 3248.2149309202923, 2.27, 61.94938775510204, 38743.9483856692);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 585, 44477.887150623865, 3095.5197051284267, 2.296666666666667, 62.736326530612246, 38419.63367821891);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 590, 44393.57368382942, 2947.0547531806546, 2.3266666666666667, 62.074285714285715, 38242.1584865845);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 591, 43479.5718940195, 2872.9391005205184, 2.36, 63.968979591836735, 37923.897764805086);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 595, 43565.71892810946, 3172.509042136392, 2.36, 62.12408163265306, 37923.897764805086);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 600, 43346.57093700895, 3061.1172480381333, 2.35, 59.906122448979595, 37289.92199538749);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 601, 43855.53012684216, 2404.329067039013, 2.3033333333333332, 65.76897959183674, 39136.09606261885);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 605, 43872.87283414397, 3244.3577872001065, 2.3533333333333335, 65.37142857142857, 37793.14897317921);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 610, 43575.29161680568, 2136.030154507774, 2.3533333333333335, 62.962448979591834, 37793.14897317921);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 611, 43766.59628624666, 3092.26029138076, 2.27, 56.94285714285714, 37352.786161557044);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 615, 42728.740251811345, 2906.2243417356417, 2.2933333333333334, 55.53469387755102, 37271.92298365217);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 620, 42413.27849731313, 2974.3209674549366, 2.283333333333333, 57.05877551020408, 36555.352876350786);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 621, 45306.33359046193, 3180.008562163627, 2.23, 62.95673469387755, 38480.16119097203);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 625, 44631.058657228474, 2539.2283774503885, 2.23, 62.459591836734695, 38480.16119097203);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 630, 44043.67903146865, 3070.4120451466883, 2.23, 62.49551020408163, 38480.16119097203);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 631, 44188.68651138511, 3170.765340361721, 2.316666666666667, 62.453061224489794, 38151.08966820151);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 635, 43759.94170053617, 3473.0040572107696, 2.316666666666667, 61.6, 38151.08966820151);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 640, 43555.31858058511, 3568.5316682070084, 2.3666666666666667, 61.56897959183674, 38091.569465891844);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 641, 45282.594252374656, 3356.5441065963773, 2.316666666666667, 65.67836734693877, 40629.271570183955);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 645, 44141.973952288994, 2990.7557351071514, 2.36, 63.19183673469388, 38253.53732054747);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 650, 44873.59723998512, 3399.7653393062656, 2.42, 64.54285714285714, 37567.94094581074);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 651, 43107.9912254381, 2551.1558819576676, 2.3533333333333335, 57.54530612244898, 38459.654123616274);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 655, 43327.213616899346, 3222.94602561321, 2.42, 58.034285714285716, 37195.199064054534);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 660, 43101.34227042334, 2963.263937888253, 2.42, 56.65714285714286, 37195.199064054534);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 661, 44118.16543505348, 3214.2506845436997, 2.316666666666667, 61.2, 38816.51348719278);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 665, 44334.12571650636, 3223.8974462068236, 2.3566666666666665, 61.477551020408164, 38715.936398327);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 670, 44169.89751799058, 3126.280820911005, 2.3766666666666665, 62.2130612244898, 37937.05380682581);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 671, 44017.54209814446, 3050.146753136354, 2.41, 62.28, 38428.96230225499);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 675, 43374.80495012003, 3001.0838347459494, 2.43, 61.692244897959185, 37787.74216063531);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 680, 43061.68874321964, 2977.107694616958, 2.4433333333333334, 62.629387755102044, 37351.841058464895);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 681, 44436.0590125149, 3134.278467150449, 2.4266666666666667, 65.11836734693877, 38318.35970884668);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 685, 44527.24844796055, 3684.844846262954, 2.4466666666666668, 63.70367346938775, 38265.13119387159);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 690, 45093.93430860381, 3148.018006059452, 2.44, 63.2, 37837.129860298315);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 691, 42743.44339740373, 3000.905671909281, 2.38, 58.90938775510204, 37145.90945515212);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 695, 42646.70332899407, 2592.7204283747656, 2.38, 59.006530612244894, 37145.90945515212);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 700, 42356.452947375095, 2433.4107758004657, 2.3933333333333335, 56.38530612244898, 37145.90945515212);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 701, 44140.79684962928, 2919.4121589981983, 2.3233333333333333, 62.16979591836735, 38915.23179979888);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 705, 44159.947546007315, 2937.413498246301, 2.3733333333333335, 61.201632653061225, 38840.755768810865);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 710, 43342.47713695377, 2437.0150417574278, 2.3766666666666665, 60.78040816326531, 37109.54804885747);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 711, 43455.60480678215, 2578.2057273047803, 2.3533333333333335, 63.409795918367344, 39888.44062237771);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 715, 43896.096116545865, 3773.5589740799364, 2.4066666666666667, 61.542857142857144, 37507.99823222834);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 720, 42794.26140111471, 2633.903043697003, 2.4, 61.055510204081635, 37342.32416814789);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 721, 44523.440663133646, 3071.26485449517, 2.36, 65.11020408163266, 40832.72793676208);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 725, 45007.22838274676, 3308.9480907172065, 2.4, 64.1534693877551, 38710.50665413588);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 730, 44529.767355546115, 2523.4995264351055, 2.3733333333333335, 63.19673469387755, 37433.57330175485);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 731, 42609.84078905629, 2591.631710219325, 2.3566666666666665, 58.06367346938776, 36493.15223097453);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 735, 42942.742637162, 2783.3434595760937, 2.3566666666666665, 57.013061224489796, 36493.15223097453);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 740, 42619.064987980564, 2886.5142577490374, 2.3666666666666667, 57.92, 36406.999805986605);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 741, 44532.90634060022, 2793.9823837219565, 2.3366666666666664, 61.56979591836735, 39470.01582261733);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 745, 44196.43997187469, 3529.2887531982824, 2.3866666666666667, 62.712653061224486, 38610.37415485203);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 750, 44088.9940301739, 2396.4817471035403, 2.3866666666666667, 61.248163265306125, 38610.37415485203);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 751, 43563.93220330911, 3168.940233561245, 2.3366666666666664, 61.304489795918364, 37623.65505509514);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 755, 43211.581876865064, 3432.1359372206184, 2.36, 60.53551020408163, 36942.80281920253);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 760, 43969.0120640693, 3129.8617973134087, 2.36, 61.15183673469388, 36942.80281920253);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 761, 44863.205925185895, 3081.6040894494477, 2.3733333333333335, 65.12734693877552, 37625.94696123911);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 765, 44345.10076607608, 3240.8615331366477, 2.3733333333333335, 63.89061224489796, 37625.94696123911);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 770, 44798.69360717517, 2718.5184840032584, 2.3733333333333335, 63.98530612244898, 37625.94696123911);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 771, 43106.68215587305, 2779.458656523752, 2.296666666666667, 57.28163265306122, 38154.11776659562);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 775, 43885.96445541026, 3179.2279144644763, 2.31, 56.34448979591837, 37791.08661608668);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 780, 42435.843263036215, 2874.828846403734, 2.33, 55.82530612244898, 36581.86458342156);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 781, 43514.79203688017, 2860.058849528495, 2.3033333333333332, 62.34204081632653, 39216.318306495974);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 785, 43989.823353373715, 3233.135354820626, 2.3566666666666665, 61.89061224489796, 38681.8450331053);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 790, 44206.44875248228, 2527.8586301278397, 2.3566666666666665, 62.155102040816324, 38303.48113723332);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 791, 43331.14710000739, 2960.468013756893, 2.37, 62.1665306122449, 38615.26484666215);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 795, 42639.65746697334, 3039.6535642372305, 2.3766666666666665, 59.22938775510204, 36697.05654500471);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 800, 43336.3221138895, 3508.8607711501386, 2.3733333333333335, 62.4465306122449, 36697.05654500471);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 801, 43680.96101251209, 2639.7152106263293, 2.3366666666666664, 65.12, 39658.0391670786);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 805, 45040.11480390788, 2910.7158779277056, 2.3866666666666667, 64.87428571428572, 38292.63114359643);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 810, 43951.70482361465, 2423.8755831382264, 2.4266666666666667, 62.21877551020408, 37995.70710959224);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 811, 43222.27001057216, 2611.38653903084, 2.35, 60.14204081632653, 38293.65042128085);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 815, 42590.360508331534, 2672.12278533572, 2.3566666666666665, 56.96326530612245, 37057.074857088606);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 820, 43363.66139215617, 3444.4840344399527, 2.3633333333333333, 56.16, 35766.129819534195);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 821, 44404.00855432256, 3721.4411349038082, 2.32, 63.835102040816324, 37896.55457842024);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 825, 43747.89224931272, 2674.262767026564, 2.32, 63.460408163265306, 37896.55457842024);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 830, 44299.049838873856, 3226.107881201928, 2.32, 61.755102040816325, 37896.55457842024);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 831, 43498.03026176323, 3178.594851270769, 2.3766666666666665, 64.96163265306123, 38732.84008748166);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 835, 43508.95465388459, 3287.336768635483, 2.3866666666666667, 63.50204081632653, 37931.91442106809);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 840, 43845.34332443101, 2792.2434881794265, 2.4566666666666666, 62.2734693877551, 37403.15339197653);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 841, 44239.914383290474, 2738.0960999608906, 2.453333333333333, 63.22775510204082, 38184.59047997382);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 845, 44856.782014296194, 3556.388793396609, 2.44, 64.34285714285714, 38012.062145410564);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 850, 43497.77653604214, 2529.666977049477, 2.44, 61.52734693877551, 38012.062145410564);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 851, 42971.376038641094, 3181.3756266674645, 2.3733333333333335, 58.42285714285714, 35312.060499920524);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 855, 42623.84065550714, 2765.8135813038275, 2.3733333333333335, 57.70122448979592, 35312.060499920524);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 860, 42335.25028203532, 2647.105654913203, 2.3733333333333335, 55.522448979591836, 35312.060499920524);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 861, 44087.485427369895, 2729.268882694106, 2.283333333333333, 63.16816326530612, 40115.40498480395);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 865, 44971.70250850125, 3333.911630134616, 2.3133333333333335, 62.8334693877551, 38746.10124113033);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 870, 43326.78772451489, 2188.5587680440835, 2.3533333333333335, 61.568163265306126, 38078.60791993319);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 871, 43291.521448519656, 3163.2021161602006, 2.36, 64.15265306122448, 38307.84460041954);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 875, 43851.539248421184, 4214.3760038020055, 2.3866666666666667, 63.204081632653065, 36634.6576009545);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 880, 43576.18236878277, 2891.0230613544427, 2.3866666666666667, 62.05142857142857, 36634.6576009545);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 881, 43859.33699524384, 2815.6396247805847, 2.38, 64.37632653061225, 39220.06874298905);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 885, 43779.637940008215, 2532.752288424385, 2.42, 62.80816326530612, 38068.22695235763);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 890, 43681.257060856864, 2856.091770685578, 2.42, 62.075102040816326, 38068.22695235763);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 891, 43788.68889864681, 3331.8283128109874, 2.33, 58.8065306122449, 38109.82085813649);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 895, 42493.96847617257, 2974.325379847807, 2.3766666666666665, 56.78204081632653, 37713.5527195848);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 900, 41846.53553333222, 3112.0637864693017, 2.3566666666666665, 52.333061224489796, 36742.22197365711);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 901, 43606.747185352964, 2692.0481473009077, 2.3266666666666667, 61.15673469387755, 39007.47833788612);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 905, 43658.70973289908, 3069.009851462699, 2.38, 61.17387755102041, 37845.04836528659);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 910, 44816.30395470113, 3309.445570227155, 2.38, 62.370612244897956, 37845.04836528659);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 911, 42936.300015168556, 2575.9439083104776, 2.35, 62.882448979591835, 38695.181461690896);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 915, 43231.36378096556, 2990.277752155258, 2.3666666666666667, 60.879183673469385, 36844.15910947971);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 920, 43186.40680284631, 3405.4824545017545, 2.4366666666666665, 61.27510204081633, 36030.75833427962);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 921, 44865.43846063513, 3179.3586229012353, 2.3933333333333335, 64.14530612244899, 39044.19035655624);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 925, 44226.59027989421, 2688.5610458555466, 2.44, 65.7673469387755, 38788.10089350162);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 930, 44091.276359483025, 2587.763332186598, 2.5233333333333334, 64.95836734693877, 38726.56670622303);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 931, 43516.16028160856, 3073.7659666701575, 2.4366666666666665, 57.59755102040816, 38444.696295001595);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 935, 42616.36368478691, 2623.747760134009, 2.4466666666666668, 57.02122448979592, 35595.01340033268);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 940, 42115.591318154235, 2714.6873798765805, 2.4466666666666668, 54.88979591836735, 35595.01340033268);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 941, 44571.19087688016, 2926.8512561690472, 2.36, 61.81469387755102, 38275.271777145186);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 945, 44067.13335668709, 2748.835564667818, 2.36, 60.93959183673469, 38275.271777145186);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 950, 44322.12946433105, 2857.924243615097, 2.36, 62.40489795918367, 38275.271777145186);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 951, 44245.55266111869, 3026.3869246707736, 2.39, 63.89877551020408, 37865.25082702044);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 955, 43123.43837279777, 3295.157345711892, 2.453333333333333, 62.19428571428571, 37099.27785800167);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 960, 42642.19218833353, 2198.708411318574, 2.453333333333333, 62.10448979591837, 37049.84431383794);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 961, 44453.04029509609, 2582.3640919213008, 2.3866666666666667, 65.84979591836735, 39841.94700900131);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 965, 44835.85970139195, 3014.467757941059, 2.433333333333333, 63.773877551020405, 38019.104603806605);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 970, 44072.55308917874, 2614.3690994951253, 2.433333333333333, 64.21551020408164, 38019.104603806605);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 971, 42220.100202814734, 3098.335433439441, 2.36, 55.540408163265305, 36901.53308212503);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 975, 42196.59872056472, 2616.259145527962, 2.37, 54.21795918367347, 36616.33049835636);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 980, 42892.16765793795, 3103.4906773629054, 2.4, 55.44897959183673, 35842.98033615932);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 981, 44986.45564429208, 2966.9939585535476, 2.34, 61.46122448979592, 39841.80898722393);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 985, 43578.96219263551, 2404.4880072530223, 2.38, 61.7469387755102, 38308.88050507874);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 990, 44129.40818217849, 3379.5030486184314, 2.38, 61.23102040816327, 37977.284402328594);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 991, 43997.855079218716, 3408.407782000831, 2.3666666666666667, 64.08408163265307, 37479.30498430028);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 995, 43794.62852083124, 2670.2478054054586, 2.3666666666666667, 62.6334693877551, 37479.30498430028);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 1000, 43562.362385241526, 3693.8141963686317, 2.3566666666666665, 61.69877551020408, 37479.30498430028);

        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[128, 65, 64, 25, 123, 117, 3, 118, 138, 55, 142, 79, 30, 41, 121, 96, 7, 91, 129, 0, 62, 48, 5, 74, 18, 133, 52, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 10, 31, 108, 90, 97, 22, 44, 16, 14, 112, 92, 27, 66, 104, 141, 147, 46, 130, 50, 124, 86, 144, 56, 8, 116, 6, 19, 85, 26, 34, 149, 76, 109, 59, 61, 11, 148, 82, 54, 114, 119, 122, 42, 45, 2, 135, 13, 47, 77, 51, 95, 38, 100, 106, 29, 120, 4, 36, 12, 75, 32, 145, 102, 94, 125, 81, 49, 43, 143, 113, 63, 39, 53, 1, 115, 146, 67, 80, 24, 60, 57, 107, 139, 33, 84, 111, 131, 28, 127, 70, 40, 99, 134, 72, 68, 137, 132, 88, 89, 78, 105, 17, 83, 9, 128]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[60, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 2, 45, 122, 42, 127, 135, 13, 47, 99, 70, 40, 119, 114, 34, 149, 61, 59, 76, 109, 19, 116, 6, 8, 144, 86, 50, 124, 139, 82, 54, 148, 26, 85, 11, 56, 33, 84, 67, 72, 146, 134, 107, 27, 92, 129, 0, 62, 48, 5, 74, 18, 133, 52, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 17, 105, 89, 78, 3, 64, 65, 128, 123, 25, 117, 118, 79, 30, 88, 137, 132, 41, 121, 138, 55, 142, 96, 7, 91, 112, 16, 14, 10, 31, 44, 97, 22, 90, 108, 46, 130, 104, 141, 147, 66, 57, 60]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[93, 21, 69, 15, 87, 78, 52, 133, 18, 89, 48, 5, 74, 136, 17, 105, 83, 9, 71, 20, 73, 58, 140, 126, 110, 101, 98, 35, 103, 23, 37, 112, 46, 130, 92, 27, 104, 141, 147, 66, 57, 60, 24, 80, 68, 72, 67, 84, 100, 106, 29, 120, 111, 131, 28, 2, 45, 122, 42, 127, 135, 13, 47, 99, 70, 40, 38, 95, 77, 51, 4, 36, 146, 12, 145, 102, 32, 75, 94, 125, 81, 49, 115, 113, 43, 1, 143, 63, 39, 53, 107, 56, 8, 6, 116, 54, 82, 33, 148, 26, 85, 11, 34, 149, 61, 59, 76, 109, 19, 119, 114, 86, 144, 139, 134, 50, 124, 22, 90, 108, 31, 44, 97, 16, 14, 10, 62, 91, 129, 0, 7, 41, 121, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 79, 30, 88, 137, 132, 93]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[78, 105, 89, 48, 5, 62, 0, 129, 141, 147, 66, 57, 107, 68, 72, 113, 43, 49, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 77, 51, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 122, 42, 2, 70, 40, 99, 47, 13, 135, 127, 119, 114, 54, 82, 33, 148, 26, 85, 11, 56, 8, 6, 116, 86, 144, 50, 124, 60, 24, 80, 139, 134, 84, 67, 143, 63, 39, 53, 1, 132, 41, 121, 79, 30, 88, 137, 7, 91, 74, 18, 3, 64, 65, 128, 123, 25, 117, 142, 55, 96, 118, 133, 52, 93, 21, 69, 15, 87, 136, 17, 101, 98, 103, 110, 23, 37, 35, 126, 58, 140, 73, 20, 71, 9, 83, 112, 46, 22, 90, 108, 31, 44, 16, 14, 10, 59, 61, 34, 149, 19, 109, 76, 97, 27, 92, 130, 104, 138, 78]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[57, 107, 68, 80, 24, 60, 124, 50, 86, 144, 6, 8, 116, 139, 134, 84, 67, 72, 113, 43, 49, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 42, 122, 2, 135, 127, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 109, 76, 130, 46, 112, 71, 73, 20, 58, 140, 126, 35, 83, 9, 89, 48, 5, 62, 0, 129, 7, 91, 74, 18, 133, 52, 105, 78, 136, 87, 15, 21, 69, 93, 23, 37, 103, 110, 101, 98, 17, 3, 64, 65, 128, 123, 25, 117, 142, 55, 138, 121, 41, 88, 132, 147, 66, 104, 141, 27, 92, 108, 31, 44, 22, 97, 90, 10, 14, 16, 19, 56, 13, 47, 99, 70, 40, 77, 51, 95, 1, 143, 63, 39, 53, 137, 79, 30, 118, 96, 57]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[66, 104, 141, 147, 92, 27, 130, 108, 31, 44, 97, 22, 90, 10, 14, 16, 140, 73, 20, 58, 71, 9, 83, 17, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 74, 18, 133, 52, 93, 21, 69, 128, 123, 25, 117, 3, 64, 65, 15, 87, 23, 37, 35, 103, 110, 101, 98, 126, 112, 46, 109, 76, 59, 61, 19, 149, 85, 11, 26, 34, 82, 54, 148, 33, 119, 114, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 29, 120, 106, 100, 38, 95, 77, 51, 4, 36, 146, 145, 102, 32, 75, 12, 94, 125, 81, 49, 113, 43, 143, 63, 39, 53, 1, 72, 67, 84, 139, 134, 116, 6, 8, 56, 86, 144, 50, 124, 60, 24, 80, 68, 57, 107, 137, 132, 41, 121, 138, 55, 142, 96, 118, 79, 30, 88, 7, 115, 66]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[98, 101, 110, 37, 23, 103, 35, 126, 58, 140, 73, 20, 71, 112, 46, 130, 92, 27, 104, 141, 147, 66, 57, 107, 68, 72, 113, 143, 63, 39, 53, 1, 115, 49, 84, 67, 43, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 77, 51, 95, 99, 70, 40, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 56, 8, 6, 116, 86, 144, 50, 124, 60, 24, 80, 139, 134, 33, 119, 114, 122, 42, 127, 22, 90, 97, 108, 31, 44, 16, 14, 10, 62, 0, 129, 91, 74, 96, 55, 142, 79, 30, 138, 121, 41, 88, 137, 132, 7, 48, 5, 105, 52, 133, 87, 15, 21, 69, 128, 123, 25, 117, 64, 65, 3, 118, 18, 89, 78, 136, 17, 93, 9, 83, 98]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[33, 82, 54, 148, 26, 34, 149, 85, 11, 19, 6, 116, 8, 56, 86, 144, 124, 50, 60, 24, 80, 139, 134, 84, 67, 72, 49, 43, 143, 63, 39, 53, 1, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 42, 2, 70, 40, 99, 47, 13, 135, 127, 114, 119, 122, 61, 59, 109, 76, 97, 90, 108, 31, 44, 22, 10, 14, 16, 58, 140, 126, 35, 37, 23, 17, 136, 78, 105, 52, 133, 18, 89, 48, 5, 62, 0, 129, 141, 104, 66, 107, 57, 27, 92, 130, 46, 112, 71, 20, 73, 9, 83, 110, 101, 98, 103, 93, 21, 87, 15, 69, 128, 123, 25, 117, 64, 65, 3, 118, 142, 55, 138, 96, 74, 7, 91, 121, 41, 88, 30, 79, 132, 147, 137, 68, 113, 95, 51, 77, 33]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[37, 23, 17, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 74, 7, 138, 121, 41, 88, 132, 147, 141, 104, 66, 57, 107, 60, 50, 124, 86, 144, 139, 134, 33, 82, 54, 148, 11, 19, 6, 8, 116, 56, 26, 34, 149, 85, 61, 59, 109, 76, 97, 90, 108, 31, 44, 22, 10, 14, 16, 58, 140, 73, 20, 71, 35, 126, 9, 83, 112, 46, 130, 27, 92, 24, 80, 68, 39, 53, 63, 143, 72, 67, 84, 100, 106, 29, 120, 111, 131, 28, 45, 42, 127, 114, 119, 122, 2, 135, 40, 99, 70, 13, 47, 51, 77, 95, 4, 36, 146, 38, 32, 75, 12, 145, 102, 94, 125, 81, 49, 115, 43, 113, 1, 137, 79, 30, 55, 142, 96, 118, 3, 65, 128, 123, 25, 117, 64, 69, 15, 87, 93, 21, 52, 133, 18, 110, 101, 98, 103, 37]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[1, 143, 113, 43, 49, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 127, 42, 122, 114, 119, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 6, 8, 116, 56, 86, 144, 50, 124, 60, 24, 80, 68, 72, 67, 84, 95, 51, 77, 13, 47, 99, 70, 40, 33, 139, 134, 107, 66, 104, 141, 147, 41, 121, 79, 30, 138, 55, 142, 96, 118, 3, 65, 128, 123, 25, 117, 64, 69, 21, 87, 15, 93, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 74, 18, 133, 52, 17, 37, 23, 103, 110, 101, 98, 35, 83, 9, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 44, 97, 22, 90, 108, 46, 130, 92, 27, 57, 137, 132, 88, 53, 63, 39, 1]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[27, 92, 130, 0, 129, 91, 62, 5, 48, 89, 78, 105, 52, 133, 87, 15, 21, 69, 128, 123, 25, 117, 64, 65, 3, 118, 142, 55, 96, 18, 74, 7, 41, 121, 79, 30, 88, 132, 147, 141, 104, 66, 57, 107, 60, 24, 80, 139, 134, 84, 67, 72, 113, 143, 63, 39, 53, 1, 115, 49, 43, 81, 125, 94, 75, 12, 145, 102, 32, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 77, 51, 95, 99, 70, 40, 122, 42, 127, 119, 114, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 109, 76, 56, 8, 6, 116, 86, 144, 124, 50, 68, 19, 22, 90, 97, 108, 31, 44, 16, 14, 10, 73, 20, 140, 58, 126, 35, 37, 103, 23, 17, 136, 93, 110, 101, 98, 83, 9, 71, 112, 46, 138, 137, 27]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[21, 87, 15, 93, 136, 78, 105, 52, 133, 18, 74, 96, 118, 142, 55, 138, 121, 41, 88, 79, 30, 137, 132, 147, 141, 104, 27, 92, 130, 46, 112, 71, 20, 73, 140, 58, 126, 35, 37, 23, 17, 101, 98, 103, 110, 83, 9, 10, 14, 16, 44, 22, 97, 90, 108, 31, 76, 109, 59, 61, 19, 6, 116, 8, 56, 86, 144, 124, 50, 60, 24, 80, 139, 134, 84, 67, 43, 49, 72, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 38, 100, 95, 51, 77, 47, 99, 70, 40, 13, 135, 127, 42, 122, 2, 45, 28, 131, 111, 106, 29, 120, 54, 82, 33, 148, 26, 85, 11, 34, 149, 114, 119, 68, 66, 107, 57, 129, 0, 62, 48, 5, 89, 91, 7, 3, 64, 65, 128, 123, 25, 117, 69, 21]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[99, 70, 40, 13, 135, 2, 45, 42, 122, 127, 114, 119, 54, 82, 33, 148, 11, 19, 6, 8, 116, 56, 26, 85, 34, 149, 61, 59, 109, 76, 97, 90, 108, 31, 44, 22, 10, 14, 16, 58, 140, 73, 20, 71, 112, 62, 5, 48, 89, 9, 83, 37, 23, 17, 136, 78, 105, 52, 133, 18, 74, 138, 121, 41, 88, 30, 79, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 15, 87, 93, 21, 110, 101, 98, 103, 35, 126, 46, 130, 27, 92, 104, 66, 107, 57, 141, 147, 132, 7, 91, 129, 0, 137, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 47, 77, 51, 95, 99]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[88, 30, 79, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 93, 21, 87, 15, 105, 89, 48, 5, 62, 0, 129, 91, 7, 41, 121, 138, 74, 18, 133, 52, 17, 136, 78, 23, 37, 35, 103, 110, 101, 98, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 44, 97, 22, 90, 108, 46, 130, 92, 27, 104, 141, 147, 66, 57, 107, 60, 124, 50, 86, 144, 6, 8, 116, 56, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 54, 82, 33, 148, 114, 119, 122, 42, 127, 135, 13, 131, 111, 29, 120, 77, 95, 51, 4, 36, 146, 38, 100, 106, 84, 67, 72, 49, 115, 81, 125, 94, 75, 32, 12, 145, 102, 47, 99, 70, 40, 2, 45, 28, 134, 139, 24, 80, 68, 39, 53, 143, 63, 113, 43, 1, 137, 132, 88]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[109, 76, 59, 61, 19, 149, 85, 34, 56, 8, 6, 116, 86, 144, 50, 124, 60, 24, 80, 68, 72, 49, 113, 143, 63, 39, 53, 1, 115, 43, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 42, 127, 135, 13, 47, 51, 77, 95, 99, 70, 40, 2, 33, 82, 54, 148, 11, 26, 119, 114, 122, 134, 139, 67, 84, 107, 57, 27, 92, 130, 22, 90, 97, 108, 31, 44, 16, 14, 10, 73, 20, 140, 58, 126, 35, 83, 9, 71, 112, 46, 0, 129, 141, 104, 66, 147, 41, 121, 79, 30, 88, 137, 132, 7, 138, 55, 96, 118, 142, 74, 5, 48, 89, 78, 105, 52, 133, 87, 15, 21, 69, 128, 123, 25, 117, 64, 65, 3, 18, 136, 93, 17, 37, 103, 23, 101, 98, 110, 91, 62, 109]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[15, 87, 136, 78, 105, 52, 133, 18, 74, 96, 118, 142, 55, 138, 121, 79, 30, 88, 41, 7, 91, 129, 0, 62, 48, 5, 89, 9, 83, 37, 23, 17, 101, 98, 103, 110, 35, 126, 58, 140, 73, 20, 71, 112, 46, 108, 31, 90, 97, 22, 44, 16, 14, 10, 59, 61, 109, 76, 149, 85, 26, 34, 11, 19, 6, 116, 8, 56, 86, 144, 124, 50, 60, 24, 80, 139, 134, 84, 67, 49, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 42, 122, 127, 135, 13, 47, 99, 70, 40, 77, 95, 51, 82, 54, 148, 114, 119, 33, 57, 141, 104, 147, 66, 107, 27, 92, 130, 68, 72, 113, 43, 143, 63, 39, 53, 1, 132, 137, 64, 3, 65, 128, 25, 123, 117, 69, 21, 93, 15]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[49, 72, 67, 84, 100, 106, 29, 120, 111, 28, 45, 42, 122, 2, 135, 127, 119, 114, 54, 82, 33, 148, 11, 19, 149, 85, 34, 26, 109, 76, 97, 90, 108, 31, 44, 22, 59, 61, 6, 8, 116, 56, 86, 144, 50, 124, 139, 134, 38, 77, 51, 95, 4, 36, 146, 115, 43, 143, 63, 39, 53, 113, 68, 80, 24, 60, 57, 27, 92, 130, 46, 112, 62, 48, 5, 89, 9, 83, 37, 23, 17, 136, 78, 105, 52, 133, 18, 74, 138, 121, 41, 88, 30, 79, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 15, 87, 93, 21, 110, 101, 98, 103, 35, 126, 58, 140, 73, 20, 71, 14, 16, 10, 129, 0, 91, 7, 147, 104, 66, 107, 141, 137, 132, 81, 94, 125, 75, 12, 145, 32, 102, 47, 99, 70, 40, 13, 131, 1, 49]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[26, 85, 34, 149, 61, 59, 76, 109, 19, 6, 8, 116, 56, 11, 148, 82, 54, 33, 139, 134, 84, 67, 49, 115, 43, 143, 113, 72, 80, 24, 60, 50, 124, 86, 144, 57, 27, 92, 130, 22, 97, 90, 108, 31, 44, 16, 14, 10, 73, 58, 140, 126, 35, 37, 23, 17, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 147, 141, 104, 66, 107, 137, 132, 41, 121, 79, 30, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 93, 21, 15, 87, 52, 133, 18, 74, 9, 83, 110, 101, 98, 103, 20, 71, 112, 46, 88, 53, 63, 39, 68, 1, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 77, 95, 51, 70, 40, 99, 127, 42, 122, 114, 119, 26]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[105, 52, 133, 87, 15, 21, 69, 128, 123, 25, 117, 64, 65, 3, 118, 142, 55, 96, 18, 74, 5, 48, 89, 78, 136, 93, 17, 37, 23, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 112, 46, 130, 92, 27, 104, 141, 147, 66, 57, 107, 60, 24, 80, 68, 72, 113, 143, 63, 39, 53, 1, 115, 49, 43, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 42, 122, 114, 119, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 6, 8, 56, 86, 144, 50, 124, 116, 139, 134, 84, 67, 95, 77, 51, 70, 40, 99, 47, 13, 135, 2, 127, 22, 90, 97, 108, 31, 44, 16, 14, 10, 83, 9, 0, 129, 91, 62, 41, 121, 79, 30, 138, 88, 137, 132, 7, 105]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[134, 139, 24, 80, 60, 124, 50, 86, 144, 6, 116, 8, 56, 19, 149, 85, 26, 34, 61, 59, 109, 76, 97, 90, 108, 31, 46, 112, 71, 20, 73, 140, 58, 126, 35, 37, 23, 17, 136, 78, 105, 52, 133, 18, 74, 138, 121, 41, 88, 30, 79, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 93, 110, 101, 98, 103, 89, 48, 5, 62, 0, 129, 141, 104, 147, 66, 107, 57, 27, 92, 130, 22, 44, 16, 14, 10, 83, 9, 7, 91, 132, 137, 68, 72, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 42, 122, 2, 135, 127, 114, 119, 82, 54, 148, 33, 13, 47, 99, 70, 40, 77, 51, 95, 67, 84, 11, 134]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[106, 29, 120, 111, 28, 45, 122, 42, 2, 135, 127, 114, 119, 54, 82, 33, 148, 11, 19, 149, 61, 59, 109, 76, 97, 90, 108, 44, 22, 10, 14, 16, 31, 46, 112, 62, 5, 48, 89, 9, 71, 20, 73, 58, 140, 126, 35, 83, 37, 23, 17, 136, 78, 105, 52, 133, 87, 15, 21, 69, 93, 110, 101, 98, 103, 18, 74, 138, 121, 41, 88, 30, 79, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 7, 91, 129, 0, 130, 27, 92, 57, 107, 66, 104, 141, 147, 132, 137, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 26, 34, 85, 139, 134, 84, 67, 72, 49, 115, 43, 143, 63, 39, 53, 113, 1, 81, 94, 125, 12, 145, 32, 75, 102, 4, 36, 146, 38, 100, 95, 77, 51, 131, 13, 47, 99, 70, 40, 106]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[112, 62, 5, 48, 89, 78, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 90, 108, 46, 130, 92, 27, 104, 141, 147, 66, 57, 60, 124, 50, 86, 144, 8, 116, 6, 56, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 54, 82, 33, 148, 114, 119, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 145, 102, 32, 75, 12, 94, 125, 81, 115, 43, 143, 113, 63, 39, 53, 1, 72, 67, 84, 139, 134, 107, 80, 24, 68, 49, 137, 132, 41, 121, 79, 30, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 74, 18, 133, 52, 105, 91, 7, 88, 0, 129, 22, 97, 44, 112]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[9, 71, 20, 73, 58, 140, 126, 35, 37, 23, 17, 136, 87, 15, 21, 69, 128, 123, 25, 117, 64, 65, 3, 118, 142, 55, 96, 18, 74, 5, 48, 62, 0, 129, 91, 7, 41, 121, 79, 30, 138, 88, 132, 147, 141, 104, 66, 57, 27, 92, 130, 22, 90, 97, 108, 31, 44, 16, 14, 10, 112, 46, 109, 76, 59, 61, 19, 149, 34, 85, 26, 11, 148, 82, 54, 116, 8, 6, 56, 86, 144, 50, 124, 60, 24, 80, 68, 72, 113, 143, 1, 115, 49, 43, 81, 125, 94, 12, 145, 102, 32, 75, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 42, 127, 135, 2, 70, 40, 99, 47, 13, 122, 114, 119, 33, 134, 139, 67, 84, 95, 77, 51, 107, 137, 63, 39, 53, 105, 52, 133, 78, 89, 93, 110, 101, 98, 103, 83, 9]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[24, 80, 60, 124, 50, 86, 144, 6, 116, 8, 56, 19, 149, 85, 26, 34, 61, 109, 76, 59, 97, 22, 44, 108, 46, 112, 71, 20, 73, 140, 58, 126, 35, 37, 23, 17, 136, 78, 105, 52, 133, 18, 74, 96, 118, 142, 55, 138, 121, 41, 88, 79, 30, 137, 132, 104, 141, 147, 66, 107, 57, 27, 92, 130, 0, 129, 7, 91, 62, 48, 5, 89, 9, 83, 110, 101, 98, 103, 93, 21, 15, 87, 64, 3, 65, 128, 25, 117, 123, 69, 16, 14, 10, 31, 90, 148, 82, 54, 33, 111, 131, 28, 45, 122, 42, 2, 135, 13, 47, 99, 70, 40, 127, 114, 119, 11, 134, 84, 67, 49, 72, 113, 43, 143, 63, 39, 53, 1, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 77, 51, 95, 139, 68, 24]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[117, 123, 25, 128, 65, 3, 64, 69, 93, 21, 15, 87, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 138, 121, 41, 88, 30, 79, 55, 96, 118, 142, 74, 18, 133, 52, 17, 37, 23, 103, 110, 101, 98, 35, 83, 9, 112, 71, 73, 20, 140, 58, 126, 14, 16, 10, 31, 44, 22, 97, 90, 108, 46, 130, 27, 92, 104, 66, 147, 141, 137, 132, 53, 39, 68, 72, 49, 115, 43, 143, 63, 113, 1, 81, 94, 125, 12, 145, 32, 75, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 28, 45, 42, 122, 2, 135, 127, 114, 119, 54, 82, 33, 148, 11, 19, 6, 8, 116, 56, 144, 86, 50, 124, 24, 80, 60, 57, 107, 139, 134, 84, 67, 95, 77, 51, 131, 13, 47, 99, 70, 40, 61, 59, 109, 76, 149, 85, 26, 34, 117]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[133, 52, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 41, 121, 79, 30, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 17, 23, 37, 35, 103, 110, 101, 98, 83, 9, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 130, 27, 92, 57, 107, 60, 124, 50, 24, 80, 68, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 26, 85, 11, 56, 8, 116, 6, 144, 86, 139, 134, 84, 67, 72, 95, 77, 51, 82, 54, 148, 33, 19, 149, 34, 61, 59, 76, 109, 104, 141, 147, 66, 132, 137, 88, 74, 18, 133]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[2, 45, 28, 131, 111, 29, 120, 106, 100, 38, 95, 77, 51, 4, 36, 146, 12, 75, 32, 145, 102, 94, 125, 81, 115, 49, 72, 113, 143, 1, 53, 39, 63, 68, 80, 24, 60, 124, 50, 86, 144, 8, 6, 116, 56, 19, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 73, 20, 140, 58, 126, 35, 83, 9, 71, 112, 46, 130, 92, 27, 104, 141, 147, 66, 57, 107, 137, 132, 7, 41, 121, 79, 30, 138, 55, 142, 96, 118, 3, 65, 64, 117, 123, 25, 128, 74, 5, 48, 62, 0, 129, 91, 78, 105, 136, 87, 15, 21, 69, 93, 17, 23, 37, 103, 110, 101, 98, 133, 52, 18, 89, 88, 43, 67, 84, 134, 139, 33, 82, 54, 148, 11, 26, 85, 34, 119, 114, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[85, 26, 34, 149, 61, 109, 76, 59, 97, 22, 90, 108, 31, 46, 112, 71, 20, 73, 140, 58, 126, 35, 37, 23, 17, 136, 78, 105, 52, 133, 21, 15, 87, 93, 69, 128, 25, 123, 117, 64, 3, 65, 118, 142, 55, 138, 121, 79, 30, 88, 41, 96, 18, 74, 7, 91, 129, 0, 62, 48, 5, 89, 9, 83, 110, 101, 98, 103, 16, 14, 10, 44, 130, 27, 92, 57, 107, 66, 104, 141, 147, 132, 137, 63, 39, 53, 1, 115, 49, 72, 113, 43, 143, 60, 124, 50, 86, 144, 8, 56, 6, 116, 139, 134, 84, 67, 106, 29, 120, 100, 38, 95, 51, 77, 4, 36, 146, 145, 102, 32, 12, 75, 94, 125, 81, 68, 80, 24, 54, 82, 33, 148, 119, 114, 122, 42, 2, 45, 28, 131, 111, 47, 99, 70, 40, 13, 135, 127, 19, 11, 85]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[51, 77, 95, 4, 36, 146, 102, 32, 145, 12, 75, 94, 125, 81, 115, 43, 49, 72, 24, 80, 68, 39, 53, 63, 143, 1, 113, 67, 84, 134, 139, 33, 82, 54, 148, 11, 19, 149, 61, 59, 109, 76, 97, 90, 108, 31, 44, 22, 10, 14, 16, 58, 140, 73, 20, 71, 112, 62, 5, 48, 89, 9, 83, 37, 23, 17, 136, 78, 105, 52, 133, 18, 74, 138, 121, 41, 88, 30, 79, 55, 96, 118, 142, 64, 65, 128, 123, 25, 117, 3, 15, 87, 93, 21, 69, 103, 110, 101, 98, 35, 126, 46, 130, 27, 92, 57, 107, 66, 104, 141, 147, 132, 137, 7, 91, 129, 0, 124, 50, 60, 144, 86, 6, 8, 116, 56, 26, 85, 34, 119, 114, 122, 42, 2, 135, 127, 40, 70, 99, 47, 13, 131, 28, 45, 106, 100, 38, 120, 29, 111, 51]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[90, 108, 31, 44, 97, 22, 76, 109, 59, 61, 149, 85, 26, 34, 82, 54, 148, 11, 19, 6, 8, 116, 56, 86, 144, 50, 124, 24, 80, 68, 39, 53, 63, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 33, 139, 134, 84, 67, 72, 146, 1, 107, 66, 147, 141, 104, 27, 92, 130, 0, 129, 91, 7, 41, 121, 79, 30, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 74, 18, 133, 52, 17, 23, 37, 35, 103, 110, 101, 98, 83, 9, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 46, 88, 137, 132, 57, 60, 90]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[106, 29, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 12, 75, 94, 125, 81, 115, 49, 72, 113, 143, 63, 39, 53, 1, 43, 67, 84, 134, 139, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 16, 14, 10, 73, 58, 140, 126, 20, 71, 112, 46, 130, 92, 27, 104, 141, 147, 66, 57, 60, 24, 80, 68, 107, 137, 132, 121, 41, 88, 30, 79, 55, 142, 96, 118, 3, 65, 64, 117, 123, 25, 128, 69, 21, 15, 87, 136, 78, 105, 52, 133, 18, 74, 5, 48, 62, 0, 129, 91, 7, 138, 89, 17, 37, 23, 103, 110, 101, 98, 35, 83, 9, 93, 116, 6, 144, 86, 50, 124, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 2, 45, 28, 131, 111, 47, 13, 40, 70, 99, 106]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[93, 21, 15, 87, 136, 78, 105, 52, 133, 18, 74, 96, 118, 142, 55, 138, 121, 41, 88, 79, 30, 137, 132, 7, 91, 129, 0, 62, 48, 5, 89, 9, 83, 37, 35, 126, 20, 73, 140, 58, 16, 14, 10, 31, 90, 108, 44, 22, 97, 109, 76, 59, 61, 149, 85, 26, 34, 19, 6, 116, 8, 56, 86, 144, 124, 50, 60, 24, 80, 68, 72, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 42, 122, 2, 135, 13, 47, 99, 70, 40, 127, 114, 119, 82, 54, 148, 33, 134, 139, 67, 84, 95, 51, 77, 11, 57, 141, 104, 147, 66, 107, 27, 92, 130, 46, 112, 71, 17, 23, 98, 103, 110, 101, 69, 128, 25, 123, 117, 64, 3, 65, 93]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[37, 23, 17, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 138, 121, 41, 88, 30, 79, 55, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 93, 133, 52, 18, 74, 142, 132, 137, 147, 141, 104, 66, 107, 60, 50, 124, 86, 144, 6, 8, 116, 56, 19, 149, 85, 26, 11, 148, 82, 54, 33, 111, 106, 29, 120, 77, 51, 95, 4, 36, 146, 102, 32, 12, 75, 145, 81, 94, 125, 1, 43, 113, 143, 63, 39, 53, 68, 80, 24, 139, 134, 84, 67, 72, 49, 115, 38, 100, 47, 99, 70, 40, 13, 135, 2, 131, 28, 45, 42, 122, 127, 114, 119, 34, 61, 59, 109, 76, 97, 22, 44, 90, 108, 31, 46, 130, 27, 92, 57, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 9, 83, 35, 103, 110, 101, 98, 37]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[135, 13, 70, 40, 99, 47, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 42, 127, 33, 148, 82, 54, 6, 8, 116, 56, 86, 144, 50, 124, 60, 24, 80, 68, 72, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 107, 66, 104, 141, 147, 129, 0, 62, 5, 48, 89, 78, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 83, 9, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 130, 92, 27, 57, 139, 134, 84, 67, 146, 1, 143, 63, 39, 53, 137, 132, 41, 121, 79, 30, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 74, 18, 133, 52, 17, 105, 91, 7, 88, 109, 76, 59, 61, 19, 149, 85, 26, 34, 11, 119, 114, 122, 135]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[137, 132, 121, 41, 88, 30, 79, 55, 96, 118, 142, 74, 18, 89, 48, 5, 62, 0, 129, 91, 7, 138, 147, 141, 104, 66, 57, 60, 24, 80, 68, 72, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 42, 127, 135, 13, 47, 99, 70, 40, 2, 122, 114, 119, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 56, 8, 6, 116, 139, 134, 84, 67, 43, 49, 146, 33, 144, 86, 50, 124, 107, 27, 92, 130, 22, 97, 90, 108, 31, 44, 16, 14, 10, 73, 20, 140, 58, 126, 35, 37, 103, 110, 101, 98, 17, 136, 87, 15, 21, 69, 52, 133, 78, 105, 83, 9, 71, 112, 46, 23, 93, 65, 64, 3, 117, 123, 25, 128, 137]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[77, 51, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 42, 122, 127, 135, 13, 47, 99, 70, 40, 114, 119, 33, 82, 54, 148, 6, 116, 8, 56, 86, 144, 124, 50, 60, 24, 80, 139, 134, 84, 67, 49, 43, 143, 63, 39, 53, 1, 113, 72, 68, 141, 104, 66, 107, 57, 27, 92, 130, 46, 112, 71, 20, 73, 140, 58, 126, 35, 37, 103, 110, 101, 98, 83, 9, 5, 48, 62, 0, 129, 91, 74, 18, 133, 52, 105, 89, 78, 136, 93, 21, 15, 87, 64, 3, 65, 128, 25, 123, 117, 142, 55, 138, 121, 41, 88, 79, 30, 137, 132, 147, 7, 96, 118, 69, 23, 17, 14, 16, 10, 31, 44, 22, 97, 90, 108, 109, 76, 59, 61, 34, 85, 26, 11, 19, 149, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 77]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[50, 124, 86, 144, 8, 116, 6, 56, 11, 19, 149, 61, 59, 109, 76, 97, 22, 44, 90, 108, 31, 16, 14, 10, 73, 140, 58, 126, 20, 71, 112, 46, 130, 27, 92, 57, 107, 66, 104, 147, 141, 129, 0, 62, 5, 48, 89, 9, 83, 37, 23, 17, 136, 78, 105, 52, 133, 87, 15, 21, 69, 93, 110, 101, 98, 35, 103, 18, 74, 138, 121, 41, 88, 30, 79, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 7, 91, 137, 132, 53, 39, 63, 143, 1, 113, 43, 49, 72, 67, 84, 134, 139, 33, 82, 54, 148, 114, 119, 122, 42, 2, 135, 127, 45, 131, 28, 29, 120, 106, 111, 47, 99, 70, 40, 13, 95, 77, 51, 4, 36, 146, 12, 75, 32, 145, 102, 94, 125, 81, 115, 38, 100, 80, 24, 60, 68, 85, 26, 34, 50]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 74, 18, 133, 52, 17, 23, 37, 35, 103, 110, 101, 98, 83, 9, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 112, 92, 27, 104, 141, 147, 66, 107, 60, 24, 80, 68, 72, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 6, 8, 116, 56, 86, 144, 50, 124, 139, 134, 84, 67, 95, 77, 51, 131, 132, 137, 88, 30, 79, 121, 41, 57, 130, 138]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[114, 119, 122, 42, 127, 135, 13, 47, 77, 51, 95, 4, 36, 146, 12, 32, 75, 145, 102, 94, 125, 81, 115, 49, 72, 113, 143, 63, 39, 53, 1, 43, 67, 84, 100, 106, 29, 120, 111, 131, 28, 45, 2, 70, 40, 99, 38, 134, 139, 144, 86, 50, 124, 60, 24, 80, 68, 107, 57, 27, 92, 104, 141, 147, 7, 138, 55, 142, 96, 118, 3, 65, 64, 117, 123, 25, 128, 69, 21, 15, 87, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 74, 18, 133, 52, 93, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 44, 90, 97, 22, 108, 46, 130, 66, 88, 30, 79, 121, 41, 137, 132, 112, 76, 109, 59, 61, 19, 149, 34, 85, 26, 11, 148, 82, 54, 33, 116, 6, 8, 56, 114]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[23, 37, 35, 126, 20, 73, 140, 58, 16, 14, 10, 31, 44, 22, 97, 90, 108, 46, 112, 71, 9, 83, 17, 136, 78, 105, 52, 133, 18, 74, 96, 118, 142, 55, 138, 121, 79, 30, 88, 41, 7, 91, 62, 0, 129, 27, 92, 130, 104, 141, 147, 66, 107, 57, 50, 124, 86, 144, 6, 116, 8, 56, 11, 19, 149, 85, 26, 34, 61, 109, 76, 59, 148, 82, 54, 33, 134, 139, 67, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 122, 42, 2, 70, 40, 99, 47, 13, 135, 127, 119, 114, 95, 51, 77, 84, 68, 72, 60, 24, 80, 137, 132, 48, 5, 89, 15, 87, 93, 21, 69, 128, 25, 123, 117, 64, 3, 65, 110, 101, 98, 103, 23]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[83, 9, 71, 73, 20, 140, 58, 16, 14, 10, 31, 108, 46, 112, 62, 48, 5, 89, 17, 136, 78, 105, 52, 133, 18, 74, 91, 7, 138, 142, 55, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 93, 21, 15, 87, 23, 37, 103, 110, 101, 98, 35, 126, 44, 22, 97, 90, 109, 76, 59, 61, 149, 85, 34, 26, 19, 56, 6, 8, 116, 139, 134, 84, 67, 72, 49, 115, 43, 143, 63, 39, 53, 113, 1, 81, 94, 125, 12, 75, 32, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 28, 45, 42, 122, 127, 114, 119, 11, 148, 82, 54, 33, 13, 47, 99, 70, 40, 135, 2, 131, 51, 77, 95, 24, 80, 68, 60, 50, 124, 86, 144, 57, 107, 66, 104, 147, 141, 27, 92, 130, 129, 0, 41, 121, 79, 30, 88, 137, 132, 83]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[70, 40, 99, 47, 77, 95, 51, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 42, 127, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 6, 8, 116, 56, 86, 144, 50, 124, 60, 24, 80, 68, 72, 49, 43, 113, 143, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 84, 67, 139, 134, 107, 66, 104, 141, 147, 129, 0, 91, 7, 41, 121, 79, 30, 88, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 74, 18, 133, 52, 17, 23, 37, 35, 103, 110, 101, 98, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 130, 27, 92, 57, 137, 132, 39, 53, 63, 119, 114, 122, 70]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[108, 44, 90, 97, 22, 76, 109, 59, 61, 19, 149, 34, 85, 26, 11, 148, 82, 54, 116, 6, 8, 56, 86, 144, 124, 50, 60, 24, 80, 68, 72, 113, 143, 63, 39, 53, 1, 115, 49, 43, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 114, 119, 122, 2, 135, 13, 40, 70, 99, 47, 134, 139, 33, 84, 67, 146, 57, 107, 66, 104, 141, 147, 41, 121, 79, 30, 88, 132, 7, 138, 55, 96, 118, 142, 74, 5, 48, 62, 0, 129, 91, 89, 78, 105, 52, 133, 87, 15, 21, 69, 128, 123, 25, 117, 64, 65, 3, 18, 136, 93, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 46, 130, 92, 27, 137, 112, 108]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[51, 77, 95, 100, 120, 29, 106, 111, 131, 28, 45, 42, 122, 2, 135, 13, 47, 99, 70, 40, 127, 114, 119, 33, 82, 54, 148, 11, 19, 6, 116, 8, 56, 86, 144, 124, 50, 60, 24, 80, 68, 39, 63, 143, 113, 43, 49, 72, 67, 84, 134, 139, 149, 85, 26, 34, 61, 109, 76, 59, 97, 90, 108, 31, 46, 112, 71, 20, 73, 140, 58, 126, 35, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 52, 133, 21, 15, 87, 93, 69, 128, 123, 25, 117, 64, 3, 65, 18, 74, 96, 118, 142, 55, 138, 121, 41, 88, 30, 79, 7, 91, 129, 0, 62, 48, 5, 89, 9, 83, 10, 14, 16, 44, 22, 130, 27, 92, 57, 66, 107, 137, 132, 147, 141, 104, 53, 1, 115, 81, 125, 94, 75, 32, 145, 102, 4, 36, 146, 38, 12, 51]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[115, 43, 143, 63, 39, 53, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 149, 61, 59, 109, 76, 22, 97, 90, 108, 44, 46, 130, 27, 92, 57, 107, 66, 104, 147, 141, 129, 0, 91, 62, 5, 48, 89, 9, 71, 73, 140, 58, 126, 20, 112, 105, 78, 136, 87, 15, 21, 69, 93, 133, 52, 17, 37, 23, 110, 101, 98, 103, 35, 83, 74, 138, 121, 41, 88, 79, 30, 137, 132, 7, 55, 96, 118, 142, 64, 65, 128, 123, 25, 117, 3, 18, 10, 14, 16, 31, 34, 26, 85, 11, 148, 82, 54, 33, 111, 28, 45, 122, 42, 127, 114, 119, 2, 135, 13, 47, 99, 70, 40, 51, 77, 95, 4, 36, 146, 12, 75, 32, 145, 102, 94, 125, 81, 1, 113, 72, 49, 84, 67, 134, 139, 38, 100, 106, 29, 120, 131, 115]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[141, 147, 66, 104, 27, 92, 130, 0, 129, 91, 7, 41, 121, 79, 30, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 74, 18, 133, 52, 17, 23, 37, 35, 103, 110, 101, 98, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 108, 46, 90, 97, 22, 44, 61, 59, 76, 109, 19, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 11, 26, 85, 34, 149, 56, 86, 144, 50, 124, 60, 24, 80, 68, 72, 146, 33, 82, 54, 148, 57, 107, 137, 132, 88, 141]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[88, 30, 79, 121, 41, 138, 55, 96, 118, 142, 74, 7, 91, 129, 0, 62, 5, 48, 89, 78, 105, 52, 133, 87, 15, 21, 69, 128, 25, 123, 117, 64, 3, 65, 18, 9, 83, 35, 37, 103, 110, 101, 98, 17, 136, 93, 23, 58, 140, 73, 20, 71, 112, 46, 130, 92, 27, 104, 141, 147, 66, 57, 107, 60, 24, 80, 68, 72, 113, 143, 63, 39, 53, 1, 115, 49, 84, 67, 43, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 42, 127, 135, 2, 70, 40, 99, 47, 77, 51, 95, 13, 122, 114, 119, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 109, 76, 56, 8, 6, 116, 139, 134, 33, 19, 50, 124, 86, 144, 44, 90, 97, 22, 108, 31, 16, 14, 10, 126, 137, 132, 88]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[84, 67, 49, 43, 143, 63, 39, 53, 137, 132, 121, 41, 88, 79, 30, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 15, 87, 93, 21, 52, 133, 18, 74, 5, 48, 89, 105, 78, 136, 17, 37, 23, 110, 101, 98, 103, 35, 126, 20, 73, 140, 58, 16, 14, 10, 31, 108, 44, 22, 97, 90, 109, 76, 59, 61, 19, 6, 8, 116, 56, 86, 144, 124, 50, 60, 24, 80, 68, 72, 113, 1, 115, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 122, 2, 70, 40, 99, 47, 51, 77, 95, 4, 36, 145, 102, 32, 12, 75, 94, 125, 81, 134, 139, 148, 82, 54, 33, 13, 135, 127, 114, 119, 26, 85, 11, 34, 149, 57, 66, 104, 141, 147, 7, 91, 129, 0, 62, 46, 112, 71, 9, 83, 130, 27, 92, 107, 84]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[131, 28, 45, 122, 42, 2, 135, 127, 119, 114, 54, 82, 33, 148, 11, 19, 149, 85, 34, 26, 61, 59, 109, 76, 22, 97, 90, 108, 44, 16, 14, 10, 31, 130, 27, 92, 57, 107, 66, 104, 141, 147, 129, 0, 91, 62, 48, 5, 89, 9, 105, 78, 136, 93, 87, 15, 21, 69, 133, 52, 17, 37, 23, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 112, 46, 83, 18, 74, 7, 138, 142, 55, 96, 118, 3, 64, 65, 128, 25, 123, 117, 30, 79, 121, 41, 88, 132, 137, 63, 143, 1, 43, 49, 115, 81, 94, 125, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 100, 106, 29, 120, 111, 134, 84, 67, 72, 60, 50, 124, 86, 144, 6, 8, 116, 56, 139, 24, 80, 68, 39, 53, 113, 38, 146, 47, 99, 70, 40, 13, 131]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[14, 16, 10, 31, 108, 90, 97, 22, 76, 109, 59, 61, 19, 149, 85, 26, 34, 11, 148, 82, 54, 139, 134, 84, 67, 49, 115, 43, 143, 113, 63, 39, 53, 1, 72, 80, 24, 60, 50, 124, 86, 144, 56, 8, 6, 116, 33, 119, 114, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 29, 120, 106, 100, 38, 146, 36, 4, 77, 51, 95, 94, 125, 81, 12, 75, 32, 145, 102, 68, 107, 66, 104, 141, 147, 41, 121, 79, 30, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 74, 18, 133, 52, 17, 23, 37, 35, 103, 110, 101, 98, 83, 9, 112, 71, 20, 73, 58, 140, 126, 46, 130, 92, 27, 57, 137, 132, 88, 44, 14]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[140, 73, 20, 71, 112, 46, 108, 31, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 85, 26, 11, 19, 56, 8, 6, 116, 139, 134, 84, 67, 72, 49, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 122, 114, 119, 82, 54, 148, 33, 13, 47, 77, 51, 95, 99, 70, 40, 2, 135, 127, 42, 86, 144, 124, 50, 60, 24, 80, 68, 39, 63, 143, 1, 113, 43, 53, 137, 132, 147, 141, 104, 66, 57, 107, 27, 92, 130, 0, 129, 91, 62, 5, 48, 89, 78, 105, 52, 133, 87, 15, 21, 69, 128, 123, 25, 117, 64, 3, 65, 18, 136, 93, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 126, 58, 16, 14, 10, 74, 96, 118, 142, 55, 138, 121, 41, 30, 79, 88, 7, 140]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[68, 72, 49, 43, 113, 1, 143, 63, 39, 53, 137, 132, 88, 41, 121, 79, 30, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 15, 87, 136, 78, 105, 52, 133, 21, 93, 110, 101, 98, 103, 35, 37, 23, 17, 9, 83, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 44, 22, 97, 90, 108, 46, 0, 129, 91, 62, 48, 5, 89, 18, 74, 7, 104, 141, 147, 66, 107, 60, 124, 50, 86, 144, 8, 116, 6, 56, 19, 149, 85, 26, 34, 61, 109, 76, 59, 11, 148, 82, 54, 139, 134, 84, 67, 106, 29, 120, 111, 28, 45, 2, 42, 122, 114, 119, 33, 13, 131, 135, 127, 99, 70, 40, 47, 51, 77, 95, 38, 100, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115, 24, 80, 57, 27, 92, 130, 68]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[59, 61, 149, 85, 26, 34, 11, 19, 6, 8, 116, 56, 144, 86, 124, 50, 60, 80, 24, 68, 39, 53, 63, 143, 1, 113, 43, 49, 72, 67, 84, 134, 139, 33, 82, 54, 148, 119, 114, 122, 42, 2, 135, 127, 45, 131, 28, 29, 120, 106, 100, 38, 95, 77, 51, 4, 36, 145, 32, 12, 75, 102, 94, 125, 81, 115, 146, 47, 99, 70, 40, 13, 111, 109, 76, 22, 97, 90, 108, 44, 31, 16, 14, 10, 73, 140, 58, 126, 20, 71, 112, 46, 130, 27, 92, 57, 107, 66, 104, 141, 147, 129, 0, 91, 62, 5, 48, 89, 9, 105, 78, 136, 93, 87, 15, 21, 69, 133, 52, 17, 37, 23, 103, 110, 101, 98, 35, 83, 18, 74, 138, 121, 41, 88, 30, 79, 7, 142, 55, 96, 118, 3, 65, 128, 123, 25, 117, 64, 137, 132, 59]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[8, 116, 139, 134, 84, 67, 49, 43, 143, 113, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 26, 34, 149, 61, 59, 76, 109, 19, 6, 56, 86, 144, 50, 124, 60, 24, 80, 68, 72, 146, 57, 27, 92, 130, 0, 129, 91, 7, 41, 121, 79, 30, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 93, 87, 15, 21, 52, 133, 78, 105, 89, 48, 5, 62, 18, 74, 136, 17, 23, 37, 35, 103, 110, 101, 98, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 104, 141, 147, 66, 107, 137, 132, 88, 85, 8]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 51, 146, 84, 67, 72, 113, 143, 1, 115, 49, 43, 53, 39, 63, 68, 80, 24, 60, 124, 50, 86, 144, 8, 6, 116, 56, 19, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 16, 14, 10, 73, 58, 140, 126, 20, 71, 112, 9, 83, 35, 37, 103, 23, 17, 136, 87, 15, 21, 69, 128, 123, 25, 117, 64, 65, 3, 18, 74, 96, 118, 142, 55, 138, 121, 41, 88, 30, 79, 7, 91, 129, 0, 62, 48, 5, 89, 78, 105, 52, 133, 93, 110, 101, 98, 46, 130, 92, 27, 104, 141, 147, 66, 57, 107, 137, 132, 139, 134, 33, 82, 54, 148, 119, 114, 122, 42, 127, 99, 70, 40, 81]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[31, 108, 90, 97, 22, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 52, 133, 21, 15, 87, 93, 69, 128, 25, 123, 117, 64, 3, 65, 18, 74, 96, 118, 142, 55, 138, 121, 41, 88, 30, 79, 7, 91, 129, 0, 62, 48, 5, 89, 9, 83, 112, 71, 130, 46, 109, 76, 59, 61, 149, 85, 26, 34, 19, 11, 116, 6, 56, 8, 144, 86, 50, 124, 60, 24, 80, 68, 72, 49, 43, 113, 143, 63, 39, 53, 1, 115, 146, 145, 102, 32, 12, 75, 94, 125, 81, 36, 4, 77, 51, 95, 100, 106, 29, 120, 111, 131, 28, 45, 42, 122, 127, 135, 13, 47, 99, 70, 40, 2, 33, 82, 54, 148, 119, 114, 134, 139, 67, 84, 38, 107, 57, 104, 141, 147, 66, 132, 137, 92, 27, 31]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[21, 15, 87, 93, 69, 133, 52, 17, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 138, 142, 55, 96, 118, 3, 65, 64, 117, 123, 25, 128, 74, 18, 9, 71, 73, 20, 140, 58, 16, 14, 10, 31, 108, 44, 90, 97, 22, 130, 27, 92, 104, 66, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 139, 134, 33, 82, 54, 148, 11, 19, 149, 85, 26, 34, 61, 59, 109, 76, 111, 28, 45, 131, 13, 47, 99, 70, 40, 135, 2, 42, 122, 127, 114, 119, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 12, 75, 32, 145, 102, 94, 125, 81, 1, 113, 43, 143, 63, 39, 53, 68, 72, 49, 115, 84, 67, 80, 24, 137, 132, 147, 141, 41, 121, 79, 30, 88, 46, 112, 126, 35, 83, 37, 23, 110, 101, 98, 103, 21]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[2, 42, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 6, 8, 116, 56, 86, 144, 50, 124, 60, 24, 80, 68, 39, 53, 63, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 70, 40, 99, 47, 13, 135, 127, 139, 134, 84, 67, 72, 146, 1, 107, 66, 104, 141, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 93, 136, 78, 105, 52, 133, 17, 23, 37, 35, 103, 110, 101, 98, 83, 9, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 130, 92, 27, 57, 137, 132, 41, 121, 79, 30, 138, 55, 142, 91, 7, 88, 2]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[130, 92, 27, 104, 141, 147, 66, 57, 107, 60, 124, 50, 86, 144, 139, 134, 84, 67, 72, 113, 143, 63, 39, 53, 1, 115, 146, 36, 4, 77, 51, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 122, 42, 127, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 109, 76, 56, 8, 6, 116, 19, 24, 80, 68, 49, 43, 81, 125, 94, 12, 75, 32, 145, 102, 137, 132, 121, 41, 30, 79, 88, 55, 96, 118, 142, 74, 18, 133, 52, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 138, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 136, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 108, 44, 90, 97, 22, 46, 112, 130]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[84, 67, 72, 113, 43, 143, 63, 39, 53, 1, 115, 49, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 122, 127, 135, 13, 47, 99, 70, 40, 2, 148, 82, 54, 139, 134, 116, 6, 8, 56, 86, 144, 124, 50, 60, 24, 80, 68, 104, 141, 147, 66, 107, 57, 130, 46, 108, 44, 90, 97, 22, 31, 16, 14, 10, 73, 140, 58, 126, 20, 71, 9, 83, 35, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 52, 133, 21, 15, 87, 93, 69, 128, 25, 123, 117, 3, 64, 65, 18, 74, 138, 55, 142, 96, 118, 88, 41, 121, 79, 30, 137, 132, 7, 91, 62, 48, 5, 89, 112, 0, 129, 27, 92, 109, 76, 59, 61, 19, 149, 85, 26, 34, 114, 119, 33, 11, 95, 51, 77, 4, 36, 145, 102, 32, 12, 75, 94, 125, 81, 146, 84]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[52, 133, 87, 15, 21, 69, 93, 18, 74, 138, 121, 41, 88, 30, 79, 55, 96, 118, 3, 64, 65, 128, 123, 25, 117, 142, 91, 62, 5, 48, 89, 9, 71, 73, 58, 140, 126, 20, 10, 14, 16, 31, 108, 44, 22, 97, 90, 46, 112, 0, 129, 57, 107, 66, 104, 147, 141, 27, 92, 130, 7, 132, 137, 68, 80, 24, 60, 50, 124, 86, 144, 6, 8, 116, 56, 11, 19, 149, 61, 59, 109, 76, 34, 26, 85, 82, 54, 33, 148, 119, 114, 122, 42, 2, 135, 127, 45, 131, 28, 47, 99, 70, 40, 13, 111, 29, 120, 106, 100, 38, 95, 77, 51, 4, 36, 146, 12, 75, 32, 145, 102, 94, 125, 81, 1, 43, 143, 63, 39, 53, 113, 72, 49, 115, 84, 67, 139, 134, 83, 35, 23, 37, 103, 110, 101, 98, 17, 136, 78, 105, 52]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[10, 14, 16, 31, 108, 90, 97, 22, 44, 46, 112, 71, 20, 73, 140, 58, 126, 35, 37, 23, 17, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 57, 27, 92, 130, 50, 124, 86, 144, 8, 116, 6, 56, 11, 26, 85, 61, 59, 76, 109, 19, 149, 34, 82, 54, 148, 33, 119, 114, 122, 42, 127, 135, 13, 70, 40, 99, 47, 77, 95, 51, 4, 36, 146, 38, 100, 106, 29, 120, 131, 111, 28, 45, 2, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 68, 72, 80, 24, 60, 107, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 52, 133, 18, 74, 9, 83, 110, 101, 98, 103, 10]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[121, 41, 30, 79, 88, 137, 132, 147, 141, 104, 66, 57, 107, 60, 24, 80, 68, 39, 53, 63, 143, 1, 113, 72, 67, 84, 134, 139, 144, 86, 50, 124, 56, 19, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 16, 14, 10, 73, 58, 140, 126, 20, 71, 112, 46, 130, 92, 27, 129, 0, 91, 7, 138, 55, 96, 142, 74, 5, 48, 62, 52, 133, 87, 15, 21, 69, 128, 123, 25, 117, 64, 65, 3, 118, 18, 89, 78, 105, 83, 9, 23, 37, 103, 17, 136, 93, 110, 101, 98, 35, 44, 34, 85, 26, 11, 148, 82, 54, 116, 6, 8, 33, 119, 114, 122, 42, 127, 135, 13, 40, 70, 99, 47, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 36, 4, 146, 12, 75, 32, 145, 102, 94, 125, 81, 115, 49, 43, 121]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[24, 80, 60, 124, 50, 86, 144, 6, 116, 8, 56, 11, 19, 149, 85, 26, 34, 61, 109, 76, 59, 97, 22, 44, 90, 108, 31, 46, 112, 71, 20, 73, 140, 58, 126, 35, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 52, 133, 87, 15, 21, 69, 128, 25, 123, 117, 3, 64, 142, 55, 138, 121, 41, 88, 30, 79, 7, 91, 129, 0, 62, 48, 5, 89, 18, 74, 96, 118, 65, 93, 83, 9, 10, 14, 16, 130, 27, 92, 57, 104, 141, 147, 66, 107, 68, 72, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 28, 45, 122, 42, 2, 135, 127, 114, 119, 82, 54, 148, 33, 13, 70, 40, 99, 47, 51, 77, 95, 131, 139, 134, 84, 67, 137, 132, 24]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[147, 141, 104, 66, 107, 57, 27, 92, 129, 0, 91, 62, 5, 48, 89, 9, 71, 112, 46, 130, 22, 97, 90, 108, 31, 16, 14, 10, 73, 20, 140, 58, 126, 35, 83, 37, 23, 17, 136, 78, 105, 52, 133, 87, 15, 21, 69, 93, 110, 101, 98, 103, 18, 74, 142, 55, 96, 118, 3, 64, 65, 128, 123, 25, 117, 7, 138, 121, 41, 88, 30, 79, 137, 132, 39, 53, 63, 143, 1, 113, 43, 49, 115, 81, 94, 125, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 100, 106, 29, 120, 111, 28, 45, 122, 42, 2, 135, 127, 114, 119, 33, 82, 54, 148, 11, 19, 149, 61, 59, 109, 76, 56, 8, 116, 6, 85, 34, 26, 139, 134, 84, 67, 72, 80, 24, 60, 50, 124, 86, 144, 131, 13, 47, 99, 70, 40, 38, 146, 68, 44, 147]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[144, 86, 50, 124, 60, 24, 80, 68, 72, 49, 115, 146, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 33, 82, 54, 148, 11, 26, 34, 61, 59, 76, 109, 19, 149, 85, 8, 6, 116, 56, 139, 134, 84, 67, 63, 39, 53, 1, 143, 113, 43, 81, 125, 94, 12, 75, 32, 145, 102, 47, 135, 13, 70, 40, 99, 127, 42, 122, 2, 45, 119, 114, 107, 66, 104, 141, 147, 129, 0, 62, 5, 48, 89, 18, 74, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 93, 136, 78, 105, 52, 133, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 130, 92, 27, 57, 137, 132, 88, 30, 79, 121, 41, 138, 55, 142, 91, 7, 144]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 40, 70, 99, 47, 51, 77, 95, 84, 67, 72, 113, 143, 63, 39, 53, 1, 115, 49, 43, 139, 134, 33, 82, 54, 148, 11, 19, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 73, 58, 140, 126, 35, 23, 37, 103, 110, 101, 98, 17, 136, 87, 15, 21, 69, 93, 52, 133, 78, 105, 83, 9, 112, 71, 20, 46, 130, 92, 27, 104, 141, 147, 7, 41, 121, 79, 30, 138, 55, 96, 142, 74, 5, 48, 62, 0, 129, 91, 89, 18, 123, 25, 117, 3, 65, 64, 128, 118, 88, 132, 137, 66, 57, 107, 60, 24, 80, 68, 8, 6, 116, 56, 86, 144, 50, 124, 26, 85, 34, 119, 114, 122, 2, 81]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[113, 43, 143, 63, 39, 53, 1, 115, 49, 72, 67, 84, 134, 139, 144, 86, 124, 50, 60, 80, 24, 57, 104, 141, 147, 66, 107, 68, 8, 116, 6, 56, 11, 19, 149, 85, 26, 34, 61, 109, 76, 59, 97, 22, 44, 90, 108, 31, 46, 112, 71, 20, 73, 140, 58, 126, 35, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 52, 133, 21, 15, 87, 93, 69, 128, 25, 123, 117, 64, 3, 65, 18, 74, 96, 118, 142, 55, 138, 121, 79, 30, 88, 41, 129, 0, 62, 48, 5, 89, 9, 83, 10, 14, 16, 130, 27, 92, 137, 132, 7, 91, 54, 82, 33, 148, 119, 114, 122, 42, 2, 45, 131, 111, 28, 13, 135, 127, 99, 70, 40, 47, 51, 77, 95, 38, 100, 106, 29, 120, 36, 4, 146, 145, 102, 32, 12, 75, 94, 125, 81, 113]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[114, 119, 33, 82, 54, 148, 11, 19, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 16, 14, 10, 73, 20, 140, 58, 126, 35, 23, 37, 103, 110, 101, 98, 17, 136, 78, 105, 83, 9, 71, 112, 46, 130, 27, 92, 104, 66, 107, 57, 141, 147, 129, 0, 91, 62, 5, 48, 89, 93, 69, 15, 21, 87, 52, 133, 18, 74, 138, 121, 41, 88, 30, 79, 55, 96, 142, 64, 65, 128, 25, 123, 117, 3, 118, 7, 132, 137, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 139, 134, 84, 67, 72, 49, 115, 43, 143, 63, 39, 53, 113, 1, 81, 94, 125, 12, 75, 32, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 28, 45, 42, 122, 127, 135, 2, 70, 99, 47, 77, 51, 95, 13, 131, 40, 26, 85, 34, 114]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[78, 136, 87, 15, 21, 69, 93, 52, 133, 105, 89, 48, 5, 62, 0, 129, 91, 7, 41, 121, 79, 30, 138, 55, 142, 96, 18, 74, 9, 83, 35, 23, 37, 103, 110, 101, 98, 17, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 130, 92, 27, 104, 141, 147, 66, 57, 107, 60, 24, 80, 68, 72, 49, 43, 143, 113, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 6, 8, 116, 56, 86, 144, 50, 124, 139, 134, 84, 67, 146, 132, 137, 88, 118, 3, 64, 65, 128, 123, 25, 117, 78]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[111, 131, 28, 45, 2, 135, 13, 40, 99, 70, 47, 51, 77, 95, 38, 100, 120, 29, 106, 134, 139, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 6, 116, 8, 56, 86, 144, 50, 124, 60, 24, 80, 68, 72, 113, 143, 63, 39, 53, 1, 115, 49, 43, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 146, 84, 67, 57, 107, 66, 104, 141, 147, 7, 41, 121, 79, 30, 138, 55, 142, 96, 118, 3, 65, 128, 123, 25, 117, 64, 78, 105, 52, 133, 21, 69, 15, 87, 136, 93, 23, 17, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 44, 90, 97, 22, 108, 46, 130, 92, 27, 129, 0, 62, 5, 48, 89, 18, 74, 112, 132, 137, 88, 91, 119, 114, 122, 42, 127, 111]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[129, 0, 91, 7, 138, 121, 41, 88, 30, 79, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 105, 17, 136, 78, 89, 48, 5, 62, 74, 18, 93, 23, 110, 101, 98, 103, 37, 35, 126, 20, 73, 140, 58, 16, 14, 10, 31, 108, 44, 22, 97, 90, 46, 112, 71, 9, 83, 130, 50, 124, 86, 144, 8, 56, 19, 149, 85, 26, 34, 61, 109, 76, 59, 11, 54, 82, 33, 111, 131, 28, 45, 122, 42, 2, 135, 13, 47, 99, 70, 40, 127, 114, 119, 148, 6, 116, 139, 134, 84, 67, 49, 72, 113, 43, 143, 63, 39, 53, 1, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 95, 51, 77, 80, 24, 60, 107, 57, 104, 141, 147, 66, 92, 27, 137, 132, 68, 129]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[81, 94, 125, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 100, 106, 111, 131, 28, 45, 42, 122, 127, 114, 119, 33, 82, 54, 148, 11, 19, 149, 61, 59, 109, 76, 56, 8, 116, 6, 85, 26, 34, 139, 134, 84, 67, 49, 72, 113, 43, 143, 63, 39, 53, 1, 68, 80, 24, 60, 50, 124, 86, 144, 57, 107, 66, 104, 141, 147, 129, 0, 91, 62, 5, 48, 89, 9, 71, 73, 140, 58, 126, 20, 14, 16, 10, 31, 108, 46, 112, 105, 78, 136, 87, 15, 21, 69, 93, 133, 52, 17, 37, 23, 110, 101, 98, 103, 35, 83, 18, 74, 138, 142, 55, 96, 118, 3, 65, 64, 123, 25, 128, 117, 30, 79, 121, 41, 88, 132, 137, 7, 27, 92, 130, 22, 97, 90, 44, 2, 135, 70, 40, 99, 47, 13, 38, 120, 29, 115, 146, 81]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[8, 116, 6, 56, 139, 144, 86, 124, 50, 60, 24, 80, 68, 72, 113, 43, 49, 115, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 70, 40, 99, 47, 77, 95, 51, 4, 36, 12, 75, 32, 145, 102, 94, 125, 81, 1, 143, 63, 39, 53, 137, 132, 41, 121, 79, 30, 88, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 74, 18, 133, 52, 17, 23, 37, 35, 103, 110, 101, 98, 83, 9, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 108, 90, 97, 22, 76, 109, 59, 61, 19, 149, 85, 26, 34, 11, 148, 82, 54, 33, 119, 114, 122, 42, 127, 134, 84, 67, 107, 66, 104, 141, 147, 27, 92, 57, 130, 46, 44, 8]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[123, 25, 117, 64, 3, 65, 128, 55, 142, 96, 18, 133, 52, 78, 105, 83, 9, 71, 20, 73, 58, 140, 126, 35, 37, 103, 110, 101, 98, 17, 23, 93, 21, 69, 15, 87, 136, 89, 48, 5, 62, 0, 129, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 57, 107, 60, 24, 80, 68, 39, 53, 63, 143, 1, 113, 72, 49, 43, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 2, 70, 40, 99, 47, 13, 122, 114, 119, 82, 54, 148, 11, 19, 56, 8, 6, 116, 139, 144, 86, 124, 50, 92, 27, 130, 22, 97, 90, 108, 31, 44, 16, 14, 10, 112, 46, 109, 76, 59, 61, 149, 85, 34, 26, 33, 134, 84, 67, 115, 146, 38, 138, 74, 118, 123]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[144, 86, 124, 50, 60, 24, 80, 68, 72, 113, 43, 49, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 42, 122, 2, 70, 40, 99, 47, 13, 135, 127, 114, 119, 82, 54, 148, 33, 116, 8, 56, 6, 11, 19, 149, 85, 26, 34, 61, 59, 76, 109, 22, 97, 90, 108, 44, 16, 14, 10, 31, 46, 112, 71, 20, 73, 140, 58, 126, 35, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 52, 133, 21, 15, 87, 93, 69, 128, 25, 123, 117, 64, 3, 65, 18, 74, 138, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 0, 129, 7, 91, 62, 48, 5, 89, 9, 83, 96, 118, 142, 55, 79, 30, 39, 63, 143, 1, 53, 67, 84, 134, 139, 95, 51, 77, 144]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[146, 36, 4, 77, 51, 95, 100, 106, 29, 120, 111, 28, 45, 42, 122, 2, 131, 13, 47, 99, 70, 40, 135, 127, 114, 119, 33, 82, 54, 139, 134, 84, 67, 49, 72, 113, 43, 143, 1, 53, 39, 63, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 149, 85, 26, 34, 11, 148, 61, 59, 109, 76, 22, 97, 90, 108, 44, 31, 16, 14, 10, 73, 140, 58, 126, 20, 71, 112, 46, 130, 27, 92, 104, 141, 147, 66, 57, 107, 0, 129, 91, 62, 5, 48, 89, 9, 83, 35, 23, 37, 103, 110, 101, 98, 17, 136, 78, 105, 52, 133, 87, 15, 21, 69, 93, 18, 74, 138, 121, 41, 88, 30, 79, 55, 96, 142, 64, 65, 128, 25, 123, 117, 3, 118, 7, 132, 137, 115, 81, 94, 125, 12, 75, 32, 145, 102, 38, 146]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[11, 26, 85, 61, 59, 76, 109, 19, 149, 34, 116, 6, 8, 144, 86, 124, 50, 60, 24, 80, 68, 72, 49, 43, 143, 113, 63, 39, 53, 1, 115, 81, 125, 94, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 42, 122, 114, 119, 135, 13, 47, 99, 70, 40, 127, 33, 82, 54, 148, 134, 84, 67, 146, 12, 139, 57, 27, 92, 130, 22, 97, 90, 108, 31, 44, 16, 14, 10, 73, 58, 140, 126, 20, 71, 112, 62, 5, 48, 89, 78, 105, 52, 133, 87, 15, 21, 69, 93, 136, 17, 23, 37, 35, 103, 110, 101, 98, 83, 9, 46, 0, 129, 91, 7, 41, 121, 79, 30, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 74, 18, 88, 137, 132, 66, 104, 141, 147, 107, 56, 11]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[129, 0, 62, 5, 48, 89, 78, 105, 52, 133, 87, 15, 21, 69, 93, 136, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 19, 11, 148, 82, 54, 116, 8, 6, 56, 86, 144, 50, 124, 60, 24, 80, 68, 39, 53, 63, 143, 1, 115, 49, 72, 113, 43, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 100, 120, 29, 106, 38, 146, 84, 67, 111, 131, 28, 45, 42, 127, 135, 2, 70, 40, 99, 47, 13, 33, 134, 139, 26, 85, 34, 149, 114, 119, 122, 107, 57, 27, 92, 130, 112, 46, 66, 104, 141, 147, 7, 91, 74, 96, 118, 142, 55, 79, 121, 41, 30, 138, 88, 137, 132, 123, 25, 117, 64, 3, 65, 128, 18, 129]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[128, 25, 123, 117, 64, 3, 65, 18, 74, 138, 121, 41, 88, 30, 79, 55, 118, 142, 96, 105, 52, 133, 21, 15, 87, 136, 78, 17, 37, 23, 110, 101, 98, 103, 35, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 44, 108, 90, 97, 22, 31, 46, 0, 129, 27, 92, 130, 104, 141, 147, 66, 107, 57, 50, 124, 86, 144, 8, 56, 6, 116, 139, 67, 84, 134, 33, 82, 54, 148, 119, 114, 122, 42, 2, 45, 131, 28, 13, 70, 40, 99, 47, 51, 77, 95, 38, 100, 120, 29, 106, 111, 135, 127, 34, 85, 26, 11, 19, 149, 61, 109, 76, 59, 60, 24, 80, 68, 72, 49, 43, 143, 63, 39, 53, 1, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 113, 132, 137, 7, 91, 62, 48, 5, 89, 93, 69, 128]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[100, 106, 111, 131, 28, 45, 42, 2, 135, 127, 114, 119, 33, 82, 54, 148, 11, 19, 149, 61, 59, 109, 76, 22, 97, 90, 108, 44, 16, 14, 10, 31, 46, 112, 105, 78, 136, 87, 15, 21, 69, 93, 133, 52, 17, 37, 23, 103, 110, 101, 98, 35, 83, 9, 71, 73, 58, 140, 126, 20, 89, 48, 5, 62, 0, 129, 91, 7, 138, 121, 41, 88, 30, 79, 55, 118, 3, 65, 128, 25, 123, 117, 74, 18, 96, 142, 64, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 60, 24, 80, 68, 39, 53, 63, 143, 113, 43, 49, 72, 67, 84, 134, 139, 144, 86, 124, 50, 8, 116, 6, 56, 85, 34, 26, 122, 40, 70, 99, 47, 13, 51, 77, 95, 4, 36, 146, 12, 75, 32, 145, 102, 94, 125, 81, 115, 1, 120, 29, 38, 100]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[144, 86, 124, 50, 60, 24, 80, 68, 39, 53, 63, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 82, 54, 148, 6, 8, 116, 56, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 139, 134, 84, 67, 72, 146, 1, 107, 57, 27, 92, 130, 104, 141, 147, 66, 132, 41, 121, 79, 30, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 74, 18, 133, 52, 17, 23, 37, 35, 103, 110, 101, 98, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 88, 137, 33, 144]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[128, 123, 25, 117, 64, 65, 3, 118, 142, 55, 96, 18, 133, 52, 78, 105, 89, 48, 5, 62, 0, 129, 91, 74, 7, 41, 121, 79, 30, 138, 88, 132, 147, 141, 104, 66, 57, 107, 60, 80, 24, 68, 39, 53, 63, 143, 1, 113, 72, 49, 115, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 2, 33, 82, 54, 148, 11, 26, 85, 34, 149, 19, 56, 8, 6, 116, 139, 134, 84, 67, 43, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 40, 70, 99, 122, 114, 119, 86, 144, 50, 124, 61, 59, 109, 76, 22, 44, 90, 97, 46, 108, 31, 16, 14, 10, 73, 20, 140, 58, 126, 35, 37, 103, 110, 101, 98, 17, 136, 87, 15, 21, 69, 93, 23, 83, 9, 71, 112, 130, 92, 27, 137, 128]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[132, 121, 79, 30, 88, 41, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 15, 87, 136, 78, 105, 52, 133, 21, 17, 37, 103, 35, 23, 110, 101, 98, 83, 89, 48, 5, 62, 0, 129, 7, 91, 74, 18, 93, 9, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 27, 92, 130, 104, 141, 147, 66, 107, 57, 50, 124, 60, 24, 80, 68, 39, 63, 143, 113, 43, 49, 72, 67, 84, 134, 139, 144, 86, 8, 56, 116, 6, 11, 19, 149, 85, 26, 34, 61, 109, 76, 59, 148, 82, 54, 33, 111, 131, 28, 45, 42, 122, 127, 135, 13, 47, 99, 70, 40, 2, 119, 114, 106, 29, 120, 100, 38, 146, 36, 4, 51, 77, 95, 102, 32, 12, 75, 145, 125, 94, 115, 81, 1, 53, 137, 132]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[124, 50, 60, 80, 24, 68, 72, 49, 115, 43, 143, 63, 39, 53, 113, 67, 84, 134, 139, 144, 86, 56, 8, 6, 116, 82, 54, 33, 148, 11, 19, 149, 61, 59, 109, 76, 22, 97, 90, 108, 44, 31, 16, 14, 10, 73, 58, 140, 126, 20, 71, 112, 46, 130, 27, 92, 57, 107, 66, 104, 141, 147, 129, 0, 91, 62, 48, 5, 89, 9, 83, 35, 23, 37, 103, 110, 101, 98, 17, 136, 78, 105, 52, 133, 87, 15, 21, 69, 93, 18, 74, 138, 121, 41, 88, 30, 79, 55, 96, 142, 64, 65, 128, 123, 25, 117, 3, 118, 7, 132, 137, 1, 81, 94, 125, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 47, 99, 70, 40, 135, 2, 42, 122, 127, 45, 131, 28, 111, 106, 29, 120, 100, 38, 146, 13, 114, 119, 85, 26, 34, 124]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[137, 132, 41, 121, 79, 30, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 74, 18, 133, 52, 17, 23, 37, 35, 103, 110, 101, 98, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 130, 92, 27, 104, 141, 147, 66, 57, 107, 60, 50, 124, 86, 144, 8, 6, 56, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 119, 114, 122, 42, 127, 135, 13, 70, 40, 99, 47, 77, 95, 51, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 33, 82, 54, 148, 116, 139, 134, 84, 67, 49, 43, 143, 113, 63, 39, 53, 1, 115, 81, 125, 94, 75, 32, 145, 102, 12, 24, 80, 68, 72, 88, 137]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 109, 76, 19, 56, 8, 6, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 80, 24, 60, 124, 50, 86, 144, 57, 107, 66, 104, 141, 147, 7, 91, 74, 5, 48, 62, 0, 129, 27, 92, 130, 22, 97, 90, 108, 44, 31, 46, 14, 16, 10, 73, 58, 140, 126, 35, 37, 103, 23, 17, 136, 87, 15, 21, 69, 128, 123, 25, 117, 64, 65, 3, 118, 142, 55, 96, 18, 133, 52, 78, 105, 89, 112, 71, 20, 83, 9, 98, 101, 110, 93, 41, 121, 79, 30, 138, 88, 132, 137, 115, 146, 36, 4, 102, 32, 12, 75, 145, 125, 81, 94, 43, 49, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 135, 13, 40, 70, 99, 47, 77, 95, 51, 38, 114, 119, 122, 2, 54]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[42, 122, 127, 45, 2, 33, 148, 82, 54, 116, 8, 6, 56, 86, 144, 50, 124, 60, 80, 24, 139, 134, 84, 67, 72, 113, 43, 49, 115, 146, 36, 4, 51, 77, 95, 100, 120, 29, 106, 111, 131, 28, 13, 70, 40, 99, 47, 135, 114, 119, 11, 19, 149, 85, 26, 34, 61, 109, 76, 59, 97, 22, 90, 108, 44, 16, 14, 10, 31, 46, 112, 71, 20, 73, 140, 58, 126, 35, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 52, 133, 21, 15, 87, 93, 69, 128, 25, 123, 117, 64, 3, 65, 18, 74, 96, 118, 142, 55, 138, 121, 41, 88, 30, 79, 7, 91, 129, 0, 62, 48, 5, 89, 9, 83, 130, 27, 92, 57, 104, 141, 147, 66, 107, 137, 132, 39, 63, 143, 1, 53, 68, 81, 125, 94, 75, 32, 12, 145, 102, 38, 42]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[75, 32, 12, 145, 102, 36, 4, 77, 51, 95, 100, 106, 111, 28, 45, 42, 122, 127, 114, 119, 33, 82, 54, 148, 11, 19, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 16, 14, 10, 73, 140, 58, 126, 20, 71, 112, 46, 130, 27, 92, 104, 66, 107, 57, 141, 147, 129, 0, 91, 62, 5, 48, 89, 9, 83, 35, 23, 37, 103, 110, 101, 98, 17, 136, 78, 105, 52, 133, 87, 15, 21, 69, 93, 18, 74, 138, 121, 41, 88, 30, 79, 55, 96, 142, 64, 65, 128, 25, 123, 117, 3, 118, 7, 132, 137, 63, 39, 53, 113, 143, 1, 43, 49, 72, 67, 84, 134, 139, 144, 86, 124, 50, 60, 80, 24, 68, 115, 81, 125, 94, 146, 38, 120, 29, 47, 99, 40, 70, 13, 131, 2, 135, 116, 6, 8, 56, 85, 34, 26, 75]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[39, 53, 63, 143, 113, 43, 49, 115, 146, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 6, 8, 116, 56, 86, 144, 50, 124, 60, 24, 80, 68, 72, 67, 84, 139, 134, 107, 92, 27, 104, 141, 147, 66, 57, 130, 0, 129, 91, 7, 41, 121, 79, 30, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 74, 18, 133, 52, 17, 23, 37, 35, 103, 110, 101, 98, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 88, 137, 132, 81, 125, 94, 12, 75, 32, 145, 102, 1, 39]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[110, 101, 98, 35, 37, 103, 23, 17, 136, 93, 21, 15, 87, 69, 128, 123, 25, 117, 64, 65, 3, 118, 142, 55, 96, 18, 133, 52, 78, 105, 89, 48, 5, 62, 0, 129, 91, 74, 7, 41, 121, 79, 30, 138, 88, 132, 147, 141, 104, 66, 57, 107, 60, 24, 80, 68, 72, 67, 84, 134, 139, 144, 86, 124, 50, 8, 6, 116, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 16, 14, 10, 73, 20, 140, 58, 71, 112, 46, 130, 92, 27, 137, 63, 39, 53, 1, 113, 143, 43, 49, 115, 81, 125, 94, 75, 32, 145, 102, 36, 4, 51, 77, 95, 100, 106, 29, 120, 111, 131, 28, 45, 42, 127, 135, 2, 33, 82, 54, 148, 119, 114, 122, 13, 40, 70, 99, 47, 146, 38, 12, 9, 83, 126, 110]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[2, 45, 42, 122, 127, 33, 56, 8, 116, 6, 11, 19, 149, 85, 26, 34, 61, 109, 76, 59, 97, 90, 108, 44, 22, 31, 46, 112, 71, 20, 73, 58, 140, 126, 35, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 52, 133, 21, 15, 87, 93, 69, 128, 25, 123, 117, 64, 3, 65, 18, 74, 7, 91, 62, 0, 129, 27, 92, 130, 104, 141, 147, 66, 107, 57, 50, 124, 86, 144, 80, 24, 68, 72, 113, 43, 49, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 13, 70, 40, 99, 47, 51, 77, 95, 67, 84, 134, 139, 60, 1, 143, 63, 39, 53, 137, 132, 41, 121, 79, 30, 88, 118, 142, 55, 138, 96, 5, 48, 89, 9, 83, 10, 14, 16, 148, 82, 54, 119, 114, 135, 2]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[60, 50, 124, 86, 144, 8, 116, 6, 11, 19, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 16, 14, 10, 73, 140, 58, 126, 20, 71, 112, 46, 130, 27, 92, 104, 66, 147, 141, 129, 0, 91, 62, 5, 48, 89, 9, 83, 35, 23, 37, 103, 110, 101, 98, 17, 136, 78, 105, 133, 52, 18, 74, 138, 121, 41, 88, 30, 79, 55, 96, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 15, 87, 93, 21, 7, 132, 137, 63, 143, 1, 113, 43, 49, 72, 67, 84, 134, 139, 33, 82, 54, 148, 119, 114, 122, 42, 2, 135, 127, 45, 131, 28, 13, 40, 70, 99, 47, 29, 120, 106, 111, 38, 100, 95, 77, 51, 4, 36, 146, 12, 75, 32, 145, 102, 94, 125, 81, 115, 53, 39, 68, 80, 24, 107, 57, 34, 26, 85, 56, 60]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[83, 9, 89, 48, 5, 62, 0, 129, 91, 7, 41, 121, 79, 30, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 93, 136, 78, 105, 52, 133, 17, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 112, 14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 130, 92, 27, 104, 141, 147, 66, 107, 60, 57, 50, 124, 86, 144, 8, 116, 6, 56, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 54, 82, 33, 148, 114, 119, 135, 13, 47, 99, 70, 40, 127, 42, 122, 2, 45, 28, 131, 111, 106, 29, 120, 100, 95, 77, 51, 4, 36, 146, 38, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 68, 72, 80, 24, 139, 134, 12, 75, 32, 145, 102, 94, 125, 81, 115, 137, 132, 88, 74, 18, 83]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[18, 133, 52, 78, 105, 89, 48, 5, 62, 74, 96, 142, 55, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 136, 93, 17, 23, 37, 103, 110, 101, 98, 35, 126, 20, 73, 58, 140, 10, 14, 16, 108, 31, 44, 90, 97, 22, 76, 109, 59, 61, 149, 19, 56, 8, 6, 116, 82, 54, 148, 11, 26, 85, 34, 119, 114, 122, 42, 127, 135, 13, 40, 70, 99, 47, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 33, 134, 139, 144, 86, 124, 50, 60, 24, 80, 68, 72, 49, 43, 113, 143, 63, 39, 53, 1, 115, 146, 36, 4, 102, 32, 145, 12, 75, 94, 125, 81, 67, 84, 107, 57, 27, 92, 104, 141, 147, 66, 129, 0, 91, 7, 41, 121, 79, 30, 138, 88, 132, 137, 130, 112, 71, 9, 83, 46, 18]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[74, 18, 133, 52, 105, 89, 48, 5, 62, 0, 129, 27, 92, 57, 80, 24, 139, 134, 84, 67, 49, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 42, 122, 127, 135, 13, 70, 40, 99, 47, 51, 77, 95, 2, 54, 82, 33, 148, 114, 119, 11, 19, 149, 85, 26, 34, 61, 109, 76, 59, 97, 90, 108, 44, 22, 46, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 130, 104, 141, 147, 66, 107, 60, 124, 50, 86, 144, 6, 116, 8, 56, 72, 113, 43, 143, 63, 39, 53, 1, 68, 137, 132, 88, 79, 30, 138, 121, 41, 7, 91, 142, 55, 118, 96, 117, 123, 25, 128, 69, 15, 87, 136, 78, 17, 37, 23, 110, 101, 98, 103, 35, 83, 9, 21, 93, 65, 64, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[51, 77, 95, 38, 100, 106, 29, 120, 111, 28, 45, 42, 122, 2, 135, 127, 114, 119, 33, 82, 54, 148, 11, 19, 56, 8, 116, 6, 144, 86, 124, 50, 60, 80, 24, 68, 39, 53, 63, 143, 113, 43, 49, 72, 67, 84, 134, 139, 85, 26, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 16, 14, 10, 73, 140, 58, 126, 20, 71, 112, 46, 130, 27, 92, 57, 107, 66, 104, 141, 147, 129, 0, 91, 74, 138, 121, 41, 88, 30, 79, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 15, 87, 93, 21, 133, 52, 105, 78, 136, 23, 37, 103, 110, 101, 98, 35, 83, 9, 89, 48, 5, 62, 18, 17, 7, 132, 137, 1, 115, 81, 94, 125, 12, 75, 32, 145, 102, 36, 4, 146, 47, 99, 70, 40, 13, 131, 51]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[143, 63, 39, 53, 1, 43, 113, 67, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 70, 40, 99, 47, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 6, 8, 116, 56, 86, 144, 50, 124, 60, 24, 80, 68, 72, 146, 84, 139, 134, 107, 66, 104, 141, 147, 129, 0, 91, 7, 41, 121, 79, 30, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 74, 18, 133, 52, 17, 23, 37, 35, 103, 110, 101, 98, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 130, 92, 27, 57, 137, 132, 88, 143]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[135, 13, 40, 70, 99, 47, 51, 77, 95, 100, 120, 29, 106, 111, 131, 28, 45, 42, 127, 119, 114, 122, 2, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 109, 76, 19, 56, 8, 6, 116, 86, 144, 139, 134, 84, 67, 72, 113, 143, 63, 39, 53, 1, 115, 49, 43, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 146, 38, 124, 50, 60, 80, 24, 68, 66, 104, 141, 147, 7, 41, 121, 79, 30, 88, 137, 132, 27, 92, 57, 107, 130, 22, 97, 90, 108, 31, 44, 16, 14, 10, 73, 20, 140, 58, 126, 35, 37, 103, 110, 101, 98, 17, 136, 78, 105, 133, 52, 18, 74, 96, 142, 55, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 23, 83, 9, 71, 112, 46, 0, 129, 91, 62, 5, 48, 89, 138, 135]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[85, 26, 34, 149, 19, 6, 8, 116, 56, 86, 144, 50, 124, 60, 80, 24, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 42, 122, 127, 2, 135, 13, 70, 40, 99, 47, 51, 77, 95, 72, 68, 104, 141, 147, 66, 107, 57, 27, 92, 130, 46, 112, 71, 20, 73, 140, 58, 126, 35, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 52, 133, 21, 15, 87, 93, 69, 64, 3, 65, 128, 25, 123, 117, 142, 55, 138, 121, 41, 88, 79, 30, 132, 137, 7, 91, 129, 0, 62, 48, 5, 89, 18, 74, 96, 118, 9, 83, 10, 14, 16, 108, 90, 97, 22, 44, 31, 76, 109, 59, 61, 54, 82, 33, 148, 119, 114, 11, 85]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[85, 26, 34, 149, 19, 6, 8, 116, 56, 86, 144, 50, 124, 60, 80, 24, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 42, 122, 127, 2, 135, 13, 70, 40, 99, 47, 51, 77, 95, 72, 68, 104, 141, 147, 66, 107, 57, 27, 92, 130, 46, 112, 71, 20, 73, 140, 58, 126, 35, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 52, 133, 21, 15, 87, 93, 69, 64, 3, 65, 128, 25, 123, 117, 142, 55, 138, 121, 41, 88, 79, 30, 132, 137, 7, 91, 129, 0, 62, 48, 5, 89, 18, 74, 96, 118, 9, 83, 10, 14, 16, 108, 90, 97, 22, 44, 31, 76, 109, 59, 61, 54, 82, 33, 148, 119, 114, 11, 85]");

    }

    @Test
    public void test_mmas_mem_cycle_moving_adtsp_freq_100_mag_0_5_kroA150() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA150));
        MMAS_MEM_CADTSP mmas_mem_cadtsp = new MMAS_MEM_CADTSP(graph, 0.8, 1000, 0.5, 100, 4);
        mmas_mem_cadtsp.setMmasSeed(1);
        mmas_mem_cadtsp.setDbgpSeed(1);
        mmas_mem_cadtsp.setStatisticInterval(1);
        mmas_mem_cadtsp.setShowLog(false);
        mmas_mem_cadtsp.run();
        assertThat(mmas_mem_cadtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(33918.031458122336);
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getGlobalStatistics())).isEqualTo("[137, 132, 41, 121, 30, 79, 88, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 138, 74, 18, 133, 52, 17, 23, 37, 35, 103, 110, 101, 98, 83, 9, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 130, 92, 27, 104, 141, 147, 66, 107, 60, 24, 80, 68, 72, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 6, 8, 116, 56, 86, 144, 50, 124, 139, 134, 84, 67, 57, 137]");

        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 1, 47612.67939543519, 2940.9855025489237, 0.0, 84.57142857142857, 42683.170205531416);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 50, 38916.47883213249, 3301.2389949634535, 0.52, 16.248163265306122, 35507.839244847826);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 100, 37164.93904695575, 3162.027894065196, 0.49666666666666665, 15.239183673469388, 34376.896011443845);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 101, 37130.10414461174, 2262.693803778607, 0.49666666666666665, 16.200816326530614, 34376.896011443845);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 150, 37055.03750364081, 3291.5929495832847, 0.5133333333333333, 10.249795918367347, 33958.26422485203);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 200, 36307.82435178918, 2606.5438715350206, 0.5, 12.519183673469387, 33912.75297511983);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 201, 47207.05303056244, 2753.59755055253, 0.48333333333333334, 41.02448979591837, 43133.69431918201);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 250, 43133.416337432536, 2916.6986332701113, 1.7566666666666666, 49.605714285714285, 37133.914573220296);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 300, 42461.953090373296, 2932.897846078083, 1.47, 49.65551020408163, 36103.3839654897);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 301, 49185.93045230631, 2694.4596629831544, 1.2966666666666666, 60.07836734693878, 45061.27966649206);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 350, 44233.39423735403, 3677.386071409563, 1.97, 55.81142857142857, 37486.37798915184);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 400, 42318.06199577961, 2174.9676102121502, 1.9733333333333334, 54.64408163265306, 36505.90510684384);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 401, 47427.53458205718, 3090.4814405025627, 1.8, 62.01387755102041, 42264.57533519532);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 450, 43650.84158270197, 2340.8916361938427, 2.19, 59.61469387755102, 37773.51672401783);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 500, 43367.98509100123, 2613.084111332484, 2.0433333333333334, 57.04489795918367, 37335.70641073145);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 501, 44598.459175498254, 2888.525050389283, 1.9166666666666667, 58.462857142857146, 38083.88033120597);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 550, 40658.36292311807, 3082.915891208911, 2.0733333333333333, 47.0595918367347, 33906.477627986314);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 600, 40628.04413564416, 2879.3792308050874, 1.8066666666666666, 47.14693877551021, 33743.35982464229);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 601, 43930.364064063506, 2373.374383968218, 1.69, 56.18857142857143, 39897.35904207784);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 650, 43943.09468084239, 3301.057442780414, 1.8866666666666667, 56.45224489795918, 37490.23073438616);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 700, 43966.45522595051, 2629.4359118825423, 1.73, 52.47265306122449, 35906.1929247095);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 701, 45667.72151479764, 3003.993233165248, 1.59, 58.62122448979592, 40642.22817750131);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 750, 42803.87668011404, 3112.5015084224574, 2.04, 56.51020408163265, 36755.52020659183);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 800, 42386.252983393984, 2667.093014478807, 1.9833333333333334, 52.38285714285714, 35167.035782413914);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 801, 46548.21371374091, 2636.163941286246, 1.8133333333333332, 63.04734693877551, 41427.669219230374);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 850, 44815.06716450708, 2948.132316967421, 2.0433333333333334, 57.198367346938774, 37428.648356953534);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 900, 43729.04912466915, 2885.27280459399, 1.8633333333333333, 50.5534693877551, 36662.26716446436);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 901, 45065.10745238686, 3060.9936266400928, 1.71, 60.089795918367344, 38747.141596854686);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 950, 41178.520140185436, 2737.1507271425075, 1.77, 44.179591836734694, 34616.708865643515);
        TestUtils.checkValues(mmas_mem_cadtsp.getIterationStatistics(), 1000, 39901.71616029162, 3025.390384649544, 1.6533333333333333, 37.00163265306122, 33918.031458122336);

        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[128, 65, 64, 25, 123, 117, 3, 118, 138, 55, 142, 79, 30, 41, 121, 96, 7, 91, 129, 0, 62, 48, 5, 74, 18, 133, 52, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 10, 31, 108, 90, 97, 22, 44, 16, 14, 112, 92, 27, 66, 104, 141, 147, 46, 130, 50, 124, 86, 144, 56, 8, 116, 6, 19, 85, 26, 34, 149, 76, 109, 59, 61, 11, 148, 82, 54, 114, 119, 122, 42, 45, 2, 135, 13, 47, 77, 51, 95, 38, 100, 106, 29, 120, 4, 36, 12, 75, 32, 145, 102, 94, 125, 81, 49, 43, 143, 113, 63, 39, 53, 1, 115, 146, 67, 80, 24, 60, 57, 107, 139, 33, 84, 111, 131, 28, 127, 70, 40, 99, 134, 72, 68, 137, 132, 88, 89, 78, 105, 17, 83, 9, 128]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[60, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 2, 45, 122, 42, 127, 135, 13, 47, 99, 70, 40, 119, 114, 34, 149, 61, 59, 76, 109, 19, 116, 6, 8, 144, 86, 50, 124, 139, 82, 54, 148, 26, 85, 11, 56, 33, 84, 67, 72, 146, 134, 107, 27, 92, 129, 0, 62, 48, 5, 74, 18, 133, 52, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 17, 105, 89, 78, 3, 64, 65, 128, 123, 25, 117, 118, 79, 30, 88, 137, 132, 41, 121, 138, 55, 142, 96, 7, 91, 112, 16, 14, 10, 31, 44, 97, 22, 90, 108, 46, 130, 104, 141, 147, 66, 57, 60]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[57, 60, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 2, 45, 122, 42, 127, 135, 13, 47, 99, 70, 40, 119, 114, 34, 149, 61, 59, 76, 109, 19, 116, 6, 8, 144, 86, 50, 124, 139, 82, 54, 148, 26, 85, 11, 56, 33, 84, 67, 72, 146, 134, 107, 129, 0, 62, 48, 5, 74, 18, 133, 52, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 17, 105, 89, 78, 3, 64, 65, 128, 123, 25, 117, 118, 79, 30, 88, 137, 132, 41, 121, 138, 55, 142, 96, 7, 91, 112, 16, 14, 10, 31, 44, 97, 22, 90, 108, 46, 130, 92, 27, 104, 141, 147, 66, 57]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[62, 48, 5, 74, 18, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 17, 105, 89, 78, 136, 133, 52, 3, 64, 65, 128, 123, 25, 117, 118, 79, 30, 88, 137, 132, 41, 121, 138, 55, 142, 96, 7, 91, 112, 14, 16, 10, 31, 44, 97, 22, 90, 108, 46, 130, 92, 27, 104, 141, 147, 66, 57, 60, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 2, 45, 122, 42, 127, 135, 13, 47, 99, 70, 40, 119, 114, 34, 149, 61, 59, 76, 109, 19, 116, 6, 8, 144, 86, 50, 124, 139, 134, 82, 54, 148, 26, 85, 11, 56, 33, 84, 67, 72, 146, 107, 129, 0, 62]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[5, 48, 74, 18, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 17, 105, 89, 78, 136, 133, 52, 3, 64, 65, 128, 123, 25, 117, 118, 79, 30, 88, 137, 132, 41, 121, 138, 55, 142, 96, 7, 91, 112, 14, 16, 10, 31, 44, 97, 22, 90, 108, 46, 130, 92, 27, 104, 141, 147, 66, 57, 60, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 2, 45, 122, 42, 127, 135, 13, 47, 99, 70, 40, 119, 114, 34, 149, 61, 59, 76, 109, 19, 116, 6, 8, 144, 86, 50, 124, 139, 134, 82, 54, 148, 26, 85, 11, 56, 33, 84, 67, 72, 146, 107, 129, 0, 62, 5]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[137, 132, 41, 121, 138, 55, 142, 96, 7, 91, 112, 14, 16, 10, 31, 44, 97, 22, 90, 108, 46, 130, 92, 27, 57, 60, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 2, 45, 122, 42, 127, 135, 13, 47, 99, 70, 40, 119, 114, 34, 149, 61, 59, 76, 109, 19, 6, 8, 116, 33, 82, 54, 148, 26, 85, 11, 56, 86, 144, 50, 124, 139, 134, 84, 67, 72, 146, 107, 66, 104, 141, 147, 129, 0, 62, 5, 48, 74, 18, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 17, 105, 89, 78, 136, 133, 52, 3, 64, 65, 128, 123, 25, 117, 118, 79, 30, 88, 137]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[10, 31, 44, 97, 22, 90, 108, 46, 130, 92, 27, 57, 60, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 2, 45, 122, 42, 127, 135, 13, 47, 99, 70, 40, 119, 114, 34, 149, 61, 59, 76, 109, 19, 6, 8, 116, 33, 82, 54, 148, 26, 85, 11, 56, 86, 144, 50, 124, 139, 134, 84, 67, 72, 146, 107, 66, 104, 141, 147, 129, 0, 62, 91, 7, 121, 41, 132, 137, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 52, 133, 78, 136, 17, 105, 89, 48, 5, 112, 14, 16, 10]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 17, 105, 89, 48, 5, 112, 14, 16, 10, 31, 44, 97, 22, 90, 108, 46, 130, 92, 27, 57, 60, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 2, 45, 122, 42, 127, 135, 13, 47, 99, 70, 40, 119, 114, 34, 149, 61, 59, 76, 109, 19, 6, 8, 116, 33, 82, 54, 148, 26, 85, 11, 56, 86, 144, 50, 124, 139, 134, 84, 67, 72, 146, 107, 66, 104, 141, 147, 129, 0, 62, 91, 7, 121, 41, 132, 137, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 17, 105, 89, 48, 5, 112, 14, 16, 10, 31, 44, 97, 22, 90, 108, 46, 130, 92, 27, 57, 60, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 2, 45, 122, 42, 127, 135, 13, 47, 99, 70, 40, 119, 114, 34, 149, 61, 59, 76, 109, 19, 6, 8, 116, 33, 82, 54, 148, 26, 85, 11, 56, 86, 144, 50, 124, 139, 134, 84, 67, 72, 146, 107, 66, 104, 141, 147, 129, 0, 62, 91, 7, 121, 41, 132, 137, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 17, 105, 89, 48, 5, 112, 14, 16, 10, 31, 44, 97, 22, 90, 108, 46, 130, 92, 27, 57, 60, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 2, 45, 122, 42, 127, 135, 13, 47, 99, 70, 40, 119, 114, 34, 149, 61, 59, 76, 109, 19, 6, 8, 116, 33, 82, 54, 148, 26, 85, 11, 56, 86, 144, 50, 124, 139, 134, 84, 67, 72, 146, 107, 66, 104, 141, 147, 129, 0, 62, 91, 7, 121, 41, 132, 137, 30, 79, 88, 55, 142, 96, 3, 64]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[66, 104, 141, 147, 129, 0, 62, 91, 7, 121, 41, 132, 137, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 17, 105, 89, 48, 5, 112, 14, 16, 10, 31, 44, 97, 22, 90, 108, 46, 130, 27, 92, 57, 60, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 2, 45, 122, 42, 127, 135, 13, 47, 99, 70, 40, 119, 114, 34, 149, 61, 59, 76, 109, 19, 6, 8, 116, 33, 82, 54, 148, 26, 85, 11, 56, 86, 144, 50, 124, 139, 134, 84, 67, 72, 146, 107, 66]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 146, 1, 39, 53, 63, 68, 80, 24, 60, 107, 66, 104, 141, 147, 129, 0, 62, 91, 7, 121, 41, 132, 137, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 17, 105, 89, 48, 5, 112, 14, 16, 10, 31, 44, 97, 22, 90, 108, 46, 130, 27, 92, 57, 109, 76, 61, 59, 149, 34, 19, 114, 119, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 111, 131, 28, 33, 82, 54, 148, 26, 85, 11, 56, 8, 116, 6, 144, 86, 50, 124, 139, 134, 84, 67, 72, 143, 113, 43, 49, 115, 81, 125, 94]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[116, 6, 8, 144, 86, 50, 124, 139, 134, 84, 67, 72, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 146, 1, 39, 53, 63, 68, 80, 24, 60, 107, 66, 104, 141, 147, 129, 0, 62, 91, 7, 121, 41, 132, 137, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 17, 105, 89, 48, 5, 112, 14, 16, 10, 31, 44, 97, 22, 90, 108, 46, 130, 27, 92, 57, 109, 76, 61, 59, 149, 34, 26, 85, 19, 114, 119, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 111, 131, 28, 33, 82, 54, 148, 11, 56, 116]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[148, 11, 56, 116, 6, 8, 144, 86, 50, 124, 139, 134, 84, 67, 72, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 146, 1, 39, 53, 63, 68, 80, 24, 60, 107, 66, 104, 141, 147, 129, 0, 62, 91, 7, 121, 41, 132, 137, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 17, 105, 89, 48, 5, 112, 14, 16, 10, 31, 44, 97, 22, 90, 108, 46, 130, 27, 92, 57, 109, 76, 61, 59, 149, 34, 26, 85, 19, 119, 114, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 33, 82, 54, 148]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 146, 1, 39, 53, 63, 68, 80, 24, 60, 107, 66, 104, 141, 147, 129, 0, 62, 91, 7, 121, 41, 132, 137, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 17, 105, 89, 48, 5, 112, 14, 16, 10, 31, 44, 97, 22, 90, 108, 46, 130, 27, 92, 57, 109, 76, 61, 59, 149, 34, 26, 85, 19, 119, 114, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 56, 116, 6, 8, 144, 86, 50, 124, 139, 134, 84, 67, 72, 143, 113, 43, 49, 115, 81, 125, 94]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 146, 1, 39, 53, 63, 68, 80, 24, 60, 107, 66, 104, 141, 147, 129, 0, 62, 91, 7, 121, 41, 132, 137, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 17, 105, 89, 48, 5, 112, 14, 16, 10, 31, 44, 97, 22, 90, 108, 46, 130, 27, 92, 57, 109, 76, 61, 59, 149, 34, 26, 85, 19, 119, 114, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 56, 116, 6, 8, 144, 86, 50, 124, 139, 134, 84, 67, 72, 143, 113, 43, 49, 115, 81, 125, 94]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 146, 1, 39, 53, 63, 68, 80, 24, 60, 107, 66, 104, 141, 147, 129, 0, 62, 91, 7, 121, 41, 132, 137, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 17, 105, 89, 48, 5, 112, 14, 16, 10, 31, 44, 97, 22, 90, 108, 46, 130, 27, 92, 57, 109, 76, 61, 59, 149, 34, 26, 85, 19, 119, 114, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 56, 116, 6, 8, 144, 86, 50, 124, 139, 134, 84, 67, 72, 143, 113, 43, 49, 115, 81, 125, 94]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 146, 1, 39, 53, 63, 68, 80, 24, 60, 107, 66, 104, 141, 147, 129, 0, 62, 91, 7, 121, 41, 132, 137, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 17, 105, 89, 48, 5, 112, 14, 16, 10, 31, 44, 97, 22, 90, 108, 46, 130, 27, 92, 57, 109, 76, 61, 59, 149, 34, 26, 85, 19, 119, 114, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 56, 116, 6, 8, 144, 86, 50, 124, 139, 134, 84, 67, 72, 143, 113, 43, 49, 115, 81, 125, 94]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[9, 83, 17, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 112, 14, 16, 10, 31, 44, 97, 22, 90, 108, 46, 130, 27, 92, 57, 109, 76, 61, 59, 149, 34, 26, 85, 19, 119, 114, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 56, 116, 6, 8, 144, 86, 50, 124, 139, 134, 84, 67, 72, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 146, 1, 39, 53, 63, 68, 80, 24, 60, 107, 66, 104, 141, 147, 129, 0, 62, 91, 7, 121, 41, 132, 137, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 105, 89, 48, 5, 9]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 146, 1, 39, 53, 63, 68, 80, 24, 60, 107, 66, 104, 141, 147, 129, 0, 62, 91, 7, 121, 41, 132, 137, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 105, 89, 48, 5, 9, 83, 17, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 112, 14, 16, 10, 31, 44, 97, 22, 90, 108, 46, 130, 27, 92, 57, 109, 76, 61, 59, 149, 34, 26, 85, 19, 119, 114, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 56, 116, 6, 8, 144, 86, 50, 124, 139, 134, 84, 67, 72, 143, 113, 43, 49, 115, 81, 125]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[96, 3, 64, 65, 128, 123, 25, 117, 118, 142, 55, 79, 88, 41, 121, 30, 138, 74, 18, 52, 133, 78, 105, 89, 48, 5, 62, 91, 7, 0, 129, 141, 104, 66, 147, 137, 132, 27, 92, 57, 107, 60, 80, 24, 86, 144, 50, 124, 26, 85, 19, 119, 114, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 56, 116, 6, 8, 139, 134, 84, 67, 72, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 146, 1, 39, 53, 63, 68, 76, 61, 59, 149, 34, 109, 22, 90, 108, 46, 130, 44, 97, 31, 16, 14, 10, 20, 73, 58, 140, 126, 71, 112, 9, 83, 17, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 96]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[89, 48, 5, 62, 0, 129, 91, 138, 55, 79, 88, 41, 121, 30, 7, 132, 147, 141, 104, 66, 57, 27, 92, 46, 108, 31, 44, 97, 90, 22, 76, 109, 59, 149, 61, 19, 26, 85, 34, 119, 114, 122, 42, 127, 40, 70, 99, 47, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 33, 82, 54, 148, 11, 116, 6, 8, 56, 86, 144, 139, 134, 84, 67, 72, 113, 143, 43, 49, 115, 125, 94, 75, 32, 145, 102, 36, 4, 146, 12, 81, 1, 53, 39, 63, 68, 80, 24, 60, 124, 50, 107, 137, 130, 71, 20, 73, 58, 140, 126, 35, 83, 9, 78, 105, 133, 52, 18, 3, 25, 123, 117, 64, 65, 128, 74, 96, 142, 118, 87, 15, 21, 69, 93, 23, 37, 103, 110, 101, 98, 17, 136, 16, 14, 10, 112, 89]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[7, 91, 129, 0, 62, 5, 48, 89, 78, 105, 133, 52, 18, 3, 64, 65, 128, 117, 25, 123, 118, 142, 55, 79, 88, 137, 132, 147, 141, 104, 66, 57, 107, 60, 24, 80, 68, 53, 39, 63, 143, 43, 49, 113, 72, 67, 84, 134, 139, 33, 82, 54, 148, 11, 19, 26, 85, 34, 149, 61, 59, 109, 76, 144, 86, 50, 124, 116, 6, 8, 56, 114, 119, 122, 42, 127, 135, 13, 47, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 70, 40, 99, 4, 36, 146, 12, 75, 32, 145, 102, 94, 125, 81, 1, 115, 27, 92, 46, 130, 22, 90, 97, 108, 31, 44, 16, 14, 10, 20, 73, 58, 140, 126, 35, 83, 9, 71, 112, 23, 37, 103, 110, 101, 98, 17, 136, 87, 15, 21, 69, 93, 74, 96, 121, 41, 138, 30, 7]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[7, 91, 129, 0, 62, 5, 48, 89, 78, 105, 133, 52, 18, 3, 64, 65, 128, 117, 25, 123, 118, 142, 55, 79, 88, 137, 132, 147, 141, 104, 66, 57, 107, 60, 24, 80, 68, 53, 39, 63, 143, 43, 49, 113, 72, 67, 84, 134, 139, 33, 82, 54, 148, 11, 19, 26, 85, 34, 149, 61, 59, 109, 76, 144, 86, 50, 124, 116, 6, 8, 56, 114, 119, 122, 42, 127, 135, 13, 47, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 70, 40, 99, 4, 36, 146, 12, 75, 32, 145, 102, 94, 125, 81, 1, 115, 27, 92, 46, 130, 22, 90, 97, 108, 31, 44, 16, 14, 10, 20, 73, 58, 140, 126, 35, 83, 9, 71, 112, 23, 37, 103, 110, 101, 98, 17, 136, 87, 15, 21, 69, 93, 74, 96, 121, 41, 138, 30, 7]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[7, 91, 129, 0, 62, 5, 48, 89, 78, 105, 133, 52, 18, 3, 64, 65, 128, 117, 25, 123, 118, 142, 55, 79, 88, 137, 132, 147, 141, 104, 66, 57, 107, 60, 24, 80, 68, 53, 39, 63, 143, 43, 49, 113, 72, 67, 84, 134, 139, 33, 82, 54, 148, 11, 19, 26, 85, 34, 149, 61, 59, 109, 76, 144, 86, 50, 124, 116, 6, 8, 56, 114, 119, 122, 42, 127, 135, 13, 47, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 70, 40, 99, 4, 36, 146, 12, 75, 32, 145, 102, 94, 125, 81, 1, 115, 27, 92, 46, 130, 22, 90, 97, 108, 31, 44, 16, 14, 10, 20, 73, 58, 140, 126, 35, 83, 9, 71, 112, 23, 37, 103, 110, 101, 98, 17, 136, 87, 15, 21, 69, 93, 74, 96, 121, 41, 138, 30, 7]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[7, 91, 129, 0, 62, 5, 48, 89, 78, 105, 133, 52, 18, 3, 64, 65, 128, 117, 25, 123, 118, 142, 55, 79, 88, 137, 132, 147, 141, 104, 66, 57, 107, 60, 24, 80, 68, 53, 39, 63, 143, 43, 49, 113, 72, 67, 84, 134, 139, 33, 82, 54, 148, 11, 19, 26, 85, 34, 149, 61, 59, 109, 76, 144, 86, 50, 124, 116, 6, 8, 56, 114, 119, 122, 42, 127, 135, 13, 47, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 70, 40, 99, 4, 36, 146, 12, 75, 32, 145, 102, 94, 125, 81, 1, 115, 27, 92, 46, 130, 22, 90, 97, 108, 31, 44, 16, 14, 10, 20, 73, 58, 140, 126, 35, 83, 9, 71, 112, 23, 37, 103, 110, 101, 98, 17, 136, 87, 15, 21, 69, 93, 74, 96, 121, 41, 138, 30, 7]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[45, 28, 131, 111, 29, 120, 106, 38, 100, 95, 77, 51, 146, 12, 75, 32, 145, 102, 36, 4, 94, 125, 81, 1, 115, 49, 113, 143, 63, 39, 53, 43, 72, 68, 80, 24, 60, 124, 50, 86, 144, 139, 134, 56, 8, 6, 116, 54, 82, 148, 11, 19, 26, 85, 34, 149, 61, 59, 109, 76, 108, 31, 44, 90, 97, 22, 10, 16, 14, 126, 35, 37, 103, 110, 101, 98, 17, 136, 87, 15, 21, 69, 93, 23, 105, 133, 52, 18, 3, 64, 65, 128, 117, 25, 123, 118, 142, 55, 79, 88, 41, 121, 30, 138, 74, 96, 91, 129, 0, 62, 5, 48, 89, 78, 83, 9, 71, 20, 73, 58, 140, 112, 46, 130, 92, 27, 104, 141, 147, 137, 132, 7, 66, 57, 107, 67, 84, 33, 114, 119, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[45, 28, 131, 111, 29, 120, 106, 38, 100, 95, 77, 51, 146, 12, 75, 32, 145, 102, 36, 4, 94, 125, 81, 1, 115, 49, 113, 143, 63, 39, 53, 43, 72, 68, 80, 24, 60, 124, 50, 86, 144, 139, 134, 56, 8, 6, 116, 54, 82, 148, 11, 19, 26, 85, 34, 149, 61, 59, 109, 76, 108, 31, 44, 90, 97, 22, 10, 16, 14, 126, 35, 37, 103, 110, 101, 98, 17, 136, 87, 15, 21, 69, 93, 23, 105, 133, 52, 18, 3, 64, 65, 128, 117, 25, 123, 118, 142, 55, 79, 88, 41, 121, 30, 138, 74, 96, 91, 129, 0, 62, 5, 48, 89, 78, 83, 9, 71, 20, 73, 58, 140, 112, 46, 130, 92, 27, 104, 141, 147, 137, 132, 7, 66, 57, 107, 67, 84, 33, 114, 119, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[45, 28, 131, 111, 29, 120, 106, 38, 100, 95, 77, 51, 146, 12, 75, 32, 145, 102, 36, 4, 94, 125, 81, 1, 115, 49, 113, 143, 63, 39, 53, 43, 72, 68, 80, 24, 60, 124, 50, 86, 144, 139, 134, 56, 8, 6, 116, 54, 82, 148, 11, 19, 26, 85, 34, 149, 61, 59, 109, 76, 108, 31, 44, 90, 97, 22, 10, 16, 14, 126, 35, 37, 103, 110, 101, 98, 17, 136, 87, 15, 21, 69, 93, 23, 105, 133, 52, 18, 3, 64, 65, 128, 117, 25, 123, 118, 142, 55, 79, 88, 41, 121, 30, 138, 74, 96, 91, 129, 0, 62, 5, 48, 89, 78, 83, 9, 71, 20, 73, 58, 140, 112, 46, 130, 92, 27, 104, 141, 147, 137, 132, 7, 66, 57, 107, 67, 84, 33, 114, 119, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[85, 34, 149, 61, 59, 76, 109, 22, 90, 97, 108, 31, 44, 16, 14, 10, 20, 73, 58, 140, 126, 71, 112, 46, 130, 92, 27, 104, 141, 147, 137, 132, 7, 91, 129, 0, 62, 5, 48, 89, 18, 3, 64, 65, 128, 117, 25, 123, 118, 142, 55, 79, 88, 41, 121, 30, 138, 74, 96, 52, 133, 78, 105, 17, 136, 87, 15, 21, 69, 93, 23, 37, 103, 110, 101, 98, 35, 83, 9, 66, 57, 107, 60, 124, 50, 86, 144, 139, 134, 8, 6, 116, 54, 82, 148, 11, 56, 33, 114, 119, 122, 42, 127, 40, 70, 99, 47, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 4, 36, 146, 12, 75, 32, 145, 102, 94, 125, 81, 1, 113, 143, 63, 39, 53, 43, 49, 115, 72, 67, 84, 68, 80, 24, 19, 26, 85]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[120, 29, 106, 38, 100, 95, 77, 51, 4, 36, 146, 81, 125, 94, 75, 32, 145, 102, 12, 43, 49, 115, 39, 63, 143, 113, 72, 67, 84, 134, 139, 124, 50, 86, 144, 6, 116, 54, 82, 148, 119, 114, 122, 42, 2, 45, 28, 131, 111, 135, 13, 47, 99, 70, 40, 127, 33, 56, 8, 19, 149, 11, 85, 26, 34, 61, 59, 109, 76, 44, 90, 97, 22, 10, 16, 14, 126, 35, 37, 103, 110, 101, 98, 17, 136, 93, 21, 15, 87, 52, 133, 78, 105, 89, 48, 5, 62, 0, 129, 91, 138, 74, 18, 3, 64, 65, 128, 123, 25, 117, 69, 23, 9, 83, 71, 20, 73, 58, 140, 112, 46, 108, 31, 130, 92, 27, 104, 141, 147, 66, 57, 107, 60, 24, 80, 68, 53, 1, 132, 121, 30, 79, 88, 41, 7, 142, 55, 118, 96, 137, 120]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[92, 27, 104, 141, 147, 66, 107, 57, 24, 80, 60, 124, 50, 86, 144, 6, 116, 8, 56, 11, 19, 149, 34, 85, 26, 119, 114, 122, 42, 2, 45, 28, 131, 111, 106, 29, 120, 100, 38, 146, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 51, 77, 95, 47, 99, 70, 40, 13, 135, 127, 33, 82, 54, 148, 76, 109, 59, 61, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 58, 140, 126, 35, 37, 103, 110, 101, 98, 23, 78, 105, 133, 52, 15, 87, 136, 93, 21, 69, 65, 128, 123, 25, 117, 64, 3, 118, 142, 55, 79, 30, 88, 41, 121, 138, 74, 96, 18, 89, 48, 5, 62, 0, 129, 91, 7, 130, 46, 112, 71, 9, 83, 17, 132, 137, 143, 63, 39, 53, 1, 113, 43, 49, 115, 84, 67, 72, 68, 134, 139, 92]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[13, 135, 127, 42, 122, 45, 2, 70, 40, 99, 47, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 33, 82, 54, 148, 119, 114, 6, 116, 8, 56, 11, 19, 149, 34, 85, 26, 144, 86, 50, 124, 60, 24, 80, 68, 53, 39, 63, 143, 43, 49, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 84, 67, 72, 113, 1, 107, 66, 104, 141, 147, 7, 91, 129, 0, 62, 5, 48, 89, 78, 105, 17, 136, 93, 21, 15, 87, 52, 133, 69, 65, 128, 123, 25, 117, 64, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 96, 74, 18, 112, 71, 20, 73, 140, 58, 126, 35, 37, 103, 110, 101, 98, 23, 9, 83, 10, 14, 16, 108, 46, 97, 22, 90, 31, 44, 109, 76, 61, 59, 130, 92, 27, 57, 139, 134, 13]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[21, 15, 87, 136, 78, 105, 17, 9, 83, 71, 20, 73, 140, 58, 126, 35, 37, 23, 18, 74, 96, 121, 30, 79, 41, 88, 137, 132, 147, 66, 92, 27, 57, 107, 60, 24, 80, 139, 134, 84, 67, 72, 113, 43, 143, 63, 39, 53, 1, 115, 49, 68, 50, 124, 86, 144, 6, 116, 8, 56, 19, 149, 11, 54, 82, 148, 119, 114, 122, 42, 2, 45, 28, 131, 111, 106, 29, 120, 100, 38, 146, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 51, 77, 95, 47, 99, 70, 40, 13, 135, 127, 33, 26, 85, 34, 61, 109, 76, 59, 44, 108, 46, 112, 89, 48, 5, 62, 0, 129, 141, 104, 130, 22, 97, 90, 31, 10, 14, 16, 98, 103, 110, 101, 93, 69, 65, 128, 123, 25, 117, 64, 3, 118, 142, 55, 138, 7, 91, 133, 52, 21]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[102, 145, 12, 75, 32, 36, 4, 77, 51, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 42, 122, 127, 135, 13, 47, 99, 70, 40, 2, 33, 82, 54, 148, 119, 114, 6, 116, 8, 56, 86, 144, 124, 50, 60, 24, 80, 139, 134, 84, 67, 72, 113, 43, 49, 115, 1, 143, 63, 39, 53, 137, 132, 121, 41, 88, 30, 79, 7, 91, 74, 18, 89, 48, 5, 62, 0, 129, 141, 104, 147, 66, 107, 57, 92, 27, 130, 46, 112, 9, 83, 71, 20, 73, 140, 58, 126, 35, 37, 103, 110, 101, 98, 23, 78, 105, 17, 136, 93, 21, 15, 87, 52, 133, 69, 65, 128, 123, 25, 117, 64, 3, 118, 142, 55, 138, 96, 90, 108, 31, 10, 14, 16, 44, 97, 22, 76, 109, 59, 61, 19, 149, 11, 85, 26, 34, 68, 81, 125, 94, 146, 102]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[102, 145, 12, 75, 32, 36, 4, 77, 51, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 42, 122, 127, 135, 13, 47, 99, 70, 40, 2, 33, 82, 54, 148, 119, 114, 6, 116, 8, 56, 86, 144, 124, 50, 60, 24, 80, 139, 134, 84, 67, 72, 113, 43, 49, 115, 1, 143, 63, 39, 53, 137, 132, 121, 41, 88, 30, 79, 7, 91, 74, 18, 89, 48, 5, 62, 0, 129, 141, 104, 147, 66, 107, 57, 92, 27, 130, 46, 112, 9, 83, 71, 20, 73, 140, 58, 126, 35, 37, 103, 110, 101, 98, 23, 78, 105, 17, 136, 93, 21, 15, 87, 52, 133, 69, 65, 128, 123, 25, 117, 64, 3, 118, 142, 55, 138, 96, 90, 108, 31, 10, 14, 16, 44, 97, 22, 76, 109, 59, 61, 19, 149, 11, 85, 26, 34, 68, 81, 125, 94, 146, 102]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[103, 110, 101, 98, 23, 37, 35, 9, 83, 17, 136, 78, 105, 133, 52, 15, 87, 21, 69, 65, 64, 3, 118, 142, 55, 138, 74, 18, 89, 48, 5, 62, 0, 129, 141, 104, 147, 66, 107, 57, 92, 27, 130, 46, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 108, 44, 22, 97, 76, 109, 59, 61, 19, 149, 34, 85, 26, 11, 54, 82, 148, 119, 114, 122, 42, 2, 45, 28, 131, 111, 106, 29, 120, 100, 38, 146, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 51, 77, 95, 47, 99, 70, 40, 13, 135, 127, 33, 56, 6, 116, 8, 144, 86, 50, 124, 60, 24, 80, 139, 134, 84, 67, 72, 113, 43, 143, 63, 39, 53, 1, 115, 49, 68, 137, 132, 121, 41, 88, 30, 79, 7, 91, 96, 117, 25, 123, 128, 93, 103]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[103, 110, 101, 98, 23, 37, 35, 9, 83, 17, 136, 78, 105, 133, 52, 15, 87, 21, 69, 65, 64, 3, 118, 142, 55, 138, 74, 18, 89, 48, 5, 62, 0, 129, 141, 104, 147, 66, 107, 57, 92, 27, 130, 46, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 108, 44, 22, 97, 76, 109, 59, 61, 19, 149, 34, 85, 26, 11, 54, 82, 148, 119, 114, 122, 42, 2, 45, 28, 131, 111, 106, 29, 120, 100, 38, 146, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 51, 77, 95, 47, 99, 70, 40, 13, 135, 127, 33, 56, 6, 116, 8, 144, 86, 50, 124, 60, 24, 80, 139, 134, 84, 67, 72, 113, 43, 143, 63, 39, 53, 1, 115, 49, 68, 137, 132, 121, 41, 88, 30, 79, 7, 91, 96, 117, 25, 123, 128, 93, 103]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[104, 141, 147, 66, 107, 57, 92, 27, 130, 46, 112, 71, 20, 73, 140, 58, 126, 35, 37, 103, 110, 101, 98, 23, 78, 105, 17, 136, 133, 52, 15, 87, 21, 69, 65, 64, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 129, 0, 62, 5, 48, 89, 18, 74, 96, 117, 25, 123, 128, 93, 9, 83, 10, 14, 16, 44, 22, 97, 90, 108, 31, 76, 109, 59, 61, 19, 149, 34, 85, 26, 11, 54, 82, 148, 119, 114, 122, 42, 2, 45, 28, 131, 111, 106, 29, 120, 100, 38, 146, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 51, 77, 95, 47, 99, 70, 40, 13, 135, 127, 33, 8, 56, 6, 116, 139, 134, 84, 67, 24, 80, 60, 124, 50, 86, 144, 68, 72, 113, 43, 49, 115, 1, 143, 63, 39, 53, 137, 132, 104]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[104, 141, 147, 66, 107, 57, 92, 27, 130, 46, 112, 71, 20, 73, 140, 58, 126, 35, 37, 103, 110, 101, 98, 23, 78, 105, 17, 136, 133, 52, 15, 87, 21, 69, 65, 64, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 129, 0, 62, 5, 48, 89, 18, 74, 96, 117, 25, 123, 128, 93, 9, 83, 10, 14, 16, 44, 22, 97, 90, 108, 31, 76, 109, 59, 61, 19, 149, 34, 85, 26, 11, 54, 82, 148, 119, 114, 122, 42, 2, 45, 28, 131, 111, 106, 29, 120, 100, 38, 146, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 51, 77, 95, 47, 99, 70, 40, 13, 135, 127, 33, 8, 56, 6, 116, 139, 134, 84, 67, 24, 80, 60, 124, 50, 86, 144, 68, 72, 113, 43, 49, 115, 1, 143, 63, 39, 53, 137, 132, 104]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[1, 53, 39, 63, 143, 43, 72, 67, 84, 134, 139, 68, 80, 24, 60, 57, 107, 66, 104, 141, 147, 92, 27, 130, 46, 112, 71, 20, 73, 140, 58, 126, 35, 83, 9, 105, 133, 52, 15, 87, 136, 78, 17, 37, 23, 110, 101, 98, 103, 21, 69, 93, 96, 118, 142, 55, 138, 3, 64, 65, 128, 123, 25, 117, 18, 74, 89, 48, 5, 62, 0, 129, 7, 91, 41, 121, 30, 79, 88, 137, 132, 113, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 13, 47, 99, 70, 40, 127, 33, 82, 54, 148, 11, 19, 149, 61, 59, 109, 76, 97, 90, 108, 44, 22, 10, 14, 16, 31, 50, 124, 86, 144, 6, 8, 116, 56, 26, 34, 85, 114, 119, 122, 42, 2, 135, 95, 77, 51, 1]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[89, 48, 5, 62, 0, 129, 7, 91, 74, 18, 105, 133, 52, 15, 87, 21, 69, 93, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 108, 97, 22, 44, 109, 76, 61, 59, 149, 85, 34, 26, 11, 19, 56, 6, 8, 116, 82, 54, 148, 119, 114, 122, 42, 2, 28, 45, 13, 47, 99, 70, 40, 135, 127, 33, 134, 139, 144, 86, 50, 124, 24, 80, 68, 39, 53, 63, 143, 43, 72, 49, 115, 1, 113, 67, 84, 38, 100, 106, 29, 120, 111, 131, 51, 77, 95, 4, 36, 146, 81, 125, 94, 75, 32, 12, 145, 102, 60, 57, 107, 66, 104, 141, 147, 92, 27, 130, 46, 112, 17, 136, 78, 3, 64, 65, 128, 123, 25, 117, 118, 96, 142, 55, 138, 30, 79, 88, 41, 121, 137, 132, 89]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[36, 4, 77, 51, 95, 47, 99, 70, 40, 135, 2, 45, 13, 131, 28, 33, 82, 54, 148, 11, 19, 56, 6, 8, 116, 139, 134, 84, 67, 72, 49, 115, 1, 53, 39, 63, 143, 43, 113, 68, 80, 24, 60, 50, 124, 86, 144, 57, 107, 66, 104, 141, 147, 92, 27, 130, 46, 112, 9, 71, 20, 73, 140, 58, 126, 35, 83, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 55, 138, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 15, 87, 21, 93, 133, 52, 18, 74, 7, 41, 121, 79, 30, 88, 137, 132, 97, 90, 108, 31, 44, 22, 10, 14, 16, 59, 61, 109, 76, 149, 85, 26, 34, 119, 114, 122, 42, 127, 29, 120, 111, 106, 100, 38, 146, 81, 125, 94, 75, 32, 12, 145, 102, 36]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[112, 71, 20, 73, 140, 58, 126, 35, 83, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 89, 48, 5, 62, 0, 129, 7, 91, 55, 138, 142, 96, 74, 18, 133, 52, 21, 15, 87, 93, 69, 64, 65, 128, 123, 25, 117, 3, 118, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 22, 97, 90, 108, 44, 16, 14, 10, 31, 76, 109, 59, 61, 19, 149, 85, 26, 34, 11, 54, 82, 33, 148, 119, 114, 122, 42, 2, 28, 45, 13, 47, 99, 70, 40, 135, 127, 29, 120, 111, 131, 51, 77, 95, 4, 36, 146, 81, 125, 94, 12, 75, 32, 145, 102, 38, 100, 106, 84, 67, 72, 49, 115, 1, 113, 43, 143, 63, 39, 53, 68, 80, 24, 60, 50, 124, 86, 144, 6, 8, 116, 56, 139, 134, 46, 9, 112]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[112, 71, 20, 73, 140, 58, 126, 35, 83, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 89, 48, 5, 62, 0, 129, 7, 91, 55, 138, 142, 96, 74, 18, 133, 52, 21, 15, 87, 93, 69, 64, 65, 128, 123, 25, 117, 3, 118, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 22, 97, 90, 108, 44, 16, 14, 10, 31, 76, 109, 59, 61, 19, 149, 85, 26, 34, 11, 54, 82, 33, 148, 119, 114, 122, 42, 2, 28, 45, 13, 47, 99, 70, 40, 135, 127, 29, 120, 111, 131, 51, 77, 95, 4, 36, 146, 81, 125, 94, 12, 75, 32, 145, 102, 38, 100, 106, 84, 67, 72, 49, 115, 1, 113, 43, 143, 63, 39, 53, 68, 80, 24, 60, 50, 124, 86, 144, 6, 8, 116, 56, 139, 134, 46, 9, 112]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[135, 2, 28, 45, 42, 122, 119, 114, 26, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 83, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 89, 9, 71, 112, 46, 130, 27, 92, 57, 107, 66, 104, 147, 141, 7, 91, 55, 138, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 15, 87, 21, 93, 133, 52, 18, 74, 5, 48, 62, 0, 129, 30, 79, 121, 41, 88, 137, 132, 39, 53, 63, 143, 43, 72, 49, 115, 1, 113, 68, 80, 24, 60, 50, 124, 86, 144, 6, 8, 116, 56, 19, 85, 11, 54, 82, 33, 148, 127, 131, 111, 106, 100, 29, 120, 38, 95, 77, 51, 4, 36, 146, 12, 75, 32, 145, 102, 94, 125, 81, 84, 67, 139, 134, 47, 99, 70, 40, 13, 135]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[135, 2, 28, 45, 42, 122, 119, 114, 26, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 83, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 89, 9, 71, 112, 46, 130, 27, 92, 57, 107, 66, 104, 147, 141, 7, 91, 55, 138, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 15, 87, 21, 93, 133, 52, 18, 74, 5, 48, 62, 0, 129, 30, 79, 121, 41, 88, 137, 132, 39, 53, 63, 143, 43, 72, 49, 115, 1, 113, 68, 80, 24, 60, 50, 124, 86, 144, 6, 8, 116, 56, 19, 85, 11, 54, 82, 33, 148, 127, 131, 111, 106, 100, 29, 120, 38, 95, 77, 51, 4, 36, 146, 12, 75, 32, 145, 102, 94, 125, 81, 84, 67, 139, 134, 47, 99, 70, 40, 13, 135]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[111, 106, 100, 29, 120, 38, 95, 77, 51, 4, 36, 146, 12, 75, 32, 145, 102, 94, 125, 81, 1, 113, 43, 143, 63, 39, 53, 68, 80, 24, 60, 50, 124, 86, 144, 6, 8, 116, 56, 11, 19, 149, 61, 59, 109, 76, 22, 97, 90, 108, 44, 16, 14, 10, 31, 112, 71, 73, 20, 140, 58, 126, 35, 83, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 89, 48, 5, 62, 0, 129, 141, 147, 104, 66, 107, 57, 27, 92, 130, 46, 9, 74, 18, 133, 52, 15, 87, 93, 21, 69, 64, 65, 128, 123, 25, 117, 3, 118, 96, 142, 55, 138, 121, 41, 88, 30, 79, 7, 91, 137, 132, 72, 49, 115, 84, 67, 139, 134, 33, 82, 54, 148, 119, 114, 26, 85, 34, 42, 2, 45, 13, 47, 99, 70, 40, 135, 127, 122, 131, 28, 111]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[111, 106, 100, 29, 120, 38, 95, 77, 51, 4, 36, 146, 12, 75, 32, 145, 102, 94, 125, 81, 1, 113, 43, 143, 63, 39, 53, 68, 80, 24, 60, 50, 124, 86, 144, 6, 8, 116, 56, 11, 19, 149, 61, 59, 109, 76, 22, 97, 90, 108, 44, 16, 14, 10, 31, 112, 71, 73, 20, 140, 58, 126, 35, 83, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 89, 48, 5, 62, 0, 129, 141, 147, 104, 66, 107, 57, 27, 92, 130, 46, 9, 74, 18, 133, 52, 15, 87, 93, 21, 69, 64, 65, 128, 123, 25, 117, 3, 118, 96, 142, 55, 138, 121, 41, 88, 30, 79, 7, 91, 137, 132, 72, 49, 115, 84, 67, 139, 134, 33, 82, 54, 148, 119, 114, 26, 85, 34, 42, 2, 45, 13, 47, 99, 70, 40, 135, 127, 122, 131, 28, 111]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[60, 50, 124, 86, 144, 6, 8, 116, 56, 26, 34, 85, 11, 19, 149, 61, 59, 109, 76, 22, 97, 90, 108, 44, 16, 14, 10, 31, 112, 71, 73, 20, 140, 58, 126, 35, 83, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 89, 48, 5, 62, 0, 129, 141, 147, 104, 66, 107, 57, 27, 92, 130, 46, 9, 74, 18, 133, 52, 21, 15, 87, 93, 69, 64, 65, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 121, 41, 88, 30, 79, 7, 91, 137, 132, 39, 53, 63, 143, 43, 72, 49, 115, 1, 113, 68, 80, 24, 139, 134, 33, 82, 54, 148, 119, 114, 122, 42, 2, 28, 45, 13, 47, 99, 70, 40, 135, 127, 131, 111, 29, 120, 106, 100, 38, 95, 77, 51, 4, 36, 146, 81, 94, 125, 12, 75, 32, 145, 102, 84, 67, 60]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 119, 114, 33, 82, 54, 148, 11, 19, 149, 85, 26, 34, 61, 59, 109, 76, 22, 97, 90, 108, 31, 10, 14, 16, 44, 46, 112, 71, 20, 73, 140, 58, 126, 35, 37, 23, 103, 110, 101, 98, 17, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 121, 41, 88, 30, 79, 55, 138, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 52, 133, 18, 74, 9, 83, 130, 92, 27, 57, 107, 66, 104, 141, 147, 132, 137, 68, 72, 67, 84, 38, 100, 106, 29, 120, 111, 77, 51, 95, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 1, 143, 63, 39, 53, 43, 113, 49, 115, 80, 24, 60, 124, 50, 86, 144, 8, 116, 6, 56, 139, 134, 131]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[92, 27, 104, 141, 147, 66, 107, 60, 50, 124, 86, 144, 8, 116, 56, 6, 19, 149, 85, 26, 34, 11, 54, 82, 33, 114, 119, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 43, 143, 63, 39, 53, 68, 80, 24, 139, 134, 84, 67, 72, 49, 113, 1, 137, 132, 88, 30, 79, 121, 41, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 74, 18, 133, 52, 17, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 46, 112, 14, 16, 10, 31, 90, 108, 44, 97, 22, 76, 109, 59, 61, 148, 57, 130, 92]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 121, 41, 138, 74, 18, 133, 52, 17, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 46, 112, 14, 16, 10, 31, 44, 97, 22, 90, 108, 130, 92, 27, 104, 141, 147, 66, 57, 107, 60, 24, 80, 68, 72, 67, 84, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 85, 26, 34, 149, 61, 59, 76, 109, 8, 6, 56, 86, 144, 124, 50, 19, 116, 139, 134, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 43, 49, 113, 143, 63, 39, 53, 1, 137, 132, 88, 30, 79, 55]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 121, 41, 138, 74, 18, 133, 52, 17, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 46, 112, 14, 16, 10, 31, 44, 97, 22, 90, 108, 130, 92, 27, 104, 141, 147, 66, 57, 107, 60, 24, 80, 68, 72, 67, 84, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 85, 26, 34, 149, 61, 59, 76, 109, 8, 6, 56, 86, 144, 124, 50, 19, 116, 139, 134, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 43, 49, 113, 143, 63, 39, 53, 1, 137, 132, 88, 30, 79, 55]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[30, 79, 121, 41, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 74, 18, 133, 52, 17, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 46, 112, 14, 16, 10, 31, 44, 97, 22, 90, 108, 130, 92, 27, 104, 141, 147, 66, 57, 107, 60, 50, 124, 86, 144, 8, 6, 56, 11, 85, 26, 34, 149, 61, 59, 76, 109, 19, 116, 139, 134, 33, 82, 54, 148, 114, 119, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115, 43, 49, 113, 143, 63, 39, 53, 1, 72, 67, 84, 80, 24, 68, 137, 132, 88, 30]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[30, 79, 121, 41, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 74, 18, 133, 52, 17, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 46, 112, 14, 16, 10, 31, 44, 97, 22, 90, 108, 130, 92, 27, 104, 141, 147, 66, 57, 107, 60, 50, 124, 86, 144, 8, 6, 56, 11, 85, 26, 34, 149, 61, 59, 76, 109, 19, 116, 139, 134, 33, 82, 54, 148, 114, 119, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115, 43, 49, 113, 143, 63, 39, 53, 1, 72, 67, 84, 80, 24, 68, 137, 132, 88, 30]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[30, 79, 121, 41, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 74, 18, 133, 52, 17, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 46, 112, 14, 16, 10, 31, 44, 97, 22, 90, 108, 130, 92, 27, 104, 141, 147, 66, 57, 107, 60, 50, 124, 86, 144, 8, 6, 56, 11, 85, 26, 34, 149, 61, 59, 76, 109, 19, 116, 139, 134, 33, 82, 54, 148, 114, 119, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115, 43, 49, 113, 143, 63, 39, 53, 1, 72, 67, 84, 80, 24, 68, 137, 132, 88, 30]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[72, 113, 43, 49, 115, 84, 67, 68, 80, 24, 60, 50, 124, 86, 144, 8, 6, 56, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 116, 139, 134, 33, 82, 54, 148, 114, 119, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 1, 143, 63, 39, 53, 137, 132, 88, 30, 79, 121, 41, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 74, 18, 133, 52, 17, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 46, 112, 14, 16, 10, 31, 44, 97, 22, 90, 108, 130, 92, 27, 104, 141, 147, 66, 57, 107, 72]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[72, 113, 43, 49, 115, 84, 67, 68, 80, 24, 60, 50, 124, 86, 144, 8, 6, 56, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 116, 139, 134, 33, 82, 54, 148, 114, 119, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 1, 143, 63, 39, 53, 137, 132, 88, 30, 79, 121, 41, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 74, 18, 133, 52, 17, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 46, 112, 14, 16, 10, 31, 44, 97, 22, 90, 108, 130, 92, 27, 104, 141, 147, 66, 57, 107, 72]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[72, 113, 43, 49, 115, 84, 67, 68, 80, 24, 60, 50, 124, 86, 144, 8, 6, 56, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 116, 139, 134, 33, 82, 54, 148, 114, 119, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 1, 143, 63, 39, 53, 137, 132, 88, 30, 79, 121, 41, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 74, 18, 133, 52, 17, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 9, 83, 46, 112, 14, 16, 10, 31, 44, 97, 22, 90, 108, 130, 92, 27, 104, 141, 147, 66, 57, 107, 72]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[74, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 136, 78, 105, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 58, 140, 126, 31, 90, 108, 44, 97, 22, 76, 109, 59, 61, 19, 149, 34, 85, 26, 11, 54, 82, 33, 148, 119, 114, 122, 42, 127, 135, 13, 47, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 70, 99, 40, 84, 67, 72, 113, 143, 63, 39, 53, 1, 115, 49, 43, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 146, 134, 139, 124, 50, 86, 144, 8, 6, 56, 116, 68, 80, 24, 60, 57, 107, 66, 104, 141, 147, 88, 30, 79, 121, 41, 138, 55, 142, 91, 129, 0, 62, 5, 48, 89, 18, 133, 52, 112, 46, 130, 92, 27, 7, 132, 137, 10, 14, 16, 74]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[83, 9, 71, 20, 73, 58, 140, 126, 35, 37, 103, 110, 101, 98, 17, 136, 93, 21, 15, 87, 52, 133, 78, 105, 89, 48, 5, 62, 0, 129, 91, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 23, 18, 74, 7, 121, 41, 88, 30, 79, 137, 132, 147, 141, 104, 66, 57, 107, 60, 24, 80, 68, 72, 67, 84, 134, 139, 124, 50, 86, 144, 8, 6, 116, 56, 19, 149, 61, 59, 76, 109, 85, 34, 26, 11, 54, 82, 33, 148, 119, 114, 122, 42, 127, 135, 13, 47, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 70, 40, 99, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 27, 92, 130, 22, 97, 90, 108, 31, 44, 16, 14, 10, 112, 46, 83]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[63, 39, 53, 113, 143, 43, 49, 72, 67, 84, 134, 139, 144, 86, 50, 124, 60, 24, 80, 68, 107, 57, 27, 92, 130, 22, 90, 97, 108, 31, 44, 16, 14, 10, 20, 73, 58, 140, 126, 35, 37, 103, 110, 101, 98, 17, 136, 93, 21, 15, 87, 52, 133, 18, 89, 48, 5, 62, 0, 129, 91, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 23, 105, 78, 83, 9, 71, 112, 46, 109, 76, 59, 61, 85, 26, 34, 149, 19, 56, 8, 6, 116, 82, 54, 148, 11, 33, 114, 119, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 29, 120, 106, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 1, 115, 66, 104, 141, 147, 88, 30, 79, 121, 41, 74, 7, 132, 137, 63]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[63, 39, 53, 113, 143, 43, 49, 72, 67, 84, 134, 139, 144, 86, 50, 124, 60, 24, 80, 68, 107, 57, 27, 92, 130, 22, 90, 97, 108, 31, 44, 16, 14, 10, 20, 73, 58, 140, 126, 35, 37, 103, 110, 101, 98, 17, 136, 93, 21, 15, 87, 52, 133, 18, 89, 48, 5, 62, 0, 129, 91, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 23, 105, 78, 83, 9, 71, 112, 46, 109, 76, 59, 61, 85, 26, 34, 149, 19, 56, 8, 6, 116, 82, 54, 148, 11, 33, 114, 119, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 29, 120, 106, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 1, 115, 66, 104, 141, 147, 88, 30, 79, 121, 41, 74, 7, 132, 137, 63]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[44, 97, 90, 108, 31, 46, 130, 92, 27, 104, 141, 147, 88, 30, 79, 121, 41, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 52, 133, 78, 105, 17, 136, 93, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 58, 140, 126, 14, 16, 10, 112, 62, 5, 48, 89, 18, 74, 7, 91, 129, 0, 66, 57, 107, 60, 24, 80, 68, 39, 53, 63, 143, 43, 113, 49, 72, 67, 84, 134, 139, 124, 50, 86, 144, 8, 6, 116, 56, 19, 149, 61, 59, 76, 109, 85, 34, 26, 11, 54, 82, 33, 148, 119, 114, 122, 42, 127, 40, 70, 99, 47, 13, 135, 2, 45, 28, 131, 111, 29, 120, 106, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115, 1, 137, 132, 22, 44]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[44, 97, 90, 108, 31, 46, 130, 92, 27, 104, 141, 147, 88, 30, 79, 121, 41, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 52, 133, 78, 105, 17, 136, 93, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 58, 140, 126, 14, 16, 10, 112, 62, 5, 48, 89, 18, 74, 7, 91, 129, 0, 66, 57, 107, 60, 24, 80, 68, 39, 53, 63, 143, 43, 113, 49, 72, 67, 84, 134, 139, 124, 50, 86, 144, 8, 6, 116, 56, 19, 149, 61, 59, 76, 109, 85, 34, 26, 11, 54, 82, 33, 148, 119, 114, 122, 42, 127, 40, 70, 99, 47, 13, 135, 2, 45, 28, 131, 111, 29, 120, 106, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115, 1, 137, 132, 22, 44]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[20, 73, 58, 140, 126, 35, 37, 103, 110, 101, 98, 17, 23, 105, 52, 133, 78, 15, 87, 21, 69, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 147, 141, 104, 66, 57, 107, 60, 24, 80, 68, 72, 113, 143, 63, 39, 53, 1, 115, 49, 43, 81, 125, 94, 102, 145, 32, 12, 75, 4, 36, 146, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 42, 127, 135, 2, 70, 40, 99, 47, 13, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 19, 56, 8, 6, 116, 139, 134, 84, 67, 124, 50, 86, 144, 109, 76, 59, 22, 90, 97, 108, 31, 44, 16, 14, 10, 112, 46, 130, 92, 27, 129, 0, 62, 5, 48, 89, 91, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 136, 93, 83, 9, 71, 20]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[20, 73, 58, 140, 126, 35, 37, 103, 110, 101, 98, 17, 23, 105, 52, 133, 78, 15, 87, 21, 69, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 147, 141, 104, 66, 57, 107, 60, 24, 80, 68, 72, 113, 143, 63, 39, 53, 1, 115, 49, 43, 81, 125, 94, 102, 145, 32, 12, 75, 4, 36, 146, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 42, 127, 135, 2, 70, 40, 99, 47, 13, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 19, 56, 8, 6, 116, 139, 134, 84, 67, 124, 50, 86, 144, 109, 76, 59, 22, 90, 97, 108, 31, 44, 16, 14, 10, 112, 46, 130, 92, 27, 129, 0, 62, 5, 48, 89, 91, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 136, 93, 83, 9, 71, 20]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[20, 73, 58, 140, 126, 35, 37, 103, 110, 101, 98, 17, 23, 105, 52, 133, 78, 15, 87, 21, 69, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 147, 141, 104, 66, 57, 107, 60, 24, 80, 68, 72, 113, 143, 63, 39, 53, 1, 115, 49, 43, 81, 125, 94, 102, 145, 32, 12, 75, 4, 36, 146, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 42, 127, 135, 2, 70, 40, 99, 47, 13, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 19, 56, 8, 6, 116, 139, 134, 84, 67, 124, 50, 86, 144, 109, 76, 59, 22, 90, 97, 108, 31, 44, 16, 14, 10, 112, 46, 130, 92, 27, 129, 0, 62, 5, 48, 89, 91, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 136, 93, 83, 9, 71, 20]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[20, 73, 58, 140, 126, 35, 37, 103, 110, 101, 98, 17, 23, 105, 52, 133, 78, 15, 87, 21, 69, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 147, 141, 104, 66, 57, 107, 60, 24, 80, 68, 72, 113, 143, 63, 39, 53, 1, 115, 49, 43, 81, 125, 94, 102, 145, 32, 12, 75, 4, 36, 146, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 42, 127, 135, 2, 70, 40, 99, 47, 13, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 19, 56, 8, 6, 116, 139, 134, 84, 67, 124, 50, 86, 144, 109, 76, 59, 22, 90, 97, 108, 31, 44, 16, 14, 10, 112, 46, 130, 92, 27, 129, 0, 62, 5, 48, 89, 91, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 136, 93, 83, 9, 71, 20]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[120, 29, 106, 38, 100, 95, 51, 77, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 1, 143, 63, 39, 53, 137, 132, 88, 30, 79, 121, 41, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 18, 74, 7, 91, 129, 0, 62, 5, 48, 89, 105, 78, 136, 93, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 9, 83, 17, 112, 46, 22, 97, 90, 108, 31, 44, 16, 14, 10, 130, 92, 27, 66, 141, 104, 147, 107, 57, 50, 124, 60, 24, 80, 68, 72, 113, 49, 43, 115, 84, 67, 139, 134, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 13, 99, 70, 40, 47, 2, 45, 28, 131, 111, 116, 6, 56, 8, 144, 86, 85, 26, 34, 149, 19, 61, 59, 109, 76, 11, 120]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[92, 27, 129, 0, 62, 48, 5, 112, 71, 20, 73, 58, 140, 126, 35, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 52, 133, 87, 15, 93, 21, 69, 64, 65, 128, 25, 123, 117, 3, 118, 142, 55, 138, 121, 41, 88, 30, 79, 7, 91, 74, 96, 18, 89, 9, 83, 10, 14, 16, 44, 22, 97, 108, 46, 90, 31, 130, 107, 66, 104, 141, 147, 60, 124, 50, 86, 144, 8, 6, 116, 56, 19, 149, 85, 26, 34, 61, 59, 109, 76, 57, 80, 24, 139, 134, 84, 67, 72, 113, 43, 49, 115, 146, 4, 36, 77, 51, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 42, 122, 127, 135, 13, 47, 99, 70, 40, 2, 119, 114, 148, 54, 82, 33, 11, 68, 39, 53, 63, 143, 1, 125, 94, 75, 12, 145, 102, 32, 81, 137, 132, 92]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[96, 118, 142, 55, 138, 121, 41, 88, 132, 147, 141, 104, 66, 107, 60, 124, 50, 86, 144, 8, 6, 116, 56, 19, 149, 85, 26, 34, 61, 59, 109, 76, 97, 22, 90, 108, 44, 16, 14, 10, 112, 71, 20, 73, 140, 58, 126, 35, 37, 103, 110, 101, 98, 23, 105, 52, 133, 87, 136, 78, 17, 9, 83, 89, 48, 5, 62, 0, 129, 7, 91, 74, 18, 3, 64, 128, 123, 25, 117, 65, 69, 21, 15, 93, 46, 31, 130, 92, 27, 57, 80, 24, 139, 134, 84, 67, 38, 100, 106, 29, 120, 111, 131, 28, 45, 42, 122, 2, 70, 40, 99, 47, 13, 135, 127, 114, 119, 33, 148, 54, 82, 11, 68, 72, 113, 43, 49, 115, 146, 4, 36, 77, 51, 95, 102, 145, 32, 12, 75, 94, 125, 81, 1, 143, 63, 39, 53, 137, 79, 30, 96]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[19, 149, 85, 26, 34, 61, 59, 109, 76, 97, 90, 108, 44, 22, 31, 46, 112, 71, 20, 73, 140, 58, 126, 35, 37, 23, 105, 52, 133, 18, 74, 96, 118, 142, 55, 138, 121, 41, 88, 30, 79, 7, 91, 129, 0, 62, 48, 5, 89, 9, 83, 17, 136, 78, 15, 87, 21, 69, 64, 3, 65, 128, 25, 123, 117, 93, 103, 110, 101, 98, 16, 14, 10, 130, 27, 92, 57, 80, 24, 60, 124, 50, 86, 144, 6, 116, 8, 56, 11, 54, 82, 33, 148, 119, 114, 122, 42, 2, 45, 13, 135, 127, 99, 70, 40, 47, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 84, 67, 72, 113, 43, 49, 115, 146, 4, 36, 145, 102, 32, 12, 75, 94, 125, 81, 68, 39, 63, 143, 1, 53, 137, 132, 147, 141, 104, 66, 107, 139, 134, 19]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[43, 113, 49, 72, 68, 80, 24, 60, 124, 50, 86, 144, 6, 116, 8, 56, 11, 54, 82, 33, 148, 114, 119, 45, 42, 122, 2, 70, 40, 99, 47, 13, 135, 127, 134, 139, 67, 38, 100, 106, 29, 120, 111, 28, 131, 95, 51, 77, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 1, 143, 63, 39, 53, 137, 132, 88, 41, 121, 30, 79, 55, 142, 118, 96, 18, 74, 7, 91, 129, 0, 62, 48, 5, 89, 9, 83, 112, 71, 20, 73, 140, 58, 126, 35, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 52, 133, 93, 21, 15, 87, 69, 64, 3, 65, 128, 25, 123, 117, 138, 147, 141, 104, 66, 107, 57, 27, 92, 130, 22, 97, 90, 108, 44, 16, 14, 10, 31, 46, 109, 76, 59, 61, 19, 149, 85, 26, 34, 84, 115, 43]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[93, 21, 15, 87, 136, 78, 105, 52, 133, 18, 74, 7, 91, 129, 0, 62, 48, 5, 89, 9, 83, 35, 37, 23, 110, 101, 98, 103, 17, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 46, 90, 108, 44, 22, 97, 109, 76, 59, 61, 19, 149, 85, 26, 34, 11, 54, 82, 33, 148, 114, 119, 45, 42, 2, 135, 13, 47, 99, 70, 40, 127, 122, 28, 131, 111, 106, 29, 120, 100, 95, 51, 77, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 1, 143, 63, 39, 53, 137, 132, 147, 141, 104, 66, 107, 57, 80, 24, 60, 124, 50, 86, 144, 6, 116, 8, 56, 139, 134, 84, 67, 72, 113, 43, 49, 115, 38, 68, 27, 92, 130, 88, 30, 79, 121, 41, 138, 55, 142, 96, 118, 3, 64, 128, 25, 123, 117, 65, 69, 93]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[146, 4, 36, 77, 95, 51, 47, 99, 70, 40, 127, 42, 122, 2, 45, 13, 135, 28, 131, 111, 106, 29, 120, 100, 38, 134, 84, 67, 139, 144, 86, 50, 124, 60, 24, 80, 68, 72, 113, 43, 49, 115, 1, 143, 63, 39, 53, 137, 132, 88, 41, 121, 30, 79, 55, 142, 118, 96, 18, 74, 7, 91, 129, 0, 62, 48, 5, 89, 9, 83, 35, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 52, 133, 93, 21, 15, 87, 69, 64, 3, 65, 128, 25, 123, 117, 138, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 108, 44, 22, 97, 90, 109, 76, 59, 61, 19, 149, 85, 26, 34, 11, 54, 82, 33, 148, 114, 119, 116, 8, 56, 6, 81, 125, 94, 75, 12, 145, 32, 102, 146]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[56, 8, 116, 6, 144, 86, 50, 124, 60, 24, 80, 68, 72, 113, 43, 49, 115, 146, 4, 36, 145, 102, 32, 12, 75, 94, 125, 81, 1, 143, 63, 39, 53, 137, 132, 88, 41, 121, 30, 79, 55, 142, 118, 96, 18, 74, 7, 91, 129, 0, 62, 48, 5, 89, 9, 83, 35, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 52, 133, 93, 21, 15, 87, 69, 64, 3, 65, 128, 123, 25, 117, 138, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 108, 44, 22, 90, 97, 109, 76, 59, 61, 19, 149, 85, 26, 34, 11, 54, 82, 33, 148, 114, 119, 45, 42, 122, 127, 135, 13, 47, 99, 70, 40, 2, 28, 131, 111, 106, 29, 120, 100, 95, 51, 77, 38, 134, 139, 67, 84, 56]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[56, 8, 116, 6, 144, 86, 50, 124, 60, 24, 80, 68, 72, 113, 43, 49, 115, 146, 4, 36, 145, 102, 32, 12, 75, 94, 125, 81, 1, 143, 63, 39, 53, 137, 132, 88, 41, 121, 30, 79, 55, 142, 118, 96, 18, 74, 7, 91, 129, 0, 62, 48, 5, 89, 9, 83, 35, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 52, 133, 93, 21, 15, 87, 69, 64, 3, 65, 128, 123, 25, 117, 138, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 108, 44, 22, 90, 97, 109, 76, 59, 61, 19, 149, 85, 26, 34, 11, 54, 82, 33, 148, 114, 119, 45, 42, 122, 127, 135, 13, 47, 99, 70, 40, 2, 28, 131, 111, 106, 29, 120, 100, 95, 51, 77, 38, 134, 139, 67, 84, 56]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[77, 51, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 42, 122, 2, 70, 40, 99, 47, 13, 135, 127, 114, 119, 33, 148, 82, 54, 116, 8, 56, 6, 144, 86, 50, 124, 60, 24, 80, 68, 72, 113, 43, 49, 115, 1, 143, 63, 39, 53, 137, 132, 88, 41, 121, 30, 79, 55, 142, 118, 96, 18, 74, 7, 91, 129, 0, 62, 48, 5, 89, 9, 83, 35, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 52, 133, 93, 21, 15, 87, 69, 64, 3, 65, 128, 25, 123, 117, 138, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 108, 44, 22, 97, 90, 109, 76, 59, 61, 19, 149, 85, 26, 34, 11, 134, 139, 67, 84, 81, 125, 94, 75, 12, 145, 102, 32, 36, 4, 146, 77]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 129, 91, 74, 5, 48, 62, 83, 35, 126, 20, 73, 140, 58, 71, 112, 46, 90, 108, 44, 22, 97, 109, 76, 59, 61, 85, 26, 34, 11, 19, 149, 50, 124, 86, 144, 8, 116, 6, 56, 139, 134, 33, 82, 54, 148, 119, 114, 122, 42, 2, 45, 13, 135, 127, 99, 70, 40, 47, 51, 95, 77, 4, 36, 145, 102, 32, 75, 12, 125, 81, 94, 113, 43, 49, 72, 67, 84, 38, 100, 106, 29, 120, 111, 28, 131, 146, 115, 1, 53, 63, 143, 39, 68, 80, 24, 60, 57, 27, 92, 130, 107, 66, 104, 141, 147, 30, 79, 121, 41, 88, 132, 137, 7, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 136, 78, 105, 89, 9, 23, 37, 103, 110, 101, 98, 17, 93, 133, 52, 18, 10, 14, 16, 31, 0]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[108, 44, 22, 97, 90, 31, 10, 14, 16, 140, 58, 73, 20, 71, 112, 46, 130, 27, 92, 57, 107, 60, 50, 124, 139, 134, 33, 82, 54, 148, 11, 19, 149, 85, 26, 34, 61, 59, 109, 76, 56, 6, 8, 116, 144, 86, 80, 24, 68, 72, 67, 84, 38, 100, 106, 29, 120, 111, 28, 45, 42, 122, 127, 114, 119, 2, 135, 40, 70, 99, 47, 13, 131, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 125, 81, 94, 113, 143, 63, 39, 53, 43, 49, 115, 1, 137, 132, 147, 141, 104, 66, 0, 129, 91, 5, 48, 89, 9, 83, 35, 126, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 133, 52, 21, 15, 87, 93, 69, 64, 65, 128, 123, 25, 117, 3, 118, 96, 142, 55, 138, 121, 41, 88, 30, 79, 7, 62, 18, 74, 108]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[108, 44, 22, 97, 90, 31, 10, 14, 16, 140, 58, 73, 20, 71, 112, 46, 130, 27, 92, 57, 107, 60, 50, 124, 139, 134, 33, 82, 54, 148, 11, 19, 149, 85, 26, 34, 61, 59, 109, 76, 56, 6, 8, 116, 144, 86, 80, 24, 68, 72, 67, 84, 38, 100, 106, 29, 120, 111, 28, 45, 42, 122, 127, 114, 119, 2, 135, 40, 70, 99, 47, 13, 131, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 125, 81, 94, 113, 143, 63, 39, 53, 43, 49, 115, 1, 137, 132, 147, 141, 104, 66, 0, 129, 91, 5, 48, 89, 9, 83, 35, 126, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 133, 52, 21, 15, 87, 93, 69, 64, 65, 128, 123, 25, 117, 3, 118, 96, 142, 55, 138, 121, 41, 88, 30, 79, 7, 62, 18, 74, 108]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[97, 90, 108, 44, 22, 31, 10, 14, 16, 140, 58, 73, 20, 71, 112, 46, 130, 27, 92, 57, 107, 66, 104, 141, 147, 0, 129, 91, 5, 48, 89, 9, 83, 35, 126, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 133, 52, 21, 15, 87, 93, 69, 64, 65, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 121, 41, 88, 30, 79, 7, 62, 18, 74, 132, 137, 63, 39, 53, 143, 1, 43, 49, 72, 67, 84, 38, 100, 106, 29, 120, 111, 28, 45, 42, 122, 2, 135, 127, 114, 119, 33, 82, 54, 148, 11, 19, 56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 60, 68, 113, 115, 81, 94, 125, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 146, 47, 99, 70, 40, 13, 131, 139, 134, 26, 34, 85, 149, 61, 59, 109, 76, 97]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[97, 90, 108, 44, 22, 31, 10, 14, 16, 140, 58, 73, 20, 71, 112, 46, 130, 27, 92, 57, 107, 66, 104, 141, 147, 0, 129, 91, 5, 48, 89, 9, 83, 35, 126, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 133, 52, 21, 15, 87, 93, 69, 64, 65, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 121, 41, 88, 30, 79, 7, 62, 18, 74, 132, 137, 63, 39, 53, 143, 1, 43, 49, 72, 67, 84, 38, 100, 106, 29, 120, 111, 28, 45, 42, 122, 2, 135, 127, 114, 119, 33, 82, 54, 148, 11, 19, 56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 60, 68, 113, 115, 81, 94, 125, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 146, 47, 99, 70, 40, 13, 131, 139, 134, 26, 34, 85, 149, 61, 59, 109, 76, 97]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[97, 90, 108, 44, 22, 31, 10, 14, 16, 140, 58, 73, 20, 71, 112, 46, 130, 27, 92, 57, 107, 66, 104, 141, 147, 0, 129, 91, 5, 48, 89, 9, 83, 35, 126, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 133, 52, 21, 15, 87, 93, 69, 64, 65, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 121, 41, 88, 30, 79, 7, 62, 18, 74, 132, 137, 63, 39, 53, 143, 1, 43, 49, 72, 67, 84, 38, 100, 106, 29, 120, 111, 28, 45, 42, 122, 2, 135, 127, 114, 119, 33, 82, 54, 148, 11, 19, 56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 60, 68, 113, 115, 81, 94, 125, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 146, 47, 99, 70, 40, 13, 131, 139, 134, 26, 34, 85, 149, 61, 59, 109, 76, 97]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[97, 90, 108, 44, 22, 31, 10, 14, 16, 140, 58, 73, 20, 71, 112, 46, 130, 27, 92, 57, 107, 66, 104, 141, 147, 0, 129, 91, 5, 48, 89, 9, 83, 35, 126, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 133, 52, 21, 15, 87, 93, 69, 64, 65, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 121, 41, 88, 30, 79, 7, 62, 18, 74, 132, 137, 63, 39, 53, 143, 1, 43, 49, 72, 67, 84, 38, 100, 106, 29, 120, 111, 28, 45, 42, 122, 2, 135, 127, 114, 119, 33, 82, 54, 148, 11, 19, 56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 60, 68, 113, 115, 81, 94, 125, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 146, 47, 99, 70, 40, 13, 131, 139, 134, 26, 34, 85, 149, 61, 59, 109, 76, 97]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[97, 90, 108, 44, 22, 31, 10, 14, 16, 140, 58, 73, 20, 71, 112, 46, 130, 27, 92, 57, 107, 66, 104, 141, 147, 0, 129, 91, 5, 48, 89, 9, 83, 35, 126, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 133, 52, 21, 15, 87, 93, 69, 64, 65, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 121, 41, 88, 30, 79, 7, 62, 18, 74, 132, 137, 63, 39, 53, 143, 1, 43, 49, 72, 67, 84, 38, 100, 106, 29, 120, 111, 28, 45, 42, 122, 2, 135, 127, 114, 119, 33, 82, 54, 148, 11, 19, 56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 60, 68, 113, 115, 81, 94, 125, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 146, 47, 99, 70, 40, 13, 131, 139, 134, 26, 34, 85, 149, 61, 59, 109, 76, 97]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[111, 28, 45, 42, 122, 2, 135, 127, 114, 119, 33, 82, 54, 148, 11, 19, 149, 61, 59, 109, 76, 97, 90, 108, 44, 22, 31, 10, 14, 16, 140, 58, 73, 20, 71, 112, 46, 130, 27, 92, 57, 107, 66, 104, 141, 147, 129, 0, 91, 5, 48, 89, 9, 83, 35, 126, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 133, 52, 21, 15, 87, 93, 69, 64, 65, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 121, 41, 88, 30, 79, 7, 62, 18, 74, 132, 137, 63, 1, 43, 49, 115, 81, 94, 125, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 146, 38, 100, 106, 29, 120, 84, 67, 72, 113, 143, 39, 53, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 85, 26, 34, 139, 134, 47, 99, 70, 40, 13, 131, 111]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[28, 45, 42, 122, 2, 135, 127, 114, 119, 33, 82, 54, 148, 11, 19, 149, 85, 34, 26, 61, 59, 109, 76, 97, 90, 108, 44, 22, 31, 10, 14, 16, 140, 58, 73, 20, 71, 112, 46, 130, 27, 92, 57, 107, 66, 104, 141, 147, 129, 0, 91, 5, 48, 89, 9, 83, 35, 126, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 133, 52, 21, 15, 87, 93, 69, 64, 65, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 121, 41, 88, 30, 79, 7, 62, 18, 74, 132, 137, 63, 143, 39, 53, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 139, 134, 84, 67, 72, 49, 115, 43, 113, 1, 125, 81, 94, 12, 75, 32, 145, 102, 36, 146, 4, 77, 51, 95, 47, 99, 70, 40, 13, 131, 111, 106, 29, 120, 100, 38, 28]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[53, 39, 63, 143, 1, 43, 113, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 61, 59, 76, 109, 19, 149, 116, 6, 8, 56, 86, 144, 124, 50, 60, 24, 80, 68, 72, 67, 84, 139, 134, 107, 66, 104, 141, 147, 129, 0, 62, 48, 5, 89, 78, 105, 52, 133, 87, 93, 69, 21, 15, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 79, 30, 41, 121, 7, 91, 88, 132, 137, 27, 92, 130, 22, 97, 90, 108, 44, 31, 10, 14, 16, 140, 58, 73, 20, 71, 112, 9, 83, 35, 37, 23, 103, 110, 101, 98, 17, 136, 126, 46, 57, 53]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[83, 9, 112, 71, 20, 73, 140, 58, 126, 35, 37, 23, 103, 110, 101, 98, 17, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 41, 121, 30, 79, 88, 137, 132, 147, 141, 104, 66, 107, 60, 24, 80, 68, 72, 67, 84, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 85, 26, 34, 149, 61, 59, 76, 109, 19, 6, 8, 116, 56, 86, 144, 50, 124, 139, 134, 95, 77, 51, 4, 36, 146, 32, 145, 102, 94, 125, 81, 12, 75, 1, 143, 113, 43, 49, 115, 63, 39, 53, 57, 27, 92, 130, 22, 97, 90, 108, 31, 10, 14, 16, 44, 46, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 52, 133, 18, 74, 83]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[5, 48, 89, 18, 133, 52, 21, 15, 87, 93, 136, 78, 105, 17, 23, 37, 35, 103, 110, 101, 98, 83, 9, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 108, 44, 97, 22, 90, 130, 27, 92, 57, 107, 60, 24, 80, 68, 72, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 6, 8, 116, 56, 86, 144, 50, 124, 139, 134, 84, 67, 147, 141, 104, 66, 62, 0, 129, 91, 7, 41, 121, 30, 79, 88, 137, 132, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 74, 138, 46, 5]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[88, 30, 79, 121, 41, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 74, 18, 133, 52, 17, 37, 23, 103, 110, 101, 98, 35, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 130, 27, 92, 57, 147, 141, 104, 66, 107, 60, 24, 80, 68, 72, 49, 43, 113, 143, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 6, 8, 116, 56, 86, 144, 50, 124, 139, 134, 84, 67, 146, 63, 39, 53, 137, 132, 91, 7, 62, 0, 129, 88]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[7, 91, 5, 48, 62, 0, 129, 121, 41, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 18, 74, 52, 133, 17, 23, 37, 35, 103, 110, 101, 98, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 130, 27, 92, 57, 147, 141, 104, 66, 107, 60, 24, 80, 68, 72, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 6, 8, 116, 56, 86, 144, 50, 124, 139, 134, 84, 67, 132, 137, 30, 79, 88, 7]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[87, 93, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 41, 121, 30, 79, 88, 137, 132, 74, 18, 133, 52, 17, 23, 37, 35, 103, 110, 101, 98, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 130, 27, 92, 57, 107, 60, 24, 80, 68, 72, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 6, 8, 116, 56, 86, 144, 50, 124, 139, 134, 84, 67, 146, 66, 104, 141, 147, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 130, 27, 92, 57, 107, 60, 24, 80, 68, 72, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 6, 8, 116, 56, 86, 144, 50, 124, 139, 134, 84, 67, 147, 141, 104, 66, 137, 132, 41, 121, 30, 79, 88, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 138, 74, 18, 133, 52, 17, 23, 37, 35, 103, 110, 101, 98, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 130, 27, 92, 57, 107, 60, 24, 80, 68, 72, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 6, 8, 116, 56, 86, 144, 50, 124, 139, 134, 84, 67, 147, 141, 104, 66, 137, 132, 41, 121, 30, 79, 88, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 138, 74, 18, 133, 52, 17, 23, 37, 35, 103, 110, 101, 98, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[137, 132, 41, 121, 30, 79, 88, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 138, 74, 18, 133, 52, 17, 23, 37, 35, 103, 110, 101, 98, 83, 9, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 130, 92, 27, 104, 141, 147, 66, 107, 60, 24, 80, 68, 72, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 6, 8, 116, 56, 86, 144, 50, 124, 139, 134, 84, 67, 57, 137]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[137, 132, 41, 121, 30, 79, 88, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 138, 74, 18, 133, 52, 17, 23, 37, 35, 103, 110, 101, 98, 83, 9, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 130, 92, 27, 104, 141, 147, 66, 107, 60, 24, 80, 68, 72, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 6, 8, 116, 56, 86, 144, 50, 124, 139, 134, 84, 67, 57, 137]");
        assertThat(TestUtils.getTourString(mmas_mem_cadtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[137, 132, 41, 121, 30, 79, 88, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 138, 74, 18, 133, 52, 17, 23, 37, 35, 103, 110, 101, 98, 83, 9, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 130, 92, 27, 104, 141, 147, 66, 107, 60, 24, 80, 68, 72, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 6, 8, 116, 56, 86, 144, 50, 124, 139, 134, 84, 67, 57, 137]");

    }

}