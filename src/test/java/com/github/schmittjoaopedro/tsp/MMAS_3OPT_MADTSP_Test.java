package com.github.schmittjoaopedro.tsp;

import com.github.schmittjoaopedro.tsp.algorithms.MMAS_3OPT_MADTSP;
import com.github.schmittjoaopedro.tsp.graph.Graph;
import com.github.schmittjoaopedro.tsp.graph.GraphFactory;
import org.junit.Before;
import org.junit.Test;

import java.io.File;

import static org.assertj.core.api.Assertions.assertThat;

public class MMAS_3OPT_MADTSP_Test {

    private String kroA100;

    private String kroA150;

    @Before
    public void beforeClass() {
        kroA100 = getClass().getClassLoader().getResource("tsp/KroA100.tsp").getFile();
        kroA150 = getClass().getClassLoader().getResource("tsp/KroA150.tsp").getFile();
    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA100_with_seed_1_mag_0_1_freq_10() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_3OPT_MADTSP mmas_3OPT_madtsp = new MMAS_3OPT_MADTSP(graph, 0.8, 1000, 0.1, 10, 1.0, 5.0);
        mmas_3OPT_madtsp.setMmasSeed(1);
        mmas_3OPT_madtsp.setDbgpSeed(1);
        mmas_3OPT_madtsp.setStatisticInterval(1);
        mmas_3OPT_madtsp.setShowLog(false);
        mmas_3OPT_madtsp.run();
        assertThat(mmas_3OPT_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(24017.51974043522);
        assertThat(mmas_3OPT_madtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(24017.51974043522);
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getGlobalStatistics())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 18, 74, 62, 0]");

        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1, 32017.634697867114, 2691.8294718872035, 0.0, 54.50775510204082, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 5, 25479.658218801425, 2150.2048167644975, 0.0, 7.645714285714286, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 10, 25622.242881529393, 2382.4290136889053, 0.0, 9.076734693877551, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 11, 29082.42595608354, 1687.5308863260575, 0.495, 20.8, 22395.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 15, 25738.05130657925, 2088.2409718831414, 0.495, 11.977142857142857, 22395.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 20, 25010.78950211802, 2120.9760503814955, 0.5, 7.951836734693877, 22007.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 21, 29777.542027556723, 1920.5757861619577, 0.485, 17.477551020408164, 23017.915321501518);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 25, 25959.27580557025, 2012.3089143695684, 0.485, 7.037551020408163, 23017.915321501518);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 30, 26436.90006669933, 2099.3024125683064, 0.485, 8.636734693877552, 23017.915321501518);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 31, 30892.13081682814, 2065.0813123960374, 0.53, 15.603265306122449, 23255.663681660764);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 35, 26311.10859168391, 2660.819689352134, 0.52, 8.938775510204081, 23142.94819437422);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 40, 25604.966680107605, 2588.8402005935495, 0.52, 5.219591836734694, 23142.94819437422);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 41, 26013.295659062773, 1910.2931077093533, 0.5, 7.230204081632653, 23117.6723144125);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 45, 25437.128449733485, 2347.332958311253, 0.5, 7.1657142857142855, 23117.6723144125);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 50, 25490.327956365432, 2415.7885570020517, 0.5, 5.948571428571428, 23117.6723144125);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 51, 28014.76444696523, 1602.8332786696828, 0.495, 11.34530612244898, 23106.011026159525);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 55, 24412.827642685865, 1784.9909790668833, 0.63, 4.748571428571428, 22974.011026159525);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 60, 24922.066079353845, 2449.746625385325, 0.63, 4.649795918367347, 22974.011026159525);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 61, 30137.18785456726, 1942.6846527539012, 0.495, 14.969795918367346, 23230.36701705806);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 65, 25301.55035697165, 1973.5439287741344, 0.495, 7.646530612244898, 23230.36701705806);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 70, 26175.158719763494, 2335.6266722034625, 0.495, 8.617142857142857, 23230.36701705806);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 71, 27844.954668624097, 2228.907687146006, 0.495, 13.649795918367348, 23012.8826615849);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 75, 25194.474427953068, 2376.9927058833373, 0.495, 6.466938775510204, 23012.8826615849);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 80, 24685.02487420944, 2007.1917171655803, 0.495, 5.227755102040816, 23012.8826615849);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 81, 26982.7618294011, 1639.8914355284187, 0.495, 9.898775510204082, 22815.780667109306);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 85, 25468.67793501047, 1982.7524455856035, 0.495, 6.9648979591836735, 22815.780667109306);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 90, 25959.146963981617, 2504.9932664718467, 0.5, 7.650612244897959, 22796.780667109306);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 91, 28586.388078992335, 1265.84480673449, 0.495, 8.797551020408163, 23056.86275862871);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 95, 24960.638904156633, 2375.3215385806375, 0.495, 4.2726530612244895, 23056.86275862871);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 100, 24529.764915607222, 2040.1123772406559, 0.5, 2.9224489795918367, 23056.86275862871);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 101, 28742.803593812198, 3003.3522124170595, 0.495, 8.879183673469388, 22726.89778352995);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 105, 24048.336691427812, 2051.04982093551, 0.495, 5.014693877551021, 22726.89778352995);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 110, 23950.027736309785, 1800.202207928691, 0.495, 3.2718367346938777, 22726.89778352995);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 111, 24584.9029925917, 2168.308239238686, 0.5, 5.241632653061225, 22533.727723341995);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 115, 24007.552095483243, 2090.739823887006, 0.5, 3.3714285714285714, 22533.727723341995);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 120, 24401.027104518187, 2040.1495327662037, 0.5, 5.0620408163265305, 22533.727723341995);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 121, 27701.37962866112, 2401.1360594948424, 0.49, 10.688979591836734, 22720.0);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 125, 25104.552429832736, 2490.0804187381773, 0.49, 4.646530612244898, 22720.0);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 130, 25474.021940715564, 2804.587778054916, 0.49, 5.364081632653061, 22720.0);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 131, 28809.032460570303, 2136.2492761868793, 0.5, 10.56408163265306, 22558.662823344315);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 135, 25016.019526706492, 2241.525739210512, 0.5, 5.780408163265306, 22558.662823344315);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 140, 24786.87070842057, 1844.7726993042518, 0.5, 5.286530612244898, 22558.662823344315);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 141, 26029.996562928012, 2744.5116940368816, 0.5, 8.288163265306123, 22134.290174499565);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 145, 24180.598629599182, 2729.375898794405, 0.5, 4.368979591836735, 22134.290174499565);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 150, 23601.094341886648, 2280.4066078679984, 0.5, 3.063673469387755, 22134.290174499565);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 151, 25444.00584623994, 2466.906839819072, 0.52, 8.142857142857142, 22245.838765495864);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 155, 24898.44169290657, 2097.457889426509, 0.53, 5.7575510204081635, 22243.838765495864);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 160, 24457.011282253392, 2359.996784840714, 0.53, 5.415510204081633, 22243.838765495864);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 161, 26869.23547260664, 1718.9392384763235, 0.495, 14.658775510204082, 22865.68308266974);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 165, 25261.378714235336, 1436.7152848600563, 0.495, 5.176326530612245, 22865.68308266974);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 170, 26835.6333668997, 2197.307440166472, 0.495, 10.811428571428571, 22865.68308266974);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 171, 27226.649947832542, 2358.292111527294, 0.52, 12.817142857142857, 22796.532299752154);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 175, 25477.949867581887, 1717.097350899511, 0.52, 8.53061224489796, 22796.532299752154);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 180, 25044.395924330933, 1866.7787750115558, 0.52, 6.355918367346939, 22796.532299752154);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 181, 28505.93500169373, 3059.760640882363, 0.495, 11.960816326530612, 23364.989398851445);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 185, 27610.5976707547, 2906.8796973680146, 0.495, 10.892244897959184, 23364.989398851445);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 190, 26235.1763635919, 2150.1089767941157, 0.495, 8.586122448979593, 23364.989398851445);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 191, 29234.29234546515, 3074.8817750604726, 0.495, 14.429387755102042, 22473.524949507795);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 195, 25550.814794180245, 2304.028109703506, 0.495, 10.237551020408164, 22473.524949507795);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 200, 25017.358929992082, 1999.8203424817777, 0.5, 7.091428571428572, 22473.524949507795);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 201, 26431.26015926646, 2229.666777096803, 0.5, 8.605714285714285, 22826.04842355142);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 205, 25593.41834017837, 1918.033632221348, 0.5, 7.518367346938776, 22826.04842355142);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 210, 25680.821705744413, 2309.4892370533935, 0.5, 7.575510204081633, 22628.0);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 211, 25743.950706556854, 1916.611114859986, 0.525, 9.844081632653062, 22502.380055592264);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 215, 25234.4124070096, 1819.1895785806773, 0.525, 6.253877551020408, 22502.380055592264);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 220, 24680.34625860909, 1694.604797049097, 0.525, 6.433469387755102, 22502.380055592264);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 221, 29130.053317515136, 1408.2836018327548, 0.495, 12.724897959183673, 22896.0);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 225, 27391.69753214191, 2324.568849448495, 0.495, 10.164897959183673, 22896.0);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 230, 26931.641250053668, 2656.0346791847974, 0.495, 8.882448979591837, 22896.0);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 231, 27380.55928090839, 2497.4559151732565, 0.5, 8.664489795918367, 23156.68686299066);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 235, 27537.8853635402, 2659.0714122866243, 0.5, 9.397551020408164, 23156.68686299066);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 240, 28098.74392193089, 1998.180571576475, 0.5, 12.688163265306123, 23156.68686299066);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 241, 29274.06402512552, 2891.8373590765314, 0.55, 17.40734693877551, 23573.972732143382);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 245, 27595.796569177255, 4024.459284166916, 0.55, 4.564897959183673, 23573.972732143382);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 250, 27360.880447130025, 3514.2954959184117, 0.55, 8.021224489795918, 23573.972732143382);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 251, 31210.12473377813, 2882.6160037576115, 0.535, 12.405714285714286, 24575.0);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 255, 26173.007775752943, 2241.347510396026, 0.535, 5.256326530612245, 24575.0);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 260, 26292.272612252702, 2271.3871377608953, 0.535, 4.466122448979592, 24575.0);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 261, 25996.828814342553, 1818.1933636988479, 0.495, 6.775510204081633, 22831.71683247336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 265, 23868.498998646308, 992.6281350415462, 0.495, 2.9951020408163265, 22831.71683247336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 270, 23994.359079340018, 1495.2391725107634, 0.495, 2.9640816326530612, 22831.71683247336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 271, 25486.963724912024, 1421.3672080802282, 0.495, 7.7640816326530615, 22398.003763183515);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 275, 23656.532763804174, 1340.2389996360123, 0.495, 4.808163265306122, 22398.003763183515);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 280, 23634.89489875456, 1589.1425434085747, 0.495, 5.063673469387755, 22398.003763183515);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 281, 26227.51578950392, 1819.1198859276346, 0.495, 8.124897959183674, 22664.93554247957);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 285, 24320.069037278023, 967.0059792864575, 0.495, 4.154285714285714, 22664.93554247957);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 290, 24345.86434734884, 1205.3834594651546, 0.495, 3.488979591836735, 22664.93554247957);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 291, 28246.954224117555, 1695.5935380339931, 0.495, 8.160816326530613, 23010.521338746294);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 295, 23691.228877757487, 1146.6807341306335, 0.495, 2.4204081632653063, 23010.521338746294);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 300, 23876.93497009017, 1414.644223371239, 0.515, 2.437551020408163, 23010.521338746294);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 301, 26278.987431780453, 1072.7914871024986, 0.51, 6.015510204081632, 23453.15422256478);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 305, 24371.613540966307, 1531.1571641111523, 0.51, 3.5248979591836735, 23453.15422256478);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 310, 24751.52919828059, 1919.4495650964807, 0.51, 4.8310204081632655, 23453.15422256478);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 311, 25138.36389996422, 2106.890305308583, 0.5, 5.985306122448979, 22457.19836854448);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 315, 24893.416750563265, 2115.372251280607, 0.5, 5.084081632653061, 22457.19836854448);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 320, 24466.29028363715, 1849.9663416159053, 0.5, 4.462040816326531, 22457.19836854448);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 321, 25083.7500375521, 1256.4809356774017, 0.495, 4.220408163265306, 22216.99862670662);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 325, 23871.466301336848, 1630.0874497273871, 0.495, 2.709387755102041, 22216.99862670662);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 330, 24183.81513664205, 1856.9209465446534, 0.495, 2.84734693877551, 22216.99862670662);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 331, 25811.780983226043, 1869.0547843080383, 0.5, 7.343673469387755, 22245.0);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 335, 23869.675693671248, 1513.8685516286807, 0.5, 3.2946938775510204, 22245.0);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 340, 23640.433239917806, 1264.0170822455148, 0.5, 3.097142857142857, 22245.0);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 341, 28537.57622703471, 2048.905056309177, 0.5, 12.716734693877552, 22677.775906784507);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 345, 24581.675906082542, 1136.459910180485, 0.5, 3.8971428571428572, 22677.775906784507);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 350, 24682.64920190223, 1790.6371220213457, 0.5, 2.6644897959183673, 22677.775906784507);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 351, 26619.097147628578, 1624.4909941827125, 0.495, 6.219591836734694, 23294.059153345865);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 355, 23835.13233165897, 1774.8294205547295, 0.6, 4.013877551020408, 22013.059153345865);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 360, 23899.531123903707, 2096.954276806905, 0.6, 3.7012244897959183, 22013.059153345865);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 361, 25962.755147985994, 2490.7212959020026, 0.5, 6.297142857142857, 22414.505085725104);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 365, 24471.66337845476, 1748.299027077803, 0.5, 4.388571428571429, 22414.505085725104);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 370, 24264.804728848525, 1267.4052033549988, 0.5, 3.269387755102041, 22414.505085725104);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 371, 24879.786448192302, 1230.7111326796748, 0.5, 4.612244897959184, 22322.63328426857);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 375, 23778.990785341965, 1809.487242881362, 0.5, 3.0016326530612245, 22322.63328426857);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 380, 23763.529655280196, 1715.8340866703643, 0.5, 2.740408163265306, 22322.63328426857);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 381, 23113.155387084946, 1214.998610948986, 0.5, 2.990204081632653, 22270.66177977007);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 385, 23074.142410652534, 1366.2786791584151, 0.5, 2.063673469387755, 22270.66177977007);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 390, 22922.976954079477, 1187.2603665209679, 0.5, 2.0873469387755104, 22270.66177977007);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 391, 25723.939836364283, 1703.559174241106, 0.5, 6.291428571428572, 22692.956649868924);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 395, 24537.10527262002, 1901.895732228846, 0.5, 3.4244897959183676, 22692.956649868924);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 400, 24975.20719917609, 1824.0675227447803, 0.5, 3.923265306122449, 22692.956649868924);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 401, 26462.57929431921, 2184.2210533594375, 0.5, 6.753469387755102, 22576.09594634799);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 405, 24389.146571848236, 935.9810015111079, 0.5, 3.6783673469387757, 22576.09594634799);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 410, 24859.265569259576, 1366.2690147667554, 0.5, 4.286530612244898, 22576.09594634799);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 411, 26416.327098739494, 860.4825193893502, 0.5, 4.857142857142857, 22862.33821940617);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 415, 23274.568896771274, 769.7931604039494, 0.5, 1.4285714285714286, 22862.33821940617);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 420, 23367.743022621115, 819.444230304442, 0.5, 1.5477551020408162, 22862.33821940617);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 421, 25338.929080507238, 1033.629537991349, 0.495, 3.5853061224489795, 22428.461322611864);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 425, 24745.814447078686, 2022.1643293117422, 0.525, 4.674285714285714, 22374.461322611864);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 430, 23320.965558037955, 1328.4998207735032, 0.525, 1.9828571428571429, 22374.461322611864);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 431, 24217.985432414225, 1500.8196686644408, 0.5, 4.070204081632653, 22389.461322611864);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 435, 23111.387150939077, 1163.4353310298934, 0.5, 2.0963265306122447, 22389.461322611864);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 440, 23110.138859157705, 1152.7603086379406, 0.5, 1.889795918367347, 22389.461322611864);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 441, 25840.770070204922, 1341.5842933404144, 0.5, 6.569795918367347, 22609.05997899796);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 445, 24028.02651005579, 1211.158747670189, 0.5, 3.1453061224489796, 22609.05997899796);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 450, 24280.86040830933, 1446.1710563607812, 0.5, 4.96, 22609.05997899796);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 451, 25712.504852368635, 1377.7606987898891, 0.5, 7.8644897959183675, 22275.507556578712);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 455, 24126.213628910336, 1691.1905461557237, 0.5, 3.373061224489796, 22275.507556578712);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 460, 24432.797134579912, 1571.555761851205, 0.5, 3.4604081632653063, 22275.507556578712);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 461, 25654.101018388756, 1574.780146516091, 0.5, 3.473469387755102, 22161.232031108408);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 465, 23328.153448712368, 1250.9632832689936, 0.5, 3.1787755102040816, 22161.232031108408);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 470, 23103.254154952243, 1340.8955142483594, 0.5, 2.7616326530612243, 22161.232031108408);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 471, 26199.56908961843, 1083.608760244492, 0.495, 5.069387755102041, 22624.06499573711);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 475, 24743.73779123394, 754.3666218610034, 0.495, 2.7934693877551022, 22624.06499573711);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 480, 23698.03279039931, 1037.9225689468767, 0.495, 2.286530612244898, 22624.06499573711);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 481, 26464.4890012165, 694.995596389571, 0.5, 2.7444897959183674, 22536.643381603666);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 485, 24201.426926603694, 1580.4243469456962, 0.5, 3.4946938775510206, 22536.643381603666);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 490, 24132.103020032057, 1514.7908352620225, 0.5, 3.2, 22536.643381603666);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 491, 25229.404268915743, 1642.3677617819174, 0.5, 4.333877551020408, 22676.126943305757);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 495, 25210.833589664144, 1204.1276071193479, 0.5, 3.150204081632653, 22676.126943305757);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 500, 23807.42545416898, 1231.0267793069613, 0.5, 2.837551020408163, 22676.126943305757);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 501, 25554.754787124315, 2216.67796043705, 0.495, 5.502857142857143, 22829.74340010683);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 505, 24952.687687043144, 961.4819439054037, 0.495, 3.543673469387755, 22829.74340010683);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 510, 25076.74756892127, 1113.3495134176958, 0.495, 3.4359183673469387, 22829.74340010683);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 511, 26309.685887813135, 934.0713266287494, 0.5, 7.078367346938776, 23060.02880470652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 515, 24071.992192342866, 680.7178011710633, 0.5, 2.817142857142857, 23060.02880470652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 520, 23537.695172203268, 1116.6684717582555, 0.5, 2.1722448979591835, 22811.596269097252);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 521, 24007.83881074441, 1024.1539930013282, 0.5, 4.622857142857143, 22750.04947606616);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 525, 24804.03713910052, 432.93936589939415, 0.5, 1.593469387755102, 22750.04947606616);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 530, 24862.76464188502, 820.8838595188514, 0.5, 4.0253061224489795, 22750.04947606616);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 531, 25722.856543028134, 971.5290884357275, 0.52, 6.252244897959184, 23067.904800546217);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 535, 24325.178798864807, 1047.2012883702696, 0.51, 3.5763265306122447, 22710.904800546217);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 540, 23951.12986628931, 1235.75280620247, 0.51, 3.309387755102041, 22710.904800546217);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 541, 24452.765163728516, 1701.3081587600518, 0.495, 3.7355102040816326, 22923.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 545, 23896.577322087855, 1460.1712916150616, 0.495, 3.253061224489796, 22923.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 550, 23485.815551449163, 1219.6402941739248, 0.495, 2.2767346938775512, 22923.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 551, 24497.831261380405, 1063.8556718339598, 0.5, 5.155102040816327, 22895.044273359177);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 555, 23809.670275684824, 1101.7795635105938, 0.5, 2.04, 22895.044273359177);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 560, 23685.124263253176, 1238.9802774065486, 0.5, 1.9616326530612245, 22895.044273359177);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 561, 24872.55776372482, 1161.21828511011, 0.5, 6.51265306122449, 22956.476934354123);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 565, 24336.935597647065, 876.2057668787445, 0.5, 3.6751020408163266, 22956.476934354123);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 570, 24884.027182004964, 1337.3863735169352, 0.5, 3.2824489795918366, 22956.476934354123);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 571, 25943.46422137014, 1209.8609365711734, 0.495, 6.36734693877551, 22762.17899396331);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 575, 23467.271086008954, 946.0239789307033, 0.495, 2.6048979591836736, 22762.17899396331);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 580, 23629.925624701882, 1024.4738257140957, 0.495, 2.4261224489795916, 22762.17899396331);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 581, 25148.562731254493, 655.3592998857132, 0.495, 7.3061224489795915, 22733.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 585, 23787.75580161978, 1015.9121827509065, 0.495, 3.8791836734693876, 22733.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 590, 23410.253210367042, 858.578897128822, 0.495, 3.1110204081632653, 22733.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 591, 24837.70201673204, 1321.1588218150614, 0.5, 4.629387755102041, 22683.168973679152);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 595, 22745.070214472722, 688.9812282534683, 0.545, 1.4506122448979593, 22504.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 600, 22695.371377238407, 612.1946550203045, 0.5, 1.0253061224489797, 22504.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 601, 22770.433074987122, 793.1650119664374, 0.5, 0.9224489795918367, 22375.456866394205);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 605, 24122.12862106619, 1933.1893503878891, 0.5, 2.3983673469387754, 22375.456866394205);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 610, 24381.601038251967, 1872.5645211815845, 0.5, 2.5191836734693878, 22375.456866394205);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 611, 24449.873094244205, 1296.6953238758483, 0.5, 2.902857142857143, 22635.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 615, 22789.43753083712, 589.7360069934639, 0.5, 0.6342857142857142, 22635.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 620, 22958.711254595568, 896.0735109072908, 0.5, 1.1322448979591837, 22635.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 621, 24893.720161548546, 617.0198089277754, 0.495, 5.809795918367347, 23130.745687849223);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 625, 24791.462428238876, 973.6237111487709, 0.54, 6.133061224489796, 22876.570197035482);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 630, 24401.924807285006, 1049.7995505895037, 0.54, 4.457142857142857, 22876.570197035482);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 631, 25662.887574743065, 1823.506653938413, 0.5, 5.909387755102041, 23043.942250508713);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 635, 24379.446176943435, 1025.9205784003016, 0.5, 2.3787755102040817, 23043.942250508713);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 640, 24426.548680500895, 1300.3909179707557, 0.5, 2.777142857142857, 23043.942250508713);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 641, 24197.25043349934, 1030.3026060799816, 0.5, 3.3893877551020406, 22501.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 645, 23560.830530892163, 1096.7275337408585, 0.5, 1.8783673469387756, 22501.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 650, 23806.060255550008, 1152.8285356014046, 0.5, 2.3526530612244896, 22501.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 651, 24604.175812371923, 942.7245684998303, 0.5, 4.528163265306122, 22537.46311587864);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 655, 23734.873505187785, 1073.0553100380507, 0.5, 2.5951020408163266, 22537.46311587864);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 660, 23579.86406417891, 1086.5015965867651, 0.5, 1.9216326530612244, 22537.46311587864);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 661, 23174.27839461959, 876.5932141150305, 0.5, 2.4081632653061225, 22641.08088832354);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 665, 23145.863653837616, 884.9290206396993, 0.5, 2.7648979591836733, 22641.08088832354);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 670, 22936.299441156792, 725.9378090235309, 0.5, 1.9306122448979592, 22641.08088832354);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 671, 25013.420308896126, 867.3287910764006, 0.5, 4.688979591836735, 23045.557730365486);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 675, 24125.707622549395, 1106.8111286461549, 0.5, 2.434285714285714, 23045.557730365486);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 680, 24492.12450735377, 1088.0485333607812, 0.5, 3.27265306122449, 23045.557730365486);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 681, 25460.95578134557, 1806.7317262293911, 0.5, 4.016326530612245, 22802.606418445437);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 685, 23765.328778645693, 1305.242729335276, 0.5, 2.6530612244897958, 22802.606418445437);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 690, 23641.785632026204, 1220.5258115789068, 0.5, 2.4089795918367347, 22802.606418445437);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 691, 23419.350970674324, 807.8033540330803, 0.5, 1.606530612244898, 22906.207419251394);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 695, 23758.172022044073, 1044.840829983568, 0.5, 2.8448979591836734, 22906.207419251394);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 700, 23502.484926288467, 871.0612660266733, 0.5, 2.176326530612245, 22906.207419251394);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 701, 24785.94064424718, 1192.2491760743487, 0.5, 4.858775510204081, 22694.921905997053);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 705, 23337.983418707718, 1078.4316695847233, 0.52, 2.2677551020408164, 22590.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 710, 23452.070530892164, 1102.7110776700874, 0.52, 2.573061224489796, 22590.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 711, 24720.439204998467, 1040.4753265655331, 0.5, 5.986122448979592, 22743.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 715, 24364.062603501057, 589.0687559646075, 0.5, 3.9820408163265304, 22743.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 720, 23443.84359288552, 857.8008547956457, 0.5, 1.853061224489796, 22743.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 721, 25837.491121229734, 762.9570298490667, 0.505, 5.537142857142857, 23240.14528300261);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 725, 24448.950373850636, 1034.125730568374, 0.505, 1.8995918367346938, 23240.14528300261);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 730, 24361.97354982527, 1054.9747631710197, 0.505, 2.210612244897959, 23240.14528300261);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 731, 25023.431279625045, 1089.5637668046477, 0.5, 4.015510204081632, 22982.72269880765);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 735, 23833.94269880764, 1053.5300096459, 0.5, 1.5371428571428571, 22982.72269880765);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 740, 23978.80660015319, 1067.3171910125989, 0.5, 1.8922448979591837, 22982.72269880765);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 741, 24219.17517629155, 1060.433539315598, 0.5, 2.816326530612245, 22928.25859006794);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 745, 23823.676853160097, 1032.7882646782668, 0.5, 2.216326530612245, 22928.25859006794);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 750, 24036.571814343613, 1049.091459335351, 0.5, 2.483265306122449, 22928.25859006794);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 751, 24182.50942602335, 1039.9246758910979, 0.5, 2.580408163265306, 23018.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 755, 24180.693329064045, 965.1525808128821, 0.5, 3.3648979591836734, 23018.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 760, 24349.975033545583, 997.692377686824, 0.5, 3.427755102040816, 23018.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 761, 25194.246239174707, 534.9880092663738, 0.495, 5.8979591836734695, 23343.034908087982);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 765, 24617.620230338773, 1180.7156376578012, 0.495, 4.267755102040816, 23343.034908087982);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 770, 24755.12969681335, 1224.0163557894773, 0.495, 4.430204081632653, 23343.034908087982);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 771, 25334.33805097353, 587.0686159005367, 0.5, 4.918367346938775, 22784.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 775, 24089.750530892157, 1035.4066648581386, 0.5, 1.689795918367347, 22784.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 780, 23914.83053089216, 1056.992700532786, 0.5, 1.7420408163265306, 22784.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 781, 24904.54550861743, 1055.6949124717312, 0.5, 2.057142857142857, 23008.124512896225);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 785, 23939.120508520908, 354.45058394187936, 0.5, 1.229387755102041, 23008.124512896225);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 790, 23864.907396446968, 221.62361546038278, 0.5, 0.4710204081632653, 23008.124512896225);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 791, 23516.150159917524, 215.70037895814684, 0.5, 0.47836734693877553, 22903.69698222364);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 795, 23037.309524170378, 469.7878380095954, 0.5, 0.7044897959183674, 22903.69698222364);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 800, 23219.814190744833, 784.1640341831577, 0.5, 0.9159183673469388, 22903.69698222364);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 801, 23737.77961740482, 750.8733441341243, 0.5, 3.376326530612245, 22943.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 805, 23359.397714806233, 897.692030505838, 0.5, 1.1461224489795918, 22943.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 810, 23082.032870566192, 521.9542555050728, 0.5, 0.5893877551020408, 22943.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 811, 23605.396108403707, 658.9660839467516, 0.5, 2.16, 23137.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 815, 23449.72758016582, 740.7577020628297, 0.53, 1.4416326530612245, 23067.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 820, 23244.342503651533, 523.6201641838437, 0.53, 0.723265306122449, 23067.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 821, 24148.7444154181, 413.1580179590684, 0.495, 4.933877551020408, 23260.06440078399);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 825, 23679.584914367548, 777.2562720392411, 0.495, 1.5697959183673469, 23260.06440078399);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 830, 23474.224400783984, 651.0424093525016, 0.495, 0.6342857142857142, 23260.06440078399);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 831, 25164.119151053565, 1538.4117275860692, 0.5, 4.462857142857143, 23282.01050687468);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 835, 23375.200169045864, 546.1009658212561, 0.5, 0.27918367346938777, 23282.01050687468);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 840, 23353.37050687467, 228.0441024299056, 0.5, 0.7355102040816327, 23282.01050687468);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 841, 23379.52911522906, 34.22396820942892, 0.5, 0.12, 23374.689115229055);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 845, 23436.077174182767, 242.62265916429337, 0.5, 0.5502040816326531, 23374.689115229055);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 850, 23414.130746349856, 173.12988583595583, 0.5, 0.39346938775510204, 23374.689115229055);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 851, 24066.676224330888, 257.47798113596434, 0.5, 1.766530612244898, 23526.763439734204);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 855, 23583.822673131177, 287.43997615015223, 0.5, 0.356734693877551, 23526.763439734204);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 860, 23583.483056432702, 238.66919224899078, 0.5, 0.39755102040816326, 23526.763439734204);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 861, 23999.670299745532, 246.9032421487485, 0.5, 2.333061224489796, 23564.011668443378);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 865, 23878.587853607154, 523.1039804338812, 0.505, 2.0326530612244897, 23230.328101334442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 870, 23731.39417903629, 573.9060784033328, 0.505, 1.8024489795918368, 23230.328101334442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 871, 24114.188520681462, 415.5795352441163, 0.5, 1.7044897959183674, 23421.464061634528);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 875, 23517.610380003633, 152.8122685386128, 0.5, 0.433469387755102, 23421.464061634528);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 880, 23484.559542410178, 0.6066070756554748, 0.5, 0.12, 23421.464061634528);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 881, 23380.25845450442, 188.2398817298059, 0.5, 0.31755102040816324, 23233.972275723747);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 885, 23254.6914149128, 146.50643820941235, 0.5, 0.12, 23233.972275723747);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 890, 23233.972275723725, 2.204948129406426E-11, 0.5, 0.0, 23233.972275723747);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 891, 23393.051066812648, 116.96723433418919, 0.5, 0.2, 23214.78549455588);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 895, 23258.274179703967, 213.33504900721732, 0.5, 0.35836734693877553, 23214.78549455588);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 900, 23228.62549455587, 97.86357851621818, 0.5, 0.16, 23214.78549455588);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 901, 24004.682295491373, 146.4649283147508, 0.495, 3.4057142857142857, 23753.032910240934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 905, 23935.40392970985, 80.52591575716616, 0.495, 1.250612244897959, 23753.032910240934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 910, 23944.408011420783, 25.44735560259431, 0.495, 0.7248979591836735, 23753.032910240934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 911, 24138.161407148727, 306.16377693120495, 0.515, 2.060408163265306, 23653.82882469474);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 915, 23704.963458977076, 313.82011282623995, 0.515, 0.39591836734693875, 23653.82882469474);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 920, 23733.558093259413, 397.0418170293941, 0.515, 0.19755102040816327, 23653.82882469474);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 921, 24404.112483227178, 377.8272578244324, 0.495, 0.9689795918367347, 23859.745601326576);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 925, 23862.109490923955, 16.715223642756857, 0.495, 0.12, 23859.745601326576);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 930, 23865.294033607217, 39.233340905891076, 0.495, 0.16, 23859.745601326576);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 931, 24195.425533540834, 159.34335539638326, 0.5, 0.5077551020408163, 24155.104617378274);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 935, 24155.10461737829, 1.469965419604284E-11, 0.5, 0.0, 24155.104617378274);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 940, 23957.98821860507, 101.28316968640732, 0.5, 0.529795918367347, 23927.252530403195);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 941, 24936.87665168055, 45.311430775622085, 0.505, 0.23755102040816325, 24676.99680617469);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 945, 24509.036893259206, 204.49144567061893, 0.5, 1.649795918367347, 24201.53406550305);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 950, 24122.2525304032, 3.67491354901071E-12, 0.5, 0.0, 24122.252530403195);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 951, 24212.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24212.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 955, 24212.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24212.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 960, 24017.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24017.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 961, 24021.419740435216, 27.577164466275367, 0.5, 0.12, 24017.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 965, 24017.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24017.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 970, 24017.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24017.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 971, 24017.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24017.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 975, 24017.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24017.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 980, 24017.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24017.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 981, 24017.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24017.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 985, 24017.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24017.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 990, 24017.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24017.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 991, 24017.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24017.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 995, 24017.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24017.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1000, 24017.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24017.51974043522);

        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 18, 96, 74, 91, 7, 41, 88, 30, 79, 55, 3, 64, 25, 65, 69, 21, 93, 15, 87, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 91, 7, 41, 88, 30, 79, 55, 96, 74, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[0, 46, 92, 27, 66, 57, 60, 86, 50, 24, 80, 68, 63, 39, 53, 1, 43, 72, 67, 38, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 29, 4, 36, 32, 75, 12, 94, 81, 49, 84, 33, 82, 54, 6, 56, 8, 19, 11, 26, 85, 34, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 93, 21, 15, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 86, 50, 24, 80, 68, 63, 39, 53, 1, 49, 43, 72, 67, 84, 95, 77, 51, 4, 36, 12, 32, 75, 94, 81, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 25, 65, 64, 3, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 55, 96, 3, 64, 65, 25, 30, 79, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 91, 62, 5, 48, 89, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 29, 4, 36, 12, 32, 75, 94, 81, 95, 77, 51, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 3, 64, 65, 25, 96, 74, 55, 79, 30, 88, 41, 7, 91, 62, 89, 48, 5, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 53, 39, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 75, 32, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 87, 15, 21, 69, 93, 52, 18, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 74, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 53, 39, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 75, 32, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 72, 49, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 81, 94, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 28, 45, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 28, 13, 47, 99, 70, 40, 2, 42, 45, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 88, 30, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 12, 32, 75, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 29, 95, 4, 36, 32, 75, 12, 94, 81, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 78, 17, 23, 37, 98, 35, 9, 89, 62, 5, 48, 74, 18, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 88, 30, 79, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 29, 38, 4, 36, 32, 12, 75, 94, 81, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 62, 5, 48, 74, 18, 78, 17, 23, 37, 98, 35, 83, 9, 89, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 70, 40, 99, 13, 2, 42, 28, 45, 33, 82, 54, 11, 6, 8, 56, 19, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 14, 16, 58, 73, 20, 71, 62, 5, 48, 74, 18, 78, 17, 23, 37, 98, 35, 83, 9, 89, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 42, 2, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 78, 17, 23, 37, 98, 35, 83, 89, 62, 5, 48, 74, 18, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 44, 97, 90, 31, 10, 14, 16, 58, 73, 20, 71, 9, 78, 17, 23, 37, 98, 35, 83, 89, 62, 5, 48, 74, 18, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 78, 17, 23, 37, 98, 35, 83, 89, 74, 18, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 28, 45, 42, 70, 40, 99, 47, 13, 2, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 23, 37, 98, 35, 83, 9, 89, 48, 5, 62, 74, 18, 52, 78, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 28, 42, 40, 70, 99, 47, 13, 2, 45, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 23, 37, 98, 35, 83, 9, 89, 74, 18, 52, 78, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 45, 42, 2, 40, 70, 99, 47, 13, 28, 33, 82, 54, 11, 6, 8, 56, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 78, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 91, 7, 41, 88, 30, 79, 55, 74, 18, 52, 17, 23, 98, 35, 37, 83, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 38, 28, 42, 40, 70, 99, 47, 13, 2, 45, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 59, 61, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 62, 91, 7, 88, 41, 30, 79, 55, 74, 52, 87, 15, 93, 21, 69, 64, 65, 25, 3, 96, 18, 78, 17, 23, 37, 98, 35, 83, 9, 89, 5, 48, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 13, 99, 70, 40, 42, 2, 28, 45, 33, 54, 82, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 37, 35, 98, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 96, 91, 7, 41, 88, 30, 79, 55, 74, 18, 89, 5, 48, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 89, 48, 5, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 25, 64, 65, 69, 21, 93, 15, 87, 52, 78, 17, 23, 37, 98, 35, 83, 9, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 11, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 89, 48, 5, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 25, 65, 69, 21, 93, 87, 15, 52, 78, 17, 23, 37, 98, 35, 83, 9, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 38, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 89, 48, 5, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 25, 65, 69, 21, 93, 87, 15, 52, 78, 17, 23, 37, 98, 35, 83, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 38, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 97, 22, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 64, 65, 3, 96, 91, 7, 88, 41, 30, 79, 55, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 91, 7, 41, 88, 30, 79, 55, 74, 18, 52, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 28, 45, 33, 82, 54, 6, 8, 56, 11, 19, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 11, 26, 19, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 14, 16, 10, 58, 73, 20, 71, 62, 5, 48, 89, 9, 83, 98, 35, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 89, 5, 48, 91, 7, 88, 41, 30, 79, 55, 96, 74, 18, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 78, 17, 23, 35, 98, 37, 83, 9, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 28, 45, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 48, 89, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 52, 78, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 64, 65, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 93, 21, 15, 69, 65, 64, 25, 3, 18, 89, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 18, 89, 48, 5, 62, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 56, 8, 6, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 34, 85, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 65, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 11, 19, 26, 85, 34, 61, 59, 76, 97, 90, 22, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 14, 16, 10, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 85, 34, 61, 59, 76, 22, 97, 44, 90, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 64, 25, 65, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 85, 34, 61, 59, 76, 22, 97, 44, 90, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 48, 89, 18, 74, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 44, 90, 97, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 89, 74, 18, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 55, 79, 30, 88, 41, 7, 91, 74, 96, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 74, 91, 7, 88, 41, 30, 79, 55, 96, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 52, 78, 87, 93, 21, 15, 69, 65, 64, 25, 3, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 5, 48, 89, 62, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 48, 89, 18, 74, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 65, 64, 3, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 25, 64, 65, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 96, 55, 79, 30, 41, 88, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 17, 23, 37, 98, 35, 83, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 91, 7, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 65, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 65, 64, 3, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 37, 98, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 96, 74, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 41, 88, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 87, 52, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 93, 21, 69, 18, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 96, 55, 41, 79, 30, 88, 7, 91, 74, 18, 89, 5, 48, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 41, 88, 30, 79, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 88, 30, 41, 7, 91, 62, 5, 48, 89, 18, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 62, 5, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 41, 88, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 48, 89, 18, 74, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 18, 74, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 74, 18, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 74, 18, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 74, 18, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 62, 89, 18, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 18, 74, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 18, 74, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 18, 74, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 18, 74, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 18, 74, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[0, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[0, 46, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 18, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 18, 74, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 18, 74, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 18, 74, 62, 0]");
    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA100_with_seed_1_mag_0_1_freq_100() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_3OPT_MADTSP mmas_3OPT_madtsp = new MMAS_3OPT_MADTSP(graph, 0.8, 1000, 0.1, 100, 1.0, 5.0);
        mmas_3OPT_madtsp.setMmasSeed(1);
        mmas_3OPT_madtsp.setDbgpSeed(1);
        mmas_3OPT_madtsp.setStatisticInterval(1);
        mmas_3OPT_madtsp.setShowLog(false);
        mmas_3OPT_madtsp.run();
        assertThat(mmas_3OPT_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(23121.218657899146);
        assertThat(mmas_3OPT_madtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(23121.218657899146);
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getGlobalStatistics())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");

        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1, 32017.634697867114, 2691.8294718872035, 0.0, 54.50775510204082, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 5, 25479.658218801425, 2150.2048167644975, 0.0, 7.645714285714286, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 10, 25622.242881529393, 2382.4290136889053, 0.0, 9.076734693877551, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 11, 25896.545334969658, 2533.650300452743, 0.0, 11.95265306122449, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 15, 25469.053418249878, 2252.188200332902, 0.0, 6.633469387755102, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 20, 25705.991337811807, 2333.084863523, 0.0, 6.917551020408164, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 21, 24948.70506343399, 2059.703210584242, 0.0, 5.746122448979592, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 25, 25631.138427752605, 2184.777178536265, 0.0, 8.511836734693878, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 30, 25135.748370301197, 2098.09309132053, 0.0, 6.539591836734694, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 31, 25085.362165807215, 2548.1986067539306, 0.0, 6.526530612244898, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 35, 26034.875276279698, 1916.95222911935, 0.0, 7.297142857142857, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 40, 25925.229473552594, 2144.7975851805377, 0.0, 6.478367346938776, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 41, 25401.404229199536, 2417.133258982685, 0.0, 6.970612244897959, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 45, 25515.2012031722, 2210.0398768612463, 0.0, 6.150204081632653, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 50, 25571.91250621782, 2108.732593110791, 0.0, 6.039183673469387, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 51, 25462.98493951078, 2634.158950249151, 0.0, 6.4465306122448975, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 55, 25401.479044131087, 2354.948838065112, 0.0, 7.024489795918368, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 60, 25986.474692303058, 2268.386777162022, 0.0, 9.732244897959184, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 61, 25517.992059264976, 2230.2197262243117, 0.0, 6.528163265306122, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 65, 25306.24715969997, 2277.6615282495304, 0.0, 7.116734693877551, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 70, 25197.513155108943, 1958.1098777483114, 0.0, 7.159183673469387, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 71, 25207.382177589097, 2327.625776505774, 0.0, 6.683265306122449, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 75, 25813.14405351202, 2371.529398410467, 0.5, 6.928979591836734, 22538.336392086385);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 80, 25921.39022683231, 2455.8016320337683, 0.5, 6.298775510204082, 22538.336392086385);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 81, 25885.95880770909, 1826.2435975184196, 0.5, 6.395918367346939, 22538.336392086385);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 85, 25382.44060675145, 2213.7562273482035, 0.5, 6.860408163265306, 22538.336392086385);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 90, 25767.457180455996, 2222.3207544896104, 0.5, 6.394285714285714, 22538.336392086385);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 91, 25734.140292413023, 2032.009653885383, 0.5, 5.893877551020408, 22538.336392086385);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 95, 25645.77054161977, 2510.058418650375, 0.5, 5.862857142857143, 22538.336392086385);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 100, 26503.05021092404, 1911.7687307975966, 0.5, 7.315918367346939, 22538.336392086385);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 101, 27717.960581949596, 2049.352079049882, 0.5, 11.696326530612245, 22596.135165323023);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 105, 25584.225667895273, 2371.282472691483, 0.5, 6.443265306122449, 22596.135165323023);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 110, 24859.440975580168, 2212.889013378418, 0.5, 5.116734693877551, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 111, 25387.48301428814, 1853.1927152957735, 0.5, 6.193469387755102, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 115, 24358.749244464474, 1941.6588282771152, 0.5, 5.555102040816327, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 120, 25243.115270360227, 2107.8206956479057, 0.5, 6.426938775510204, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 121, 25184.756099264003, 2285.6277333382277, 0.5, 6.228571428571429, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 125, 25685.339071919665, 1944.4847500991248, 0.5, 7.123265306122449, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 130, 25096.969641960586, 1888.4039823354906, 0.5, 6.231020408163265, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 131, 25603.622710116608, 1803.6554295971418, 0.5, 7.131428571428572, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 135, 25218.30989031417, 2091.405828787264, 0.5, 5.350204081632653, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 140, 25204.65501835894, 2480.28494330459, 0.5, 5.785306122448979, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 141, 25622.742509040036, 2125.732306958032, 0.5, 6.855510204081632, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 145, 25435.740714268526, 1876.4665704136348, 0.5, 6.222857142857142, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 150, 24617.443567233822, 2148.080892165233, 0.5, 5.117551020408163, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 151, 25527.808562773593, 2037.0760119461297, 0.5, 6.347755102040816, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 155, 24878.91234581321, 2031.2058999324372, 0.5, 6.441632653061225, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 160, 24982.01717038787, 2277.0982293673355, 0.5, 4.983673469387755, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 161, 24881.121757596462, 1940.4066344584874, 0.5, 5.9648979591836735, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 165, 24800.153816000457, 2089.8057591578304, 0.5, 5.233469387755102, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 170, 25302.236085313303, 1885.3705973806282, 0.5, 7.174693877551021, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 171, 25479.22565821987, 2140.1939182087067, 0.5, 5.768163265306122, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 175, 24862.508211356122, 1979.7631251472524, 0.5, 6.113469387755102, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 180, 25444.839538914017, 2290.3200227835327, 0.5, 6.18938775510204, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 181, 24617.68169099532, 1969.514368433498, 0.5, 4.761632653061224, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 185, 25074.327971848976, 2399.873002784635, 0.5, 6.182040816326531, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 190, 24866.415453936293, 1902.5217690552463, 0.5, 5.892244897959183, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 191, 25042.29311978674, 1805.6092253825552, 0.5, 6.0351020408163265, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 195, 25038.13723756129, 2187.450635043128, 0.5, 4.8710204081632655, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 200, 25448.466664272637, 2097.794518387592, 0.5, 6.728979591836735, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 201, 30340.67649297834, 2576.548106488814, 0.49, 12.765714285714285, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 205, 26138.709350571513, 2518.7675962562034, 0.49, 6.07265306122449, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 210, 25977.44767002196, 2211.3523907876884, 0.49, 4.9918367346938775, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 211, 26574.05389447389, 2179.3733919466445, 0.49, 5.684897959183673, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 215, 25906.414507736, 1877.1214770001534, 0.49, 4.7273469387755105, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 220, 26322.905272507942, 1405.3593987563816, 0.49, 5.2424489795918365, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 221, 26215.88127599831, 1633.1045327127172, 0.49, 5.475102040816327, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 225, 26532.829427685017, 1958.4315218719166, 0.49, 5.196734693877551, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 230, 24771.605197077955, 1754.8563178402487, 0.49, 3.7942857142857145, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 231, 25515.371723930948, 1747.1526932229397, 0.49, 2.7485714285714287, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 235, 25295.743462351733, 2037.465383913929, 0.49, 3.5983673469387756, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 240, 25598.91609580411, 2055.6203901839463, 0.49, 4.2326530612244895, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 241, 25029.950354532128, 1955.5833651476826, 0.49, 4.956734693877551, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 245, 25875.420364444642, 1995.0929292316744, 0.49, 3.492244897959184, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 250, 25317.06886156396, 1863.7504021582984, 0.49, 3.286530612244898, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 251, 24941.30054665416, 2130.5201797124305, 0.49, 2.639183673469388, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 255, 25428.889384546485, 2106.952618232032, 0.49, 3.28, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 260, 24872.119882036437, 2037.5409818087373, 0.49, 2.969795918367347, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 261, 24954.10740135016, 1844.4205480008843, 0.49, 3.9404081632653063, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 265, 25528.72436833895, 2646.2715066074948, 0.49, 3.6857142857142855, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 270, 24926.128882358837, 2287.681161070469, 0.49, 2.8, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 271, 25142.34349008314, 2101.4910955763685, 0.49, 3.6473469387755104, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 275, 24566.180806499895, 1953.0700521267734, 0.495, 3.8024489795918366, 22561.211219792516);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 280, 24561.617124157547, 2133.419017047826, 0.495, 4.573061224489796, 22561.211219792516);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 281, 25344.51666404733, 2054.630507451571, 0.495, 4.363265306122449, 22561.211219792516);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 285, 24998.005890645596, 1958.2776215176657, 0.495, 4.196734693877551, 22561.211219792516);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 290, 24592.271848664, 2161.105003042748, 0.495, 3.488979591836735, 22561.211219792516);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 291, 23944.568042445397, 2342.7719556231586, 0.495, 2.833469387755102, 22561.211219792516);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 295, 24606.91930514317, 2025.7394573716988, 0.495, 3.376326530612245, 22561.211219792516);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 300, 24967.794930118536, 2037.32753983769, 0.5, 3.8555102040816327, 22561.211219792516);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 301, 27661.620858230126, 1634.1954562241565, 0.49, 11.800816326530612, 23005.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 305, 25135.37047004557, 2096.080212105276, 0.575, 3.142857142857143, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 310, 24040.39039789864, 1598.4164642890394, 0.575, 2.3648979591836734, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 311, 24327.897401406502, 1706.4597411269403, 0.575, 3.005714285714286, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 315, 23968.480618125843, 1554.6228695665286, 0.575, 2.6546938775510203, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 320, 24336.833824007037, 1652.7526103810646, 0.575, 2.946938775510204, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 321, 23910.90935046345, 1687.5165182379103, 0.575, 2.455510204081633, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 325, 23638.713610373456, 1382.4885344189804, 0.575, 1.8310204081632653, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 330, 24045.097948870203, 1686.9173524515372, 0.575, 2.896326530612245, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 331, 23896.088808146753, 1320.0227418937454, 0.575, 2.4612244897959186, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 335, 24098.716094510826, 1993.868080150183, 0.575, 2.366530612244898, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 340, 23761.41480978499, 1307.0607356596183, 0.575, 2.333877551020408, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 341, 24244.50812610833, 1908.2234543165648, 0.575, 3.6212244897959183, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 345, 24209.692695707763, 1635.2760176146705, 0.575, 2.876734693877551, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 350, 24309.37379214392, 1864.2642482399822, 0.575, 2.7820408163265307, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 351, 24188.417081910447, 1886.6598524597919, 0.575, 2.7755102040816326, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 355, 24244.166524133412, 1573.807441513452, 0.575, 3.0906122448979594, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 360, 23989.193271350312, 1416.5522178125116, 0.575, 2.736326530612245, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 361, 24251.237058283696, 1606.7737278590528, 0.575, 3.364081632653061, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 365, 24346.14714686827, 1918.2784228886608, 0.575, 3.1485714285714286, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 370, 24270.08840762455, 2031.824221823566, 0.575, 2.8914285714285715, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 371, 24365.361704407213, 1875.4357696355441, 0.575, 2.969795918367347, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 375, 24219.141410183067, 1731.433440574863, 0.575, 3.0073469387755103, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 380, 23932.37958926703, 1211.3057732662112, 0.575, 3.1844897959183673, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 381, 24257.06996481307, 1984.343120176442, 0.575, 2.8253061224489797, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 385, 23600.428163973094, 1031.1857936477495, 0.575, 1.6963265306122448, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 390, 23932.750783271516, 1958.49422280806, 0.575, 2.204081632653061, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 391, 23625.285712927274, 1009.057549813349, 0.575, 2.0979591836734692, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 395, 23708.074068861482, 1240.7744969703904, 0.575, 2.3020408163265307, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 400, 23476.466370897022, 1035.2164328524743, 0.5, 1.656326530612245, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 401, 25550.86504756548, 1266.3473616801477, 0.5, 7.342040816326531, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 405, 24153.514993207857, 1336.2722885265443, 0.5, 2.8424489795918366, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 410, 24231.66253576567, 1086.8232530068494, 0.5, 3.0408163265306123, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 411, 24450.229486557204, 1262.8525886739612, 0.5, 3.6351020408163266, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 415, 24526.10447227481, 1503.4594308856076, 0.5, 3.8269387755102042, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 420, 24576.949713235736, 1437.4511792655685, 0.5, 3.7314285714285713, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 421, 24424.530717630772, 1321.361927413134, 0.5, 3.916734693877551, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 425, 24335.925971937297, 1234.6429646680924, 0.5, 3.6130612244897957, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 430, 24076.422164155323, 1119.1263506318298, 0.5, 2.6644897959183673, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 431, 24274.06717276442, 1207.595206378184, 0.5, 3.033469387755102, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 435, 24529.96165168159, 1249.3932270028977, 0.5, 4.0253061224489795, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 440, 24339.60861524986, 1321.700694306149, 0.5, 3.4187755102040818, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 441, 24432.061647671744, 1534.3744994381132, 0.5, 3.6285714285714286, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 445, 24441.187747918288, 1539.6545572165903, 0.5, 3.5983673469387756, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 450, 24400.368760904403, 1260.9034207377506, 0.5, 2.8620408163265307, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 451, 24128.37728365966, 1049.0410972284417, 0.5, 3.3559183673469386, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 455, 24441.159976421775, 1345.0295114869652, 0.5, 3.2677551020408164, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 460, 24431.05096289151, 1476.615995175368, 0.5, 3.6848979591836737, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 461, 24088.669305522246, 929.0856637872845, 0.5, 2.8155102040816327, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 465, 24155.595931851873, 1063.6889604060932, 0.5, 2.526530612244898, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 470, 23734.896548969173, 819.3718525139836, 0.5, 2.3248979591836734, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 471, 24434.55627217579, 1184.6724510241697, 0.5, 3.3102040816326532, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 475, 23919.657303704087, 1092.4252656212034, 0.5, 2.764081632653061, 23252.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 480, 24321.723091182077, 1211.082287410043, 0.5, 3.750204081632653, 23252.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 481, 24280.876639692695, 1106.443945464563, 0.5, 3.2889795918367346, 23252.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 485, 24496.37420077437, 1215.9567757280724, 0.5, 3.947755102040816, 23252.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 490, 24453.970472638644, 1212.5130426950595, 0.5, 3.476734693877551, 23252.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 491, 24164.300027967136, 1125.0412934603564, 0.5, 2.8955102040816327, 23252.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 495, 24066.18909702942, 1198.2267107544258, 0.5, 2.7616326530612243, 23252.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 500, 24587.600795352482, 1246.5722363362481, 0.5, 3.8848979591836734, 23252.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 501, 24908.315636362513, 1072.964460302508, 0.5, 4.681632653061224, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 505, 24212.625818723125, 1005.7939423696704, 0.5, 2.926530612244898, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 510, 23989.280156077682, 1001.6785191555202, 0.5, 2.3624489795918366, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 511, 24224.70323833453, 947.5895287003218, 0.5, 2.8285714285714287, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 515, 24284.82413136764, 1019.9583403166432, 0.5, 2.954285714285714, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 520, 24228.421020083, 1085.925566313997, 0.5, 3.1697959183673468, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 521, 24314.51398033739, 1106.7353077578564, 0.5, 3.0906122448979594, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 525, 24408.26129109033, 1111.8395122498139, 0.5, 2.5812244897959182, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 530, 24128.924454185668, 1028.9359849406414, 0.5, 3.0481632653061226, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 531, 24231.796977754533, 1046.7936646921144, 0.5, 2.4816326530612245, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 535, 23907.131466157432, 925.6879685688832, 0.5, 2.046530612244898, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 540, 23947.843747934712, 951.5926711715085, 0.5, 1.6310204081632653, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 541, 24077.423358773114, 960.1546824252022, 0.5, 2.6685714285714286, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 545, 23978.291029590935, 902.6296910809626, 0.5, 2.8620408163265307, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 550, 24306.940313991887, 1086.0033517105144, 0.5, 5.939591836734694, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 551, 24134.01728724076, 1040.218536574516, 0.5, 4.6538775510204085, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 555, 23970.358348683938, 972.898325451873, 0.5, 3.9714285714285715, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 560, 23941.2363579976, 911.7126079923509, 0.5, 4.429387755102041, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 561, 24098.208419819806, 988.2077980284067, 0.5, 4.656326530612245, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 565, 23978.37964448993, 899.584930926958, 0.5, 4.433469387755102, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 570, 24068.726371373286, 1018.4528743624784, 0.5, 4.146122448979592, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 571, 24019.716912181244, 973.151451769371, 0.5, 4.644897959183673, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 575, 23906.430868177777, 1074.6836084620816, 0.5, 3.676734693877551, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 580, 24129.243968654042, 1030.068856095706, 0.5, 3.874285714285714, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 581, 24159.84433431963, 1141.254802199315, 0.5, 4.084081632653061, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 585, 24090.62576485721, 1010.7654273756889, 0.5, 4.5869387755102045, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 590, 24023.498266255705, 910.8306393222165, 0.5, 5.195102040816327, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 591, 24108.38633601639, 1035.9105040482348, 0.5, 4.32, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 595, 23791.220701544527, 869.1364481035138, 0.5, 3.6710204081632654, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 600, 24125.016613751748, 1042.0839966211238, 0.5, 4.536326530612245, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 601, 24540.244912712664, 1031.6068416120663, 0.5, 6.711836734693877, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 605, 23642.306664141273, 975.3854364356517, 0.5, 4.074285714285714, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 610, 23415.98408108305, 899.2685061011736, 0.5, 3.6808163265306124, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 611, 23631.74216210874, 1000.4201318689969, 0.5, 3.8048979591836734, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 615, 23548.076767378956, 965.1342412773079, 0.5, 2.8351020408163263, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 620, 23868.737502877, 1076.960362466422, 0.5, 4.556734693877551, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 621, 23550.461708416376, 975.2501192365247, 0.5, 3.339591836734694, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 625, 23737.826058662282, 1036.476974340016, 0.5, 3.9689795918367348, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 630, 23803.23220107468, 1095.3698431932974, 0.5, 3.455510204081633, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 631, 23552.26149454664, 937.897407207223, 0.5, 3.440816326530612, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 635, 23743.731404016093, 998.2820353339205, 0.5, 3.626122448979592, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 640, 23614.545232253928, 1121.8444721968133, 0.5, 4.351020408163265, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 641, 23692.40569643577, 945.4883900809755, 0.5, 3.7012244897959183, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 645, 23601.88854561146, 985.412643284658, 0.5, 3.3836734693877553, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 650, 23317.244883700303, 812.5260074058676, 0.5, 2.6653061224489796, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 651, 23825.01281239216, 1084.714456786799, 0.5, 4.440816326530612, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 655, 23603.08067659378, 986.4587872889138, 0.5, 3.2718367346938777, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 660, 23688.915593198086, 1032.5905894641685, 0.5, 4.43265306122449, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 661, 23590.14138388594, 992.1346328844163, 0.5, 3.57469387755102, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 665, 23561.234852606125, 1060.7285683047376, 0.5, 3.1420408163265305, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 670, 23588.057206836158, 970.9516472007024, 0.5, 3.173877551020408, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 671, 23730.542294953553, 966.3497928939646, 0.5, 3.7542857142857144, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 675, 23518.16588734535, 959.9784996379632, 0.5, 1.7910204081632652, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 680, 23444.015431580534, 915.2600902494141, 0.5, 1.8424489795918368, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 681, 23698.696790657857, 1224.4763697549292, 0.5, 2.1314285714285712, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 685, 23347.281757185916, 868.691740022704, 0.5, 1.526530612244898, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 690, 23527.321757185917, 937.9463517576634, 0.5, 1.653061224489796, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 691, 23605.119839466704, 1034.459653450698, 0.5, 2.2742857142857145, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 695, 23685.144735020745, 1105.2910978958528, 0.5, 2.3510204081632655, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 700, 23358.001757185917, 842.7064080710919, 0.5, 1.3991836734693877, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 701, 24400.79091405449, 901.0498247546249, 0.5, 5.046530612244898, 23245.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 705, 23406.254246842465, 502.6716484023369, 0.5, 0.7853061224489796, 23245.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 710, 23430.411509318812, 515.9630592181486, 0.5, 1.2073469387755102, 23245.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 711, 23443.747607433117, 555.8979604648498, 0.5, 0.6914285714285714, 23245.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 715, 24113.698845783718, 1039.5138606621479, 0.5, 4.25795918367347, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 720, 24158.814246842467, 992.0264224741222, 0.5, 3.2857142857142856, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 721, 24058.587607433117, 940.8820310360544, 0.5, 2.6685714285714286, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 725, 24034.243797828014, 947.2647493473033, 0.5, 2.856326530612245, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 730, 24367.092554899813, 1064.5116501437215, 0.5, 3.229387755102041, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 731, 23976.1733358996, 949.4676549949618, 0.5, 3.2351020408163267, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 735, 24129.3933358996, 975.4672824125614, 0.5, 2.770612244897959, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 740, 24031.847607433116, 958.4021873165049, 0.5, 2.3102040816326532, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 741, 24022.603797828015, 935.8916675844548, 0.5, 2.7118367346938776, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 745, 23893.511105046324, 929.592862581068, 0.5, 1.9942857142857142, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 750, 24187.407607433117, 950.0186601819344, 0.5, 2.6342857142857143, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 751, 24097.727607433117, 923.3703128722937, 0.5, 2.9551020408163264, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 755, 24090.847607433116, 952.534587512791, 0.5, 2.8424489795918366, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 760, 24104.287607433114, 936.7759856801086, 0.5, 2.390204081632653, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 761, 24048.115591799276, 978.3522397667814, 0.5, 2.602448979591837, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 765, 24052.123797828015, 928.4273784049907, 0.5, 2.5942857142857143, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 770, 23882.023797828017, 913.6996310455713, 0.5, 2.2783673469387753, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 771, 24069.207607433116, 926.3183752063317, 0.5, 2.7224489795918365, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 775, 24121.447607433118, 944.0148917884547, 0.5, 2.84, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 780, 23900.243797828014, 926.0512426202652, 0.5, 2.57469387755102, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 781, 24032.687607433116, 934.0675664937254, 0.5, 2.780408163265306, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 785, 24080.79998822292, 937.9784051193199, 0.5, 2.857142857142857, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 790, 24054.567607433117, 946.9144081312368, 0.5, 2.3755102040816327, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 791, 24211.833440023474, 1017.9001973884208, 0.5, 2.6489795918367345, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 795, 24076.887607433117, 913.2745917849678, 0.5, 3.075918367346939, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 800, 24416.687607433112, 912.8067582786533, 0.5, 2.1942857142857144, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 801, 23446.283350257207, 687.6526345758573, 0.5, 1.3673469387755102, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 805, 23244.833713697404, 752.5159680166608, 0.5, 0.8848979591836734, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 810, 23457.331870773844, 1154.0030877693412, 0.5, 1.316734693877551, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 811, 23302.07439987335, 828.7289711524623, 0.5, 1.2277551020408164, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 815, 23413.603901243085, 753.5306262743977, 0.5, 1.9289795918367347, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 820, 23350.076718687673, 804.4162250434397, 0.5, 1.3983673469387754, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 821, 23175.838697735402, 591.5315207575285, 0.5, 0.7910204081632654, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 825, 23329.480268292617, 849.910346461924, 0.5, 1.3012244897959184, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 830, 23295.56026829262, 833.1703568865761, 0.5, 1.1942857142857144, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 831, 23384.641838849835, 1024.0675607721896, 0.5, 1.2930612244897959, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 835, 23167.637127178183, 383.8082668654832, 0.5, 0.9828571428571429, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 840, 23154.35712717818, 387.1275953765644, 0.5, 0.9461224489795919, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 841, 23244.577023346996, 662.1059395507845, 0.5, 1.0661224489795917, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 845, 23455.076854811843, 1082.3326051022639, 0.5, 1.6016326530612246, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 850, 23382.290300216628, 1049.845871576183, 0.5, 1.1991836734693877, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 851, 23123.83712717818, 331.83511088540115, 0.5, 0.7346938775510204, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 855, 23278.000268292613, 811.1331579795471, 0.5, 1.0506122448979591, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 860, 23386.495284254626, 908.6414950410491, 0.5, 1.5077551020408164, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 861, 23422.101838849834, 975.4878136897038, 0.5, 1.5477551020408162, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 865, 23180.378697735396, 620.5533941498383, 0.5, 0.7069387755102041, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 870, 23247.320268292613, 765.0288703128687, 0.5, 0.8612244897959184, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 871, 23317.637127178183, 523.2606269092577, 0.5, 1.8612244897959183, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 875, 23232.01712717818, 439.8709662375724, 0.5, 1.310204081632653, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 880, 23341.040268292618, 860.6741970060451, 0.5, 1.426938775510204, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 881, 23356.698697735403, 689.855367212272, 0.5, 1.8057142857142856, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 885, 23036.137127178183, 154.1492782986676, 0.5, 0.12, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 890, 23014.33712717818, 2.204948129406426E-11, 0.5, 0.0, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 891, 23014.33712717818, 2.204948129406426E-11, 0.5, 0.0, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 895, 23014.33712717818, 2.204948129406426E-11, 0.5, 0.0, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 900, 23014.33712717818, 2.204948129406426E-11, 0.5, 0.0, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 901, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 905, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 910, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 911, 23165.39599511581, 312.3809472065969, 0.5, 0.12, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 915, 23164.735995115814, 307.71404245076593, 0.5, 0.12, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 920, 23137.56102728474, 115.55800213199214, 0.5, 0.12, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 921, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 925, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 930, 23141.36102728474, 142.42805981708102, 0.5, 0.2, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 931, 23141.36102728474, 142.42805981708105, 0.5, 0.2, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 935, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 940, 23142.38102728474, 149.64054898518347, 0.5, 0.12, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 941, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 945, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 950, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 951, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 955, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 960, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 961, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 965, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 970, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 971, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 975, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 980, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 981, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 985, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 990, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 991, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 995, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1000, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);

        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 18, 96, 74, 91, 7, 41, 88, 30, 79, 55, 3, 64, 25, 65, 69, 21, 93, 15, 87, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 18, 96, 74, 91, 7, 41, 88, 30, 79, 55, 3, 64, 25, 65, 69, 21, 93, 15, 87, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 18, 96, 74, 91, 7, 41, 88, 30, 79, 55, 3, 64, 25, 65, 69, 21, 93, 15, 87, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 18, 96, 74, 91, 7, 41, 88, 30, 79, 55, 3, 64, 25, 65, 69, 21, 93, 15, 87, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 18, 96, 74, 91, 7, 41, 88, 30, 79, 55, 3, 64, 25, 65, 69, 21, 93, 15, 87, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 18, 96, 74, 91, 7, 41, 88, 30, 79, 55, 3, 64, 25, 65, 69, 21, 93, 15, 87, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 18, 96, 74, 91, 7, 41, 88, 30, 79, 55, 3, 64, 25, 65, 69, 21, 93, 15, 87, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 18, 96, 74, 91, 7, 41, 88, 30, 79, 55, 3, 64, 25, 65, 69, 21, 93, 15, 87, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 15, 21, 69, 65, 25, 64, 3, 74, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 15, 21, 69, 65, 25, 64, 3, 74, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 86, 56, 6, 19, 11, 26, 85, 34, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 86, 56, 6, 19, 11, 26, 85, 34, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 86, 56, 6, 19, 11, 26, 85, 34, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 86, 56, 6, 19, 11, 26, 85, 34, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 86, 56, 6, 19, 11, 26, 85, 34, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 86, 56, 6, 19, 11, 26, 85, 34, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 86, 56, 6, 19, 11, 26, 85, 34, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 86, 56, 6, 19, 11, 26, 85, 34, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 56, 86, 19, 11, 26, 85, 34, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 56, 86, 19, 11, 26, 85, 34, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 25, 65, 64, 3, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 55, 96, 3, 64, 65, 25, 30, 79, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 55, 96, 3, 64, 65, 25, 30, 79, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 55, 96, 3, 64, 65, 25, 30, 79, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 55, 96, 3, 64, 65, 25, 30, 79, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 55, 96, 3, 64, 65, 25, 30, 79, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 55, 96, 3, 64, 65, 25, 30, 79, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 55, 96, 3, 64, 65, 25, 30, 79, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 55, 96, 3, 64, 65, 25, 30, 79, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 55, 96, 3, 64, 65, 25, 30, 79, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 55, 96, 3, 64, 65, 25, 30, 79, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 3, 64, 65, 25, 96, 74, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 3, 64, 65, 25, 96, 74, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 3, 64, 65, 25, 96, 74, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 3, 64, 65, 25, 96, 74, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 3, 64, 65, 25, 96, 74, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 3, 64, 65, 25, 96, 74, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 3, 64, 65, 25, 96, 74, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 3, 64, 65, 25, 96, 74, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 3, 64, 65, 25, 96, 74, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 3, 64, 65, 25, 96, 74, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 87, 15, 21, 69, 93, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 87, 15, 21, 69, 93, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[0, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[0, 27, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA150_with_seed_1_mag_0_1_freq_10() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA150));
        MMAS_3OPT_MADTSP mmas_3OPT_madtsp = new MMAS_3OPT_MADTSP(graph, 0.8, 1000, 0.1, 10, 1.0, 5.0);
        mmas_3OPT_madtsp.setMmasSeed(1);
        mmas_3OPT_madtsp.setDbgpSeed(1);
        mmas_3OPT_madtsp.setStatisticInterval(1);
        mmas_3OPT_madtsp.setShowLog(false);
        mmas_3OPT_madtsp.run();
        assertThat(mmas_3OPT_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(29831.954382917804);
        assertThat(mmas_3OPT_madtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(29831.954382917804);
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getGlobalStatistics())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");

        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1, 40016.22976406926, 2379.356272740218, 0.0, 81.43836734693878, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 5, 34030.1760569372, 1524.3009950695932, 0.0, 32.562448979591835, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 10, 34034.09169778277, 1760.5393642660229, 0.0, 17.725714285714286, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 11, 37383.580555738816, 2193.327179876958, 0.49, 33.118367346938776, 29604.92523117799);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 15, 32283.59684834008, 1687.137945901987, 0.49, 18.426938775510205, 29604.92523117799);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 20, 32222.074657610716, 1623.7308538478785, 0.49666666666666665, 18.76326530612245, 28573.67904449446);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 21, 34478.79649807464, 1954.7814723680756, 0.5066666666666667, 22.03918367346939, 28942.425390304456);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 25, 33790.08602359276, 2280.835848538287, 0.5066666666666667, 20.931428571428572, 28942.425390304456);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 30, 33913.55693837033, 2707.2516761182083, 0.5066666666666667, 22.103673469387754, 28942.425390304456);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 31, 36989.47120149323, 2416.222376991091, 0.48333333333333334, 34.928979591836736, 28150.19835200125);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 35, 30764.35107320563, 2886.5063359832743, 0.48333333333333334, 7.842448979591837, 28150.19835200125);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 40, 30372.179653254585, 2387.99717295527, 0.48333333333333334, 6.448979591836735, 28150.19835200125);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 41, 34823.096286597014, 2090.290358315042, 0.49333333333333335, 20.03183673469388, 28684.493785221246);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 45, 31199.289935884848, 2834.197460392122, 0.5566666666666666, 10.38204081632653, 28321.926598625174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 50, 30680.98252789736, 2522.6114113941603, 0.5566666666666666, 6.424489795918367, 28321.926598625174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 51, 35204.79871753849, 2156.857585402403, 0.49666666666666665, 17.731428571428573, 27792.091493229764);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 55, 31355.945088919434, 2591.3329301224016, 0.49666666666666665, 7.7371428571428575, 27792.091493229764);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 60, 29977.279151672068, 2555.6443800837205, 0.5, 6.111020408163266, 27728.523909614516);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 61, 35259.51781734937, 2407.867638292568, 0.49, 18.595102040816325, 28594.709618986446);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 65, 32234.45115249983, 3125.422907783073, 0.49, 8.536326530612245, 28594.709618986446);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 70, 31717.11161694188, 2470.636681190337, 0.49, 7.104489795918368, 28594.709618986446);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 71, 34991.2775188256, 2302.6037714747927, 0.5033333333333333, 12.35265306122449, 28442.785153748802);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 75, 30193.96728220519, 2158.5054391760395, 0.5033333333333333, 7.353469387755102, 28442.785153748802);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 80, 31338.471781465047, 2695.9741502712964, 0.5033333333333333, 8.089795918367347, 28442.785153748802);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 81, 35044.594019755146, 1919.722128185548, 0.49666666666666665, 19.373061224489796, 29182.266242467726);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 85, 31315.594099552814, 2450.1844535460423, 0.6933333333333334, 8.648163265306122, 29113.22134558545);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 90, 31710.95251373423, 2484.960959166974, 0.6933333333333334, 10.508571428571429, 29113.22134558545);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 91, 37784.18362189854, 1787.3770223023525, 0.4866666666666667, 36.29551020408163, 29524.19506407426);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 95, 34380.10416095434, 1526.018174580869, 0.4866666666666667, 19.278367346938776, 29524.19506407426);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 100, 33636.927408627605, 2190.0020783772707, 0.6233333333333333, 15.990204081632653, 29524.19506407426);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 101, 35307.081333688155, 1984.9701556638422, 0.62, 31.99591836734694, 28635.686628321113);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 105, 33591.924023337466, 1707.1795139190617, 0.62, 12.853877551020409, 28635.686628321113);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 110, 32934.017737590984, 1937.9125971151157, 0.62, 10.096326530612245, 28635.686628321113);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 111, 35366.362974407595, 1928.7385070854614, 0.5, 21.40326530612245, 31423.568406939285);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 115, 33477.30515108873, 2546.1429779802047, 0.6166666666666667, 8.497142857142856, 28290.234389569552);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 120, 32917.97990774519, 2927.381264444374, 0.6166666666666667, 8.675918367346938, 28290.234389569552);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 121, 34124.03436563867, 2155.7207932017873, 0.49666666666666665, 15.053061224489795, 28486.352731259867);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 125, 32170.130513824886, 1165.3840683786032, 0.49666666666666665, 9.739591836734695, 28486.352731259867);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 130, 31887.90344737883, 913.4779809380314, 0.49666666666666665, 8.329795918367347, 28486.352731259867);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 131, 34768.743106385664, 1433.2894795326924, 0.5566666666666666, 12.848979591836734, 29532.79305885755);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 135, 31611.867669945463, 1847.6286527603183, 0.5566666666666666, 5.1257142857142854, 29532.79305885755);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 140, 31825.10668772236, 2102.1643273251602, 0.5566666666666666, 6.502040816326531, 29532.79305885755);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 141, 34601.05472854239, 1191.8242234736115, 0.52, 15.976326530612244, 29225.322904065404);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 145, 31811.30492970815, 1743.2541426717003, 0.52, 12.058775510204082, 29225.322904065404);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 150, 31632.17402540047, 2252.2426250744447, 0.5, 7.222857142857142, 29166.322904065404);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 151, 33510.194411302924, 2329.0916758730773, 0.5066666666666667, 13.237551020408164, 29420.0565598931);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 155, 31402.783550253676, 2100.0407102893337, 0.5066666666666667, 6.196734693877551, 29420.0565598931);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 160, 31563.449233057047, 2308.472640682122, 0.5066666666666667, 6.48734693877551, 29420.0565598931);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 161, 34807.01856264928, 1965.8852826935806, 0.49333333333333335, 18.6465306122449, 29520.24953080737);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 165, 32228.68858898425, 2032.4862513173584, 0.49333333333333335, 14.522448979591836, 29520.24953080737);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 170, 33859.8015390229, 1405.100549283416, 0.49333333333333335, 12.566530612244899, 29520.24953080737);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 171, 35132.62630345232, 1664.823173144162, 0.51, 31.964081632653063, 28709.386140239476);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 175, 31378.76362082744, 1613.1824977571523, 0.51, 10.096326530612245, 28709.386140239476);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 180, 31261.857464215333, 1475.2306871355138, 0.51, 11.448163265306123, 28709.386140239476);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 181, 33815.16034235814, 1650.2041410437148, 0.5266666666666666, 13.640816326530611, 28825.09256372811);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 185, 31556.707458641824, 1528.3417616471675, 0.5266666666666666, 8.471836734693877, 28825.09256372811);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 190, 31164.79474179814, 2037.0042460390914, 0.5266666666666666, 6.964081632653061, 28825.09256372811);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 191, 34283.03133715542, 1705.0862321162163, 0.49333333333333335, 16.51918367346939, 28819.945589219064);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 195, 31524.60836381325, 1829.2936972448763, 0.49333333333333335, 7.510204081632653, 28819.945589219064);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 200, 30935.824397621498, 2225.881320672041, 0.5, 5.634285714285714, 28819.945589219064);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 201, 33537.843610248485, 1646.4534480485754, 0.4866666666666667, 17.562448979591835, 28745.28857224002);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 205, 30261.83460883858, 1700.854536447145, 0.4866666666666667, 5.18530612244898, 28745.28857224002);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 210, 30708.045813527893, 1699.894961413385, 0.4866666666666667, 7.094693877551021, 28745.28857224002);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 211, 33755.49510863481, 1551.8008436861405, 0.49333333333333335, 10.257142857142858, 28790.163345660854);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 215, 31058.03409320365, 2030.1169456601565, 0.49333333333333335, 5.668571428571428, 28790.163345660854);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 220, 31457.804308797276, 2282.621791518003, 0.49333333333333335, 5.533877551020408, 28790.163345660854);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 221, 36080.30286818146, 2445.563050560065, 0.49666666666666665, 15.386938775510204, 29223.41449989717);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 225, 31849.559260207894, 2117.10244318944, 0.49666666666666665, 9.827755102040816, 29223.41449989717);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 230, 31436.095092845462, 2580.660557000127, 0.5, 6.071020408163266, 29151.41449989717);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 231, 32260.601892233528, 2074.7863840322234, 0.5133333333333333, 8.343673469387754, 28510.617027068587);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 235, 31117.223701312978, 2109.226355816282, 0.5133333333333333, 8.200816326530612, 28510.617027068587);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 240, 30599.276215547543, 2211.3133354138026, 0.5133333333333333, 5.57469387755102, 28510.617027068587);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 241, 32412.247708136936, 1828.5826749287367, 0.49666666666666665, 8.233469387755102, 28740.266798919547);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 245, 31564.517040119285, 1741.015586405459, 0.49666666666666665, 8.56734693877551, 28740.266798919547);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 250, 30744.40256387588, 2191.730301018965, 0.49666666666666665, 6.491428571428571, 28740.266798919547);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 251, 32024.264618309633, 1681.84012074842, 0.49666666666666665, 8.277551020408163, 29303.697419805198);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 255, 31462.1327267659, 1355.7232694921063, 0.49666666666666665, 3.9624489795918367, 29303.697419805198);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 260, 31271.824094306605, 1325.140469069874, 0.49666666666666665, 3.4685714285714284, 29303.697419805198);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 261, 34219.780060987076, 1139.1299492068056, 0.49333333333333335, 10.657142857142857, 29846.428937420504);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 265, 30891.925411252156, 1624.5763097710794, 0.5, 4.011428571428572, 29439.386140239476);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 270, 30438.50486199514, 1545.3226735393773, 0.5, 3.6718367346938776, 29439.386140239476);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 271, 32792.31889087311, 1585.4987408888014, 0.49666666666666665, 9.222040816326531, 29247.918338271473);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 275, 30365.903348874745, 1778.7944089650937, 0.49666666666666665, 3.8669387755102043, 29247.918338271473);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 280, 30600.277083144443, 1918.3698172345219, 0.49666666666666665, 4.2057142857142855, 29247.918338271473);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 281, 33476.137713458695, 2023.5579132767093, 0.49666666666666665, 10.121632653061225, 29146.905521431083);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 285, 30180.90446779982, 1656.283026234364, 0.49666666666666665, 2.993469387755102, 29146.905521431083);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 290, 30149.342581757544, 1571.3920243301206, 0.49666666666666665, 2.9804081632653063, 29146.905521431083);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 291, 31902.465920828086, 2030.2721871518934, 0.5, 7.053061224489796, 28816.176322157553);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 295, 30342.64451155619, 2258.1457042622496, 0.5, 5.218775510204082, 28816.176322157553);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 300, 30092.182347499354, 1855.3258656800238, 0.5, 3.8448979591836734, 28816.176322157553);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 301, 32242.28996748474, 1917.0490218337168, 0.5, 6.506122448979592, 29572.220384880948);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 305, 31191.811049058735, 1991.6013034836324, 0.5, 5.116734693877551, 29572.220384880948);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 310, 31521.250344371245, 2131.0834374085202, 0.5, 5.493877551020408, 29572.220384880948);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 311, 33260.57486086342, 2358.855335412064, 0.5, 9.441632653061225, 29434.56277814985);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 315, 30955.342677184846, 2020.6970990243428, 0.5, 4.628571428571429, 29434.56277814985);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 320, 30763.140967163486, 1744.500911561277, 0.5, 4.387755102040816, 29434.56277814985);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 321, 34378.582181104786, 2480.190495563015, 0.49333333333333335, 10.233469387755102, 30123.838666147753);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 325, 30890.115910751774, 1747.1157941422414, 0.49333333333333335, 2.4416326530612245, 30123.838666147753);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 330, 31300.45982496497, 1767.2897200372418, 0.49333333333333335, 5.174693877551021, 30123.838666147753);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 331, 36341.992872428775, 3068.4659332974675, 0.49666666666666665, 16.39591836734694, 29466.903263117063);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 335, 31055.39644106557, 2760.9313206299694, 0.49666666666666665, 3.9648979591836735, 29466.903263117063);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 340, 30952.258304290244, 2119.2164665867112, 0.49666666666666665, 4.762448979591837, 29466.903263117063);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 341, 32880.74492772775, 1972.4224485951831, 0.5, 8.22938775510204, 29210.410636207616);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 345, 30526.74907023596, 1640.4311887905442, 0.5, 3.159183673469388, 29210.410636207616);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 350, 30333.338265346978, 1397.6560623400826, 0.5, 3.0783673469387756, 29210.410636207616);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 351, 34324.79338678661, 1711.6866951279262, 0.49333333333333335, 18.538775510204083, 30036.39360033983);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 355, 32774.30737497526, 2328.4744676997734, 0.49333333333333335, 8.233469387755102, 30036.39360033983);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 360, 31910.61617570653, 2087.4471825836517, 0.49333333333333335, 3.1844897959183673, 30036.39360033983);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 361, 34593.35934250032, 1900.5975207724885, 0.49, 14.273469387755101, 29971.376380179274);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 365, 30503.80353705877, 1110.7831719873611, 0.49, 2.9322448979591837, 29971.376380179274);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 370, 31193.03365419732, 2463.5784747979305, 0.49, 4.052244897959183, 29971.376380179274);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 371, 33219.25296585415, 1342.9644673156622, 0.49333333333333335, 11.36734693877551, 29665.139499936817);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 375, 30438.04150839096, 1199.8016991653262, 0.49333333333333335, 5.325714285714286, 29665.139499936817);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 380, 30687.574013122437, 1199.9020029590895, 0.49333333333333335, 7.073469387755102, 29665.139499936817);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 381, 36143.96436404721, 1294.1791437701202, 0.48, 21.920816326530613, 33953.376698575215);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 385, 33275.78757960467, 1611.3095582390436, 0.5166666666666667, 9.950204081632654, 29955.62156548813);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 390, 32530.767226524436, 1762.5826420728067, 0.5166666666666667, 7.0081632653061225, 29955.62156548813);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 391, 35644.090928614285, 1825.4073836306807, 0.49333333333333335, 16.91673469387755, 29081.363191710945);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 395, 31703.276183002028, 2444.313240294991, 0.49333333333333335, 4.99265306122449, 29081.363191710945);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 400, 31726.46160547667, 2248.7895584576827, 0.5, 5.990204081632653, 29004.16807954416);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 401, 34698.84986564089, 2027.261822239353, 0.5, 8.379591836734694, 29466.68158663398);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 405, 33304.10702967232, 1335.6512951273078, 0.5, 6.666938775510204, 29466.68158663398);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 410, 32515.26941130053, 1162.3633327215782, 0.5, 6.428571428571429, 29466.68158663398);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 411, 37322.26112181053, 2232.5170955988933, 0.49666666666666665, 9.451428571428572, 29128.602311301518);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 415, 32395.210699802676, 2984.4818832744945, 0.49666666666666665, 3.7077551020408164, 29128.602311301518);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 420, 32635.417642711433, 2752.4326182643463, 0.49666666666666665, 3.914285714285714, 29128.602311301518);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 421, 36621.933822694904, 1597.9158145646284, 0.49, 20.10938775510204, 29805.11933245875);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 425, 32085.710796142663, 1973.831855878221, 0.49, 3.436734693877551, 29805.11933245875);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 430, 32728.227969689844, 2124.023761890654, 0.49, 4.45469387755102, 29805.11933245875);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 431, 32740.119979710653, 1730.7791472503957, 0.5, 5.246530612244898, 29522.845910935444);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 435, 31262.321757634953, 1854.0422632695436, 0.5, 2.8677551020408165, 29522.845910935444);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 440, 31671.23403245241, 2008.5081825142515, 0.5, 3.346122448979592, 29522.845910935444);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 441, 34509.02168885842, 1288.4050850104234, 0.49, 13.315918367346939, 29485.351580914772);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 445, 30688.9793013325, 1867.1507735087655, 0.49, 2.763265306122449, 29485.351580914772);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 450, 31047.04850392584, 2019.1405180926797, 0.49, 2.68734693877551, 29485.351580914772);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 451, 34236.14063559741, 1002.3059428996388, 0.49333333333333335, 6.450612244897959, 29316.15980384377);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 455, 30325.719556569886, 1815.93141621494, 0.5, 2.449795918367347, 29049.15980384377);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 460, 30387.150965830682, 2013.673338276085, 0.5, 2.5208163265306123, 29049.15980384377);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 461, 31025.918803040717, 2062.103676594348, 0.5, 3.3787755102040817, 29089.01786310474);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 465, 30044.74671108302, 1732.928522496403, 0.5, 1.989387755102041, 29089.01786310474);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 470, 30169.57227149516, 1974.6499118921888, 0.5, 1.5755102040816327, 29089.01786310474);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 471, 32287.639756564404, 1597.8716357549538, 0.49666666666666665, 4.779591836734694, 29918.42263706654);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 475, 31107.244430564726, 1898.4423118364693, 0.49666666666666665, 2.8579591836734695, 29918.42263706654);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 480, 31359.077454722974, 2040.4328603616138, 0.49666666666666665, 3.006530612244898, 29918.42263706654);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 481, 35284.75834145145, 2149.1926802805333, 0.49666666666666665, 8.809795918367348, 29538.68052101861);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 485, 30254.325364668864, 1453.0478464921675, 0.49666666666666665, 2.259591836734694, 29538.68052101861);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 490, 30329.682741893692, 1286.8697567608535, 0.49666666666666665, 3.0546938775510206, 29538.68052101861);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 491, 30208.055566889034, 1446.4472862910138, 0.5, 2.1697959183673468, 29267.51419769571);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 495, 30476.2593494807, 1768.9929453834009, 0.5, 2.911020408163265, 29267.51419769571);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 500, 30214.347618492007, 1663.4864640158323, 0.5, 1.8848979591836734, 29267.51419769571);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 501, 32043.007431435926, 2389.624646009529, 0.5, 4.689795918367347, 29737.58108860873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 505, 30774.718078141952, 2081.0352733356362, 0.5, 2.6375510204081634, 29737.58108860873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 510, 31193.355444529898, 2218.354847136766, 0.5, 3.7681632653061223, 29737.58108860873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 511, 31760.415320202123, 2299.44911648976, 0.5, 4.756734693877551, 29477.895146750907);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 515, 31005.501262161593, 2199.219158664281, 0.5, 3.495510204081633, 29477.895146750907);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 520, 29763.61514675091, 837.8850936757862, 0.5, 1.716734693877551, 29477.895146750907);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 521, 31677.825978873818, 2326.63567972584, 0.49666666666666665, 5.103673469387755, 29500.169277920235);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 525, 29863.26226758104, 851.9982494425599, 0.49666666666666665, 1.6816326530612244, 29500.169277920235);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 530, 29847.14766515135, 1034.0146251567605, 0.49666666666666665, 1.3959183673469389, 29500.169277920235);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 531, 33589.79159843149, 1299.5364652022924, 0.49666666666666665, 9.601632653061225, 30044.895146750907);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 535, 31860.13842873471, 1076.9081908367027, 0.49666666666666665, 3.2522448979591836, 30044.895146750907);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 540, 32347.587782175782, 1809.6415443017372, 0.49666666666666665, 4.062857142857143, 30044.895146750907);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 541, 31416.917634272053, 1403.2644400576858, 0.5133333333333333, 4.380408163265306, 29361.895146750907);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 545, 29758.972411660405, 1040.9201020019582, 0.5, 1.302857142857143, 29256.895146750907);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 550, 29698.201687794415, 1077.254232554082, 0.5, 1.4628571428571429, 29256.895146750907);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 551, 36019.41980399605, 1080.8416382820699, 0.49, 13.553469387755102, 30469.010809374344);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 555, 30381.922856166642, 883.8485703529259, 0.5733333333333334, 2.64, 29917.26067740972);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 560, 30405.48513062311, 1229.0651813371346, 0.5733333333333334, 1.9420408163265306, 29917.26067740972);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 561, 31481.104247766725, 716.7919944308977, 0.51, 2.6489795918367345, 29514.895146750907);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 565, 29338.51514675091, 166.69462364161708, 0.57, 0.4710204081632653, 29295.895146750907);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 570, 29467.678401922003, 569.3534251645085, 0.57, 1.0244897959183674, 29295.895146750907);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 571, 31092.703062984896, 1775.060138121194, 0.5, 4.240816326530612, 29336.145815464282);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 575, 29360.385815464266, 171.4026837596192, 0.5, 0.28, 29336.145815464282);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 580, 29807.847288176916, 1225.2670371098002, 0.5, 1.436734693877551, 29336.145815464282);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 581, 30761.89760373738, 1203.6695307839643, 0.5, 2.4204081632653063, 29233.091891616747);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 585, 29785.02788367517, 1259.6000542632128, 0.5, 1.356734693877551, 29233.091891616747);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 590, 29416.494523174468, 806.2711813783573, 0.5, 0.43755102040816324, 29233.091891616747);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 591, 30698.53274275803, 1919.8625652899477, 0.5, 3.0677551020408163, 29317.592904866582);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 595, 29674.538889593954, 1003.1980345103817, 0.5, 1.166530612244898, 29317.592904866582);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 600, 29696.622082809754, 968.27056139633, 0.5, 1.693061224489796, 29317.592904866582);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 601, 31413.29814473073, 1867.932266611393, 0.5, 4.230204081632653, 29643.870803535377);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 605, 30110.789591877245, 908.3638889237313, 0.5, 1.8277551020408163, 29643.870803535377);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 610, 29857.09160706744, 549.3609276323152, 0.5, 0.7902040816326531, 29643.870803535377);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 611, 31460.001551495694, 1746.1466448485837, 0.5, 2.8522448979591837, 29717.09676041546);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 615, 30128.87508581871, 1170.9907155384083, 0.5, 1.1314285714285715, 29717.09676041546);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 620, 29923.263458641435, 835.2917631264079, 0.5, 0.6351020408163265, 29717.09676041546);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 621, 31276.633484583068, 1997.458255659959, 0.5, 3.5020408163265304, 29540.488931356387);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 625, 30281.602803357157, 1612.1290605147499, 0.5, 1.7118367346938776, 29540.488931356387);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 630, 29677.870231151803, 495.1894119517921, 0.5, 0.6326530612244898, 29540.488931356387);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 631, 31382.050799855268, 2213.600401228448, 0.5, 3.3853061224489798, 29505.474942539313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 635, 29631.921941020304, 491.2497466453976, 0.5, 0.5551020408163265, 29505.474942539313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 640, 29727.735097927376, 642.4294164036609, 0.5, 1.0922448979591837, 29505.474942539313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 641, 30781.763781306803, 877.846764748393, 0.5, 3.284081632653061, 29765.419312087815);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 645, 30334.269181379816, 1007.858526718398, 0.5, 2.3085714285714287, 29765.419312087815);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 650, 30359.02077740742, 1023.3757660731682, 0.5, 2.3102040816326532, 29765.419312087815);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 651, 31468.38920277263, 1188.0071115584776, 0.5, 4.022857142857143, 29643.75320038624);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 655, 30090.931570455272, 964.2087775043962, 0.5, 1.3624489795918366, 29643.75320038624);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 660, 30009.027590137208, 887.5368992441454, 0.5, 0.8881632653061224, 29643.75320038624);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 661, 30091.374983808535, 649.3831701319255, 0.5, 1.346938775510204, 29677.035035314853);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 665, 29732.14370319034, 222.7723488245807, 0.5, 0.3575510204081633, 29677.035035314853);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 670, 29814.152468091044, 532.2654336535392, 0.5, 0.7077551020408164, 29677.035035314853);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 671, 31687.99436436756, 435.8486716492955, 0.49333333333333335, 2.605714285714286, 30810.035035314853);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 675, 30337.273545178108, 855.7362372188742, 0.53, 1.169795918367347, 30036.035035314853);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 680, 30151.3944703718, 438.4113318600029, 0.53, 0.8326530612244898, 30036.035035314853);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 681, 30934.581220606695, 496.03095611906923, 0.49666666666666665, 1.8979591836734695, 29759.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 685, 29839.31616324536, 337.11183634527225, 0.49666666666666665, 0.5551020408163265, 29759.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 690, 29975.75616324536, 589.7302890962537, 0.49666666666666665, 1.386938775510204, 29759.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 691, 30224.182691958278, 390.31909717547995, 0.5, 1.5183673469387755, 29828.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 695, 30052.407793191906, 631.5673907359076, 0.5, 1.0269387755102042, 29828.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 700, 29913.248224632913, 305.11428602618236, 0.5, 0.7518367346938776, 29828.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 701, 31134.086566176455, 878.4912315951045, 0.5, 5.158367346938776, 29731.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 705, 29937.314535142617, 661.8299814069026, 0.5, 0.9338775510204081, 29731.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 710, 29777.75616324536, 186.7852024030133, 0.5, 0.3902040816326531, 29731.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 711, 30121.72432080969, 403.3825320938246, 0.49666666666666665, 0.9077551020408163, 29883.175876257985);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 715, 30055.89108876345, 529.4828448365926, 0.49666666666666665, 0.7861224489795918, 29883.175876257985);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 720, 29883.17587625796, 2.572439484307497E-11, 0.49666666666666665, 0.0, 29883.175876257985);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 721, 31143.16691985154, 587.9739885802404, 0.5, 2.8122448979591836, 29673.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 725, 29747.649424000825, 359.0719588974018, 0.5, 0.35918367346938773, 29673.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 730, 29837.736759146774, 590.0968728278991, 0.5, 0.8653061224489796, 29673.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 731, 31969.844626377533, 386.6873308010222, 0.49666666666666665, 1.006530612244898, 29598.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 735, 29836.000465486442, 772.8310033806625, 0.49666666666666665, 0.7836734693877551, 29598.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 740, 29627.315016339762, 144.6947974701436, 0.49666666666666665, 0.23510204081632652, 29598.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 741, 30641.754987303237, 699.8706847710199, 0.5, 3.9959183673469387, 29763.079019861194);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 745, 29831.506990727954, 371.12537697702385, 0.5, 0.31918367346938775, 29763.079019861194);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 750, 29817.131318787215, 382.20747109298276, 0.5, 0.28, 29763.079019861194);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 751, 29879.648157196814, 386.5373422239348, 0.5, 1.473469387755102, 29546.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 755, 29590.436163245362, 222.10263852736276, 0.5, 0.31918367346938775, 29546.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 760, 29597.79616324536, 257.83169957575547, 0.5, 0.31918367346938775, 29546.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 761, 31377.275836373385, 538.356379909823, 0.49666666666666665, 5.193469387755102, 29991.16137647104);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 765, 30093.747555617727, 299.22165355538846, 0.49666666666666665, 1.0522448979591836, 29991.16137647104);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 770, 30169.001376471013, 451.79101001978097, 0.49666666666666665, 1.019591836734694, 29991.16137647104);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 771, 30457.34925484829, 203.22499281793583, 0.49666666666666665, 1.4620408163265306, 29911.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 775, 30078.230729709827, 308.3515552188253, 0.5033333333333333, 3.357551020408163, 29622.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 780, 29819.87616324536, 329.0058618670146, 0.5033333333333333, 1.7061224489795919, 29622.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 781, 29795.821167173246, 270.9874661169648, 0.5, 1.4416326530612245, 29659.826168281143);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 785, 29770.406167475394, 284.8748430245142, 0.5, 1.2677551020408164, 29659.826168281143);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 790, 29750.806167475395, 210.62971385216406, 0.5, 1.1142857142857143, 29659.826168281143);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 791, 29777.24653776695, 216.43122308004868, 0.5, 0.9510204081632653, 29651.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 795, 29777.49616324536, 285.8099189949824, 0.5, 1.1322448979591837, 29651.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 800, 29757.37616324536, 214.81080902382323, 0.5, 1.3281632653061224, 29651.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 801, 30545.52106985955, 268.94682639766773, 0.49666666666666665, 1.643265306122449, 30150.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 805, 30135.29908506171, 584.7727374663164, 0.5133333333333333, 1.497142857142857, 29832.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 810, 30150.774312275713, 639.6033351832269, 0.5133333333333333, 1.449795918367347, 29832.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 811, 30365.153856767476, 218.92137692117942, 0.5, 2.1485714285714286, 29695.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 815, 29737.45616324536, 170.16725145981457, 0.5, 0.43020408163265306, 29695.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 820, 29695.07616324536, 2.204948129406426E-11, 0.5, 0.0, 29695.07616324534);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 821, 30522.164096309338, 198.51538233475677, 0.49666666666666665, 1.5346938775510204, 30115.889497750897);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 825, 30115.8894977509, 3.67491354901071E-12, 0.49666666666666665, 0.0, 30115.889497750897);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 830, 30115.8894977509, 3.67491354901071E-12, 0.49666666666666665, 0.0, 30115.889497750897);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 831, 30148.485634184886, 82.96579710335672, 0.5, 0.31020408163265306, 29697.889497750897);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 835, 29697.8894977509, 3.67491354901071E-12, 0.5, 0.0, 29697.889497750897);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 840, 29697.8894977509, 3.67491354901071E-12, 0.5, 0.0, 29697.889497750897);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 841, 30539.903510267803, 95.68341543532507, 0.49666666666666665, 1.08, 30216.64661395719);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 845, 30216.64661395719, 0.0, 0.49666666666666665, 0.0, 30216.64661395719);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 850, 30216.64661395719, 0.0, 0.49666666666666665, 0.0, 30216.64661395719);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 851, 30240.264436745438, 68.54742870058891, 0.5, 0.42775510204081635, 30020.664800475806);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 855, 29810.664800475814, 7.34982709802142E-12, 0.51, 0.0, 29810.664800475806);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 860, 29810.664800475814, 7.34982709802142E-12, 0.51, 0.0, 29810.664800475806);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 861, 30867.293401988944, 253.97435512691078, 0.49666666666666665, 0.9795918367346939, 30559.365861159415);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 865, 30554.405861159437, 35.07249634685277, 0.5, 0.12, 30311.365861159415);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 870, 30311.365861159436, 2.204948129406426E-11, 0.5, 0.0, 30311.365861159415);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 871, 30249.954382917826, 2.204948129406426E-11, 0.5, 0.0, 30249.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 875, 30249.954382917826, 2.204948129406426E-11, 0.5, 0.0, 30249.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 880, 30249.954382917826, 2.204948129406426E-11, 0.5, 0.0, 30249.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 881, 30251.474382917826, 50.265515423760775, 0.5, 0.19755102040816327, 30041.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 885, 29836.154382917826, 29.698484809834987, 0.5033333333333333, 0.08, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 890, 29831.954382917826, 2.204948129406426E-11, 0.5033333333333333, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 891, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 895, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 900, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 901, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 905, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 910, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 911, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 915, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 920, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 921, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 925, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 930, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 931, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 935, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 940, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 941, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 945, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 950, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 951, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 955, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 960, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 961, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 965, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 970, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 971, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 975, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 980, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 981, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 985, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 990, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 991, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 995, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1000, 29831.954382917826, 2.204948129406426E-11, 0.5, 0.0, 29831.954382917804);

        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 134, 139, 67, 84, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 63, 53, 39, 1, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 103, 101, 110, 98, 37, 23, 17, 136, 78, 133, 52, 15, 87, 93, 21, 69, 65, 117, 25, 123, 128, 64, 3, 118, 142, 96, 55, 138, 79, 30, 41, 121, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[0, 112, 71, 20, 73, 140, 58, 126, 35, 103, 110, 101, 98, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 65, 117, 123, 25, 128, 64, 3, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 108, 31, 10, 16, 14, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 95, 77, 51, 146, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 1, 143, 63, 53, 39, 68, 72, 67, 84, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 129, 62, 5, 48, 89, 9, 83, 105, 133, 52, 18, 74, 96, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[0, 112, 71, 20, 73, 140, 58, 126, 35, 103, 110, 101, 98, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 64, 117, 123, 25, 128, 65, 3, 118, 142, 55, 79, 30, 121, 41, 88, 132, 137, 147, 141, 92, 27, 130, 46, 108, 31, 10, 16, 14, 44, 90, 97, 22, 109, 76, 59, 61, 149, 19, 11, 85, 34, 26, 148, 82, 54, 33, 119, 114, 122, 42, 127, 135, 40, 70, 47, 99, 13, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115, 49, 43, 113, 1, 143, 63, 53, 39, 68, 72, 67, 84, 134, 139, 8, 6, 116, 56, 144, 86, 124, 50, 24, 80, 60, 107, 57, 66, 104, 129, 62, 5, 48, 89, 9, 83, 105, 133, 52, 18, 74, 96, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 35, 98, 101, 110, 103, 37, 23, 83, 9, 17, 78, 136, 93, 21, 69, 15, 87, 52, 133, 105, 89, 48, 5, 62, 46, 130, 90, 108, 31, 10, 16, 14, 44, 97, 22, 109, 76, 59, 61, 149, 19, 85, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 111, 131, 106, 29, 120, 100, 38, 95, 51, 77, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 67, 84, 134, 139, 8, 56, 6, 116, 144, 86, 124, 50, 60, 24, 80, 68, 107, 57, 92, 27, 141, 104, 66, 147, 132, 137, 88, 41, 121, 30, 79, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 96, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 93, 21, 69, 15, 87, 52, 133, 105, 89, 48, 5, 62, 46, 108, 31, 10, 16, 14, 44, 90, 97, 22, 109, 76, 59, 61, 19, 149, 85, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 127, 40, 70, 99, 47, 13, 135, 2, 42, 45, 28, 131, 111, 106, 29, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 72, 80, 24, 60, 50, 124, 86, 144, 56, 8, 6, 116, 139, 134, 84, 67, 68, 107, 57, 130, 92, 27, 141, 104, 66, 147, 137, 132, 88, 41, 121, 30, 79, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 96, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 93, 21, 69, 15, 87, 52, 133, 105, 89, 48, 5, 62, 46, 108, 31, 10, 16, 14, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 19, 11, 56, 8, 6, 116, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 1, 53, 39, 63, 143, 113, 72, 67, 84, 134, 139, 144, 86, 124, 50, 60, 24, 80, 68, 107, 57, 130, 92, 27, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 96, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 101, 110, 103, 37, 23, 17, 93, 21, 69, 15, 87, 52, 133, 136, 78, 105, 89, 48, 5, 62, 46, 90, 108, 31, 10, 16, 14, 44, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 56, 6, 8, 116, 33, 82, 54, 148, 119, 114, 122, 127, 42, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 29, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115, 43, 113, 143, 63, 39, 53, 1, 49, 72, 67, 84, 106, 134, 139, 144, 86, 124, 50, 60, 24, 80, 68, 107, 57, 92, 130, 27, 141, 104, 66, 147, 132, 137, 30, 79, 88, 121, 41, 7, 138, 96, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 52, 133, 136, 78, 105, 89, 48, 5, 62, 46, 130, 108, 31, 10, 16, 14, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 56, 6, 8, 116, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 45, 2, 28, 131, 111, 106, 29, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 63, 53, 39, 1, 72, 68, 67, 84, 134, 139, 144, 86, 124, 50, 60, 24, 80, 107, 57, 92, 27, 141, 104, 66, 147, 132, 137, 88, 30, 79, 121, 41, 7, 138, 55, 142, 96, 118, 117, 25, 123, 128, 64, 65, 3, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 52, 133, 136, 78, 105, 89, 5, 48, 62, 46, 108, 31, 10, 14, 16, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 56, 6, 8, 116, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 29, 120, 106, 100, 38, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 1, 43, 113, 143, 53, 39, 63, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 67, 84, 49, 72, 107, 57, 130, 92, 27, 104, 141, 66, 147, 137, 132, 88, 41, 121, 30, 79, 138, 55, 142, 118, 96, 3, 64, 117, 123, 25, 128, 65, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 136, 93, 69, 21, 15, 87, 52, 133, 78, 105, 89, 48, 5, 62, 91, 7, 138, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 142, 55, 30, 79, 121, 41, 88, 137, 132, 147, 104, 27, 92, 130, 46, 90, 108, 31, 10, 14, 16, 44, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 6, 8, 116, 56, 144, 86, 124, 50, 139, 134, 84, 67, 38, 77, 51, 47, 99, 70, 40, 13, 135, 2, 33, 82, 54, 148, 119, 114, 127, 42, 122, 45, 28, 131, 111, 106, 120, 29, 100, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 72, 49, 43, 113, 1, 143, 63, 53, 39, 68, 24, 80, 60, 107, 57, 66, 141, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 52, 133, 136, 78, 105, 89, 62, 5, 48, 91, 7, 138, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 142, 55, 30, 79, 121, 41, 88, 132, 137, 147, 141, 104, 66, 107, 57, 60, 80, 24, 124, 50, 86, 144, 56, 6, 8, 116, 139, 134, 33, 119, 114, 122, 127, 42, 45, 2, 135, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 68, 39, 63, 53, 1, 143, 113, 72, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 82, 54, 148, 11, 19, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 14, 16, 10, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 52, 133, 136, 78, 105, 89, 48, 5, 62, 91, 7, 138, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 142, 55, 30, 79, 121, 41, 88, 132, 137, 147, 141, 104, 66, 107, 57, 60, 24, 80, 116, 8, 6, 56, 86, 144, 124, 50, 109, 76, 59, 61, 149, 85, 34, 26, 11, 19, 148, 54, 82, 33, 119, 114, 122, 127, 42, 45, 2, 135, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 72, 113, 143, 39, 63, 53, 1, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 134, 139, 68, 27, 92, 130, 46, 31, 14, 16, 10, 108, 90, 44, 22, 97, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 52, 133, 136, 78, 105, 89, 48, 5, 62, 91, 7, 138, 96, 74, 18, 3, 65, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 132, 137, 147, 141, 104, 66, 107, 57, 60, 24, 84, 67, 38, 100, 120, 29, 106, 111, 131, 28, 45, 122, 114, 119, 127, 42, 2, 135, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 80, 124, 50, 144, 86, 56, 8, 6, 116, 139, 134, 33, 82, 54, 148, 11, 19, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 16, 14, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 91, 7, 138, 55, 74, 18, 96, 3, 64, 65, 128, 25, 123, 117, 118, 142, 121, 41, 88, 79, 30, 137, 132, 147, 141, 104, 66, 57, 107, 68, 72, 43, 1, 53, 39, 63, 143, 113, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 122, 114, 119, 127, 42, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 84, 67, 80, 24, 60, 50, 124, 86, 144, 56, 6, 8, 116, 139, 134, 33, 82, 54, 148, 11, 19, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 14, 16, 10, 46, 130, 27, 92, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 52, 133, 105, 89, 48, 5, 62, 91, 138, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 96, 18, 74, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 66, 104, 57, 107, 68, 72, 43, 1, 53, 39, 63, 143, 113, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 122, 119, 114, 127, 42, 2, 135, 13, 70, 40, 99, 47, 77, 51, 95, 84, 67, 80, 24, 60, 124, 50, 86, 144, 56, 6, 8, 116, 139, 134, 33, 82, 54, 148, 11, 19, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 108, 44, 16, 14, 10, 31, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 91, 138, 55, 142, 118, 3, 64, 65, 128, 25, 123, 117, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 147, 141, 104, 66, 57, 107, 68, 72, 43, 1, 53, 39, 63, 143, 113, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 100, 120, 29, 106, 111, 131, 28, 45, 122, 114, 119, 127, 42, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 38, 84, 67, 80, 24, 60, 50, 124, 86, 144, 56, 6, 8, 116, 139, 134, 33, 82, 54, 148, 11, 19, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 44, 90, 108, 10, 16, 14, 31, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 5, 48, 62, 91, 7, 138, 142, 118, 64, 65, 128, 25, 123, 117, 3, 18, 74, 96, 55, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 68, 72, 113, 43, 1, 53, 39, 63, 143, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 146, 38, 100, 120, 131, 111, 28, 45, 122, 114, 119, 127, 42, 2, 13, 135, 40, 70, 99, 47, 51, 77, 95, 29, 106, 84, 67, 80, 24, 60, 50, 124, 86, 144, 56, 8, 6, 116, 139, 134, 33, 82, 54, 148, 19, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 44, 97, 90, 108, 31, 14, 16, 10, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 91, 7, 41, 30, 79, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 74, 96, 138, 121, 88, 137, 132, 147, 141, 27, 92, 130, 46, 108, 31, 10, 16, 14, 44, 90, 97, 22, 109, 76, 59, 61, 149, 85, 34, 26, 11, 19, 56, 6, 8, 116, 82, 54, 148, 119, 114, 122, 127, 42, 2, 13, 135, 40, 70, 99, 47, 51, 77, 95, 84, 67, 80, 24, 60, 50, 124, 86, 144, 139, 134, 33, 45, 28, 131, 111, 106, 29, 120, 100, 38, 146, 4, 36, 102, 145, 32, 12, 75, 94, 125, 81, 115, 1, 53, 39, 63, 143, 113, 43, 49, 72, 68, 107, 57, 66, 104, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 90, 108, 31, 10, 16, 14, 44, 97, 22, 76, 109, 59, 61, 149, 34, 85, 26, 11, 19, 56, 6, 8, 116, 82, 54, 148, 119, 114, 122, 42, 127, 135, 2, 13, 40, 70, 99, 47, 51, 77, 95, 84, 67, 80, 24, 60, 124, 50, 144, 86, 139, 134, 33, 45, 28, 131, 111, 106, 29, 120, 100, 38, 146, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 1, 53, 39, 63, 143, 113, 43, 49, 72, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 118, 117, 25, 123, 128, 65, 64, 3, 18, 74, 96, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 108, 31, 10, 14, 16, 44, 90, 97, 22, 59, 109, 76, 61, 149, 34, 85, 26, 11, 19, 56, 6, 8, 116, 54, 82, 148, 114, 119, 122, 42, 2, 127, 135, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 1, 53, 39, 63, 143, 113, 72, 68, 60, 50, 124, 86, 144, 139, 134, 33, 45, 28, 131, 111, 106, 120, 29, 100, 38, 84, 67, 80, 24, 57, 107, 66, 104, 141, 147, 132, 137, 88, 41, 121, 79, 30, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 74, 96, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 108, 31, 10, 16, 14, 44, 90, 97, 22, 109, 76, 59, 61, 149, 85, 34, 26, 11, 19, 56, 6, 116, 8, 144, 86, 50, 124, 139, 134, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 45, 33, 82, 54, 148, 119, 114, 122, 127, 42, 2, 135, 13, 70, 40, 99, 47, 77, 51, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 1, 53, 39, 63, 143, 113, 72, 68, 80, 24, 60, 57, 107, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 74, 18, 96, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 56, 6, 116, 8, 144, 86, 50, 124, 139, 134, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 33, 82, 54, 148, 119, 114, 122, 127, 42, 45, 2, 135, 13, 99, 40, 70, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 1, 53, 39, 63, 143, 113, 72, 68, 80, 24, 60, 57, 107, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 74, 18, 96, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 97, 90, 22, 76, 109, 59, 61, 149, 34, 85, 26, 11, 19, 56, 6, 116, 8, 144, 86, 50, 124, 139, 134, 84, 67, 38, 100, 29, 120, 106, 111, 131, 28, 45, 33, 82, 54, 148, 119, 114, 122, 42, 2, 127, 135, 40, 70, 99, 13, 47, 51, 77, 95, 146, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 57, 107, 66, 104, 141, 147, 132, 137, 88, 41, 121, 79, 30, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 18, 74, 96, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 90, 44, 97, 22, 76, 109, 59, 61, 149, 34, 85, 26, 11, 19, 56, 116, 6, 8, 144, 86, 50, 124, 139, 134, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 45, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 2, 13, 40, 70, 99, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 57, 107, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 118, 117, 25, 123, 128, 65, 64, 3, 18, 74, 96, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 56, 6, 116, 8, 144, 86, 50, 124, 139, 134, 84, 67, 38, 100, 106, 120, 29, 111, 131, 28, 33, 82, 54, 148, 119, 114, 45, 2, 42, 122, 127, 135, 13, 99, 40, 70, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 39, 53, 63, 68, 80, 24, 60, 57, 107, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 74, 96, 138, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 6, 116, 8, 56, 144, 86, 50, 124, 24, 80, 68, 72, 113, 1, 53, 39, 63, 143, 43, 49, 115, 81, 125, 94, 75, 12, 32, 145, 102, 36, 4, 146, 95, 77, 51, 29, 120, 106, 111, 131, 28, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 13, 99, 40, 70, 47, 100, 38, 84, 67, 134, 139, 60, 107, 57, 66, 104, 141, 147, 137, 132, 88, 41, 121, 30, 79, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 96, 74, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 19, 11, 6, 8, 116, 56, 144, 86, 50, 124, 24, 80, 68, 72, 113, 143, 63, 39, 53, 1, 43, 49, 115, 81, 125, 94, 75, 12, 32, 145, 102, 146, 36, 4, 77, 51, 95, 29, 120, 106, 111, 131, 28, 33, 82, 54, 148, 119, 114, 45, 2, 42, 122, 127, 135, 13, 99, 40, 70, 47, 100, 38, 84, 67, 134, 139, 60, 57, 107, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 138, 55, 142, 96, 118, 117, 123, 25, 128, 64, 65, 3, 18, 74, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 85, 26, 11, 19, 56, 6, 116, 8, 86, 144, 50, 124, 24, 80, 68, 72, 49, 113, 143, 63, 39, 53, 1, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 29, 120, 106, 111, 131, 28, 33, 82, 54, 148, 119, 114, 45, 2, 42, 122, 127, 135, 13, 70, 40, 99, 47, 100, 38, 84, 67, 134, 139, 60, 57, 107, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 138, 55, 142, 118, 117, 123, 25, 128, 64, 65, 3, 96, 18, 74, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 34, 149, 85, 26, 11, 19, 56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 72, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 29, 120, 106, 111, 131, 28, 33, 82, 54, 148, 114, 119, 122, 45, 2, 42, 127, 135, 13, 70, 40, 99, 47, 100, 38, 67, 84, 134, 139, 60, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 118, 117, 25, 123, 128, 65, 64, 3, 18, 74, 96, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 85, 26, 11, 19, 56, 116, 6, 8, 144, 86, 50, 124, 24, 80, 68, 72, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 29, 120, 106, 111, 131, 28, 45, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 100, 38, 84, 67, 134, 139, 60, 57, 107, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 138, 55, 142, 118, 117, 25, 123, 128, 65, 64, 3, 96, 18, 74, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 85, 26, 11, 19, 56, 6, 116, 8, 144, 86, 50, 124, 24, 80, 68, 72, 49, 43, 113, 39, 53, 63, 143, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 29, 120, 106, 111, 131, 2, 45, 28, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 13, 99, 70, 40, 47, 100, 38, 84, 67, 134, 139, 60, 57, 107, 66, 141, 104, 147, 132, 137, 88, 41, 121, 30, 79, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 96, 18, 74, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 11, 19, 56, 6, 8, 116, 86, 144, 50, 124, 80, 24, 68, 72, 49, 113, 143, 63, 39, 53, 1, 43, 115, 81, 125, 94, 12, 75, 32, 102, 145, 4, 36, 146, 38, 100, 29, 120, 106, 111, 131, 13, 2, 45, 28, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 51, 77, 95, 84, 67, 134, 139, 60, 57, 107, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 74, 96, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 8, 6, 116, 144, 86, 50, 124, 24, 80, 68, 72, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 146, 38, 100, 120, 29, 106, 111, 131, 13, 2, 45, 28, 33, 82, 54, 148, 119, 114, 122, 127, 42, 135, 70, 40, 99, 47, 95, 51, 77, 84, 67, 134, 139, 60, 107, 57, 66, 141, 104, 147, 132, 137, 88, 121, 41, 30, 79, 55, 142, 118, 117, 25, 123, 128, 65, 64, 3, 18, 96, 74, 138, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 6, 116, 8, 144, 86, 50, 124, 24, 80, 68, 72, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 75, 12, 32, 145, 102, 146, 36, 4, 95, 77, 51, 29, 120, 106, 111, 131, 28, 2, 45, 33, 82, 54, 148, 119, 114, 42, 122, 127, 135, 40, 70, 99, 13, 47, 100, 38, 84, 67, 134, 139, 60, 57, 107, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 74, 96, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 124, 50, 24, 80, 68, 72, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 29, 120, 106, 111, 131, 13, 2, 45, 28, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 70, 40, 99, 47, 100, 38, 84, 67, 134, 139, 60, 57, 107, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 142, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 24, 80, 68, 113, 143, 63, 39, 53, 1, 43, 146, 38, 100, 120, 29, 106, 111, 131, 13, 2, 45, 28, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 70, 40, 99, 47, 51, 77, 95, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 67, 84, 134, 139, 60, 57, 107, 66, 104, 141, 147, 137, 88, 132, 41, 121, 30, 79, 55, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 142, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 49, 72, 67, 84, 134, 33, 82, 54, 148, 114, 119, 122, 42, 127, 135, 2, 45, 131, 111, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 146, 38, 100, 120, 29, 106, 139, 60, 57, 107, 66, 104, 141, 147, 137, 132, 41, 121, 79, 30, 88, 7, 74, 18, 3, 64, 65, 128, 123, 25, 117, 118, 142, 55, 96, 138, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 49, 72, 67, 84, 139, 33, 54, 82, 148, 119, 114, 122, 127, 42, 135, 2, 45, 28, 131, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 146, 38, 100, 120, 29, 106, 111, 134, 60, 107, 57, 66, 141, 104, 147, 132, 137, 88, 30, 79, 121, 41, 7, 74, 18, 96, 3, 64, 65, 128, 25, 123, 117, 118, 142, 55, 138, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 24, 80, 67, 84, 139, 33, 54, 82, 148, 114, 119, 122, 127, 42, 135, 2, 45, 28, 131, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 43, 49, 72, 113, 143, 63, 39, 53, 1, 146, 38, 100, 120, 29, 106, 111, 134, 60, 107, 57, 66, 141, 104, 147, 132, 137, 88, 30, 79, 121, 41, 7, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 142, 55, 138, 91, 96, 68, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 67, 84, 38, 100, 120, 29, 106, 134, 139, 33, 82, 54, 148, 119, 114, 122, 127, 42, 45, 28, 111, 131, 2, 135, 40, 99, 70, 13, 47, 51, 77, 95, 146, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 30, 79, 55, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 142, 138, 121, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 120, 29, 106, 111, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 2, 45, 28, 131, 13, 135, 40, 70, 99, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 68, 107, 57, 66, 141, 104, 147, 132, 137, 88, 41, 121, 30, 79, 55, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 142, 138, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 134, 33, 54, 82, 148, 119, 114, 122, 127, 42, 45, 2, 13, 135, 40, 70, 99, 47, 51, 77, 95, 4, 36, 146, 145, 102, 32, 75, 12, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 142, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 134, 33, 82, 54, 148, 119, 114, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 72, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 79, 30, 55, 142, 118, 96, 3, 128, 25, 123, 117, 64, 65, 18, 74, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 131, 28, 134, 33, 82, 54, 148, 119, 114, 122, 42, 127, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 125, 94, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 72, 68, 107, 57, 66, 104, 141, 147, 137, 132, 88, 41, 121, 30, 79, 55, 142, 118, 3, 64, 65, 128, 25, 123, 117, 96, 18, 74, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 131, 28, 134, 33, 82, 54, 148, 114, 119, 122, 45, 2, 42, 127, 135, 40, 70, 99, 13, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 121, 41, 30, 79, 138, 55, 96, 142, 118, 3, 64, 128, 123, 25, 117, 65, 18, 74, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 119, 114, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 141, 104, 147, 132, 137, 88, 121, 41, 30, 79, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 96, 18, 74, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 119, 114, 122, 127, 42, 2, 45, 13, 135, 40, 70, 99, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 118, 117, 123, 25, 128, 64, 65, 3, 18, 74, 96, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 119, 114, 122, 127, 42, 45, 2, 135, 40, 70, 99, 13, 47, 51, 77, 95, 36, 4, 146, 102, 145, 32, 12, 75, 125, 94, 81, 115, 49, 72, 113, 43, 1, 143, 53, 39, 63, 68, 57, 107, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 74, 96, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 42, 127, 45, 2, 135, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 146, 102, 145, 75, 32, 12, 94, 125, 81, 115, 49, 72, 113, 43, 1, 143, 63, 53, 39, 68, 107, 57, 66, 104, 141, 147, 137, 132, 88, 41, 121, 30, 79, 55, 138, 142, 118, 117, 123, 25, 128, 65, 64, 3, 96, 18, 74, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 138, 55, 142, 118, 117, 25, 123, 128, 65, 64, 3, 96, 18, 74, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 99, 70, 40, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 68, 57, 107, 66, 141, 104, 147, 132, 137, 88, 41, 121, 30, 79, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 55, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 99, 40, 70, 47, 51, 95, 77, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 121, 41, 30, 79, 55, 96, 74, 18, 3, 65, 64, 128, 25, 123, 117, 118, 142, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 121, 41, 30, 79, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 55, 138, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 99, 40, 70, 47, 51, 77, 95, 146, 4, 36, 102, 145, 32, 75, 12, 125, 94, 81, 115, 49, 113, 143, 63, 53, 39, 1, 43, 72, 68, 107, 57, 66, 104, 141, 147, 137, 132, 88, 41, 121, 30, 79, 74, 18, 65, 64, 128, 25, 123, 117, 3, 96, 118, 142, 55, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 99, 40, 70, 47, 51, 77, 95, 146, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 63, 39, 53, 1, 72, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 96, 18, 74, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 4, 146, 102, 145, 12, 32, 75, 94, 125, 81, 115, 49, 72, 113, 43, 1, 53, 39, 63, 143, 68, 107, 57, 104, 66, 141, 147, 132, 137, 88, 41, 121, 30, 79, 142, 55, 118, 117, 123, 25, 128, 65, 64, 3, 96, 18, 74, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 95, 77, 51, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 18, 74, 96, 138, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 57, 107, 66, 104, 141, 147, 132, 137, 88, 121, 41, 30, 79, 55, 142, 118, 117, 25, 123, 128, 65, 64, 3, 18, 74, 96, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 30, 79, 121, 41, 7, 138, 55, 142, 96, 118, 117, 123, 25, 128, 65, 64, 3, 18, 74, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 4, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 113, 43, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 30, 79, 121, 41, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 96, 18, 74, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 75, 32, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 68, 107, 57, 66, 104, 141, 147, 137, 132, 88, 41, 121, 30, 79, 138, 55, 142, 118, 117, 25, 123, 128, 65, 64, 3, 96, 18, 74, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 75, 32, 12, 94, 81, 125, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 96, 18, 74, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 125, 94, 81, 115, 49, 72, 113, 43, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 74, 96, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 79, 30, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 96, 18, 74, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 57, 107, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 96, 18, 74, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 72, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 137, 132, 88, 121, 41, 30, 79, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 74, 96, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 121, 41, 30, 79, 55, 142, 96, 118, 117, 123, 25, 128, 65, 64, 3, 18, 74, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 96, 74, 138, 7, 91, 141, 104, 66, 107, 57, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 141, 104, 147, 132, 137, 88, 41, 121, 30, 79, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 96, 18, 74, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 141, 104, 147, 132, 137, 88, 30, 79, 121, 41, 7, 138, 55, 142, 96, 118, 117, 25, 123, 128, 64, 65, 3, 18, 74, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 138, 55, 142, 118, 117, 25, 123, 128, 65, 64, 3, 96, 18, 74, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 30, 79, 121, 41, 138, 55, 142, 118, 117, 123, 25, 128, 64, 65, 3, 96, 18, 74, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 96, 18, 74, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 121, 41, 30, 79, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 74, 96, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 30, 79, 121, 41, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 74, 96, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 74, 96, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 79, 30, 55, 142, 118, 64, 65, 128, 25, 123, 117, 3, 18, 74, 96, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 118, 64, 65, 128, 25, 123, 117, 3, 18, 96, 74, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 142, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 55, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 138, 7, 91, 18, 3, 64, 65, 128, 25, 123, 117, 118, 142, 55, 96, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 7, 138, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 7, 138, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 91, 7, 138, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 7, 138, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[0, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");
    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA150_with_seed_1_mag_0_1_freq_100() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA150));
        MMAS_3OPT_MADTSP mmas_3OPT_madtsp = new MMAS_3OPT_MADTSP(graph, 0.8, 1000, 0.1, 100, 1.0, 5.0);
        mmas_3OPT_madtsp.setMmasSeed(1);
        mmas_3OPT_madtsp.setDbgpSeed(1);
        mmas_3OPT_madtsp.setStatisticInterval(1);
        mmas_3OPT_madtsp.setShowLog(false);
        mmas_3OPT_madtsp.run();
        assertThat(mmas_3OPT_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(29701.331417323658);
        assertThat(mmas_3OPT_madtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(29701.331417323658);
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getGlobalStatistics())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");

        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1, 40016.22976406926, 2379.356272740218, 0.0, 81.43836734693878, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 5, 34030.1760569372, 1524.3009950695932, 0.0, 32.562448979591835, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 10, 34034.09169778277, 1760.5393642660229, 0.0, 17.725714285714286, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 11, 33792.653367627005, 1562.135614292436, 0.0, 18.248979591836736, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 15, 33947.463503982115, 1720.4834880282324, 0.0, 18.27673469387755, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 20, 33707.83112842647, 1680.0090291082097, 0.0, 16.483265306122448, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 21, 33975.333393473964, 1750.4424139381317, 0.0, 21.212244897959184, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 25, 33892.20316617223, 1639.5772619221814, 0.0, 17.012244897959185, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 30, 33995.41465718586, 1743.1497462994287, 0.0, 19.568163265306122, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 31, 32757.769349635193, 1528.462793601437, 0.0, 9.977142857142857, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 35, 33702.278193518425, 1376.577223240138, 0.0, 18.14857142857143, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 40, 33950.22724603001, 1690.2292341366447, 0.0, 19.485714285714284, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 41, 33424.48421461469, 1487.6089354932963, 0.0, 10.907755102040817, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 45, 33846.9875577639, 2240.9524600404775, 0.0, 9.017959183673469, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 50, 33782.875770291845, 2209.394045539608, 0.0, 9.382857142857143, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 51, 33698.03330122258, 2420.332729380868, 0.0, 9.453061224489796, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 55, 34127.10506072275, 2902.6430731846426, 0.0, 9.225306122448979, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 60, 34062.653750545556, 2433.070377096495, 0.0, 8.813061224489797, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 61, 34246.71825954379, 2705.5503552678424, 0.0, 11.244081632653062, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 65, 34339.427450723524, 2616.331281380956, 0.0, 12.568979591836735, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 70, 33605.978991059244, 2378.5468333079643, 0.0, 10.078367346938775, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 71, 33632.60331508356, 2562.8263377155454, 0.0, 10.031020408163265, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 75, 34056.263802254296, 2413.3645651316647, 0.0, 11.703673469387756, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 80, 33733.77901913873, 2435.089562506354, 0.0, 10.142857142857142, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 81, 33991.11953339086, 2450.4522529220176, 0.0, 10.657142857142857, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 85, 33767.701155656636, 2256.646360639383, 0.0, 9.132244897959184, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 90, 33362.1333139892, 2547.7518792953615, 0.49666666666666665, 8.376326530612245, 29803.1819509658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 91, 32889.21141722731, 2239.6783586091706, 0.49666666666666665, 9.198367346938776, 29803.1819509658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 95, 32977.11534894896, 2171.9712983160616, 0.49666666666666665, 8.915102040816327, 29771.1819509658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 100, 33113.114961462845, 2218.960136768248, 0.49666666666666665, 8.295510204081634, 29771.1819509658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 101, 37898.75810617332, 1822.1894505561456, 0.4866666666666667, 23.772244897959183, 34663.41212187319);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 105, 32310.779729365593, 1555.8432302747708, 0.5733333333333334, 9.83673469387755, 29544.430941546772);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 110, 31029.880282559054, 1792.5240617883649, 0.5733333333333334, 7.44734693877551, 29544.430941546772);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 111, 31440.117661674107, 2250.1081037053536, 0.5733333333333334, 6.101224489795919, 29544.430941546772);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 115, 31553.776289612797, 2182.8329350633608, 0.49666666666666665, 6.613877551020408, 29483.42567741336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 120, 31488.227742655297, 2165.7785985349037, 0.49666666666666665, 7.453877551020408, 29483.42567741336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 121, 30654.60044181523, 1623.544083225728, 0.49666666666666665, 6.507755102040816, 29483.42567741336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 125, 31546.29304474266, 2525.0585489603486, 0.49666666666666665, 8.297142857142857, 29483.42567741336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 130, 30554.21581665386, 1623.8781141532966, 0.49666666666666665, 5.2424489795918365, 29483.42567741336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 131, 30778.16803919268, 1596.231798932159, 0.49666666666666665, 6.884081632653062, 29483.42567741336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 135, 31053.10477661973, 1990.287572577573, 0.49666666666666665, 5.699591836734694, 29483.42567741336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 140, 30877.46148030217, 1840.8931543788108, 0.49666666666666665, 3.9779591836734696, 29483.42567741336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 141, 31498.529765879117, 1888.001114208722, 0.49666666666666665, 7.780408163265306, 29483.42567741336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 145, 31161.050087353342, 1754.1419244671931, 0.49666666666666665, 6.66530612244898, 29483.42567741336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 150, 30746.134178535678, 1501.396524510461, 0.49666666666666665, 4.355918367346939, 29483.42567741336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 151, 31204.8759748364, 1765.569028761461, 0.49666666666666665, 6.982857142857143, 29483.42567741336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 155, 31058.561506021106, 1957.2919824636972, 0.49666666666666665, 7.786938775510204, 29483.42567741336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 160, 30758.87494380789, 1962.1226964353334, 0.49666666666666665, 5.581224489795918, 29483.42567741336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 161, 30562.249321451498, 1530.0350175480123, 0.49666666666666665, 3.3779591836734695, 29483.42567741336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 165, 30889.990396885412, 1671.7180126656212, 0.49666666666666665, 3.7224489795918365, 29483.42567741336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 170, 30606.70600545169, 1750.6543913169266, 0.49666666666666665, 4.211428571428572, 29354.42567741336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 171, 30450.294832090618, 2036.8420117145813, 0.49666666666666665, 5.949387755102041, 29354.42567741336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 175, 29984.7858499368, 1080.744839115618, 0.49666666666666665, 2.806530612244898, 29354.42567741336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 180, 30487.18843786735, 1636.6535097030853, 0.49666666666666665, 5.426122448979592, 29348.42567741336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 181, 30340.806697316017, 1733.942349864069, 0.49666666666666665, 5.843265306122449, 29348.42567741336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 185, 30685.797960109674, 1784.6482663848167, 0.49666666666666665, 5.3763265306122445, 29348.42567741336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 190, 30295.101252232278, 1533.6106920193627, 0.49666666666666665, 3.6, 29348.42567741336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 191, 30582.86079907135, 1508.7753012474284, 0.49666666666666665, 4.455510204081633, 29348.42567741336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 195, 30521.2977693786, 1745.1541876642511, 0.49666666666666665, 2.973061224489796, 29348.42567741336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 200, 30501.845645561018, 1447.0008465141489, 0.49666666666666665, 3.9436734693877553, 29348.42567741336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 201, 33597.50416454346, 1644.8317899883637, 0.49666666666666665, 12.634285714285713, 29880.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 205, 32281.465678613946, 1869.0113064345026, 0.49666666666666665, 9.816326530612244, 29880.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 210, 31929.545156260217, 2220.8065393795428, 0.49666666666666665, 7.182857142857143, 29880.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 211, 31881.49058098718, 1916.0897190542055, 0.49666666666666665, 6.53469387755102, 29880.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 215, 31855.014017992533, 2374.009079436097, 0.49666666666666665, 7.164081632653061, 29880.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 220, 32012.784584523713, 1801.5484843117736, 0.49666666666666665, 9.239183673469388, 29880.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 221, 32252.83033438725, 2170.2596417377863, 0.49666666666666665, 11.646530612244899, 29880.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 225, 32128.23450627876, 2254.3982091947028, 0.49666666666666665, 7.318367346938776, 29880.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 230, 32071.800392863595, 2356.245964263364, 0.49666666666666665, 6.333061224489796, 29880.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 231, 32269.04309454855, 2892.6198904228954, 0.49666666666666665, 6.7306122448979595, 29880.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 235, 32104.2643495081, 1888.239722580486, 0.49666666666666665, 10.53061224489796, 29880.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 240, 32411.597113083048, 2172.6751574144505, 0.49666666666666665, 6.678367346938775, 29880.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 241, 31869.485028545194, 2310.99931999395, 0.49666666666666665, 7.460408163265306, 29880.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 245, 31822.09956018241, 2094.942366224056, 0.49666666666666665, 5.418775510204082, 29880.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 250, 31636.931993684433, 1748.6240750113225, 0.49666666666666665, 7.999183673469388, 29880.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 251, 31613.040261971226, 1735.578669039421, 0.49666666666666665, 7.724897959183673, 29880.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 255, 31224.745602569943, 1417.6647112068429, 0.49666666666666665, 8.381224489795919, 29880.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 260, 31115.104986423463, 1406.193136010109, 0.49666666666666665, 5.278367346938776, 29880.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 261, 31331.23213977616, 1488.006486000575, 0.49666666666666665, 5.765714285714286, 29880.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 265, 31638.845628206036, 1823.434490270184, 0.49666666666666665, 8.696326530612245, 29830.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 270, 31778.551540129498, 1646.9589391255522, 0.49666666666666665, 9.216326530612244, 29766.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 271, 32225.22153927249, 1676.7996100694058, 0.49666666666666665, 10.998367346938776, 29766.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 275, 32133.697459327057, 1973.3189662370996, 0.49666666666666665, 8.13795918367347, 29766.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 280, 31856.757095515808, 1628.1729084552653, 0.49666666666666665, 9.459591836734694, 29766.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 281, 32065.59900122335, 1922.6900865179302, 0.49666666666666665, 9.566530612244899, 29766.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 285, 31799.642320203166, 1875.7273854104249, 0.49666666666666665, 6.915102040816326, 29766.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 290, 32221.68708542001, 2344.860399750082, 0.49666666666666665, 10.93061224489796, 29766.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 291, 31999.43691526324, 2291.7811076068606, 0.49666666666666665, 8.982040816326531, 29766.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 295, 31709.68724117418, 1993.1449404097243, 0.49666666666666665, 7.77469387755102, 29766.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 300, 31652.829265321885, 1805.5190638545612, 0.49666666666666665, 7.573877551020408, 29766.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 301, 35007.97347119571, 1930.1410875730685, 0.49, 16.880816326530613, 30156.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 305, 31885.926194101474, 1186.2765138822206, 0.49, 6.120816326530612, 30156.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 310, 31640.217517133147, 1663.89179632581, 0.49, 4.748571428571428, 30156.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 311, 31393.002208922793, 1456.1525945410901, 0.49, 4.251428571428572, 30156.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 315, 31412.255426509306, 1255.4494850996896, 0.49, 3.9714285714285715, 30156.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 320, 31308.752587109848, 1260.2325857604278, 0.49, 4.191836734693878, 30156.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 321, 31522.795643118032, 1475.166017076849, 0.49, 4.244081632653061, 30156.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 325, 31635.165942131378, 1629.473683998127, 0.49, 4.676734693877551, 30156.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 330, 31063.560191866676, 1512.6891191183197, 0.49333333333333335, 5.133061224489796, 29688.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 331, 30777.44320536608, 1616.0173911515585, 0.49333333333333335, 4.38530612244898, 29688.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 335, 30813.96756692162, 1523.6085482329484, 0.49333333333333335, 3.540408163265306, 29688.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 340, 31011.10971556512, 1881.762006221, 0.49333333333333335, 3.9436734693877553, 29688.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 341, 31053.05236830181, 1645.2249812994166, 0.49333333333333335, 4.023673469387755, 29688.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 345, 30667.810998803117, 1277.4232139425746, 0.49333333333333335, 3.333061224489796, 29688.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 350, 31032.49390859947, 1793.9853800229196, 0.49333333333333335, 4.985306122448979, 29688.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 351, 31252.914698791195, 2001.4105254517858, 0.49333333333333335, 3.8783673469387754, 29688.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 355, 31125.210399910862, 1814.963522385678, 0.49333333333333335, 5.883265306122449, 29688.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 360, 30715.558171264925, 1448.0954983004315, 0.49333333333333335, 4.431836734693878, 29688.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 361, 30960.406262452852, 1535.2465780546092, 0.49333333333333335, 5.288979591836735, 29688.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 365, 30696.644815801526, 1478.111964766233, 0.49333333333333335, 4.597551020408163, 29688.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 370, 30678.519296760078, 1409.8785524484006, 0.49333333333333335, 3.6253061224489795, 29688.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 371, 30786.499184128585, 1308.5687140326136, 0.49333333333333335, 3.796734693877551, 29688.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 375, 30752.838535490817, 1445.4884056258636, 0.49333333333333335, 4.093061224489796, 29688.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 380, 31403.29753799564, 1643.2046270259075, 0.49333333333333335, 5.724897959183673, 29688.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 381, 30708.274407287423, 1498.7573660250712, 0.49333333333333335, 5.169795918367347, 29688.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 385, 30638.30446643537, 1303.9294406820288, 0.49333333333333335, 3.572244897959184, 29688.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 390, 30824.626562557303, 1463.892239936516, 0.49333333333333335, 5.622040816326531, 29688.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 391, 30665.88500049887, 1618.8029642594029, 0.49333333333333335, 4.780408163265306, 29688.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 395, 30980.449110680565, 1355.3970736223723, 0.49333333333333335, 3.7420408163265306, 29688.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 400, 30679.40251580561, 1483.2664084993728, 0.49666666666666665, 4.577959183673469, 29688.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 401, 31241.975474379444, 1444.134137944566, 0.49666666666666665, 4.46530612244898, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 405, 30607.407930402685, 1351.5111589276366, 0.49666666666666665, 3.4685714285714284, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 410, 30710.047034655054, 1325.7154608470994, 0.49666666666666665, 3.663673469387755, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 411, 30441.193552282744, 1258.3261216369008, 0.49666666666666665, 2.444081632653061, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 415, 30793.882302375612, 1534.2908813262666, 0.49666666666666665, 3.9159183673469387, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 420, 30596.99330783911, 1475.2186618056207, 0.49666666666666665, 3.5542857142857143, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 421, 30366.33207994924, 1106.9873321188395, 0.49666666666666665, 2.2457142857142856, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 425, 30875.41215876237, 1470.447106452226, 0.49666666666666665, 4.066122448979592, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 430, 30495.11859571761, 1240.9864292124846, 0.49666666666666665, 3.6546938775510203, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 431, 30444.109376585722, 1332.9877395756735, 0.49666666666666665, 3.0253061224489795, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 435, 30965.68565866656, 1359.4016397905875, 0.49666666666666665, 4.453061224489796, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 440, 30467.184546791766, 1263.2052967539312, 0.49666666666666665, 3.8244897959183675, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 441, 30567.370333604114, 1405.96163279922, 0.49666666666666665, 3.306938775510204, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 445, 30709.044348140593, 1445.4430351751162, 0.49666666666666665, 4.07265306122449, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 450, 30587.433359068473, 1281.744691964565, 0.49666666666666665, 3.226938775510204, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 451, 30817.71764134112, 1453.7002607213465, 0.49666666666666665, 3.3102040816326532, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 455, 30459.78471253584, 1231.1053948353303, 0.49666666666666665, 3.1028571428571428, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 460, 30374.41897618411, 1225.596373499604, 0.49666666666666665, 2.8946938775510205, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 461, 30430.01047491957, 1261.953806828658, 0.49666666666666665, 2.890612244897959, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 465, 30823.409150310774, 1366.573953189766, 0.49666666666666665, 3.9673469387755103, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 470, 30299.01424640148, 1203.074336970435, 0.49666666666666665, 1.9877551020408164, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 471, 30812.540910054544, 1335.8457563690665, 0.49666666666666665, 3.3355102040816327, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 475, 30204.724652535886, 1076.7354247640703, 0.49666666666666665, 2.6, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 480, 30448.26801102692, 1192.3450284681085, 0.49666666666666665, 3.073469387755102, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 481, 30543.392402162073, 1297.7294160563347, 0.49666666666666665, 3.3681632653061224, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 485, 30353.90759681674, 1175.7798526236486, 0.49666666666666665, 3.5795918367346937, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 490, 30641.83854493326, 1346.8429989897686, 0.49666666666666665, 3.146938775510204, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 491, 30719.46888658353, 1258.5688317873755, 0.49666666666666665, 3.9771428571428573, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 495, 30412.099646296225, 1215.5211146548377, 0.49666666666666665, 2.883265306122449, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 500, 30678.304700135788, 1252.1539545592696, 0.49666666666666665, 4.234285714285714, 29613.10140737187);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 501, 33143.672460786074, 1219.7083516572757, 0.49666666666666665, 7.841632653061224, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 505, 30398.290563159433, 1275.7004362546986, 0.49666666666666665, 3.6187755102040815, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 510, 30855.163720480694, 1656.3845628199485, 0.49666666666666665, 3.946938775510204, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 511, 30781.702735836916, 1464.204432639092, 0.49666666666666665, 4.204081632653061, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 515, 30102.77235782181, 1013.1846851951448, 0.49666666666666665, 1.8293877551020408, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 520, 30214.281923359682, 1226.942758902175, 0.49666666666666665, 2.6, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 521, 30554.99792960171, 1497.8845772175468, 0.49666666666666665, 2.7322448979591836, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 525, 30345.737672111198, 1193.5110234422839, 0.49666666666666665, 3.1420408163265305, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 530, 30331.67137953529, 1264.6658378575069, 0.49666666666666665, 2.0326530612244897, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 531, 30239.267459377865, 1099.134397890343, 0.49666666666666665, 2.8285714285714287, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 535, 30172.447543899572, 1070.9762174674554, 0.49666666666666665, 2.4816326530612245, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 540, 30518.523643250315, 1364.485466959121, 0.49666666666666665, 2.5453061224489795, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 541, 30149.330780087534, 1026.2556115064353, 0.49666666666666665, 2.1387755102040815, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 545, 30365.30873661862, 1316.1331629108536, 0.49666666666666665, 2.8824489795918367, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 550, 30455.755885825074, 1414.7466365714085, 0.49666666666666665, 2.565714285714286, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 551, 30434.558657658952, 1369.569389378341, 0.49666666666666665, 4.008979591836734, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 555, 30660.749118099837, 1542.65766888704, 0.49666666666666665, 2.8783673469387754, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 560, 30111.914425079383, 1091.4000863322865, 0.49666666666666665, 1.8685714285714285, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 561, 29967.841690112808, 782.9659443892186, 0.49666666666666665, 1.3485714285714285, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 565, 30197.182900383938, 1183.9800083203506, 0.49666666666666665, 2.675918367346939, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 570, 30138.044673180484, 1118.6105518190277, 0.49666666666666665, 1.9412244897959183, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 571, 30389.805051199382, 1340.0749808528278, 0.49666666666666665, 2.5648979591836736, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 575, 30255.526123639775, 1239.8945362403488, 0.49666666666666665, 2.7322448979591836, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 580, 30338.249130838318, 1360.9190106845956, 0.49666666666666665, 2.4, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 581, 30561.520201506515, 1438.3100763130924, 0.49666666666666665, 3.9526530612244897, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 585, 30388.316234826478, 1450.9320618326847, 0.49666666666666665, 2.820408163265306, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 590, 30505.085598400423, 1638.5378374033724, 0.49666666666666665, 3.149387755102041, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 591, 30327.979308949085, 1394.2616294676975, 0.49666666666666665, 2.113469387755102, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 595, 30418.319821218905, 1380.5955733858411, 0.49666666666666665, 3.179591836734694, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 600, 30322.772102298233, 1242.180392239115, 0.49666666666666665, 2.6587755102040815, 29668.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 601, 30068.48589150676, 1000.098061880617, 0.49666666666666665, 1.9289795918367347, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 605, 30042.62988598032, 1114.1761263033782, 0.49666666666666665, 2.696326530612245, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 610, 29784.499045790544, 851.903924332305, 0.49666666666666665, 1.7183673469387755, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 611, 30064.13909131505, 1133.4995279871648, 0.49666666666666665, 2.230204081632653, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 615, 30084.00982645721, 1105.3036892265711, 0.49666666666666665, 2.978775510204082, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 620, 29740.908634839336, 756.2443616441336, 0.49666666666666665, 1.273469387755102, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 621, 29924.251525671734, 1092.8490699446097, 0.49666666666666665, 1.9061224489795918, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 625, 30038.68965879993, 1109.563010460923, 0.49666666666666665, 3.189387755102041, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 630, 29722.794657602055, 721.8601839949398, 0.49666666666666665, 1.0955102040816327, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 631, 29709.148307609288, 646.7545097970545, 0.49666666666666665, 1.0024489795918368, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 635, 29631.23873687501, 666.051601138247, 0.49666666666666665, 0.7893877551020408, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 640, 29744.54499713994, 745.1936332794337, 0.49666666666666665, 1.5281632653061223, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 641, 29904.072787284484, 1020.4428646488911, 0.49666666666666665, 2.1730612244897958, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 645, 29712.4598933843, 740.606570386909, 0.49666666666666665, 1.296326530612245, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 650, 29685.297484564617, 628.6438085899928, 0.49666666666666665, 1.0571428571428572, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 651, 29754.239091315045, 820.484218890592, 0.49666666666666665, 1.4881632653061225, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 655, 29802.471089351002, 913.7995929048528, 0.49666666666666665, 1.0881632653061224, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 660, 29613.852540380998, 524.0587413541374, 0.49666666666666665, 0.5918367346938775, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 661, 29672.197934048316, 647.0237689343725, 0.49666666666666665, 1.1346938775510205, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 665, 29809.022190301435, 785.1328238308063, 0.49666666666666665, 1.703673469387755, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 670, 29704.561193428, 719.5128907106593, 0.49666666666666665, 0.8163265306122449, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 671, 29611.301193427997, 519.5147664851482, 0.49666666666666665, 0.5877551020408164, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 675, 29682.072904255423, 651.0629848493136, 0.49666666666666665, 0.6914285714285714, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 680, 29505.833464808133, 251.13114225887026, 0.49666666666666665, 0.3551020408163265, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 681, 29509.223184531776, 270.35159425629615, 0.49666666666666665, 0.43673469387755104, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 685, 29518.293464808132, 290.37153469867746, 0.49666666666666665, 0.3575510204081633, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 690, 29619.572904255427, 474.72265798793893, 0.49666666666666665, 0.8171428571428572, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 691, 29577.14318453178, 557.2313721805024, 0.49666666666666665, 0.6759183673469388, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 695, 29525.233464808134, 380.734491021054, 0.49666666666666665, 0.3183673469387755, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 700, 29578.08482094059, 426.756179682872, 0.49666666666666665, 0.6685714285714286, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 701, 29542.147274699862, 374.51786400727786, 0.49666666666666665, 0.3575510204081633, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 705, 29530.573464808134, 326.5280942377404, 0.49666666666666665, 0.35346938775510206, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 710, 29597.053464808134, 422.3952114949665, 0.49666666666666665, 0.683265306122449, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 711, 29515.113464808135, 317.7133221979226, 0.49666666666666665, 0.6342857142857142, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 715, 29594.353464808133, 478.50098244839774, 0.49666666666666665, 0.6938775510204082, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 720, 29517.373464808134, 289.1398369407483, 0.49666666666666665, 0.39755102040816326, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 721, 29478.233464808134, 194.34846045603948, 0.49666666666666665, 0.2, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 725, 29552.342974412608, 416.61363083883947, 0.49666666666666665, 0.7559183673469387, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 730, 29531.293464808132, 329.37986816291686, 0.49666666666666665, 0.34530612244897957, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 731, 29503.833464808133, 271.78351529052225, 0.49666666666666665, 0.23510204081632652, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 735, 29503.833464808133, 271.7835152905223, 0.49666666666666665, 0.23510204081632652, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 740, 29475.653464808132, 189.08035328928298, 0.49666666666666665, 0.12, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 741, 29542.773464808135, 381.2059816007133, 0.49666666666666665, 0.35346938775510206, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 745, 29448.913464808134, 7.34982709802142E-12, 0.49666666666666665, 0.0, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 750, 29514.973464808132, 280.75375295072797, 0.49666666666666665, 0.35346938775510206, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 751, 29503.980344372103, 389.38163958466646, 0.49666666666666665, 0.2, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 755, 29476.373464808134, 194.17152211382594, 0.49666666666666665, 0.12, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 760, 29503.833464808133, 271.7835152905222, 0.49666666666666665, 0.23510204081632652, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 761, 29448.913464808134, 7.34982709802142E-12, 0.49666666666666665, 0.0, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 765, 29448.913464808134, 7.34982709802142E-12, 0.49666666666666665, 0.0, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 770, 29462.273464808135, 94.46946596652273, 0.49666666666666665, 0.12, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 771, 29448.913464808134, 7.34982709802142E-12, 0.49666666666666665, 0.0, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 775, 29465.393464808134, 116.53119753954303, 0.49666666666666665, 0.12, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 780, 29508.015630417092, 335.10385193525525, 0.49666666666666665, 0.23918367346938776, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 781, 29466.513464808133, 124.45079348883243, 0.49666666666666665, 0.2, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 785, 29448.913464808134, 7.34982709802142E-12, 0.49666666666666665, 0.0, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 790, 29462.256196801864, 94.34736272319061, 0.49666666666666665, 0.12, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 791, 29467.91619680186, 134.3696065383492, 0.49666666666666665, 0.16, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 795, 29448.913464808134, 7.34982709802142E-12, 0.49666666666666665, 0.0, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 800, 29448.913464808134, 7.34982709802142E-12, 0.49666666666666665, 0.0, 29448.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 801, 29710.231417323634, 62.93250352560275, 0.49666666666666665, 0.08, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 805, 29716.383058273328, 106.43117383510496, 0.49666666666666665, 0.16, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 810, 29716.383058273328, 106.43117383510497, 0.49666666666666665, 0.16, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 811, 29714.131417323635, 90.50966799187812, 0.49666666666666665, 0.16, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 815, 29741.071417323634, 281.004234843534, 0.49666666666666665, 0.12, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 820, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 821, 29728.071417323634, 189.08035328928287, 0.49666666666666665, 0.12, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 825, 29740.271417323635, 275.34738059404185, 0.49666666666666665, 0.12, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 830, 29740.971417323635, 280.29712806234767, 0.49666666666666665, 0.12, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 831, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 835, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 840, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 841, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 845, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 850, 29733.611417323635, 228.25406896701753, 0.49666666666666665, 0.16, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 851, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 855, 29702.551417323633, 8.626702730475879, 0.49666666666666665, 0.08, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 860, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 861, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 865, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 870, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 871, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 875, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 880, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 881, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 885, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 890, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 891, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 895, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 900, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 901, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 905, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 910, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 911, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 915, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 920, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 921, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 925, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 930, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 931, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 935, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 940, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 941, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 945, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 950, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 951, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 955, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 960, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 961, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 965, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 970, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 971, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 975, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 980, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 981, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 985, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 990, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 991, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 995, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1000, 29701.331417323636, 2.204948129406426E-11, 0.49666666666666665, 0.0, 29701.331417323658);
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 134, 139, 67, 84, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 63, 53, 39, 1, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 103, 101, 110, 98, 37, 23, 17, 136, 78, 133, 52, 15, 87, 93, 21, 69, 65, 117, 25, 123, 128, 64, 3, 118, 142, 96, 55, 138, 79, 30, 41, 121, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 134, 139, 67, 84, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 63, 53, 39, 1, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 103, 101, 110, 98, 37, 23, 17, 136, 78, 133, 52, 15, 87, 93, 21, 69, 65, 117, 25, 123, 128, 64, 3, 118, 142, 96, 55, 138, 79, 30, 41, 121, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 134, 139, 67, 84, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 63, 53, 39, 1, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 103, 101, 110, 98, 37, 23, 17, 136, 78, 133, 52, 15, 87, 93, 21, 69, 65, 117, 25, 123, 128, 64, 3, 118, 142, 96, 55, 138, 79, 30, 41, 121, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 134, 139, 67, 84, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 63, 53, 39, 1, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 103, 101, 110, 98, 37, 23, 17, 136, 78, 133, 52, 15, 87, 93, 21, 69, 65, 117, 25, 123, 128, 64, 3, 118, 142, 96, 55, 138, 79, 30, 41, 121, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 134, 139, 67, 84, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 63, 53, 39, 1, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 103, 101, 110, 98, 37, 23, 17, 136, 78, 133, 52, 15, 87, 93, 21, 69, 65, 117, 25, 123, 128, 64, 3, 118, 142, 96, 55, 138, 79, 30, 41, 121, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 134, 139, 67, 84, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 63, 53, 39, 1, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 103, 101, 110, 98, 37, 23, 17, 136, 78, 133, 52, 15, 87, 93, 21, 69, 65, 117, 25, 123, 128, 64, 3, 118, 142, 96, 55, 138, 79, 30, 41, 121, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 134, 139, 67, 84, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 63, 53, 39, 1, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 103, 101, 110, 98, 37, 23, 17, 136, 78, 133, 52, 15, 87, 93, 21, 69, 65, 117, 25, 123, 128, 64, 3, 118, 142, 96, 55, 138, 79, 30, 41, 121, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 134, 139, 67, 84, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 63, 53, 39, 1, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 103, 101, 110, 98, 37, 23, 17, 136, 78, 133, 52, 15, 87, 93, 21, 69, 65, 117, 25, 123, 128, 64, 3, 118, 142, 96, 55, 138, 79, 30, 41, 121, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 134, 139, 67, 84, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 63, 53, 39, 1, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 103, 101, 110, 98, 37, 23, 17, 136, 78, 133, 52, 15, 87, 93, 21, 69, 65, 117, 25, 123, 128, 64, 3, 118, 142, 96, 55, 138, 79, 30, 41, 121, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 134, 139, 67, 84, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 63, 53, 39, 1, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 136, 78, 133, 52, 15, 87, 93, 21, 69, 65, 117, 25, 123, 128, 64, 3, 118, 142, 96, 55, 138, 79, 30, 41, 121, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 136, 78, 133, 52, 87, 93, 21, 15, 69, 65, 117, 25, 123, 128, 64, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 18, 74, 91, 7, 129, 96, 53, 39, 63, 113, 143, 1, 43, 49, 115, 125, 81, 94, 75, 12, 32, 145, 102, 134, 139, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 95, 77, 51, 36, 4, 146, 145, 102, 32, 75, 12, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 68, 67, 84, 134, 139, 80, 24, 60, 50, 124, 86, 144, 56, 8, 116, 6, 19, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 65, 117, 123, 25, 128, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 36, 4, 146, 145, 102, 32, 75, 12, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 68, 67, 84, 134, 139, 80, 24, 60, 50, 124, 86, 144, 56, 8, 116, 6, 19, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 65, 117, 123, 25, 128, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 36, 4, 146, 145, 102, 32, 75, 12, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 68, 67, 84, 134, 139, 80, 24, 60, 50, 124, 86, 144, 56, 8, 116, 6, 19, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 65, 117, 123, 25, 128, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 36, 4, 146, 145, 102, 32, 75, 12, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 68, 67, 84, 134, 139, 80, 24, 60, 50, 124, 86, 144, 56, 8, 116, 6, 19, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 65, 117, 123, 25, 128, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 36, 4, 146, 145, 102, 32, 75, 12, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 68, 67, 84, 134, 139, 80, 24, 60, 50, 124, 86, 144, 56, 8, 116, 6, 19, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 65, 117, 123, 25, 128, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 36, 4, 146, 145, 102, 32, 75, 12, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 68, 67, 84, 134, 139, 80, 24, 60, 50, 124, 86, 144, 56, 8, 116, 6, 19, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 65, 117, 123, 25, 128, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 36, 4, 146, 145, 102, 32, 75, 12, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 68, 67, 84, 134, 139, 80, 24, 60, 50, 124, 86, 144, 56, 8, 116, 6, 19, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 36, 4, 146, 145, 102, 32, 75, 12, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 68, 67, 84, 134, 139, 80, 24, 60, 50, 124, 86, 144, 6, 116, 8, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 36, 4, 146, 145, 102, 32, 75, 12, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 68, 67, 84, 134, 139, 80, 24, 60, 50, 124, 86, 144, 6, 116, 8, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 68, 67, 84, 134, 139, 80, 24, 60, 124, 50, 144, 86, 56, 6, 116, 8, 19, 85, 149, 76, 109, 61, 59, 22, 97, 108, 90, 44, 31, 10, 14, 16, 140, 58, 126, 35, 98, 110, 101, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 92, 27, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 68, 67, 84, 134, 139, 80, 24, 60, 124, 50, 144, 86, 56, 6, 116, 8, 19, 85, 149, 76, 109, 61, 59, 22, 97, 108, 90, 44, 31, 10, 14, 16, 140, 58, 126, 35, 98, 110, 101, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 92, 27, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 68, 67, 84, 134, 139, 80, 24, 60, 124, 50, 144, 86, 56, 6, 116, 8, 19, 85, 149, 76, 109, 61, 59, 22, 97, 108, 90, 44, 31, 10, 14, 16, 140, 58, 126, 35, 98, 110, 101, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 92, 27, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 68, 67, 84, 134, 139, 80, 24, 60, 124, 50, 144, 86, 56, 6, 116, 8, 19, 85, 149, 76, 109, 61, 59, 22, 97, 108, 90, 44, 31, 10, 14, 16, 140, 58, 126, 35, 98, 110, 101, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 92, 27, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 68, 67, 84, 134, 139, 80, 24, 60, 124, 50, 144, 86, 56, 6, 116, 8, 19, 85, 149, 76, 109, 61, 59, 22, 97, 108, 90, 44, 31, 10, 14, 16, 140, 58, 126, 35, 98, 110, 101, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 92, 27, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 68, 67, 84, 134, 139, 80, 24, 60, 124, 50, 144, 86, 56, 6, 116, 8, 19, 85, 149, 76, 109, 61, 59, 22, 97, 108, 90, 44, 31, 10, 14, 16, 140, 58, 126, 35, 98, 110, 101, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 92, 27, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 68, 67, 84, 134, 139, 80, 24, 60, 124, 50, 144, 86, 56, 6, 116, 8, 19, 85, 149, 76, 109, 61, 59, 22, 97, 108, 90, 44, 31, 10, 14, 16, 140, 58, 126, 35, 98, 110, 101, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 92, 27, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 1, 143, 63, 53, 39, 68, 72, 67, 84, 134, 139, 80, 24, 60, 124, 50, 144, 86, 56, 6, 116, 8, 19, 85, 149, 76, 109, 61, 59, 22, 97, 108, 90, 44, 31, 10, 14, 16, 140, 58, 126, 35, 98, 110, 101, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 92, 27, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 1, 143, 63, 53, 39, 68, 72, 67, 84, 134, 139, 80, 24, 60, 124, 50, 144, 86, 56, 6, 116, 8, 19, 85, 149, 76, 109, 61, 59, 22, 97, 108, 90, 44, 31, 10, 14, 16, 140, 58, 126, 35, 98, 110, 101, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 92, 27, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 1, 143, 63, 53, 39, 68, 72, 67, 84, 134, 139, 80, 24, 60, 124, 50, 144, 86, 56, 6, 116, 8, 19, 85, 149, 76, 109, 61, 59, 22, 97, 108, 90, 44, 31, 10, 14, 16, 140, 58, 126, 35, 98, 110, 101, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 128, 25, 123, 117, 64, 65, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 92, 27, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 107, 57, 60, 24, 80, 68, 63, 72, 67, 84, 134, 139, 124, 50, 144, 86, 56, 6, 8, 116, 19, 85, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 16, 14, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 78, 136, 17, 93, 87, 15, 21, 69, 65, 128, 25, 123, 117, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 107, 57, 60, 24, 80, 68, 63, 72, 67, 84, 134, 139, 124, 50, 144, 86, 56, 6, 8, 116, 19, 85, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 16, 14, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 78, 136, 17, 93, 87, 15, 21, 69, 65, 128, 25, 123, 117, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 107, 57, 60, 24, 80, 68, 63, 72, 67, 84, 134, 139, 124, 50, 144, 86, 56, 6, 8, 116, 19, 85, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 16, 14, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 78, 136, 17, 93, 87, 15, 21, 69, 65, 128, 25, 123, 117, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 16, 14, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 78, 136, 17, 93, 87, 15, 21, 69, 65, 128, 25, 123, 117, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 16, 14, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 78, 136, 17, 93, 87, 15, 21, 69, 65, 128, 25, 123, 117, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 16, 14, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 78, 136, 17, 93, 87, 15, 21, 69, 65, 128, 25, 123, 117, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 16, 14, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 78, 136, 17, 93, 87, 15, 21, 69, 65, 128, 25, 123, 117, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 16, 14, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 78, 136, 17, 93, 87, 15, 21, 69, 65, 128, 25, 123, 117, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 16, 14, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 78, 136, 17, 93, 87, 15, 21, 69, 65, 128, 25, 123, 117, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 16, 14, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 78, 136, 17, 93, 87, 15, 21, 69, 65, 128, 25, 123, 117, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 128, 123, 25, 117, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 128, 123, 25, 117, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 128, 123, 25, 117, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 128, 123, 25, 117, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 128, 123, 25, 117, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 128, 123, 25, 117, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 128, 123, 25, 117, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 128, 123, 25, 117, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 128, 123, 25, 117, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 128, 123, 25, 117, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 118, 96, 142, 55, 138, 7, 41, 121, 30, 79, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 48, 5, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 118, 96, 142, 55, 138, 7, 41, 121, 30, 79, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 48, 5, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 118, 96, 142, 55, 138, 7, 41, 121, 30, 79, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 48, 5, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 118, 96, 142, 55, 138, 7, 41, 121, 30, 79, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 48, 5, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 118, 96, 142, 55, 138, 7, 41, 121, 30, 79, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 48, 5, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 118, 96, 142, 55, 138, 7, 41, 121, 30, 79, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 48, 5, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 118, 96, 142, 55, 138, 7, 41, 121, 30, 79, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 48, 5, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 118, 96, 142, 55, 138, 7, 41, 121, 30, 79, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 48, 5, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 118, 96, 142, 55, 138, 7, 41, 121, 30, 79, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 48, 5, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 118, 96, 142, 55, 138, 7, 41, 121, 30, 79, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 48, 5, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[0, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 72, 67, 84, 134, 139, 24, 80, 68, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 44, 90, 97, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");

    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA100_with_seed_1_mag_0_75_freq_10() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_3OPT_MADTSP mmas_3OPT_madtsp = new MMAS_3OPT_MADTSP(graph, 0.8, 1000, 0.75, 10, 1.0, 5.0);
        mmas_3OPT_madtsp.setMmasSeed(1);
        mmas_3OPT_madtsp.setDbgpSeed(1);
        mmas_3OPT_madtsp.setStatisticInterval(1);
        mmas_3OPT_madtsp.setShowLog(false);
        mmas_3OPT_madtsp.run();
        assertThat(mmas_3OPT_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(46015.426489484555);
        assertThat(mmas_3OPT_madtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(46015.426489484555);
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getGlobalStatistics())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 17, 23, 37, 98, 35, 83, 78, 74, 96, 55, 0]");

        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1, 46567.88566249352, 4338.286883293141, 0.0, 57.16, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 5, 38106.33266392526, 2237.2728848798847, 0.0, 13.702857142857143, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 10, 37988.29155065972, 1954.5983431750626, 0.0, 13.38938775510204, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 11, 42419.60050629046, 3036.453046573437, 0.48, 41.17387755102041, 31499.82674462246);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 15, 33842.6949137395, 2891.992963597803, 0.805, 13.331428571428571, 29340.005314708305);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 20, 33930.30578522235, 3172.8633806135713, 0.805, 12.939591836734694, 29340.005314708305);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 21, 44825.46899391567, 3151.4803686754117, 0.485, 39.0595918367347, 33933.27910768432);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 25, 38558.21274875278, 2987.388620081189, 0.485, 11.355102040816327, 33933.27910768432);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 30, 38728.721210345204, 2857.8585293066244, 0.5, 12.063673469387755, 33755.34959778847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 31, 46541.57863693464, 3610.1535997799288, 0.465, 45.88979591836735, 38609.46253766002);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 35, 35370.67351176223, 2996.118741685371, 0.805, 15.919183673469387, 31691.836825157417);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 40, 32785.42203450127, 2352.335840777767, 0.68, 7.466938775510204, 30967.480172369636);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 41, 42453.864071146614, 2675.4370886115657, 0.495, 26.097142857142856, 37018.740217336686);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 45, 35065.659947606146, 3423.843844797584, 0.675, 9.115102040816327, 30572.300165926263);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 50, 32400.412971792724, 3076.1665816219343, 0.5, 6.263673469387755, 29839.558812634175);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 51, 45285.46438002802, 3008.83608935018, 0.49, 35.23918367346939, 39454.82674896262);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 55, 39779.34408567126, 3812.483463481204, 0.615, 17.548571428571428, 31906.494728433674);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 60, 39599.391601553194, 4486.230946039403, 0.615, 15.327346938775511, 31906.494728433674);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 61, 45770.069839945536, 3137.940286193483, 0.48, 31.548571428571428, 35425.29741640657);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 65, 36905.17946202314, 2820.476920550054, 0.74, 10.133061224489795, 33373.11233812354);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 70, 37337.26334611655, 3098.9709424542443, 0.74, 11.895510204081633, 33373.11233812354);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 71, 45048.56486763048, 3021.472519835863, 0.48, 30.297142857142855, 32722.489547710193);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 75, 38663.52531554393, 2079.777203979732, 0.48, 19.324081632653062, 32722.489547710193);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 80, 39613.598778422944, 3442.443189661472, 0.48, 23.708571428571428, 32722.489547710193);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 81, 44905.40919037964, 3270.1119847334035, 0.525, 37.68326530612245, 31758.01088609987);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 85, 38121.449179462186, 3541.708596077816, 0.525, 10.946938775510205, 31758.01088609987);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 90, 37968.63588675499, 2847.6142644623324, 0.525, 16.07591836734694, 31758.01088609987);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 91, 45849.491537540554, 3652.76028838529, 0.51, 35.63591836734694, 34756.05314821274);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 95, 40088.35869591183, 2612.4614809064237, 0.51, 12.206530612244897, 34756.05314821274);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 100, 39685.47098079449, 2319.1842400028513, 0.495, 21.227755102040817, 34756.05314821274);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 101, 45439.01592423839, 3534.029800875855, 0.48, 40.308571428571426, 38603.911153897454);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 105, 38485.14145985557, 2980.8680607944334, 0.555, 10.840816326530613, 35776.747241798206);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 110, 37733.48526576555, 2365.017284119638, 0.515, 20.58938775510204, 33054.43294946087);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 111, 46376.04255187671, 2797.297172615688, 0.525, 34.02040816326531, 36978.307245826196);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 115, 40220.64666694091, 3163.613453567253, 0.525, 10.316734693877551, 36978.307245826196);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 120, 41501.45928408959, 2347.119952909885, 0.655, 16.538775510204083, 36395.27437908634);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 121, 44595.08056636923, 3461.407231867254, 0.5, 31.747755102040816, 34765.624299245814);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 125, 42958.23325435581, 4810.628676248345, 0.5, 16.064489795918366, 34765.624299245814);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 130, 44591.264433101685, 5457.320727658244, 0.5, 17.93877551020408, 34765.624299245814);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 131, 47457.494849377676, 3383.199967762379, 0.54, 41.29142857142857, 35244.54664481164);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 135, 37884.84718837876, 2176.183573203831, 0.83, 7.691428571428571, 33530.39143882535);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 140, 37303.46561629906, 2206.9566955407804, 0.83, 8.335510204081633, 33530.39143882535);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 141, 45508.21834264489, 3223.9317498036226, 0.5, 26.46204081632653, 32492.39533354587);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 145, 36413.24936325727, 2513.205926446281, 0.5, 10.238367346938775, 32492.39533354587);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 150, 37014.45673040416, 3221.178233664021, 0.505, 10.44734693877551, 32377.215341501233);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 151, 46193.564360243196, 3327.9215566597454, 0.47, 35.95836734693878, 37239.42750088669);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 155, 39720.381678352795, 1744.118272882607, 0.47, 14.698775510204081, 37239.42750088669);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 160, 38567.51758120171, 1976.7418460784313, 0.495, 10.022857142857143, 35939.11753126235);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 161, 46029.75870369281, 3530.3996325079215, 0.52, 29.481632653061226, 34214.18358048718);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 165, 39052.93785978171, 1917.9773221329283, 0.52, 7.200816326530612, 34214.18358048718);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 170, 38581.97927916609, 1620.870671860041, 0.52, 10.797551020408163, 34214.18358048718);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 171, 47971.00770418495, 3435.5386855758807, 0.535, 23.809795918367346, 35355.133145103915);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 175, 37670.09613439229, 2329.317383306759, 0.615, 15.411428571428571, 34399.7349193516);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 180, 36822.70404344494, 2051.8701147604056, 0.49, 15.411428571428571, 33601.87216885702);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 181, 46330.03893719701, 3453.8713075057367, 0.485, 35.79183673469388, 34825.087496988956);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 185, 35685.97860083153, 2513.2382152835175, 0.55, 7.053877551020408, 33512.27010346908);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 190, 34601.97496849632, 2166.553397933043, 0.52, 3.364081632653061, 33155.36515433302);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 191, 45569.21228652195, 2715.669790882915, 0.48, 30.881632653061224, 34672.19971363457);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 195, 37174.68012337353, 1481.3832569462309, 0.48, 10.913469387755102, 34672.19971363457);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 200, 36175.1947712511, 1866.8745251237249, 0.5, 9.299591836734693, 34111.173732259085);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 201, 42688.77639260486, 2629.6244692435876, 0.485, 21.781224489795918, 34531.0117136168);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 205, 34795.10885244861, 1811.2293149656143, 0.7, 4.96, 33228.29620799913);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 210, 35632.81316041872, 3319.049563314023, 0.7, 5.1289795918367345, 33228.29620799913);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 211, 44959.87268345108, 3290.8764511941604, 0.48, 24.01061224489796, 34629.557424076855);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 215, 39069.82083066794, 2842.6187239332453, 0.48, 10.088979591836734, 34629.557424076855);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 220, 37561.17221756262, 3444.1390576848803, 0.555, 7.577959183673469, 34458.047634076785);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 221, 45295.49590373083, 2487.3246149578417, 0.475, 29.549387755102043, 36650.32946483059);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 225, 39498.791862147795, 3135.8598729770874, 0.475, 8.304489795918368, 36650.32946483059);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 230, 39361.429547801235, 2485.4145149087994, 0.475, 6.673469387755102, 36650.32946483059);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 231, 46731.439130620834, 3369.372604571091, 0.465, 31.41469387755102, 37677.68575498369);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 235, 40768.92439274769, 2886.828698680543, 0.685, 14.45795918367347, 36554.78623418352);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 240, 39121.16225155163, 2363.5023112080257, 0.685, 9.248979591836735, 36554.78623418352);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 241, 45714.2025420365, 3302.2838062822575, 0.46, 32.711020408163265, 34452.83394926065);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 245, 38052.78467285284, 2192.2572399526416, 0.46, 9.882448979591837, 34452.83394926065);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 250, 36598.22572891563, 2977.436653657966, 0.56, 9.943673469387756, 33886.46932305045);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 251, 44409.28534347148, 2170.6818721752898, 0.47, 32.46367346938776, 39768.657660328245);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 255, 39709.772305706974, 3086.40467899389, 0.675, 12.360816326530612, 35100.3158109922);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 260, 39128.873620566636, 2939.7974779145625, 0.675, 10.374693877551021, 35100.3158109922);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 261, 43949.240614530005, 2705.9576560741543, 0.465, 30.422857142857143, 35463.304296943126);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 265, 38385.8801211883, 1616.4478480844205, 0.465, 6.530612244897959, 35463.304296943126);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 270, 38187.9715819995, 1924.5663407199786, 0.465, 8.465306122448979, 35463.304296943126);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 271, 44442.72172835502, 3129.914835909489, 0.545, 17.378775510204083, 35209.851285961835);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 275, 37472.867554087716, 1656.5940467712846, 0.545, 6.390204081632653, 35209.851285961835);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 280, 37749.44973670446, 2249.78481811723, 0.545, 8.88408163265306, 35209.851285961835);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 281, 44835.18593035636, 2388.2081576653422, 0.485, 23.23183673469388, 36626.77465196531);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 285, 39393.80787353109, 2574.510730514606, 0.485, 15.493061224489797, 36626.77465196531);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 290, 38847.55315096064, 2488.3546418333754, 0.49, 12.024489795918367, 36403.710821915185);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 291, 46635.28456489634, 3727.3966315373596, 0.48, 31.378775510204083, 36984.735672301606);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 295, 40178.02051209141, 3398.135327418876, 0.48, 10.077551020408164, 36984.735672301606);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 300, 39809.638648044944, 3508.197995929601, 0.495, 8.148571428571428, 36984.735672301606);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 301, 45096.131127154134, 2988.6227644649666, 0.475, 30.3265306122449, 35347.46943304395);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 305, 36866.6222105494, 1973.857269753668, 0.475, 3.710204081632653, 35347.46943304395);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 310, 37018.3295868363, 2692.762477898964, 0.49, 6.577959183673469, 34785.548802363366);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 311, 43633.064344124774, 2357.8755874755066, 0.505, 24.768979591836736, 33678.045783681606);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 315, 39020.156865537414, 3680.9381725022627, 0.505, 11.083265306122449, 33678.045783681606);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 320, 38987.71512266868, 3560.6046796599326, 0.505, 9.91265306122449, 33678.045783681606);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 321, 43334.46966028586, 2392.253574536478, 0.48, 26.805714285714284, 36284.00154430463);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 325, 37347.19950354465, 2699.23444466354, 0.62, 6.023673469387755, 34391.34582784997);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 330, 36353.524634530244, 2489.428931594491, 0.62, 2.7224489795918365, 34391.34582784997);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 331, 45040.050280697156, 3043.882508340381, 0.48, 21.703673469387756, 33901.93866945179);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 335, 39032.87940580021, 2757.694602686405, 0.48, 14.38204081632653, 33901.93866945179);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 340, 40190.56079603392, 2825.869367651187, 0.48, 13.589387755102042, 33901.93866945179);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 341, 43096.432898015126, 2617.0426108347738, 0.465, 27.281632653061223, 35876.776421181545);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 345, 40399.49256532886, 3051.758567424318, 0.465, 7.8212244897959184, 35876.776421181545);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 350, 40633.40005077352, 2962.224043798732, 0.465, 7.830204081632653, 35876.776421181545);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 351, 45025.07835306138, 2983.5450555895677, 0.485, 22.675918367346938, 36625.63488677872);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 355, 39134.27521873985, 1413.3599103783993, 0.485, 10.448163265306123, 36625.63488677872);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 360, 39211.37598233811, 1502.779469875675, 0.485, 8.571428571428571, 36625.63488677872);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 361, 45420.06043466579, 2215.2599536412868, 0.485, 26.746938775510205, 37996.52132714184);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 365, 39392.703707449, 2659.780676009582, 0.615, 9.755918367346938, 36712.67726036869);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 370, 37721.556247815395, 1706.1651875903897, 0.615, 4.691428571428571, 36712.67726036869);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 371, 44186.827582518934, 3344.4114943518694, 0.48, 25.372244897959185, 37066.17080759392);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 375, 36831.323629331215, 1805.5156976464198, 0.7, 5.2457142857142856, 35307.56945108827);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 380, 37575.71327472341, 2240.529126407757, 0.7, 5.537959183673469, 35307.56945108827);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 381, 44107.00785413741, 3642.926773999349, 0.47, 19.639183673469386, 36267.526846214176);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 385, 38878.705296666354, 1964.3358803541812, 0.65, 11.426938775510203, 36051.89886262883);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 390, 39003.267486359226, 2061.1845066582273, 0.65, 11.344489795918367, 36051.89886262883);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 391, 43313.18390090382, 2695.5090778969975, 0.465, 25.102040816326532, 38365.5489357897);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 395, 36884.52841961196, 1835.3225026456143, 0.635, 8.316734693877551, 35671.744889259164);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 400, 36152.93905428517, 1660.4836922942923, 0.49, 1.9779591836734693, 35671.744889259164);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 401, 43898.571764445165, 1291.527723911784, 0.48, 16.7134693877551, 41353.443552590084);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 405, 40080.66886363095, 1661.1906977816593, 0.55, 5.244081632653061, 37599.797388182684);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 410, 39907.221203107394, 2411.0490727167667, 0.55, 6.8342857142857145, 37599.797388182684);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 411, 42306.882818257036, 2547.8796363459614, 0.47, 22.195918367346938, 34910.304566324085);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 415, 36175.59485563078, 833.2571360141934, 0.47, 1.6057142857142856, 34910.304566324085);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 420, 36193.26159172086, 856.9785143528762, 0.47, 1.1779591836734693, 34910.304566324085);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 421, 43543.360496728936, 2055.02143705355, 0.475, 15.247346938775511, 36934.11802318604);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 425, 38483.986811519106, 2053.572104259602, 0.475, 3.3159183673469386, 36934.11802318604);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 430, 38819.540332996854, 2684.431069120653, 0.475, 4.223673469387755, 36934.11802318604);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 431, 45813.74895864356, 2390.4359425385583, 0.47, 22.34285714285714, 40524.75255429355);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 435, 37789.96134841983, 2194.8037344316735, 0.62, 2.6881632653061223, 36616.26005547989);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 440, 38729.497058782654, 2904.9401303830687, 0.49, 5.56, 36377.296616266554);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 441, 44852.36331590724, 3169.5480641086447, 0.49, 15.61795918367347, 38414.9075917359);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 445, 40286.48628888654, 2827.1467709854364, 0.575, 8.848163265306123, 38269.49057294782);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 450, 39884.227531859186, 2280.5220037606373, 0.515, 7.402448979591837, 37905.65116780715);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 451, 45193.17448214203, 2579.9461116213997, 0.49, 17.90122448979592, 36876.371295252146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 455, 39548.8220872638, 3189.452829021737, 0.49, 6.2326530612244895, 36876.371295252146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 460, 38833.118342833885, 2949.8831191616046, 0.49, 5.965714285714285, 36876.371295252146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 461, 46252.27868026123, 2482.642016098563, 0.49, 24.102040816326532, 38736.52506933677);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 465, 39836.90082009251, 1674.7441134333237, 0.49, 6.955102040816326, 38736.52506933677);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 470, 39635.60585077547, 2912.391755102575, 0.495, 5.8946938775510205, 37358.81621275545);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 471, 46075.425244543025, 3081.220697400309, 0.535, 16.634285714285713, 38441.371445402765);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 475, 39448.06623740008, 2030.1772479759852, 0.535, 3.466938775510204, 38441.371445402765);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 480, 39355.4519378909, 1732.3298653400245, 0.535, 2.8718367346938773, 38441.371445402765);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 481, 45837.99596210775, 2868.7930958992515, 0.48, 16.223673469387755, 39662.58248362278);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 485, 38753.75096332818, 2094.6932638417156, 0.58, 5.644081632653061, 37529.19175876573);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 490, 39013.51207379547, 2268.270826433581, 0.58, 6.633469387755102, 37529.19175876573);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 491, 46050.86608413987, 1777.4225106711076, 0.465, 21.98938775510204, 39327.893505869215);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 495, 39687.381349076655, 1046.1125923178656, 0.465, 0.8571428571428571, 39327.893505869215);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 500, 39602.801228713935, 1543.6427268006173, 0.49, 0.9673469387755103, 39057.27644712288);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 501, 47454.71127947051, 3133.2866531597883, 0.475, 12.502857142857144, 43464.77201481043);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 505, 42674.89404139748, 3493.9359492767935, 0.655, 3.843265306122449, 40033.73458731644);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 510, 42717.570039921644, 3249.2045002499926, 0.655, 1.9975510204081632, 40033.73458731644);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 511, 44296.16967754872, 2393.293317808009, 0.49, 11.724897959183673, 38939.453526283425);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 515, 40618.89371206514, 3165.3940787221773, 0.545, 5.3730612244897955, 38801.33731396108);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 520, 40614.01825012088, 3236.155715367114, 0.545, 3.260408163265306, 38801.33731396108);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 521, 47475.46181179073, 2495.0099429302313, 0.475, 22.306122448979593, 40163.34565653451);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 525, 42370.798226097235, 2796.0988450834407, 0.475, 4.565714285714286, 40163.34565653451);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 530, 41739.37128213663, 2537.3585684242194, 0.475, 4.825306122448979, 40163.34565653451);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 531, 44913.250968129105, 2860.017542181437, 0.47, 19.18938775510204, 39255.4972840131);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 535, 41683.8712670898, 4367.714081668175, 0.61, 4.504489795918367, 38555.35011313906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 540, 40703.742828929935, 4074.5986487262526, 0.61, 2.954285714285714, 38555.35011313906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 541, 48740.70216118139, 3620.3304602716103, 0.49, 17.41877551020408, 40090.97126898902);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 545, 41784.96673128268, 1810.029831273378, 0.49, 4.000816326530612, 40090.97126898902);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 550, 41549.03868531865, 1572.2019445744672, 0.49, 3.8636734693877552, 40090.97126898902);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 551, 49750.48256815583, 3698.798924779799, 0.49, 17.001632653061225, 39441.99310427981);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 555, 40006.3830688146, 1396.8958675034569, 0.49, 2.179591836734694, 39441.99310427981);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 560, 41055.830167857624, 2200.0333080655037, 0.495, 5.231020408163265, 39300.936782820056);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 561, 44742.867109998566, 2056.7087993265495, 0.485, 15.786122448979592, 39862.27208254521);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 565, 40889.1617080075, 2018.5253992759415, 0.495, 3.3412244897959185, 39623.855385805364);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 570, 41234.85496793225, 2229.69807292482, 0.495, 5.103673469387755, 39623.855385805364);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 571, 46728.256184926315, 2502.6228003886736, 0.47, 16.88734693877551, 40269.482759434555);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 575, 40162.03017335143, 1764.4293042441777, 0.615, 2.048979591836735, 39435.382987489684);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 580, 40419.07790122328, 2158.516444423403, 0.49, 2.1787755102040816, 39353.9426082916);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 581, 45854.70882202854, 3298.1483135146786, 0.475, 17.837551020408164, 40734.58247741587);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 585, 39140.94524256648, 1233.7588961515619, 0.59, 1.333061224489796, 38842.1155022232);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 590, 39634.928493820975, 2065.492143003705, 0.59, 1.6261224489795918, 38842.1155022232);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 591, 43350.45762814838, 1986.5521015124516, 0.485, 9.848979591836734, 39943.7382292019);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 595, 41426.713821428406, 2964.4159163406885, 0.565, 6.05795918367347, 39094.39359723653);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 600, 40710.501248356755, 2796.2137008778104, 0.49, 5.459591836734694, 38667.50684756084);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 601, 44709.188935072, 2642.940356783302, 0.47, 14.72326530612245, 40210.04052496928);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 605, 41182.34177709946, 2656.5820562687704, 0.47, 2.580408163265306, 40210.04052496928);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 610, 41337.34164527553, 2726.1230318563635, 0.485, 3.370612244897959, 40175.83578860216);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 611, 46712.32812815125, 2523.9419268387333, 0.485, 15.074285714285715, 40838.81829005722);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 615, 42210.0023252338, 205.81519451158945, 0.485, 0.7926530612244898, 40838.81829005722);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 620, 42400.42938341872, 662.5002906739758, 0.485, 2.0440816326530613, 40838.81829005722);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 621, 45996.027435477365, 1815.338161271278, 0.475, 7.55265306122449, 38287.68178661663);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 625, 43070.51174009747, 4950.442086827943, 0.475, 3.8702040816326533, 38287.68178661663);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 630, 41533.33185028195, 4656.86590527348, 0.475, 3.5428571428571427, 38287.68178661663);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 631, 46696.14929062455, 2941.76735767451, 0.48, 9.950204081632654, 40516.90815132835);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 635, 41448.33143895363, 2181.937506599088, 0.48, 2.4448979591836735, 40516.90815132835);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 640, 41883.38668789797, 2294.725380703817, 0.48, 2.9126530612244896, 40516.90815132835);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 641, 48374.13010906657, 3387.1924893307337, 0.46, 15.679183673469387, 39741.610860855944);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 645, 40233.19111164708, 1102.688646371005, 0.46, 1.0620408163265307, 39741.610860855944);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 650, 40388.8165430199, 1360.8746253193854, 0.46, 1.6448979591836734, 39741.610860855944);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 651, 48312.423424199456, 3007.3253348319267, 0.475, 13.533061224489796, 40844.92726577397);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 655, 41306.70441966259, 1912.1278780357195, 0.495, 1.7510204081632652, 39954.18198932837);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 660, 40155.67018537274, 993.0182024972617, 0.495, 0.9012244897959184, 39954.18198932837);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 661, 43213.70930671403, 2221.3701186243575, 0.475, 8.34530612244898, 41154.59856662875);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 665, 41617.80800111584, 765.6050448887729, 0.485, 3.4824489795918367, 40859.09807540575);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 670, 41705.77990705174, 1219.2027754965916, 0.485, 4.515918367346939, 40859.09807540575);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 671, 48521.4287647863, 3109.3276534676547, 0.465, 8.128979591836735, 41672.78613488218);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 675, 41048.90045342989, 1189.3464615573032, 0.525, 3.436734693877551, 40387.95310013988);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 680, 40523.96557352354, 582.5304965442582, 0.525, 0.5967346938775511, 40387.95310013988);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 681, 42615.403427327095, 1859.49741441633, 0.47, 6.887346938775511, 39284.337371000984);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 685, 39710.67990046433, 1741.4244276555503, 0.485, 1.5281632653061223, 39046.01140217859);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 690, 39081.93169398648, 253.99481919573944, 0.485, 0.16, 39046.01140217859);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 691, 44946.1708104466, 1392.409639269622, 0.475, 11.04734693877551, 41634.074806333156);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 695, 41418.155172626844, 440.81922684307506, 0.505, 2.406530612244898, 41027.10380343503);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 700, 41417.62449932807, 482.83336905856015, 0.495, 3.2057142857142855, 41023.27213396073);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 701, 45299.56690557829, 3678.7949591694482, 0.48, 11.714285714285714, 39928.813711307484);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 705, 40722.30610896396, 1654.1528472337473, 0.48, 1.0759183673469388, 39928.813711307484);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 710, 41211.78819997312, 2024.185000117264, 0.48, 1.4457142857142857, 39928.813711307484);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 711, 46852.12593333328, 2887.3794709156036, 0.475, 5.817142857142857, 41826.84304741404);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 715, 41881.98228646949, 3511.096845970562, 0.53, 2.942857142857143, 40639.14296890273);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 720, 42182.79737536289, 4060.8099421563807, 0.53, 1.129795918367347, 40639.14296890273);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 721, 45686.06256855403, 3410.184049060927, 0.485, 6.755918367346939, 41973.43826649033);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 725, 41424.961023752774, 1418.7322429178903, 0.56, 0.6179591836734694, 41021.57140702203);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 730, 41365.72629138213, 1201.075576569212, 0.56, 0.6514285714285715, 41021.57140702203);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 731, 47151.77437439291, 2759.3390492518492, 0.485, 3.333061224489796, 40298.218286591);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 735, 40409.78735796229, 788.9124693729275, 0.485, 0.16, 40298.218286591);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 740, 40519.118420745755, 997.4191854267341, 0.485, 0.35346938775510206, 40298.218286591);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 741, 45274.59451834293, 1128.0851448759286, 0.485, 5.377142857142857, 43365.27930920831);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 745, 42693.288725773935, 694.4837615524815, 0.54, 1.8114285714285714, 42460.00202756546);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 750, 42884.0738353226, 1184.357881174953, 0.54, 1.8204081632653062, 42460.00202756546);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 751, 46153.54179142599, 1999.7274685629372, 0.475, 9.492244897959184, 40731.79046744013);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 755, 40826.74560155992, 1207.2969013410727, 0.52, 0.2, 40654.73111299738);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 760, 40745.233284490045, 358.1690299925693, 0.52, 0.39510204081632655, 40654.73111299738);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 761, 45130.52131433201, 2295.799332361798, 0.48, 3.642448979591837, 41818.65899774259);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 765, 41894.02522092865, 215.011454550272, 0.48, 0.6448979591836734, 41818.65899774259);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 770, 41980.434279637586, 725.9281566988614, 0.48, 0.8938775510204081, 41818.65899774259);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 771, 44495.90240963951, 2419.292587915708, 0.48, 3.8416326530612244, 43165.38448273758);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 775, 43388.35686162472, 532.5569838187826, 0.49, 1.9812244897959184, 42594.30198719181);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 780, 42764.481750960986, 685.3246275336674, 0.49, 0.7689795918367347, 42594.30198719181);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 781, 46209.706971996675, 1766.697416874311, 0.485, 5.480816326530612, 41223.94736133262);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 785, 41440.67188850069, 868.3577329438613, 0.485, 0.7036734693877551, 41223.94736133262);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 790, 41287.99951624005, 261.8255142563684, 0.485, 0.593469387755102, 41223.94736133262);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 791, 44208.55397576513, 842.9004414201581, 0.47, 5.728979591836735, 41764.16787309719);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 795, 41910.72621268202, 521.4854359839109, 0.47, 0.5575510204081633, 41764.16787309719);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 800, 41932.74663880567, 653.3342259910321, 0.485, 0.45714285714285713, 41764.16787309719);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 801, 43748.03480066252, 957.1081936031278, 0.49, 4.42530612244898, 41867.76584495814);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 805, 41890.62426563314, 97.78816720186094, 0.49, 0.6587755102040816, 41867.76584495814);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 810, 41903.33507708593, 222.61699926824747, 0.49, 0.396734693877551, 41867.76584495814);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 811, 52807.02031416141, 1938.4127724680484, 0.48, 1.7412244897959184, 44155.5978951334);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 815, 46354.570484907534, 789.368913176263, 0.52, 1.5608163265306123, 42887.803159855976);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 820, 44263.42232665682, 473.0077053364278, 0.52, 1.7755102040816326, 42887.803159855976);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 821, 45021.30117842531, 1270.9853216949998, 0.505, 6.581224489795918, 41690.288676362026);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 825, 42005.51754836523, 1080.051170700964, 0.505, 0.686530612244898, 41690.288676362026);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 830, 42005.49891879362, 1260.3047838761795, 0.505, 0.34530612244897957, 41690.288676362026);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 831, 48444.90835109041, 888.2285092654442, 0.485, 1.4946938775510203, 43921.616555817905);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 835, 44136.676754321445, 550.1560199597942, 0.55, 0.9526530612244898, 43765.53760831713);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 840, 44150.166997046086, 541.329800764601, 0.55, 0.9159183673469388, 43765.53760831713);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 841, 45781.72423321681, 1406.7816967834242, 0.47, 5.159183673469387, 43407.98654523818);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 845, 43313.46658007624, 1096.713025161788, 0.52, 0.8040816326530612, 43056.32632474053);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 850, 43308.84719098316, 1001.4878836281868, 0.52, 1.1216326530612244, 43056.32632474053);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 851, 46546.16804289189, 1170.44040843241, 0.47, 4.321632653061225, 43360.36375886724);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 855, 43448.65061990489, 370.61928599905366, 0.47, 0.6946938775510204, 43360.36375886724);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 860, 43438.31024076829, 244.4138795624534, 0.47, 0.6489795918367347, 43360.36375886724);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 861, 45400.72432840319, 839.5761278916074, 0.475, 3.976326530612245, 42887.86346465151);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 865, 43189.38772486939, 637.0490196873709, 0.475, 1.296326530612245, 42887.86346465151);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 870, 43135.14088565955, 481.00891454159216, 0.475, 1.6546938775510205, 42887.86346465151);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 871, 49033.35124515823, 925.3651098733928, 0.485, 2.979591836734694, 45176.330611729056);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 875, 46070.87215965764, 729.5333608731208, 0.525, 1.5159183673469387, 45167.21448738743);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 880, 46211.03837889093, 690.280813840554, 0.525, 1.2857142857142858, 45167.21448738743);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 881, 45250.747201127306, 1051.8728565173055, 0.49, 2.085714285714286, 44328.64082704911);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 885, 44328.64082704908, 2.939930839208568E-11, 0.49, 0.0, 44328.64082704911);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 890, 44433.35700655045, 672.5905205764482, 0.49, 0.31673469387755104, 44328.64082704911);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 891, 48442.2393123532, 633.8768098379388, 0.485, 1.5959183673469388, 44301.06165749696);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 895, 44320.20871619364, 898.9384780576486, 0.525, 0.5273469387755102, 44050.29852010158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 900, 44169.15154559921, 591.5258510091093, 0.49, 0.23918367346938776, 44050.29852010158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 901, 46585.39683837191, 852.9077261419993, 0.48, 0.8824489795918368, 45586.5363545289);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 905, 45948.84004166802, 1097.945974392669, 0.48, 0.5510204081632653, 45586.5363545289);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 910, 45876.379304240196, 992.8842535966785, 0.48, 0.4506122448979592, 45586.5363545289);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 911, 46651.037243480896, 1308.9348878806024, 0.485, 0.9036734693877551, 46043.9369992356);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 915, 46619.75660222952, 1256.832364690009, 0.485, 0.9885714285714285, 46043.9369992356);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 920, 46246.30374731736, 809.122757996249, 0.485, 0.34530612244897957, 46043.9369992356);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 921, 45830.69699581721, 209.93337232654775, 0.495, 0.08, 45801.00793358333);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 925, 45915.271060499865, 676.3369827740736, 0.495, 0.23918367346938776, 45801.00793358333);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 930, 45797.49358195032, 354.1904810615231, 0.495, 0.19918367346938776, 45726.788857398016);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 931, 47747.378034601184, 1103.2466802450167, 0.49, 1.5885714285714285, 45919.23187623658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 935, 45919.23187623658, 0.0, 0.49, 0.0, 45919.23187623658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 940, 45919.23187623658, 0.0, 0.49, 0.0, 45919.23187623658);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 941, 46094.3077095112, 2.204948129406426E-11, 0.495, 0.0, 46094.307709511224);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 945, 46097.03466017438, 19.28245305894931, 0.495, 0.08, 46094.307709511224);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 950, 46094.3077095112, 2.204948129406426E-11, 0.495, 0.0, 46094.307709511224);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 951, 46016.9703884957, 70.23969673458257, 0.49, 0.23510204081632652, 45676.32596282866);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 955, 45676.32596282867, 7.34982709802142E-12, 0.49, 0.0, 45676.32596282866);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 960, 45676.32596282867, 7.34982709802142E-12, 0.49, 0.0, 45676.32596282866);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 961, 47016.37620557295, 54.18990105102736, 0.48, 0.3673469387755102, 46998.49445053727);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 965, 46998.494450537284, 1.469965419604284E-11, 0.48, 0.0, 46998.49445053727);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 970, 46998.494450537284, 1.469965419604284E-11, 0.48, 0.0, 46998.49445053727);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 971, 47285.687453067825, 414.52051730476757, 0.49, 0.4310204081632653, 46174.442549099316);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 975, 46174.44254909927, 4.409896258812852E-11, 0.49, 0.0, 46174.442549099316);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 980, 46174.44254909927, 4.409896258812852E-11, 0.49, 0.0, 46174.442549099316);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 981, 45934.97673023698, 0.0, 0.49, 0.0, 45934.97673023698);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 985, 45934.97673023698, 0.0, 0.49, 0.0, 45934.97673023698);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 990, 45934.97673023698, 0.0, 0.49, 0.0, 45934.97673023698);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 991, 46015.42648948452, 3.67491354901071E-11, 0.49, 0.0, 46015.426489484555);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 995, 46015.42648948452, 3.67491354901071E-11, 0.49, 0.0, 46015.426489484555);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1000, 46015.42648948452, 3.67491354901071E-11, 0.49, 0.0, 46015.426489484555);
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 10, 16, 14, 31, 90, 97, 22, 44, 85, 26, 11, 34, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 29, 38, 51, 77, 4, 36, 32, 75, 94, 12, 81, 95, 47, 99, 70, 40, 13, 42, 2, 45, 28, 33, 54, 82, 19, 56, 6, 8, 86, 57, 92, 27, 66, 46, 73, 20, 58, 71, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 79, 88, 30, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[0, 57, 92, 27, 66, 68, 24, 80, 60, 50, 86, 8, 6, 56, 54, 82, 33, 28, 45, 42, 2, 47, 99, 70, 40, 13, 77, 51, 95, 4, 36, 32, 75, 94, 12, 49, 84, 67, 72, 43, 1, 53, 39, 63, 81, 38, 29, 34, 85, 26, 11, 19, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 35, 98, 17, 23, 37, 83, 9, 89, 46, 62, 48, 5, 74, 96, 18, 52, 78, 87, 93, 21, 15, 69, 25, 64, 65, 3, 55, 79, 88, 30, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[0, 57, 66, 27, 92, 68, 72, 67, 84, 54, 82, 33, 28, 45, 2, 42, 13, 70, 40, 99, 47, 29, 36, 4, 77, 51, 95, 38, 32, 75, 12, 94, 81, 43, 49, 1, 63, 53, 39, 80, 24, 60, 50, 86, 8, 6, 56, 19, 11, 26, 34, 85, 61, 59, 76, 22, 97, 90, 44, 10, 31, 16, 14, 58, 20, 73, 71, 83, 9, 62, 46, 89, 5, 48, 91, 41, 88, 30, 79, 64, 25, 3, 65, 69, 15, 21, 93, 17, 98, 35, 23, 37, 78, 87, 52, 18, 74, 96, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[0, 57, 66, 27, 92, 97, 90, 44, 22, 59, 76, 61, 85, 26, 34, 19, 11, 8, 6, 56, 86, 50, 60, 80, 24, 84, 67, 72, 68, 63, 53, 39, 1, 43, 49, 81, 94, 12, 75, 32, 36, 4, 29, 47, 40, 99, 70, 2, 42, 13, 28, 45, 82, 54, 33, 38, 95, 77, 51, 46, 31, 16, 14, 10, 73, 58, 20, 71, 9, 89, 5, 48, 91, 41, 88, 30, 79, 7, 74, 96, 55, 3, 65, 64, 25, 21, 93, 15, 87, 52, 18, 69, 17, 23, 37, 35, 98, 83, 78, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[0, 57, 66, 27, 92, 97, 90, 22, 44, 14, 16, 10, 31, 58, 73, 20, 71, 9, 89, 48, 5, 62, 91, 7, 41, 30, 79, 55, 96, 74, 52, 87, 15, 21, 93, 69, 65, 37, 98, 35, 83, 23, 17, 78, 18, 3, 64, 25, 88, 72, 49, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 38, 29, 47, 40, 70, 99, 13, 2, 42, 45, 28, 54, 82, 33, 11, 19, 6, 8, 56, 86, 50, 60, 24, 80, 84, 67, 43, 1, 63, 39, 53, 68, 85, 26, 34, 61, 59, 76, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 97, 22, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 23, 37, 35, 98, 17, 78, 52, 87, 15, 21, 69, 93, 25, 64, 3, 65, 96, 55, 91, 74, 18, 89, 48, 5, 62, 46, 76, 59, 34, 61, 26, 85, 11, 19, 56, 50, 60, 24, 80, 6, 8, 86, 84, 67, 43, 1, 63, 53, 39, 68, 72, 49, 81, 94, 12, 75, 36, 4, 29, 70, 40, 99, 47, 13, 42, 2, 28, 45, 33, 82, 54, 77, 51, 95, 38, 32, 41, 88, 79, 30, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 22, 31, 10, 16, 14, 73, 20, 58, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 18, 96, 55, 74, 5, 62, 48, 89, 46, 60, 24, 80, 68, 72, 67, 84, 81, 94, 12, 75, 32, 38, 29, 47, 99, 13, 28, 45, 2, 42, 33, 54, 82, 11, 6, 56, 8, 86, 50, 34, 85, 26, 19, 61, 59, 76, 70, 40, 51, 77, 95, 36, 4, 49, 43, 39, 63, 53, 1, 30, 79, 88, 41, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 22, 59, 76, 61, 34, 26, 85, 11, 19, 50, 67, 84, 49, 72, 68, 80, 24, 60, 86, 8, 6, 56, 54, 82, 33, 2, 45, 28, 42, 13, 40, 70, 99, 47, 95, 29, 51, 77, 38, 4, 36, 32, 75, 12, 94, 81, 43, 1, 53, 39, 63, 88, 30, 7, 41, 79, 55, 74, 48, 89, 5, 62, 46, 31, 10, 16, 14, 20, 58, 73, 71, 9, 83, 35, 37, 98, 23, 17, 78, 18, 52, 15, 21, 87, 93, 69, 64, 65, 25, 3, 96, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 76, 22, 61, 85, 34, 26, 11, 19, 54, 82, 42, 13, 99, 40, 70, 47, 28, 2, 45, 33, 6, 8, 56, 86, 67, 84, 38, 29, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 49, 72, 63, 1, 53, 39, 68, 24, 80, 50, 60, 46, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 23, 37, 35, 98, 17, 18, 74, 91, 7, 41, 79, 30, 88, 55, 96, 3, 64, 65, 25, 69, 15, 21, 87, 93, 78, 52, 89, 5, 48, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 19, 85, 26, 34, 11, 33, 82, 54, 6, 8, 56, 86, 50, 60, 80, 24, 1, 53, 39, 63, 68, 67, 84, 72, 38, 29, 13, 2, 42, 45, 28, 70, 40, 99, 47, 95, 51, 77, 4, 36, 12, 32, 75, 94, 81, 49, 43, 79, 30, 88, 41, 55, 3, 65, 25, 64, 69, 21, 93, 87, 15, 52, 89, 5, 48, 91, 7, 74, 96, 18, 9, 98, 23, 37, 35, 17, 78, 83, 71, 20, 73, 58, 14, 16, 10, 31, 22, 46, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 19, 85, 34, 26, 11, 6, 8, 56, 86, 50, 60, 80, 24, 68, 63, 39, 53, 1, 49, 43, 67, 84, 72, 38, 29, 28, 45, 42, 2, 13, 70, 40, 99, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 33, 82, 54, 22, 46, 62, 5, 48, 89, 78, 83, 17, 23, 37, 35, 20, 73, 58, 31, 16, 14, 10, 71, 9, 98, 69, 21, 15, 87, 93, 74, 96, 55, 88, 41, 79, 30, 7, 3, 64, 65, 25, 52, 18, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 16, 14, 10, 58, 73, 20, 71, 78, 87, 18, 74, 96, 3, 65, 64, 25, 52, 69, 21, 15, 93, 23, 37, 35, 98, 17, 83, 9, 89, 48, 62, 5, 91, 7, 79, 30, 55, 41, 88, 68, 72, 49, 43, 1, 53, 39, 63, 81, 94, 75, 32, 12, 36, 4, 77, 51, 95, 38, 29, 67, 84, 8, 56, 33, 40, 70, 99, 47, 13, 28, 45, 2, 42, 82, 54, 34, 26, 85, 19, 11, 6, 80, 24, 60, 50, 86, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 14, 16, 10, 58, 73, 20, 71, 9, 17, 37, 23, 98, 35, 83, 89, 62, 5, 48, 87, 15, 21, 69, 93, 78, 52, 18, 65, 64, 25, 3, 96, 74, 55, 79, 30, 91, 7, 41, 88, 63, 49, 67, 72, 43, 39, 53, 1, 68, 80, 24, 60, 50, 86, 6, 11, 26, 85, 34, 54, 82, 28, 2, 99, 70, 40, 95, 77, 51, 36, 4, 75, 32, 12, 94, 81, 38, 84, 29, 47, 13, 42, 45, 33, 8, 56, 19, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 14, 16, 58, 73, 71, 20, 9, 83, 35, 98, 37, 23, 17, 24, 80, 60, 50, 86, 8, 19, 34, 85, 11, 26, 6, 56, 33, 82, 54, 45, 28, 13, 42, 2, 70, 40, 99, 47, 51, 77, 95, 4, 36, 29, 84, 67, 68, 72, 49, 1, 53, 39, 63, 43, 12, 75, 32, 94, 81, 38, 46, 62, 48, 5, 89, 78, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 96, 18, 74, 55, 41, 79, 88, 30, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 98, 35, 37, 23, 17, 78, 52, 21, 15, 87, 93, 69, 25, 64, 65, 3, 96, 55, 41, 79, 30, 88, 7, 91, 74, 18, 89, 5, 48, 62, 60, 24, 80, 50, 86, 56, 8, 6, 11, 34, 85, 26, 19, 54, 82, 33, 42, 45, 13, 28, 2, 70, 40, 99, 47, 51, 77, 4, 36, 95, 29, 38, 32, 75, 12, 94, 81, 72, 49, 84, 67, 43, 1, 53, 39, 63, 68, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 83, 17, 23, 37, 35, 98, 89, 48, 5, 62, 96, 74, 18, 3, 64, 25, 65, 69, 52, 93, 21, 15, 87, 78, 88, 55, 79, 30, 41, 7, 91, 46, 86, 50, 68, 72, 53, 39, 63, 49, 43, 1, 94, 81, 12, 32, 75, 36, 4, 38, 29, 13, 45, 42, 2, 28, 6, 56, 8, 26, 85, 34, 19, 11, 54, 82, 33, 40, 70, 99, 47, 51, 77, 95, 67, 84, 24, 80, 60, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 58, 73, 9, 83, 17, 37, 98, 23, 35, 78, 87, 93, 15, 21, 69, 25, 64, 3, 65, 52, 18, 96, 74, 48, 5, 89, 62, 46, 50, 80, 24, 60, 86, 8, 6, 26, 85, 34, 19, 56, 11, 82, 54, 33, 28, 45, 42, 2, 70, 40, 99, 13, 47, 51, 77, 95, 38, 4, 36, 32, 75, 12, 94, 81, 29, 84, 67, 72, 43, 49, 1, 53, 39, 63, 68, 79, 30, 88, 41, 55, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 5, 62, 48, 18, 96, 74, 91, 7, 88, 41, 79, 30, 55, 65, 64, 3, 25, 69, 15, 21, 93, 87, 52, 78, 83, 17, 23, 37, 35, 98, 50, 24, 80, 60, 86, 8, 6, 33, 2, 42, 45, 28, 13, 99, 40, 70, 47, 77, 51, 38, 95, 4, 36, 32, 75, 12, 94, 81, 1, 39, 53, 63, 68, 72, 43, 49, 67, 84, 29, 82, 54, 11, 26, 85, 19, 34, 56, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 83, 98, 35, 37, 23, 17, 93, 21, 15, 69, 52, 87, 78, 65, 64, 3, 25, 18, 74, 96, 55, 41, 88, 30, 79, 7, 91, 5, 48, 89, 62, 46, 34, 19, 26, 85, 11, 56, 6, 8, 54, 82, 33, 45, 2, 42, 28, 13, 47, 99, 70, 40, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 43, 1, 63, 39, 53, 68, 72, 67, 84, 38, 29, 80, 24, 60, 86, 50, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 46, 62, 89, 48, 5, 83, 9, 23, 35, 98, 37, 17, 78, 52, 15, 87, 93, 21, 69, 3, 64, 65, 25, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 60, 50, 86, 56, 11, 26, 34, 85, 19, 6, 8, 82, 54, 33, 28, 45, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 4, 36, 12, 32, 75, 94, 81, 1, 63, 39, 53, 43, 49, 72, 68, 67, 84, 38, 29, 24, 80, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 83, 35, 98, 37, 23, 17, 78, 87, 93, 21, 15, 69, 52, 89, 74, 3, 64, 65, 25, 18, 96, 55, 79, 30, 88, 41, 7, 91, 46, 62, 48, 5, 24, 80, 60, 50, 86, 8, 6, 56, 11, 85, 26, 34, 19, 54, 82, 33, 28, 45, 2, 42, 13, 40, 70, 99, 47, 29, 67, 84, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 49, 43, 1, 63, 39, 53, 72, 68, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 83, 35, 98, 37, 23, 17, 78, 52, 93, 87, 15, 21, 69, 25, 65, 64, 3, 18, 74, 96, 55, 30, 79, 41, 88, 7, 91, 62, 34, 85, 26, 11, 82, 54, 33, 45, 2, 42, 28, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 72, 49, 43, 1, 63, 39, 53, 68, 67, 84, 80, 24, 60, 50, 8, 6, 19, 56, 86, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 74, 96, 55, 30, 79, 88, 41, 7, 91, 3, 64, 25, 65, 69, 15, 21, 93, 87, 18, 52, 78, 17, 23, 37, 98, 35, 83, 62, 46, 85, 34, 26, 11, 19, 6, 8, 33, 54, 82, 45, 2, 70, 40, 99, 13, 29, 28, 42, 47, 51, 77, 95, 4, 36, 75, 32, 12, 94, 81, 38, 84, 72, 67, 49, 43, 1, 63, 68, 39, 53, 56, 50, 86, 60, 80, 24, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 74, 55, 18, 3, 52, 78, 17, 23, 98, 37, 35, 83, 93, 87, 15, 21, 69, 64, 65, 25, 96, 91, 7, 41, 88, 30, 79, 53, 39, 63, 43, 12, 75, 32, 94, 81, 1, 72, 49, 68, 80, 24, 60, 50, 86, 8, 6, 56, 19, 26, 34, 85, 11, 82, 54, 33, 42, 28, 45, 2, 70, 40, 13, 99, 47, 51, 77, 95, 36, 4, 38, 29, 84, 67, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 25, 65, 64, 3, 52, 93, 15, 21, 87, 69, 78, 17, 35, 98, 37, 23, 83, 60, 8, 6, 33, 28, 2, 45, 42, 99, 70, 40, 13, 47, 29, 84, 67, 49, 72, 68, 63, 39, 53, 1, 43, 81, 94, 12, 75, 32, 77, 51, 4, 36, 95, 38, 82, 54, 11, 26, 34, 85, 19, 56, 86, 50, 80, 24, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 78, 17, 23, 37, 83, 98, 35, 69, 21, 87, 15, 93, 52, 18, 25, 65, 64, 3, 96, 74, 55, 79, 30, 88, 41, 7, 91, 60, 24, 80, 68, 49, 72, 67, 84, 39, 53, 63, 1, 43, 81, 94, 12, 75, 32, 77, 51, 95, 38, 4, 36, 28, 2, 45, 42, 13, 99, 70, 40, 47, 29, 33, 82, 54, 11, 26, 34, 85, 19, 6, 8, 56, 86, 50, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 41, 55, 74, 96, 18, 83, 98, 35, 37, 23, 17, 78, 93, 69, 21, 15, 87, 52, 65, 64, 25, 3, 30, 79, 88, 60, 50, 86, 6, 8, 56, 19, 11, 26, 85, 34, 82, 54, 33, 28, 45, 42, 2, 13, 40, 70, 99, 47, 29, 36, 4, 51, 77, 95, 38, 12, 32, 75, 94, 81, 49, 43, 1, 53, 39, 63, 67, 84, 68, 72, 80, 24, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 41, 88, 30, 79, 55, 74, 96, 3, 52, 18, 25, 64, 65, 69, 87, 15, 21, 93, 23, 37, 98, 35, 17, 78, 83, 60, 50, 86, 6, 8, 56, 11, 26, 85, 34, 19, 82, 54, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 51, 77, 95, 29, 38, 36, 4, 12, 75, 32, 94, 81, 1, 43, 49, 72, 67, 84, 24, 80, 68, 63, 39, 53, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 74, 41, 88, 30, 79, 55, 96, 65, 69, 21, 93, 83, 35, 98, 37, 23, 17, 78, 87, 15, 52, 3, 64, 25, 68, 63, 39, 53, 1, 81, 94, 12, 75, 32, 36, 4, 95, 51, 77, 47, 99, 40, 70, 42, 2, 13, 45, 54, 82, 11, 6, 8, 56, 86, 50, 60, 24, 80, 43, 49, 72, 67, 84, 29, 38, 28, 33, 26, 85, 34, 19, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 17, 83, 35, 98, 37, 23, 78, 93, 87, 21, 15, 69, 96, 74, 3, 64, 65, 25, 55, 79, 41, 30, 88, 53, 39, 63, 43, 49, 72, 67, 84, 29, 47, 40, 70, 13, 45, 28, 33, 24, 80, 68, 1, 81, 94, 12, 75, 32, 4, 36, 38, 95, 77, 51, 99, 2, 42, 82, 54, 11, 26, 34, 85, 19, 56, 6, 8, 86, 50, 60, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 15, 21, 93, 17, 78, 83, 37, 23, 35, 98, 69, 65, 64, 25, 3, 96, 55, 79, 30, 53, 39, 63, 68, 24, 80, 60, 50, 86, 56, 6, 8, 19, 11, 26, 85, 34, 54, 82, 33, 28, 45, 2, 42, 13, 47, 70, 40, 99, 95, 51, 77, 4, 36, 38, 29, 84, 67, 49, 43, 1, 81, 94, 75, 32, 12, 72, 41, 88, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 17, 23, 98, 37, 35, 83, 78, 15, 21, 69, 65, 64, 3, 25, 96, 74, 55, 79, 30, 41, 88, 39, 63, 53, 1, 43, 49, 68, 72, 84, 67, 81, 32, 75, 94, 12, 36, 4, 77, 51, 95, 38, 29, 70, 40, 99, 47, 13, 2, 42, 45, 28, 33, 82, 54, 11, 26, 85, 34, 19, 56, 8, 6, 86, 50, 80, 24, 60, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 25, 64, 65, 3, 96, 74, 55, 79, 78, 17, 37, 23, 98, 35, 83, 50, 60, 24, 80, 86, 8, 6, 56, 11, 26, 85, 34, 19, 82, 54, 33, 45, 42, 28, 2, 13, 99, 70, 40, 47, 29, 38, 95, 77, 51, 4, 36, 75, 32, 12, 94, 81, 49, 72, 67, 84, 68, 53, 63, 39, 43, 1, 88, 30, 41, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 64, 25, 3, 78, 17, 98, 35, 23, 37, 83, 74, 96, 55, 41, 79, 30, 88, 53, 63, 39, 1, 43, 72, 49, 80, 68, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 28, 45, 42, 2, 47, 99, 70, 40, 13, 33, 54, 82, 19, 11, 26, 85, 34, 56, 6, 8, 86, 50, 24, 60, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 3, 64, 25, 17, 37, 23, 35, 98, 83, 78, 74, 96, 55, 79, 30, 41, 88, 68, 80, 24, 60, 86, 50, 8, 6, 56, 54, 82, 19, 11, 26, 34, 85, 45, 42, 2, 13, 99, 70, 40, 47, 28, 33, 38, 29, 77, 51, 95, 4, 36, 12, 32, 75, 94, 81, 67, 84, 72, 49, 43, 1, 39, 53, 63, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 3, 64, 25, 74, 96, 55, 79, 30, 88, 41, 53, 63, 39, 1, 12, 32, 75, 94, 81, 43, 49, 80, 24, 60, 86, 50, 8, 6, 56, 11, 19, 26, 85, 34, 42, 45, 2, 13, 99, 70, 40, 47, 38, 36, 4, 51, 77, 95, 29, 28, 54, 82, 33, 84, 67, 72, 68, 17, 78, 23, 98, 35, 37, 83, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 68, 63, 53, 39, 43, 1, 49, 67, 84, 38, 29, 2, 45, 28, 42, 99, 70, 40, 47, 13, 77, 95, 51, 36, 4, 32, 75, 12, 94, 81, 72, 60, 24, 80, 26, 34, 85, 19, 11, 54, 33, 82, 56, 6, 8, 86, 50, 74, 78, 37, 35, 98, 17, 23, 83, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 55, 41, 79, 30, 88, 53, 39, 63, 67, 80, 50, 86, 8, 6, 56, 11, 26, 85, 34, 19, 82, 54, 33, 45, 28, 2, 42, 70, 99, 40, 13, 47, 51, 29, 84, 38, 95, 77, 4, 36, 32, 75, 12, 94, 81, 49, 43, 1, 72, 68, 24, 60, 83, 17, 37, 35, 98, 23, 78, 96, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 78, 17, 23, 83, 35, 98, 37, 74, 96, 55, 41, 79, 30, 88, 53, 39, 63, 68, 24, 80, 50, 86, 56, 26, 85, 34, 19, 11, 54, 82, 33, 28, 45, 2, 13, 42, 47, 40, 99, 70, 77, 95, 51, 4, 36, 75, 32, 12, 94, 81, 49, 43, 1, 72, 67, 84, 38, 29, 8, 6, 60, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 55, 96, 78, 17, 23, 83, 35, 98, 37, 74, 60, 19, 11, 54, 82, 33, 28, 45, 2, 13, 47, 40, 99, 70, 42, 8, 6, 85, 34, 26, 56, 50, 86, 80, 24, 68, 49, 43, 1, 39, 63, 53, 81, 94, 32, 12, 75, 4, 36, 51, 77, 95, 38, 29, 84, 67, 72, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 55, 96, 74, 83, 23, 37, 35, 98, 78, 17, 60, 50, 86, 56, 6, 8, 11, 26, 85, 34, 19, 82, 54, 33, 84, 67, 72, 49, 43, 1, 63, 39, 53, 81, 94, 32, 75, 12, 4, 36, 51, 77, 95, 38, 29, 47, 13, 45, 28, 2, 42, 70, 40, 99, 68, 80, 24, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 55, 96, 74, 78, 17, 23, 37, 98, 35, 83, 24, 60, 50, 86, 8, 6, 56, 11, 26, 85, 34, 19, 33, 82, 54, 28, 45, 2, 42, 13, 70, 40, 99, 47, 29, 51, 77, 95, 4, 81, 94, 12, 75, 32, 36, 38, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 80, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 96, 55, 74, 83, 37, 35, 98, 23, 17, 78, 86, 50, 56, 19, 85, 34, 26, 11, 8, 6, 82, 54, 33, 45, 28, 42, 2, 13, 99, 70, 40, 47, 29, 95, 4, 36, 77, 51, 38, 94, 12, 32, 75, 81, 49, 68, 80, 60, 24, 67, 84, 72, 43, 1, 53, 39, 63, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 60, 50, 86, 8, 56, 6, 19, 34, 26, 85, 11, 54, 82, 33, 28, 45, 42, 2, 13, 47, 99, 40, 70, 29, 38, 67, 84, 95, 77, 51, 4, 36, 32, 12, 75, 94, 81, 49, 43, 1, 53, 39, 63, 72, 68, 80, 17, 78, 35, 98, 37, 23, 83, 74, 96, 55, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 33, 54, 82, 42, 2, 45, 28, 13, 47, 40, 70, 99, 38, 29, 77, 51, 95, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 49, 43, 72, 84, 67, 68, 80, 60, 50, 86, 19, 11, 26, 34, 85, 78, 17, 23, 37, 35, 98, 83, 55, 96, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 86, 19, 34, 26, 85, 11, 54, 82, 33, 45, 28, 42, 2, 13, 47, 70, 40, 99, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 1, 53, 39, 63, 72, 49, 43, 67, 38, 29, 84, 68, 80, 60, 50, 55, 96, 74, 17, 78, 23, 37, 98, 35, 83, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 86, 50, 67, 84, 43, 72, 49, 63, 39, 53, 1, 36, 4, 32, 75, 12, 94, 81, 38, 95, 51, 77, 47, 99, 70, 40, 2, 42, 28, 29, 13, 45, 33, 54, 82, 26, 85, 34, 11, 19, 60, 80, 68, 55, 96, 74, 78, 17, 23, 37, 35, 98, 83, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 85, 34, 26, 11, 54, 82, 33, 28, 45, 42, 2, 13, 40, 70, 99, 47, 77, 95, 51, 4, 36, 32, 75, 12, 94, 81, 49, 67, 84, 29, 38, 72, 1, 43, 80, 86, 50, 60, 68, 63, 53, 39, 55, 96, 74, 78, 17, 23, 83, 35, 37, 98, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 34, 85, 11, 54, 82, 33, 28, 45, 42, 2, 13, 40, 70, 99, 47, 51, 77, 95, 29, 84, 67, 38, 4, 36, 75, 32, 12, 94, 81, 72, 43, 49, 1, 39, 53, 63, 68, 60, 80, 50, 86, 55, 96, 74, 78, 17, 98, 37, 23, 35, 83, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 2, 13, 99, 70, 40, 47, 77, 51, 95, 36, 4, 12, 32, 75, 94, 81, 72, 49, 43, 1, 39, 63, 53, 68, 80, 60, 50, 86, 67, 29, 38, 84, 33, 82, 54, 11, 85, 34, 83, 35, 98, 37, 23, 78, 17, 55, 96, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 2, 29, 38, 67, 49, 43, 1, 39, 63, 53, 68, 80, 60, 50, 86, 11, 85, 34, 82, 54, 33, 70, 40, 13, 99, 47, 77, 51, 95, 36, 4, 12, 32, 75, 94, 81, 72, 84, 96, 74, 55, 23, 37, 35, 98, 17, 78, 83, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 29, 38, 84, 67, 80, 60, 50, 86, 34, 85, 11, 54, 82, 33, 2, 70, 99, 47, 40, 13, 95, 77, 51, 4, 36, 94, 12, 32, 75, 81, 72, 49, 43, 1, 53, 39, 63, 68, 55, 96, 74, 17, 78, 83, 98, 35, 37, 23, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 40, 70, 99, 47, 2, 29, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 38, 33, 82, 54, 11, 85, 34, 84, 67, 72, 49, 43, 1, 39, 53, 63, 68, 50, 86, 80, 60, 55, 96, 74, 17, 78, 35, 98, 23, 37, 83, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 40, 99, 70, 47, 29, 95, 77, 51, 36, 4, 12, 75, 32, 94, 81, 38, 84, 67, 49, 43, 1, 39, 53, 63, 68, 72, 60, 50, 86, 80, 33, 82, 54, 11, 85, 34, 83, 35, 23, 98, 37, 17, 78, 74, 96, 55, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 99, 40, 38, 29, 84, 67, 80, 68, 60, 50, 86, 11, 85, 34, 82, 54, 33, 47, 77, 95, 51, 36, 4, 94, 12, 32, 75, 81, 49, 72, 43, 1, 53, 63, 39, 83, 35, 37, 98, 23, 17, 78, 74, 96, 55, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 29, 77, 51, 95, 38, 36, 4, 32, 75, 12, 81, 94, 1, 43, 39, 53, 63, 68, 60, 50, 86, 34, 85, 11, 54, 82, 33, 67, 49, 72, 84, 80, 74, 96, 55, 83, 23, 35, 98, 37, 17, 78, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 29, 95, 38, 77, 51, 4, 36, 32, 75, 12, 81, 94, 67, 84, 60, 80, 50, 86, 54, 82, 33, 34, 85, 11, 72, 49, 43, 1, 53, 39, 63, 68, 74, 96, 55, 78, 17, 37, 23, 98, 35, 83, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 29, 38, 51, 77, 4, 36, 95, 75, 32, 12, 94, 81, 1, 53, 39, 63, 72, 84, 67, 68, 80, 60, 50, 86, 11, 34, 85, 82, 54, 33, 49, 43, 55, 83, 23, 37, 98, 35, 17, 78, 96, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 29, 38, 95, 4, 36, 32, 12, 75, 94, 81, 1, 53, 39, 63, 72, 49, 43, 68, 80, 60, 50, 86, 33, 82, 54, 34, 85, 11, 84, 67, 74, 55, 96, 37, 23, 17, 78, 83, 98, 35, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 72, 49, 1, 43, 84, 67, 38, 29, 33, 54, 82, 11, 34, 85, 86, 50, 60, 80, 68, 63, 39, 53, 55, 96, 74, 78, 83, 35, 37, 98, 23, 17, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 43, 1, 72, 53, 39, 63, 68, 80, 60, 50, 86, 34, 85, 11, 54, 82, 33, 29, 38, 84, 67, 55, 96, 74, 78, 83, 23, 17, 37, 98, 35, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 49, 38, 36, 4, 75, 32, 12, 94, 81, 43, 72, 1, 53, 39, 63, 68, 80, 60, 82, 54, 33, 86, 50, 34, 85, 11, 83, 23, 98, 35, 37, 17, 78, 74, 96, 55, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 80, 68, 63, 39, 53, 1, 72, 43, 49, 81, 94, 32, 75, 12, 36, 4, 38, 33, 82, 54, 85, 34, 11, 86, 50, 60, 96, 55, 74, 17, 23, 98, 35, 37, 83, 78, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 72, 68, 80, 86, 50, 60, 34, 85, 11, 82, 54, 33, 38, 75, 32, 12, 94, 81, 36, 4, 49, 43, 1, 53, 39, 63, 55, 96, 74, 83, 78, 17, 23, 98, 35, 37, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 1, 53, 39, 63, 68, 72, 4, 36, 32, 94, 81, 12, 75, 38, 80, 60, 50, 86, 33, 54, 82, 11, 85, 34, 83, 98, 35, 37, 23, 17, 78, 74, 96, 55, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 63, 39, 53, 1, 32, 12, 75, 81, 94, 36, 4, 38, 33, 82, 54, 85, 34, 11, 86, 50, 60, 80, 55, 96, 74, 78, 83, 35, 98, 23, 17, 37, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 50, 86, 82, 54, 11, 85, 34, 33, 38, 36, 4, 94, 81, 75, 32, 12, 1, 53, 39, 63, 55, 96, 74, 78, 83, 35, 98, 23, 17, 37, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 50, 86, 33, 82, 54, 11, 85, 34, 63, 39, 53, 1, 75, 32, 12, 94, 81, 38, 4, 36, 74, 55, 96, 83, 35, 98, 37, 23, 17, 78, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 50, 86, 11, 85, 34, 33, 82, 54, 38, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 55, 96, 74, 83, 35, 98, 37, 23, 17, 78, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 86, 50, 82, 54, 11, 85, 34, 33, 38, 4, 36, 81, 12, 94, 75, 32, 39, 63, 53, 1, 74, 96, 55, 17, 78, 35, 98, 37, 23, 83, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 39, 53, 1, 81, 94, 12, 75, 32, 4, 36, 38, 82, 54, 33, 11, 85, 34, 86, 50, 35, 83, 37, 23, 98, 17, 78, 96, 55, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 12, 94, 75, 32, 4, 36, 38, 33, 82, 54, 11, 86, 50, 34, 85, 23, 37, 98, 35, 17, 78, 74, 96, 55, 83, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 94, 81, 4, 36, 75, 12, 32, 38, 33, 54, 82, 85, 34, 11, 86, 50, 96, 55, 74, 78, 17, 37, 23, 98, 35, 83, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 32, 12, 75, 36, 4, 38, 33, 54, 82, 86, 50, 11, 85, 34, 83, 35, 98, 23, 37, 17, 78, 74, 55, 96, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 12, 32, 75, 94, 36, 4, 38, 85, 34, 11, 33, 54, 82, 86, 50, 83, 98, 35, 37, 23, 17, 78, 74, 96, 55, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 4, 36, 38, 33, 54, 82, 11, 34, 85, 86, 50, 55, 96, 74, 78, 37, 98, 35, 23, 17, 83, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 82, 54, 11, 85, 34, 86, 50, 55, 96, 74, 78, 17, 83, 35, 37, 23, 98, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 82, 54, 11, 85, 34, 50, 86, 74, 55, 96, 83, 35, 37, 23, 98, 78, 17, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 85, 34, 11, 54, 82, 86, 50, 55, 74, 96, 83, 35, 98, 37, 23, 17, 78, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 54, 82, 11, 34, 85, 86, 50, 55, 96, 74, 78, 17, 23, 35, 98, 37, 83, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 82, 54, 11, 34, 85, 86, 50, 55, 96, 74, 83, 37, 23, 17, 78, 98, 35, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 82, 54, 33, 11, 34, 85, 50, 86, 74, 55, 96, 78, 83, 17, 23, 98, 35, 37, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 54, 82, 11, 34, 85, 86, 50, 83, 35, 98, 23, 37, 17, 78, 96, 55, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 54, 82, 85, 34, 11, 74, 96, 55, 78, 83, 17, 23, 37, 98, 35, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 82, 54, 11, 34, 85, 55, 96, 74, 23, 37, 98, 35, 83, 17, 78, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 85, 34, 54, 82, 96, 55, 74, 78, 23, 35, 98, 17, 37, 83, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 55, 96, 74, 17, 83, 35, 98, 37, 23, 78, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 83, 23, 35, 37, 98, 78, 17, 74, 55, 96, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 83, 23, 37, 98, 35, 17, 78, 74, 96, 55, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 17, 23, 37, 83, 35, 98, 78, 96, 74, 55, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 17, 23, 37, 98, 35, 83, 78, 74, 96, 55, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 17, 23, 37, 98, 35, 83, 78, 96, 55, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 17, 23, 37, 98, 35, 83, 78, 96, 55, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 17, 23, 37, 98, 35, 83, 78, 74, 96, 55, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 17, 23, 37, 98, 35, 83, 78, 74, 96, 55, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 17, 23, 37, 98, 35, 83, 78, 55, 74, 96, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 17, 23, 37, 98, 35, 83, 78, 96, 74, 55, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 17, 23, 37, 98, 35, 83, 78, 74, 96, 55, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 17, 23, 37, 98, 35, 83, 78, 74, 96, 55, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 17, 23, 37, 98, 35, 83, 78, 74, 96, 55, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 17, 23, 37, 98, 35, 83, 78, 74, 96, 55, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[0, 57, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 17, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 17, 23, 37, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 17, 23, 37, 98, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 17, 23, 37, 98, 35, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 17, 23, 37, 98, 35, 83, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 17, 23, 37, 98, 35, 83, 78, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 17, 23, 37, 98, 35, 83, 78, 74, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 17, 23, 37, 98, 35, 83, 78, 74, 96, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 17, 23, 37, 98, 35, 83, 78, 74, 96, 55, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[0, 57, 66, 27, 92, 90, 44, 97, 59, 61, 76, 22, 31, 10, 16, 14, 71, 20, 73, 58, 9, 89, 48, 5, 62, 46, 91, 7, 18, 52, 87, 93, 21, 15, 69, 65, 25, 3, 64, 79, 30, 88, 41, 24, 8, 6, 56, 19, 26, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 29, 84, 67, 43, 49, 72, 68, 80, 60, 63, 53, 39, 1, 81, 94, 75, 12, 32, 36, 4, 38, 33, 86, 50, 11, 54, 82, 85, 34, 17, 23, 37, 98, 35, 83, 78, 74, 96, 55, 0]");
    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA100_with_seed_1_mag_0_75_freq_100() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_3OPT_MADTSP mmas_3OPT_madtsp = new MMAS_3OPT_MADTSP(graph, 0.8, 1000, 0.75, 100, 1.0, 5.0);
        mmas_3OPT_madtsp.setMmasSeed(1);
        mmas_3OPT_madtsp.setDbgpSeed(1);
        mmas_3OPT_madtsp.setStatisticInterval(1);
        mmas_3OPT_madtsp.setShowLog(false);
        mmas_3OPT_madtsp.run();
        assertThat(mmas_3OPT_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(30970.858628626313);
        assertThat(mmas_3OPT_madtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(30970.858628626313);
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getGlobalStatistics())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 27, 92, 66, 41, 88, 30, 79, 55, 7, 46, 0]");

        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1, 46567.88566249352, 4338.286883293141, 0.0, 57.16, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 5, 38106.33266392526, 2237.2728848798847, 0.0, 13.702857142857143, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 10, 37988.29155065972, 1954.5983431750626, 0.0, 13.38938775510204, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 11, 37599.26624755459, 1709.339420572306, 0.0, 12.217142857142857, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 15, 37458.401371547676, 1728.067120843654, 0.0, 12.711836734693877, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 20, 38399.3698329406, 2676.8825703223815, 0.0, 13.012244897959183, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 21, 37983.97728954373, 1996.6077849497537, 0.0, 13.219591836734693, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 25, 37649.87139433821, 1754.4180607892065, 0.0, 11.64, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 30, 38074.33372819358, 1887.9375538556358, 0.0, 13.301224489795919, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 31, 38324.77182583155, 2786.3731838188373, 0.0, 13.748571428571429, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 35, 37412.64954641094, 1560.2117957288017, 0.0, 9.915918367346938, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 40, 37804.035455509285, 2053.0210864852547, 0.0, 12.291428571428572, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 41, 37821.5835737136, 2090.742189147098, 0.0, 12.593469387755102, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 45, 37686.61770246067, 1824.3941293809114, 0.0, 11.16326530612245, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 50, 37830.527202772464, 2176.6882031187015, 0.0, 11.051428571428572, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 51, 37622.517735687434, 1800.5878825559473, 0.0, 12.355102040816327, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 55, 37993.98190730107, 1943.0260361646747, 0.0, 14.411428571428571, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 60, 37774.15642464087, 1758.4386027380474, 0.0, 12.27591836734694, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 61, 36802.59344374193, 1560.0990944671196, 0.0, 15.266122448979592, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 65, 37633.70194827918, 1935.1900863252524, 0.0, 11.473469387755102, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 70, 38188.22198431121, 2155.304244172334, 0.0, 13.191020408163265, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 71, 37388.20738273116, 2203.8948666423325, 0.0, 11.075918367346938, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 75, 37689.05184469919, 2022.8248571806973, 0.0, 12.658775510204082, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 80, 37717.66733868941, 1526.6678951659103, 0.0, 13.70530612244898, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 81, 37397.94778726575, 1323.538420117994, 0.0, 11.95265306122449, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 85, 37156.585026419896, 1952.0539615833218, 0.0, 10.987755102040817, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 90, 37624.03339758891, 2266.2271643358076, 0.0, 13.545306122448979, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 91, 37821.74974430959, 1826.407300739963, 0.0, 13.300408163265306, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 95, 37683.702543145424, 2176.266979846815, 0.0, 11.050612244897959, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 100, 38640.15147447547, 2158.742762603801, 0.565, 18.452244897959183, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 101, 42019.08148215645, 2907.110054011841, 0.545, 36.481632653061226, 32454.961345493855);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 105, 32240.281345255407, 2845.368907964144, 0.545, 7.688163265306122, 29584.734518439553);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 110, 32620.34442786761, 2750.6299360709227, 0.545, 6.377959183673469, 29584.734518439553);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 111, 32632.30169405467, 2983.9664145287193, 0.545, 6.786122448979592, 29584.734518439553);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 115, 32556.91244077243, 3512.1306580211653, 0.545, 5.608979591836735, 29584.734518439553);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 120, 32365.286837509422, 2941.224407653716, 0.545, 6.511020408163265, 29584.734518439553);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 121, 32991.367500529326, 3405.4373901274, 0.545, 8.022857142857143, 29584.734518439553);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 125, 32645.1290586251, 3351.7590977124896, 0.545, 7.608979591836735, 29584.734518439553);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 130, 32083.989171393943, 2853.841636620144, 0.545, 8.03265306122449, 29584.734518439553);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 131, 32043.695877349266, 2948.302398210383, 0.545, 5.808979591836735, 29584.734518439553);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 135, 32554.4819791332, 3313.859535587243, 0.545, 7.828571428571428, 29584.734518439553);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 140, 31905.600523563713, 2508.3869482455525, 0.545, 6.0987755102040815, 29584.734518439553);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 141, 33191.312598422635, 3687.9027114583555, 0.545, 6.845714285714286, 29584.734518439553);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 145, 32367.075886226095, 2899.526286658137, 0.545, 7.033469387755102, 29584.734518439553);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 150, 31939.959981635868, 2421.9341582413404, 0.5, 7.895510204081632, 29520.852013441254);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 151, 31914.16891248695, 2650.384289118952, 0.5, 5.955102040816326, 29520.852013441254);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 155, 31169.640148094695, 2499.028439666302, 0.5, 4.572244897959184, 29247.450226356552);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 160, 31598.375865534963, 2711.1161987275777, 0.5, 5.8342857142857145, 29247.450226356552);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 161, 31052.65327980336, 2262.8012373686697, 0.5, 4.532244897959184, 29247.450226356552);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 165, 31552.627563238664, 2547.7571977244497, 0.5, 5.878367346938775, 29247.450226356552);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 170, 31239.07702703277, 2503.0395229990204, 0.5, 3.7746938775510204, 29247.450226356552);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 171, 31280.694358050456, 2568.1335297444075, 0.5, 3.9779591836734696, 29247.450226356552);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 175, 31845.040157268766, 3042.226185178933, 0.5, 5.159183673469387, 29247.450226356552);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 180, 31502.761114698398, 2723.1161479204875, 0.5, 5.079183673469387, 29247.450226356552);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 181, 31698.709058936754, 2627.307742939149, 0.5, 6.191020408163265, 29247.450226356552);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 185, 31206.966790554918, 2441.0229376517054, 0.5, 4.873469387755102, 29247.450226356552);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 190, 31374.79971826703, 2469.8704753294596, 0.5, 5.649795918367347, 29247.450226356552);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 191, 31637.554925717464, 2571.984847982009, 0.5, 5.048163265306123, 29247.450226356552);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 195, 31619.71999980212, 2740.5656061019713, 0.5, 5.6938775510204085, 29247.450226356552);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 200, 31101.22452775399, 3023.05252940488, 0.5, 4.237551020408163, 29247.450226356552);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 201, 44300.92646800039, 2920.5814595726342, 0.47, 23.36326530612245, 36685.14348211999);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 205, 41415.04710439902, 3062.5747027192206, 0.74, 18.317551020408164, 34999.95434056612);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 210, 40891.86464443922, 3271.572629472145, 0.74, 17.511020408163265, 34999.95434056612);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 211, 41962.846067735394, 3230.165254493762, 0.74, 17.573061224489795, 34999.95434056612);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 215, 43327.64067987338, 4071.0648034657834, 0.74, 17.939591836734692, 34999.95434056612);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 220, 42321.46275705252, 3299.8224455408126, 0.74, 18.077551020408162, 34999.95434056612);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 221, 41542.1019387274, 3553.948405131078, 0.74, 17.627755102040815, 34999.95434056612);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 225, 40859.53814343861, 3741.0752765641696, 0.74, 9.362448979591838, 34999.95434056612);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 230, 37227.57815881532, 3490.217668380381, 0.615, 11.547755102040817, 31993.653348910582);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 231, 36059.52123667536, 3254.540855079774, 0.615, 8.183673469387756, 31993.653348910582);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 235, 35976.995066153475, 3597.4026540300447, 0.615, 6.675102040816326, 31993.653348910582);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 240, 34441.93034049939, 2848.4721009737846, 0.615, 4.9412244897959186, 31993.653348910582);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 241, 35665.71017574973, 3049.0725924275075, 0.615, 4.426938775510204, 31993.653348910582);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 245, 35277.84349150578, 2953.8651715366464, 0.615, 5.558367346938775, 31993.653348910582);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 250, 34755.75907843462, 2797.935885418001, 0.615, 4.847346938775511, 31993.653348910582);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 251, 34275.69211367525, 2740.7339535864257, 0.615, 4.36, 31993.653348910582);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 255, 34557.50561834965, 2781.8921671369244, 0.615, 4.188571428571429, 31993.653348910582);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 260, 35003.623633104755, 3174.5013039201053, 0.615, 4.9714285714285715, 31993.653348910582);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 261, 34604.22923134096, 2761.4313152876603, 0.615, 5.822857142857143, 31993.653348910582);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 265, 34901.12133494874, 3192.615840468256, 0.615, 4.671836734693877, 31993.653348910582);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 270, 34992.89041062527, 3206.545857809439, 0.615, 5.102857142857143, 31993.653348910582);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 271, 34939.445692567424, 2707.0478590293283, 0.615, 4.722448979591837, 31993.653348910582);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 275, 34979.51329244664, 2826.220067342142, 0.615, 4.86204081632653, 31993.653348910582);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 280, 34493.387500700825, 2547.074692124259, 0.615, 3.746938775510204, 31993.653348910582);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 281, 35209.18815051002, 2886.2354135895093, 0.615, 5.948571428571428, 31993.653348910582);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 285, 35074.53317796505, 3031.830419064487, 0.615, 5.670204081632653, 31993.653348910582);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 290, 35135.11620187549, 2396.9313381479838, 0.615, 5.678367346938775, 31993.653348910582);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 291, 35371.333430065555, 3072.0598434381536, 0.615, 5.930612244897959, 31993.653348910582);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 295, 35298.004188337574, 2881.503195066322, 0.615, 5.6, 31993.653348910582);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 300, 34733.12531667232, 2914.855501919039, 0.5, 4.347755102040816, 31993.653348910582);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 301, 43599.52518963162, 2212.6000757911356, 0.48, 24.613061224489797, 34743.03081946498);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 305, 36687.83390662262, 1634.6512381384632, 0.6, 12.368163265306123, 33015.09445421758);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 310, 34294.855980374, 2061.096143297711, 0.6, 4.6, 33015.09445421758);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 311, 34449.27319496528, 1876.6183123860346, 0.6, 4.077551020408163, 33015.09445421758);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 315, 34009.52659510553, 1669.7812721039727, 0.6, 2.1853061224489796, 33015.09445421758);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 320, 34787.432214205226, 2546.3509435784667, 0.505, 4.155102040816327, 32932.26157399649);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 321, 33799.756489151, 1348.011447019336, 0.505, 3.286530612244898, 32932.26157399649);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 325, 33637.20984606761, 2015.7108208812917, 0.505, 2.2016326530612247, 32932.26157399649);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 330, 33504.47403177676, 1737.82895530607, 0.505, 2.0448979591836736, 32932.26157399649);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 331, 33795.51815672649, 1832.5380373751932, 0.505, 2.6514285714285712, 32932.26157399649);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 335, 33895.889346753494, 2059.3184103781723, 0.505, 2.244081632653061, 32932.26157399649);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 340, 34553.636221775865, 2694.225739576522, 0.505, 3.9257142857142857, 32932.26157399649);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 341, 33857.12207434018, 1700.187057061415, 0.505, 2.3526530612244896, 32932.26157399649);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 345, 34062.37218753829, 2479.8428942669675, 0.505, 2.740408163265306, 32932.26157399649);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 350, 33755.82752096448, 1906.2821455094277, 0.505, 2.393469387755102, 32932.26157399649);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 351, 34043.83521512066, 2487.7579312534917, 0.505, 3.559183673469388, 32932.26157399649);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 355, 33594.86342153141, 1388.4269862239926, 0.505, 2.566530612244898, 32932.26157399649);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 360, 33859.78714106907, 1659.390466033148, 0.505, 3.092244897959184, 32932.26157399649);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 361, 34002.72774146605, 2204.2510621721167, 0.505, 3.110204081632653, 32932.26157399649);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 365, 34399.28218966071, 2311.3332764327647, 0.505, 4.0718367346938775, 32932.26157399649);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 370, 33666.7111183602, 1467.2591305991136, 0.505, 2.779591836734694, 32932.26157399649);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 371, 33658.078079756226, 1448.2705319847275, 0.505, 2.9126530612244896, 32932.26157399649);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 375, 33858.89366196641, 1976.1324863928876, 0.505, 2.473469387755102, 32932.26157399649);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 380, 33636.90069601331, 1820.2289170415881, 0.505, 2.260408163265306, 32932.26157399649);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 381, 33810.475670821455, 1850.506857602344, 0.505, 2.329795918367347, 32932.26157399649);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 385, 34127.45161327959, 2342.990769713594, 0.505, 3.427755102040816, 32932.26157399649);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 390, 34211.66745318761, 2501.0412668410577, 0.505, 3.7232653061224488, 32932.26157399649);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 391, 33469.36563427093, 1677.4123758261467, 0.505, 1.819591836734694, 32932.26157399649);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 395, 33597.95721143079, 2094.432122218056, 0.5, 2.7175510204081634, 32676.09686039693);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 400, 33500.81719752309, 1883.5835417992412, 0.5, 2.455510204081633, 32676.09686039693);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 401, 40091.87006030557, 2130.2815018943775, 0.49, 23.648979591836735, 34151.19353825846);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 405, 35240.643813978655, 2364.4627809514095, 0.64, 4.723265306122449, 32899.30854908607);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 410, 33243.117531789474, 1073.571295930527, 0.54, 2.9346938775510205, 32720.344495665755);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 411, 34518.26554996327, 1624.6838731228058, 0.54, 2.5795918367346937, 32720.344495665755);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 415, 34393.70132912454, 1345.7751205771337, 0.54, 2.446530612244898, 32720.344495665755);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 420, 34330.71864136938, 1272.456746405976, 0.5, 2.3053061224489797, 32241.837584022498);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 421, 34749.076445694074, 2790.1120764414854, 0.5, 8.043265306122448, 32241.837584022498);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 425, 33662.09987105042, 2263.85428212476, 0.5, 3.3951020408163264, 32241.837584022498);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 430, 32797.586671477, 1292.8784207193873, 0.5, 2.9820408163265304, 31894.571450493244);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 431, 33104.676829563825, 1773.7995515937216, 0.5, 3.235918367346939, 31894.571450493244);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 435, 32942.37849712876, 1557.6032755037857, 0.5, 2.950204081632653, 31894.571450493244);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 440, 33119.28107444582, 1891.8982584941546, 0.5, 4.040816326530612, 31894.571450493244);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 441, 32815.58144010277, 1140.8781062482703, 0.5, 2.5493877551020407, 31894.571450493244);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 445, 32894.93745751397, 1655.1321202866804, 0.5, 3.733877551020408, 31894.571450493244);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 450, 33497.288318400475, 1748.0873506725793, 0.5, 5.161632653061225, 31894.571450493244);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 451, 32503.19813535227, 1068.6283333032682, 0.5, 2.280816326530612, 31894.571450493244);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 455, 33450.29294100519, 1928.2377471115776, 0.5, 4.8612244897959185, 31894.571450493244);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 460, 33242.97996406373, 2106.166814105331, 0.5, 2.653877551020408, 31894.571450493244);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 461, 32671.313176517022, 1280.9134912071386, 0.5, 2.786122448979592, 31894.571450493244);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 465, 33288.31659778814, 1827.816698888486, 0.5, 4.267755102040816, 31894.571450493244);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 470, 32656.81619274965, 1303.1930786238354, 0.5, 3.2457142857142856, 31894.571450493244);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 471, 32796.961981681176, 1661.6914296706639, 0.5, 2.613877551020408, 31894.571450493244);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 475, 33147.59623745161, 1586.7281586156053, 0.5, 3.606530612244898, 31894.571450493244);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 480, 32952.83313864694, 1823.1570067514301, 0.5, 3.103673469387755, 31894.571450493244);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 481, 33410.25680981647, 1886.3645568909365, 0.5, 4.328979591836735, 31894.571450493244);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 485, 33171.863595401075, 1518.3198993575418, 0.5, 3.430204081632653, 31894.571450493244);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 490, 32836.84386444007, 1379.6451220933907, 0.5, 3.6228571428571428, 31894.571450493244);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 491, 33078.84027091144, 1371.0716701993838, 0.5, 3.3518367346938778, 31894.571450493244);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 495, 32707.135998472888, 1360.5978025307675, 0.5, 2.786938775510204, 31894.571450493244);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 500, 33206.99683855538, 1686.1207405993946, 0.5, 3.8791836734693876, 31894.571450493244);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 501, 41578.22998385796, 2936.428005114112, 0.48, 21.53142857142857, 32327.924703427856);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 505, 31692.460529299715, 1393.511357825983, 0.685, 2.2253061224489796, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 510, 32297.18172523769, 2480.731035542944, 0.685, 3.803265306122449, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 511, 32567.295387059145, 2481.31958587458, 0.685, 4.44, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 515, 31699.474906698222, 1197.6645150413383, 0.685, 2.633469387755102, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 520, 32273.539513123986, 1759.920315399711, 0.685, 4.018775510204081, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 521, 32180.180735721788, 2154.19839981455, 0.685, 3.6914285714285713, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 525, 31979.85837584737, 1635.1698264509762, 0.685, 3.5028571428571427, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 530, 32103.138080013247, 2354.500086188047, 0.685, 3.0375510204081633, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 531, 31616.74964719622, 1074.8325208001784, 0.685, 2.633469387755102, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 535, 31957.1243301894, 1575.7901734492507, 0.685, 3.1379591836734693, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 540, 31673.790478294846, 1250.549464870156, 0.685, 2.4114285714285715, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 541, 31834.12719670467, 1722.241598162568, 0.685, 2.9093877551020406, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 545, 31735.266133400826, 1674.2406168575792, 0.685, 2.743673469387755, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 550, 31840.046583939682, 1394.6278120913846, 0.685, 2.9991836734693877, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 551, 31673.07097253025, 1200.3858329798902, 0.685, 2.3648979591836734, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 555, 31802.900067821443, 1515.07120860621, 0.685, 2.4906122448979593, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 560, 32012.63049879993, 1781.968318056457, 0.685, 2.916734693877551, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 561, 31547.14697062128, 1164.3838673787639, 0.685, 2.0293877551020407, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 565, 31788.664867405052, 1578.3787751133575, 0.685, 2.626938775510204, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 570, 31819.574319901258, 1502.6599863114968, 0.685, 2.972244897959184, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 571, 31679.66080366712, 1240.6874897723512, 0.685, 2.3755102040816327, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 575, 31980.72871587473, 1557.7833476490046, 0.685, 3.0383673469387755, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 580, 31588.071773946234, 1257.4735542081246, 0.685, 2.2057142857142855, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 581, 31848.795150963673, 1462.520697743978, 0.685, 3.0473469387755103, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 585, 31858.587706910534, 1412.9130651486025, 0.685, 3.1420408163265305, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 590, 32105.548122167475, 2020.6650683828802, 0.685, 3.303673469387755, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 591, 32048.087616004246, 1779.5708262960056, 0.685, 3.434285714285714, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 595, 31763.41519828387, 1451.900586152651, 0.685, 2.76734693877551, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 600, 31865.874785980675, 1798.9537313948113, 0.5, 3.0024489795918368, 30995.6142056058);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 601, 37804.839843404385, 2196.325574179214, 0.49, 10.82530612244898, 32463.94716456098);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 605, 31761.402459687102, 757.0758002487629, 0.625, 0.31918367346938775, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 610, 31837.137889081416, 1296.4734652177626, 0.625, 0.4726530612244898, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 611, 31742.6146101582, 474.0386994096326, 0.625, 0.43183673469387757, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 615, 32022.082263254895, 1146.8824344374034, 0.625, 1.1755102040816328, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 620, 31857.801701364562, 981.5809972009146, 0.625, 0.516734693877551, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 621, 32100.966438570224, 1407.711785206939, 0.625, 0.8955102040816326, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 625, 31860.531402955476, 1320.0580324483929, 0.625, 0.6359183673469387, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 630, 32223.336748052716, 1646.025884299682, 0.625, 1.4106122448979592, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 631, 31982.426098429103, 1249.2727340880201, 0.625, 0.7542857142857143, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 635, 31790.947013637855, 821.1468361336003, 0.625, 0.5583673469387755, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 640, 31877.57751818864, 810.0452813522202, 0.625, 0.5804081632653061, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 641, 31751.709450826653, 466.03047144199974, 0.625, 0.6685714285714286, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 645, 31697.884942516364, 377.1604609244241, 0.625, 0.31755102040816324, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 650, 31951.00550236728, 1376.768399096294, 0.625, 1.1020408163265305, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 651, 32009.84031857974, 1472.8115177104924, 0.625, 0.7918367346938775, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 655, 31743.321440062784, 425.85534945620964, 0.625, 0.7110204081632653, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 660, 31940.05467509843, 1135.1509985133816, 0.625, 0.9093877551020408, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 661, 31649.430543320665, 191.78041051969024, 0.625, 0.12, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 665, 31812.231969324595, 716.8876658248336, 0.625, 0.46285714285714286, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 670, 31974.58309500491, 1289.698712042274, 0.625, 0.746938775510204, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 671, 32124.68053190931, 1446.462716178895, 0.625, 1.52, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 675, 31657.621620479495, 249.7000725620354, 0.625, 0.12, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 680, 31776.863612495516, 548.7814703457634, 0.625, 0.6342857142857142, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 681, 31952.429293716807, 1482.1173544313879, 0.625, 0.4775510204081633, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 685, 31814.223417477966, 719.5816009782769, 0.625, 0.8318367346938775, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 690, 31712.174787722073, 479.7382598176379, 0.625, 0.31918367346938775, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 691, 31907.24758703305, 1109.9181076938971, 0.625, 0.5151020408163265, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 695, 32152.635511036944, 1829.8812185279023, 0.625, 1.1738775510204082, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 700, 31739.832459510784, 613.8574258647574, 0.5, 0.39918367346938777, 31622.3086975652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 701, 36314.9966160236, 2105.6768143708273, 0.495, 6.1355102040816325, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 705, 32499.504344165678, 1438.3541555303684, 0.495, 1.493877551020408, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 710, 32494.82357934054, 1564.2679605702724, 0.495, 1.1657142857142857, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 711, 32333.895045769485, 1217.2330744071842, 0.495, 1.2106122448979593, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 715, 32466.678477595007, 1847.3072054122192, 0.495, 0.673469387755102, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 720, 32516.180255656036, 1583.5372842135139, 0.495, 1.246530612244898, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 721, 32590.256584071056, 1582.638962825278, 0.495, 1.523265306122449, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 725, 32328.90656387533, 1328.7066831049056, 0.495, 0.7069387755102041, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 730, 32436.76446269696, 1498.5620297592332, 0.495, 0.7453061224489796, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 731, 32600.52969606547, 1567.9938229619645, 0.495, 1.4816326530612245, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 735, 34092.06356051673, 1872.2524701548327, 0.495, 3.804081632653061, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 740, 33831.71598597542, 1411.368155178133, 0.495, 2.629387755102041, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 741, 33905.636805089845, 1630.743904811134, 0.495, 3.0073469387755103, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 745, 33321.2844187967, 854.3101573817288, 0.495, 2.12, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 750, 33697.113078649134, 1204.6324795980593, 0.495, 2.199183673469388, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 751, 33336.12806970817, 919.4012782729864, 0.495, 2.2514285714285713, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 755, 33505.668271042094, 831.2518374467305, 0.495, 1.4138775510204082, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 760, 33550.53926311366, 1093.3040972716658, 0.495, 1.2016326530612245, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 761, 33403.07975169087, 1119.531667143372, 0.495, 1.5640816326530613, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 765, 33279.10744617797, 739.7379590354221, 0.495, 1.36, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 770, 33485.71302412832, 1218.57896636409, 0.495, 1.1289795918367347, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 771, 33414.02572055582, 729.2720793661313, 0.495, 1.0497959183673469, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 775, 33457.90453525304, 395.71328433617106, 0.495, 0.5306122448979592, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 780, 33483.20311331342, 1139.464697868673, 0.495, 1.1942857142857144, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 781, 33319.1284743056, 583.2832240096676, 0.495, 1.0946938775510204, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 785, 33673.754731230016, 1383.4574737672935, 0.495, 0.856326530612245, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 790, 33284.76589851465, 587.5249033629992, 0.495, 1.2261224489795919, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 791, 33249.72158056838, 633.0657738222965, 0.495, 1.146938775510204, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 795, 33098.850630988876, 726.6625551896666, 0.495, 1.3412244897959185, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 800, 33373.05354831168, 615.4266153480967, 0.5, 1.1012244897959185, 31925.244490692934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 801, 36609.34662757683, 2739.9964027816577, 0.495, 6.133061224489796, 31573.436911058783);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 805, 31851.713472413816, 665.7635685206507, 0.495, 1.7077551020408164, 31573.436911058783);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 810, 32229.833108553932, 1120.1829912147955, 0.495, 3.275918367346939, 31573.436911058783);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 811, 31885.263118041996, 638.7555577165831, 0.495, 2.1077551020408163, 31573.436911058783);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 815, 31939.8587562028, 771.9070073757052, 0.495, 2.0351020408163265, 31573.436911058783);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 820, 31728.312644866794, 436.8333332009432, 0.495, 1.3012244897959184, 31573.436911058783);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 821, 31882.675295002166, 871.0173997331738, 0.495, 1.693061224489796, 31573.436911058783);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 825, 31873.62509333889, 665.1409663428159, 0.495, 2.170612244897959, 31573.436911058783);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 830, 31813.82925718562, 586.1796314113192, 0.5, 2.119183673469388, 31525.55019410701);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 831, 31862.99137733245, 790.5529372713258, 0.5, 2.0073469387755103, 31525.55019410701);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 835, 31747.167654546698, 606.8508531916784, 0.5, 1.4775510204081632, 31525.55019410701);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 840, 31652.957631466816, 320.95457979186386, 0.5, 1.2848979591836736, 31525.55019410701);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 841, 31823.397982253045, 764.6216668375301, 0.5, 1.7240816326530612, 31525.55019410701);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 845, 31753.081797362556, 607.6128836342978, 0.5, 1.3975510204081634, 31525.55019410701);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 850, 31836.285806906257, 638.3593861475049, 0.5, 2.2979591836734694, 31525.55019410701);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 851, 31925.146071548363, 697.2044345617771, 0.5, 2.4424489795918367, 31525.55019410701);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 855, 31752.62761319329, 533.5625667477682, 0.5, 1.4840816326530613, 31525.55019410701);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 860, 31847.30281246851, 690.8412040478114, 0.5, 2.0693877551020408, 31525.55019410701);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 861, 31751.354646891654, 538.2915720313257, 0.5, 1.8383673469387756, 31525.55019410701);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 865, 31826.98044920648, 637.2508556588375, 0.5, 2.137142857142857, 31525.55019410701);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 870, 31745.911922299703, 505.85361984060313, 0.5, 1.9314285714285715, 31525.55019410701);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 871, 31905.98641688862, 750.9513655242704, 0.5, 2.176326530612245, 31525.55019410701);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 875, 31792.823209895567, 585.2227410232857, 0.5, 1.653061224489796, 31525.55019410701);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 880, 31748.221458127726, 637.4597831302776, 0.5, 1.366530612244898, 31525.55019410701);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 881, 31775.46227318389, 606.6335369187331, 0.5, 1.703673469387755, 31525.55019410701);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 885, 31800.07702849018, 686.0709394191724, 0.5, 1.7053061224489796, 31525.55019410701);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 890, 31825.91896790218, 732.6841576745361, 0.5, 2.0016326530612245, 31525.55019410701);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 891, 31818.183074128214, 674.2262106677242, 0.5, 1.8612244897959183, 31525.55019410701);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 895, 31705.159972453057, 495.57378427774614, 0.5, 1.4220408163265306, 31525.55019410701);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 900, 31844.981293738987, 779.9132645015484, 0.5, 1.7257142857142858, 31525.55019410701);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 901, 32980.606337642566, 414.95558136537204, 0.495, 4.485714285714286, 32272.31939854998);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 905, 30970.858628626287, 2.572439484307497E-11, 0.53, 0.0, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 910, 31107.446206224704, 547.0912568261124, 0.53, 0.433469387755102, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 911, 30970.858628626287, 2.572439484307497E-11, 0.53, 0.0, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 915, 30970.858628626287, 2.572439484307497E-11, 0.53, 0.0, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 920, 30970.858628626287, 2.572439484307497E-11, 0.53, 0.0, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 921, 30970.858628626287, 2.572439484307497E-11, 0.53, 0.0, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 925, 31009.501062788207, 273.24327237449995, 0.53, 0.12, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 930, 30970.858628626287, 2.572439484307497E-11, 0.53, 0.0, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 931, 31018.309631186956, 335.52925684750693, 0.53, 0.12, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 935, 30970.858628626287, 2.572439484307497E-11, 0.53, 0.0, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 940, 30970.858628626287, 2.572439484307497E-11, 0.53, 0.0, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 941, 30970.858628626287, 2.572439484307497E-11, 0.53, 0.0, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 945, 30970.858628626287, 2.572439484307497E-11, 0.53, 0.0, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 950, 30970.858628626287, 2.572439484307497E-11, 0.53, 0.0, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 951, 30970.858628626287, 2.572439484307497E-11, 0.53, 0.0, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 955, 30970.858628626287, 2.572439484307497E-11, 0.53, 0.0, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 960, 30970.858628626287, 2.572439484307497E-11, 0.53, 0.0, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 961, 30970.858628626287, 2.572439484307497E-11, 0.53, 0.0, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 965, 30970.858628626287, 2.572439484307497E-11, 0.53, 0.0, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 970, 30970.858628626287, 2.572439484307497E-11, 0.53, 0.0, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 971, 30970.858628626287, 2.572439484307497E-11, 0.53, 0.0, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 975, 30970.858628626287, 2.572439484307497E-11, 0.53, 0.0, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 980, 30970.858628626287, 2.572439484307497E-11, 0.53, 0.0, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 981, 30970.858628626287, 2.572439484307497E-11, 0.53, 0.0, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 985, 30970.858628626287, 2.572439484307497E-11, 0.53, 0.0, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 990, 30970.858628626287, 2.572439484307497E-11, 0.53, 0.0, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 991, 30970.858628626287, 2.572439484307497E-11, 0.53, 0.0, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 995, 30970.858628626287, 2.572439484307497E-11, 0.53, 0.0, 30970.858628626313);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1000, 30970.858628626287, 2.572439484307497E-11, 0.5, 0.0, 30970.858628626313);
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 10, 16, 14, 31, 90, 97, 22, 44, 85, 26, 11, 34, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 29, 38, 51, 77, 4, 36, 32, 75, 94, 12, 81, 95, 47, 99, 70, 40, 13, 42, 2, 45, 28, 33, 54, 82, 19, 56, 6, 8, 86, 57, 92, 27, 66, 46, 73, 20, 58, 71, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 79, 88, 30, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 10, 16, 14, 31, 90, 97, 22, 44, 85, 26, 11, 34, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 29, 38, 51, 77, 4, 36, 32, 75, 94, 12, 81, 95, 47, 99, 70, 40, 13, 42, 2, 45, 28, 33, 54, 82, 19, 56, 6, 8, 86, 57, 92, 27, 66, 46, 73, 20, 58, 71, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 79, 88, 30, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 10, 16, 14, 31, 90, 97, 22, 44, 85, 26, 11, 34, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 29, 38, 51, 77, 4, 36, 32, 75, 94, 12, 81, 95, 47, 99, 70, 40, 13, 42, 2, 45, 28, 33, 54, 82, 19, 56, 6, 8, 86, 57, 92, 27, 66, 46, 73, 20, 58, 71, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 79, 88, 30, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 10, 16, 14, 31, 90, 97, 22, 44, 85, 26, 11, 34, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 29, 38, 51, 77, 4, 36, 32, 75, 94, 12, 81, 95, 47, 99, 70, 40, 13, 42, 2, 45, 28, 33, 54, 82, 19, 56, 6, 8, 86, 57, 92, 27, 66, 46, 73, 20, 58, 71, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 79, 88, 30, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 10, 16, 14, 31, 90, 97, 22, 44, 85, 26, 11, 34, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 29, 38, 51, 77, 4, 36, 32, 75, 94, 12, 81, 95, 47, 99, 70, 40, 13, 42, 2, 45, 28, 33, 54, 82, 19, 56, 6, 8, 86, 57, 92, 27, 66, 46, 73, 20, 58, 71, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 79, 88, 30, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 10, 16, 14, 31, 90, 97, 22, 44, 85, 26, 11, 34, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 29, 38, 51, 77, 4, 36, 32, 75, 94, 12, 81, 95, 47, 99, 70, 40, 13, 42, 2, 45, 28, 33, 54, 82, 19, 56, 6, 8, 86, 57, 92, 27, 66, 46, 73, 20, 58, 71, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 79, 88, 30, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 10, 16, 14, 31, 90, 97, 22, 44, 85, 26, 11, 34, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 29, 38, 51, 77, 4, 36, 32, 75, 94, 12, 81, 95, 47, 99, 70, 40, 13, 42, 2, 45, 28, 33, 54, 82, 19, 56, 6, 8, 86, 57, 92, 27, 66, 46, 73, 20, 58, 71, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 79, 88, 30, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 10, 16, 14, 31, 90, 97, 22, 44, 85, 26, 11, 34, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 29, 38, 51, 77, 4, 36, 32, 75, 94, 12, 81, 95, 47, 99, 70, 40, 13, 42, 2, 45, 28, 33, 54, 82, 19, 56, 6, 8, 86, 57, 92, 27, 66, 46, 73, 20, 58, 71, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 79, 88, 30, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 10, 16, 14, 31, 90, 97, 22, 44, 85, 26, 11, 34, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 29, 38, 51, 77, 4, 36, 32, 75, 94, 12, 81, 95, 47, 99, 70, 40, 13, 42, 2, 45, 28, 33, 54, 82, 19, 56, 6, 8, 86, 57, 92, 27, 66, 46, 73, 20, 58, 71, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 79, 88, 30, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 10, 16, 14, 31, 90, 97, 22, 44, 85, 26, 11, 34, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 29, 38, 51, 77, 4, 36, 32, 75, 94, 12, 81, 95, 47, 99, 70, 40, 13, 42, 2, 45, 28, 33, 54, 82, 19, 56, 6, 8, 86, 57, 92, 27, 66, 46, 73, 20, 58, 71, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 79, 88, 30, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 30, 79, 41, 88, 7, 55, 65, 3, 52, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 90, 97, 22, 76, 61, 59, 19, 85, 26, 34, 11, 56, 8, 6, 86, 50, 60, 24, 80, 68, 63, 53, 39, 43, 1, 72, 49, 84, 67, 38, 51, 77, 95, 47, 99, 70, 40, 2, 45, 42, 28, 54, 82, 33, 13, 29, 4, 36, 32, 12, 75, 94, 81, 57, 92, 27, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 86, 24, 80, 68, 63, 53, 39, 43, 1, 72, 49, 67, 38, 29, 13, 99, 70, 40, 47, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 84, 45, 42, 2, 28, 33, 54, 82, 6, 8, 56, 50, 60, 57, 92, 27, 66, 55, 79, 41, 30, 88, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 86, 24, 80, 68, 63, 53, 39, 43, 1, 72, 49, 67, 38, 29, 13, 99, 70, 40, 47, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 84, 45, 42, 2, 28, 33, 54, 82, 6, 8, 56, 50, 60, 57, 92, 27, 66, 55, 79, 41, 30, 88, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 86, 24, 80, 68, 63, 53, 39, 43, 1, 72, 49, 67, 38, 29, 13, 99, 70, 40, 47, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 84, 45, 42, 2, 28, 33, 54, 82, 6, 8, 56, 50, 60, 57, 92, 27, 66, 55, 79, 41, 30, 88, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 86, 24, 80, 68, 63, 53, 39, 43, 1, 72, 49, 67, 38, 29, 13, 99, 70, 40, 47, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 84, 45, 42, 2, 28, 33, 54, 82, 6, 8, 56, 50, 60, 57, 92, 27, 66, 55, 79, 41, 30, 88, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 86, 24, 80, 68, 63, 53, 39, 43, 1, 72, 49, 67, 38, 29, 13, 99, 70, 40, 47, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 84, 45, 42, 2, 28, 33, 54, 82, 6, 8, 56, 50, 60, 57, 66, 27, 92, 46, 7, 41, 88, 30, 55, 79, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 86, 24, 80, 68, 63, 53, 39, 43, 1, 72, 49, 67, 84, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 38, 29, 13, 99, 70, 40, 47, 28, 2, 45, 42, 33, 54, 82, 6, 8, 56, 50, 60, 57, 66, 27, 92, 46, 7, 41, 88, 30, 55, 79, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 86, 24, 80, 68, 63, 53, 39, 43, 1, 72, 49, 67, 84, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 38, 29, 13, 99, 70, 40, 47, 28, 2, 45, 42, 33, 54, 82, 6, 8, 56, 50, 60, 57, 66, 27, 92, 46, 7, 41, 88, 30, 55, 79, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 86, 24, 80, 68, 63, 53, 39, 43, 1, 72, 49, 67, 84, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 38, 29, 13, 99, 70, 40, 47, 28, 2, 45, 42, 33, 54, 82, 6, 8, 56, 50, 60, 57, 66, 27, 92, 46, 7, 41, 88, 30, 55, 79, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 86, 24, 80, 68, 63, 53, 39, 43, 1, 72, 49, 67, 84, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 38, 29, 13, 99, 70, 40, 47, 28, 2, 45, 42, 33, 54, 82, 6, 8, 56, 50, 60, 57, 66, 27, 92, 46, 7, 41, 88, 30, 55, 79, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 98, 35, 23, 37, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 44, 22, 61, 56, 6, 8, 54, 82, 33, 47, 99, 70, 40, 13, 42, 2, 28, 45, 19, 11, 26, 34, 85, 76, 59, 86, 50, 60, 80, 24, 68, 72, 43, 39, 53, 63, 1, 49, 81, 94, 12, 75, 32, 38, 95, 51, 36, 4, 77, 29, 84, 67, 57, 66, 27, 92, 46, 41, 88, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 44, 22, 61, 56, 6, 8, 54, 82, 33, 47, 99, 70, 40, 13, 42, 2, 28, 45, 19, 11, 26, 34, 85, 76, 59, 86, 50, 60, 80, 24, 1, 43, 39, 53, 63, 68, 72, 49, 81, 94, 12, 75, 32, 38, 95, 51, 77, 4, 36, 29, 84, 67, 57, 66, 27, 92, 46, 41, 88, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 44, 22, 61, 56, 6, 8, 54, 82, 33, 47, 99, 70, 40, 13, 42, 2, 28, 45, 19, 11, 26, 34, 85, 76, 59, 86, 50, 60, 80, 24, 1, 43, 39, 53, 63, 68, 72, 49, 81, 94, 12, 75, 32, 38, 95, 51, 77, 4, 36, 29, 84, 67, 57, 66, 27, 92, 46, 41, 88, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 44, 22, 76, 59, 19, 26, 34, 85, 61, 56, 86, 8, 6, 11, 54, 82, 33, 45, 42, 2, 28, 47, 99, 70, 40, 13, 29, 81, 94, 32, 75, 12, 4, 36, 51, 77, 95, 38, 84, 67, 49, 72, 68, 39, 53, 63, 1, 43, 80, 24, 60, 50, 57, 66, 27, 92, 46, 41, 88, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 44, 22, 76, 59, 19, 26, 34, 85, 61, 56, 86, 8, 6, 11, 54, 82, 33, 45, 42, 2, 28, 47, 99, 70, 40, 13, 29, 81, 94, 32, 75, 12, 4, 36, 51, 77, 95, 38, 84, 67, 49, 72, 68, 39, 53, 63, 1, 43, 80, 24, 60, 50, 57, 66, 27, 92, 46, 41, 88, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 44, 22, 76, 59, 19, 26, 34, 85, 61, 56, 86, 8, 6, 11, 54, 82, 33, 45, 42, 2, 28, 47, 99, 70, 40, 13, 29, 81, 94, 32, 75, 12, 4, 36, 51, 77, 95, 38, 84, 67, 49, 72, 68, 39, 53, 63, 1, 43, 80, 24, 60, 50, 57, 66, 27, 92, 46, 41, 88, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 44, 22, 76, 59, 19, 26, 34, 85, 61, 56, 86, 8, 6, 11, 54, 82, 33, 45, 42, 2, 28, 47, 99, 70, 40, 13, 29, 81, 94, 32, 75, 12, 4, 36, 51, 77, 95, 38, 84, 67, 49, 72, 68, 39, 53, 63, 1, 43, 80, 24, 60, 50, 57, 66, 27, 92, 46, 41, 88, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 44, 22, 76, 59, 19, 26, 34, 85, 61, 56, 86, 8, 6, 11, 54, 82, 33, 45, 42, 2, 28, 47, 99, 70, 40, 13, 29, 81, 94, 32, 75, 12, 4, 36, 51, 77, 95, 38, 84, 67, 49, 72, 68, 39, 53, 63, 1, 43, 80, 24, 60, 50, 57, 66, 27, 92, 46, 41, 88, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 44, 22, 76, 59, 19, 26, 34, 85, 61, 56, 86, 8, 6, 11, 54, 82, 33, 45, 42, 2, 28, 47, 99, 70, 40, 13, 29, 81, 94, 32, 75, 12, 4, 36, 51, 77, 95, 38, 84, 67, 49, 72, 68, 39, 53, 63, 1, 43, 80, 24, 60, 50, 57, 66, 27, 92, 46, 41, 88, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 44, 22, 76, 59, 19, 26, 34, 85, 61, 56, 86, 8, 6, 11, 54, 82, 33, 45, 42, 2, 28, 47, 99, 70, 40, 13, 29, 81, 94, 32, 75, 12, 4, 36, 51, 77, 95, 38, 84, 67, 49, 72, 68, 39, 53, 63, 1, 43, 80, 24, 60, 50, 57, 66, 27, 92, 46, 41, 88, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 16, 10, 31, 90, 97, 27, 92, 46, 44, 22, 59, 57, 66, 7, 41, 30, 88, 79, 55, 39, 63, 53, 1, 49, 81, 94, 32, 75, 12, 36, 4, 29, 13, 2, 40, 70, 99, 47, 51, 77, 95, 38, 84, 67, 72, 68, 43, 80, 60, 24, 50, 86, 56, 8, 6, 82, 54, 42, 45, 28, 33, 11, 85, 26, 34, 19, 76, 61, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 16, 10, 31, 46, 44, 90, 97, 22, 76, 59, 61, 85, 26, 34, 19, 56, 8, 6, 82, 54, 42, 45, 28, 33, 11, 86, 50, 57, 68, 63, 39, 53, 1, 43, 49, 81, 94, 32, 75, 12, 36, 4, 29, 13, 2, 40, 70, 99, 47, 51, 77, 95, 38, 84, 67, 72, 80, 24, 60, 66, 27, 92, 41, 30, 88, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 59, 61, 85, 26, 34, 19, 56, 8, 6, 82, 54, 42, 45, 28, 2, 40, 70, 99, 47, 51, 77, 95, 38, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94, 32, 75, 12, 36, 4, 29, 13, 33, 11, 86, 50, 60, 80, 24, 57, 66, 7, 41, 30, 88, 79, 55, 46, 27, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 59, 61, 85, 26, 34, 19, 56, 8, 6, 82, 54, 42, 45, 28, 2, 40, 70, 99, 47, 51, 77, 95, 38, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94, 32, 75, 12, 36, 4, 29, 13, 33, 11, 86, 50, 60, 80, 24, 57, 66, 7, 41, 30, 88, 79, 55, 46, 27, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 59, 61, 85, 26, 34, 19, 56, 8, 6, 82, 54, 42, 45, 28, 2, 40, 70, 99, 47, 51, 77, 95, 38, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94, 32, 75, 12, 36, 4, 29, 13, 33, 11, 86, 50, 60, 80, 24, 57, 66, 7, 41, 30, 88, 79, 55, 46, 27, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 59, 61, 85, 26, 34, 19, 56, 8, 6, 82, 54, 42, 45, 28, 2, 40, 70, 99, 47, 51, 77, 95, 38, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94, 32, 75, 12, 36, 4, 29, 13, 33, 11, 86, 50, 60, 80, 24, 57, 66, 7, 41, 30, 88, 79, 55, 46, 27, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 59, 61, 85, 26, 34, 19, 56, 8, 6, 82, 54, 42, 45, 28, 2, 40, 70, 99, 47, 51, 77, 95, 38, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94, 32, 75, 12, 36, 4, 29, 13, 33, 11, 86, 50, 60, 80, 24, 57, 66, 7, 41, 30, 88, 79, 55, 46, 27, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 59, 61, 85, 26, 34, 19, 56, 8, 6, 82, 54, 42, 45, 28, 2, 40, 70, 99, 47, 51, 77, 95, 38, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94, 32, 75, 12, 36, 4, 29, 13, 33, 11, 86, 50, 60, 80, 24, 57, 66, 7, 41, 30, 88, 79, 55, 46, 27, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 59, 61, 85, 26, 34, 19, 56, 8, 6, 82, 54, 42, 45, 28, 2, 40, 70, 99, 47, 51, 77, 95, 38, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94, 32, 75, 12, 36, 4, 29, 13, 33, 11, 86, 50, 60, 80, 24, 57, 66, 7, 41, 30, 88, 79, 55, 46, 27, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 59, 61, 85, 26, 34, 19, 56, 8, 6, 82, 54, 42, 45, 28, 2, 40, 70, 99, 47, 51, 77, 95, 38, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94, 32, 75, 12, 36, 4, 29, 13, 33, 11, 86, 50, 60, 80, 24, 57, 66, 7, 41, 30, 88, 79, 55, 46, 27, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 28, 2, 42, 45, 13, 99, 40, 70, 47, 51, 67, 84, 72, 49, 81, 94, 12, 32, 75, 36, 4, 77, 95, 38, 29, 56, 6, 8, 86, 60, 50, 57, 66, 7, 41, 30, 79, 55, 46, 27, 92, 24, 80, 68, 63, 53, 39, 1, 43, 88, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 28, 2, 42, 45, 13, 99, 40, 70, 47, 51, 77, 95, 4, 36, 81, 94, 12, 32, 75, 43, 1, 53, 39, 63, 68, 72, 49, 67, 84, 38, 29, 86, 60, 50, 8, 6, 56, 24, 80, 66, 92, 57, 27, 46, 7, 41, 30, 79, 55, 88, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 28, 2, 42, 45, 13, 99, 40, 70, 47, 51, 77, 95, 4, 36, 81, 94, 12, 32, 75, 43, 1, 63, 53, 39, 68, 72, 49, 67, 84, 38, 29, 86, 60, 50, 8, 6, 56, 24, 80, 27, 92, 57, 66, 88, 79, 55, 41, 30, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 28, 2, 42, 45, 13, 99, 40, 70, 47, 51, 77, 95, 4, 36, 81, 94, 12, 32, 75, 43, 1, 63, 53, 39, 68, 72, 49, 67, 84, 38, 29, 8, 6, 56, 86, 60, 24, 80, 50, 57, 66, 88, 79, 55, 41, 30, 7, 46, 27, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 28, 2, 42, 45, 13, 99, 40, 70, 47, 51, 77, 95, 4, 36, 81, 94, 12, 32, 75, 43, 1, 63, 53, 39, 68, 72, 49, 67, 84, 38, 29, 8, 6, 56, 86, 60, 24, 80, 50, 57, 66, 88, 79, 55, 41, 30, 7, 46, 27, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 28, 2, 42, 45, 13, 99, 40, 70, 47, 51, 77, 95, 4, 36, 81, 94, 12, 32, 75, 43, 1, 63, 53, 39, 68, 72, 49, 67, 84, 38, 29, 8, 6, 56, 86, 60, 24, 80, 50, 57, 66, 88, 79, 55, 41, 30, 7, 46, 27, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 28, 2, 42, 45, 13, 99, 40, 70, 47, 51, 77, 95, 4, 36, 81, 94, 12, 32, 75, 43, 1, 63, 53, 39, 68, 72, 49, 67, 84, 38, 29, 8, 6, 56, 86, 60, 24, 80, 50, 57, 66, 88, 79, 55, 41, 30, 7, 46, 27, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 28, 2, 42, 45, 13, 99, 40, 70, 47, 51, 77, 95, 4, 36, 81, 94, 12, 32, 75, 43, 1, 63, 53, 39, 68, 72, 49, 67, 84, 38, 29, 8, 6, 56, 86, 60, 24, 80, 50, 57, 66, 88, 79, 55, 41, 30, 7, 46, 27, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 28, 2, 42, 45, 13, 99, 40, 70, 47, 51, 77, 95, 4, 36, 81, 94, 12, 32, 75, 43, 1, 63, 53, 39, 68, 72, 49, 67, 84, 38, 29, 8, 6, 56, 86, 60, 24, 80, 50, 57, 66, 88, 79, 55, 41, 30, 7, 46, 27, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 28, 2, 42, 45, 13, 99, 40, 70, 47, 51, 77, 95, 4, 36, 81, 94, 12, 32, 75, 43, 1, 63, 53, 39, 68, 72, 49, 67, 84, 38, 29, 8, 6, 56, 86, 60, 24, 80, 50, 57, 66, 88, 79, 55, 41, 30, 7, 46, 27, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 42, 2, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 75, 12, 94, 81, 1, 63, 39, 53, 68, 49, 43, 72, 67, 84, 38, 29, 60, 80, 24, 86, 50, 56, 6, 8, 57, 46, 92, 27, 66, 88, 41, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 75, 12, 94, 81, 1, 63, 39, 53, 68, 49, 43, 72, 67, 84, 38, 29, 6, 8, 56, 86, 50, 60, 24, 80, 57, 46, 92, 27, 66, 88, 41, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 75, 12, 94, 81, 1, 63, 39, 53, 68, 49, 43, 72, 67, 84, 38, 29, 6, 8, 56, 86, 50, 60, 24, 80, 57, 46, 92, 27, 66, 88, 41, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 75, 12, 94, 81, 1, 63, 39, 53, 68, 49, 43, 72, 67, 84, 38, 29, 6, 8, 56, 86, 50, 60, 24, 80, 57, 46, 92, 27, 66, 88, 41, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 75, 12, 94, 81, 1, 63, 39, 53, 68, 49, 43, 72, 67, 84, 38, 29, 6, 8, 56, 86, 50, 60, 24, 80, 57, 46, 92, 27, 66, 88, 41, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 75, 12, 94, 81, 1, 63, 39, 53, 68, 49, 43, 72, 67, 84, 38, 29, 6, 8, 56, 86, 50, 60, 24, 80, 57, 46, 92, 27, 66, 88, 41, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 75, 12, 94, 81, 1, 63, 39, 53, 68, 49, 43, 72, 67, 84, 38, 29, 6, 8, 56, 86, 50, 60, 24, 80, 57, 46, 92, 27, 66, 88, 41, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 75, 12, 94, 81, 1, 63, 39, 53, 68, 49, 43, 72, 67, 84, 38, 29, 6, 8, 56, 86, 50, 60, 24, 80, 57, 46, 92, 27, 66, 88, 41, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 75, 12, 94, 81, 1, 63, 39, 53, 68, 49, 43, 72, 67, 84, 38, 29, 6, 8, 56, 86, 50, 60, 24, 80, 57, 46, 92, 27, 66, 88, 41, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 75, 12, 94, 81, 1, 63, 39, 53, 68, 49, 43, 72, 67, 84, 38, 29, 6, 8, 56, 86, 50, 60, 24, 80, 57, 46, 92, 27, 66, 88, 41, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 6, 8, 56, 80, 24, 60, 50, 86, 92, 57, 27, 66, 88, 30, 79, 41, 55, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 6, 56, 8, 86, 50, 60, 80, 24, 57, 92, 27, 66, 88, 30, 79, 41, 55, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 6, 56, 8, 86, 50, 60, 80, 24, 57, 92, 27, 66, 88, 30, 79, 41, 55, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 6, 56, 8, 86, 50, 60, 80, 24, 57, 92, 27, 66, 88, 30, 79, 41, 55, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 6, 56, 8, 86, 50, 60, 80, 24, 57, 92, 27, 66, 88, 30, 79, 41, 55, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 6, 56, 8, 86, 50, 60, 80, 24, 57, 92, 27, 66, 88, 30, 79, 41, 55, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 6, 56, 8, 86, 50, 60, 80, 24, 57, 92, 27, 66, 88, 30, 79, 41, 55, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 6, 56, 8, 86, 50, 60, 80, 24, 57, 92, 27, 66, 88, 30, 79, 41, 55, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 6, 56, 8, 86, 50, 60, 80, 24, 57, 92, 27, 66, 88, 30, 79, 41, 55, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 6, 56, 8, 86, 50, 60, 80, 24, 57, 92, 27, 66, 88, 30, 79, 41, 55, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 56, 6, 8, 86, 50, 60, 24, 80, 57, 92, 27, 66, 41, 88, 30, 55, 79, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 56, 6, 8, 86, 50, 60, 24, 80, 57, 92, 27, 66, 41, 88, 30, 55, 79, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 56, 6, 8, 86, 50, 60, 24, 80, 57, 92, 27, 66, 41, 88, 30, 55, 79, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 56, 6, 8, 86, 50, 60, 24, 80, 57, 92, 27, 66, 41, 88, 30, 55, 79, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 56, 6, 8, 86, 50, 60, 24, 80, 57, 92, 27, 66, 41, 88, 30, 55, 79, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 56, 6, 8, 86, 50, 60, 24, 80, 57, 92, 27, 66, 41, 88, 30, 55, 79, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 56, 6, 8, 86, 50, 60, 24, 80, 57, 92, 27, 66, 41, 88, 30, 55, 79, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 56, 6, 8, 86, 50, 60, 24, 80, 57, 92, 27, 66, 41, 88, 30, 55, 79, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 56, 6, 8, 86, 50, 60, 24, 80, 57, 92, 27, 66, 41, 88, 30, 55, 79, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 56, 6, 8, 86, 50, 60, 24, 80, 57, 92, 27, 66, 41, 88, 30, 55, 79, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 60, 80, 24, 86, 57, 46, 92, 27, 66, 88, 30, 79, 55, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 60, 80, 24, 86, 57, 46, 92, 27, 66, 88, 30, 79, 55, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 60, 80, 24, 86, 57, 46, 92, 27, 66, 88, 30, 79, 55, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 46, 92, 27, 66, 88, 30, 79, 55, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 46, 92, 27, 66, 88, 30, 79, 55, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 46, 92, 27, 66, 88, 30, 79, 55, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 46, 92, 27, 66, 88, 30, 79, 55, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 46, 92, 27, 66, 88, 30, 79, 55, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 46, 92, 27, 66, 88, 30, 79, 55, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 46, 92, 27, 66, 88, 30, 79, 55, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 27, 92, 66, 7, 41, 88, 30, 79, 55, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 27, 92, 66, 41, 88, 30, 79, 55, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 27, 92, 66, 41, 88, 30, 79, 55, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 27, 92, 66, 41, 88, 30, 79, 55, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 27, 92, 66, 41, 88, 30, 79, 55, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 27, 92, 66, 41, 88, 30, 79, 55, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 27, 92, 66, 41, 88, 30, 79, 55, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 27, 92, 66, 41, 88, 30, 79, 55, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 27, 92, 66, 41, 88, 30, 79, 55, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 27, 92, 66, 41, 88, 30, 79, 55, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 27, 92, 66, 41, 88, 30, 79, 55, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[0, 5, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 27, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 27, 92, 66, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 27, 92, 66, 41, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 27, 92, 66, 41, 88, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 27, 92, 66, 41, 88, 30, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 27, 92, 66, 41, 88, 30, 79, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 27, 92, 66, 41, 88, 30, 79, 55, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 27, 92, 66, 41, 88, 30, 79, 55, 7, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 27, 92, 66, 41, 88, 30, 79, 55, 7, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 87, 93, 21, 15, 69, 25, 64, 3, 65, 52, 17, 23, 37, 35, 98, 83, 9, 71, 20, 73, 58, 14, 10, 16, 31, 90, 97, 44, 22, 76, 61, 59, 34, 85, 11, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 68, 72, 49, 84, 67, 38, 29, 8, 56, 6, 50, 86, 80, 24, 60, 57, 27, 92, 66, 41, 88, 30, 79, 55, 7, 46, 0]");
    }

}
