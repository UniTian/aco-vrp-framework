package com.github.schmittjoaopedro.tsp;

import com.github.schmittjoaopedro.tsp.algorithms.MMAS_3OPT_MADTSP;
import com.github.schmittjoaopedro.tsp.graph.Graph;
import com.github.schmittjoaopedro.tsp.graph.GraphFactory;
import org.junit.Before;
import org.junit.Test;

import java.io.File;

import static org.assertj.core.api.Assertions.assertThat;

public class MMAS_3OPT_MADTSP_Test {

    private String kroA100;

    private String kroA150;

    @Before
    public void beforeClass() {
        kroA100 = getClass().getClassLoader().getResource("tsp/KroA100.tsp").getFile();
        kroA150 = getClass().getClassLoader().getResource("tsp/KroA150.tsp").getFile();
    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA100_with_seed_1_mag_0_1_freq_10() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_3OPT_MADTSP mmas_3OPT_madtsp = new MMAS_3OPT_MADTSP(graph, 0.8, 1000, 0.1, 10);
        mmas_3OPT_madtsp.setMmasSeed(1);
        mmas_3OPT_madtsp.setDbgpSeed(1);
        mmas_3OPT_madtsp.setStatisticInterval(1);
        mmas_3OPT_madtsp.setShowLog(false);
        mmas_3OPT_madtsp.run();
        assertThat(mmas_3OPT_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(24017.51974043522);
        assertThat(mmas_3OPT_madtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(24017.51974043522);
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getGlobalStatistics())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 18, 74, 62, 0]");

        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1, 32017.634697867114, 2691.8294718872035, 0.0, 54.50775510204082, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 5, 25479.658218801425, 2150.2048167644975, 0.0, 7.645714285714286, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 10, 25622.242881529393, 2382.4290136889053, 0.0, 9.076734693877551, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 11, 29082.42595608354, 1687.5308863260575, 0.495, 20.8, 22395.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 15, 25738.05130657925, 2088.2409718831414, 0.495, 11.977142857142857, 22395.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 20, 25010.78950211802, 2120.9760503814955, 0.5, 7.951836734693877, 22007.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 21, 29777.542027556723, 1920.5757861619577, 0.485, 17.477551020408164, 23017.915321501518);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 25, 25959.27580557025, 2012.3089143695684, 0.485, 7.037551020408163, 23017.915321501518);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 30, 26436.90006669933, 2099.3024125683064, 0.485, 8.636734693877552, 23017.915321501518);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 31, 30892.13081682814, 2065.0813123960374, 0.53, 15.603265306122449, 23255.663681660764);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 35, 26311.10859168391, 2660.819689352134, 0.52, 8.938775510204081, 23142.94819437422);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 40, 25604.966680107605, 2588.8402005935495, 0.52, 5.219591836734694, 23142.94819437422);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 41, 26013.295659062773, 1910.2931077093533, 0.5, 7.230204081632653, 23117.6723144125);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 45, 25437.128449733485, 2347.332958311253, 0.5, 7.1657142857142855, 23117.6723144125);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 50, 25490.327956365432, 2415.7885570020517, 0.5, 5.948571428571428, 23117.6723144125);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 51, 28014.76444696523, 1602.8332786696828, 0.495, 11.34530612244898, 23106.011026159525);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 55, 24412.827642685865, 1784.9909790668833, 0.63, 4.748571428571428, 22974.011026159525);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 60, 24922.066079353845, 2449.746625385325, 0.63, 4.649795918367347, 22974.011026159525);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 61, 30137.18785456726, 1942.6846527539012, 0.495, 14.969795918367346, 23230.36701705806);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 65, 25301.55035697165, 1973.5439287741344, 0.495, 7.646530612244898, 23230.36701705806);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 70, 26175.158719763494, 2335.6266722034625, 0.495, 8.617142857142857, 23230.36701705806);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 71, 27844.954668624097, 2228.907687146006, 0.495, 13.649795918367348, 23012.8826615849);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 75, 25194.474427953068, 2376.9927058833373, 0.495, 6.466938775510204, 23012.8826615849);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 80, 24685.02487420944, 2007.1917171655803, 0.495, 5.227755102040816, 23012.8826615849);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 81, 26982.7618294011, 1639.8914355284187, 0.495, 9.898775510204082, 22815.780667109306);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 85, 25468.67793501047, 1982.7524455856035, 0.495, 6.9648979591836735, 22815.780667109306);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 90, 25959.146963981617, 2504.9932664718467, 0.5, 7.650612244897959, 22796.780667109306);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 91, 28586.388078992335, 1265.84480673449, 0.495, 8.797551020408163, 23056.86275862871);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 95, 24960.638904156633, 2375.3215385806375, 0.495, 4.2726530612244895, 23056.86275862871);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 100, 24529.764915607222, 2040.1123772406559, 0.5, 2.9224489795918367, 23056.86275862871);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 101, 28742.803593812198, 3003.3522124170595, 0.495, 8.879183673469388, 22726.89778352995);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 105, 24048.336691427812, 2051.04982093551, 0.495, 5.014693877551021, 22726.89778352995);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 110, 23950.027736309785, 1800.202207928691, 0.495, 3.2718367346938777, 22726.89778352995);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 111, 24584.9029925917, 2168.308239238686, 0.5, 5.241632653061225, 22533.727723341995);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 115, 24007.552095483243, 2090.739823887006, 0.5, 3.3714285714285714, 22533.727723341995);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 120, 24401.027104518187, 2040.1495327662037, 0.5, 5.0620408163265305, 22533.727723341995);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 121, 27701.37962866112, 2401.1360594948424, 0.49, 10.688979591836734, 22720.0);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 125, 25104.552429832736, 2490.0804187381773, 0.49, 4.646530612244898, 22720.0);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 130, 25474.021940715564, 2804.587778054916, 0.49, 5.364081632653061, 22720.0);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 131, 28809.032460570303, 2136.2492761868793, 0.5, 10.56408163265306, 22558.662823344315);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 135, 25016.019526706492, 2241.525739210512, 0.5, 5.780408163265306, 22558.662823344315);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 140, 24786.87070842057, 1844.7726993042518, 0.5, 5.286530612244898, 22558.662823344315);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 141, 26029.996562928012, 2744.5116940368816, 0.5, 8.288163265306123, 22134.290174499565);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 145, 24180.598629599182, 2729.375898794405, 0.5, 4.368979591836735, 22134.290174499565);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 150, 23601.094341886648, 2280.4066078679984, 0.5, 3.063673469387755, 22134.290174499565);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 151, 25444.00584623994, 2466.906839819072, 0.52, 8.142857142857142, 22245.838765495864);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 155, 24898.44169290657, 2097.457889426509, 0.53, 5.7575510204081635, 22243.838765495864);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 160, 24457.011282253392, 2359.996784840714, 0.53, 5.415510204081633, 22243.838765495864);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 161, 26869.23547260664, 1718.9392384763235, 0.495, 14.658775510204082, 22865.68308266974);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 165, 25261.378714235336, 1436.7152848600563, 0.495, 5.176326530612245, 22865.68308266974);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 170, 26835.6333668997, 2197.307440166472, 0.495, 10.811428571428571, 22865.68308266974);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 171, 27226.649947832542, 2358.292111527294, 0.52, 12.817142857142857, 22796.532299752154);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 175, 25477.949867581887, 1717.097350899511, 0.52, 8.53061224489796, 22796.532299752154);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 180, 25044.395924330933, 1866.7787750115558, 0.52, 6.355918367346939, 22796.532299752154);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 181, 28505.93500169373, 3059.760640882363, 0.495, 11.960816326530612, 23364.989398851445);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 185, 27610.5976707547, 2906.8796973680146, 0.495, 10.892244897959184, 23364.989398851445);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 190, 26235.1763635919, 2150.1089767941157, 0.495, 8.586122448979593, 23364.989398851445);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 191, 29234.29234546515, 3074.8817750604726, 0.495, 14.429387755102042, 22473.524949507795);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 195, 25550.814794180245, 2304.028109703506, 0.495, 10.237551020408164, 22473.524949507795);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 200, 25017.358929992082, 1999.8203424817777, 0.5, 7.091428571428572, 22473.524949507795);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 201, 26431.26015926646, 2229.666777096803, 0.5, 8.605714285714285, 22826.04842355142);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 205, 25593.41834017837, 1918.033632221348, 0.5, 7.518367346938776, 22826.04842355142);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 210, 25680.821705744413, 2309.4892370533935, 0.5, 7.575510204081633, 22628.0);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 211, 25743.950706556854, 1916.611114859986, 0.525, 9.844081632653062, 22502.380055592264);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 215, 25234.4124070096, 1819.1895785806773, 0.525, 6.253877551020408, 22502.380055592264);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 220, 24680.34625860909, 1694.604797049097, 0.525, 6.433469387755102, 22502.380055592264);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 221, 29130.053317515136, 1408.2836018327548, 0.495, 12.724897959183673, 22896.0);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 225, 27391.69753214191, 2324.568849448495, 0.495, 10.164897959183673, 22896.0);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 230, 26931.641250053668, 2656.0346791847974, 0.495, 8.882448979591837, 22896.0);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 231, 27380.55928090839, 2497.4559151732565, 0.5, 8.664489795918367, 23156.68686299066);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 235, 27537.8853635402, 2659.0714122866243, 0.5, 9.397551020408164, 23156.68686299066);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 240, 28098.74392193089, 1998.180571576475, 0.5, 12.688163265306123, 23156.68686299066);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 241, 29274.06402512552, 2891.8373590765314, 0.55, 17.40734693877551, 23573.972732143382);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 245, 27595.796569177255, 4024.459284166916, 0.55, 4.564897959183673, 23573.972732143382);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 250, 27360.880447130025, 3514.2954959184117, 0.55, 8.021224489795918, 23573.972732143382);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 251, 31210.12473377813, 2882.6160037576115, 0.535, 12.405714285714286, 24575.0);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 255, 26173.007775752943, 2241.347510396026, 0.535, 5.256326530612245, 24575.0);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 260, 26292.272612252702, 2271.3871377608953, 0.535, 4.466122448979592, 24575.0);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 261, 25996.828814342553, 1818.1933636988479, 0.495, 6.775510204081633, 22831.71683247336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 265, 23868.498998646308, 992.6281350415462, 0.495, 2.9951020408163265, 22831.71683247336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 270, 23994.359079340018, 1495.2391725107634, 0.495, 2.9640816326530612, 22831.71683247336);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 271, 25486.963724912024, 1421.3672080802282, 0.495, 7.7640816326530615, 22398.003763183515);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 275, 23656.532763804174, 1340.2389996360123, 0.495, 4.808163265306122, 22398.003763183515);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 280, 23634.89489875456, 1589.1425434085747, 0.495, 5.063673469387755, 22398.003763183515);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 281, 26227.51578950392, 1819.1198859276346, 0.495, 8.124897959183674, 22664.93554247957);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 285, 24320.069037278023, 967.0059792864575, 0.495, 4.154285714285714, 22664.93554247957);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 290, 24345.86434734884, 1205.3834594651546, 0.495, 3.488979591836735, 22664.93554247957);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 291, 28246.954224117555, 1695.5935380339931, 0.495, 8.160816326530613, 23010.521338746294);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 295, 23691.228877757487, 1146.6807341306335, 0.495, 2.4204081632653063, 23010.521338746294);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 300, 23876.93497009017, 1414.644223371239, 0.515, 2.437551020408163, 23010.521338746294);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 301, 26278.987431780453, 1072.7914871024986, 0.51, 6.015510204081632, 23453.15422256478);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 305, 24371.613540966307, 1531.1571641111523, 0.51, 3.5248979591836735, 23453.15422256478);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 310, 24751.52919828059, 1919.4495650964807, 0.51, 4.8310204081632655, 23453.15422256478);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 311, 25138.36389996422, 2106.890305308583, 0.5, 5.985306122448979, 22457.19836854448);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 315, 24893.416750563265, 2115.372251280607, 0.5, 5.084081632653061, 22457.19836854448);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 320, 24466.29028363715, 1849.9663416159053, 0.5, 4.462040816326531, 22457.19836854448);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 321, 25083.7500375521, 1256.4809356774017, 0.495, 4.220408163265306, 22216.99862670662);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 325, 23871.466301336848, 1630.0874497273871, 0.495, 2.709387755102041, 22216.99862670662);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 330, 24183.81513664205, 1856.9209465446534, 0.495, 2.84734693877551, 22216.99862670662);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 331, 25811.780983226043, 1869.0547843080383, 0.5, 7.343673469387755, 22245.0);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 335, 23869.675693671248, 1513.8685516286807, 0.5, 3.2946938775510204, 22245.0);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 340, 23640.433239917806, 1264.0170822455148, 0.5, 3.097142857142857, 22245.0);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 341, 28537.57622703471, 2048.905056309177, 0.5, 12.716734693877552, 22677.775906784507);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 345, 24581.675906082542, 1136.459910180485, 0.5, 3.8971428571428572, 22677.775906784507);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 350, 24682.64920190223, 1790.6371220213457, 0.5, 2.6644897959183673, 22677.775906784507);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 351, 26619.097147628578, 1624.4909941827125, 0.495, 6.219591836734694, 23294.059153345865);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 355, 23835.13233165897, 1774.8294205547295, 0.6, 4.013877551020408, 22013.059153345865);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 360, 23899.531123903707, 2096.954276806905, 0.6, 3.7012244897959183, 22013.059153345865);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 361, 25962.755147985994, 2490.7212959020026, 0.5, 6.297142857142857, 22414.505085725104);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 365, 24471.66337845476, 1748.299027077803, 0.5, 4.388571428571429, 22414.505085725104);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 370, 24264.804728848525, 1267.4052033549988, 0.5, 3.269387755102041, 22414.505085725104);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 371, 24879.786448192302, 1230.7111326796748, 0.5, 4.612244897959184, 22322.63328426857);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 375, 23778.990785341965, 1809.487242881362, 0.5, 3.0016326530612245, 22322.63328426857);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 380, 23763.529655280196, 1715.8340866703643, 0.5, 2.740408163265306, 22322.63328426857);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 381, 23113.155387084946, 1214.998610948986, 0.5, 2.990204081632653, 22270.66177977007);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 385, 23074.142410652534, 1366.2786791584151, 0.5, 2.063673469387755, 22270.66177977007);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 390, 22922.976954079477, 1187.2603665209679, 0.5, 2.0873469387755104, 22270.66177977007);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 391, 25723.939836364283, 1703.559174241106, 0.5, 6.291428571428572, 22692.956649868924);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 395, 24537.10527262002, 1901.895732228846, 0.5, 3.4244897959183676, 22692.956649868924);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 400, 24975.20719917609, 1824.0675227447803, 0.5, 3.923265306122449, 22692.956649868924);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 401, 26462.57929431921, 2184.2210533594375, 0.5, 6.753469387755102, 22576.09594634799);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 405, 24389.146571848236, 935.9810015111079, 0.5, 3.6783673469387757, 22576.09594634799);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 410, 24859.265569259576, 1366.2690147667554, 0.5, 4.286530612244898, 22576.09594634799);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 411, 26416.327098739494, 860.4825193893502, 0.5, 4.857142857142857, 22862.33821940617);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 415, 23274.568896771274, 769.7931604039494, 0.5, 1.4285714285714286, 22862.33821940617);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 420, 23367.743022621115, 819.444230304442, 0.5, 1.5477551020408162, 22862.33821940617);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 421, 25338.929080507238, 1033.629537991349, 0.495, 3.5853061224489795, 22428.461322611864);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 425, 24745.814447078686, 2022.1643293117422, 0.525, 4.674285714285714, 22374.461322611864);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 430, 23320.965558037955, 1328.4998207735032, 0.525, 1.9828571428571429, 22374.461322611864);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 431, 24217.985432414225, 1500.8196686644408, 0.5, 4.070204081632653, 22389.461322611864);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 435, 23111.387150939077, 1163.4353310298934, 0.5, 2.0963265306122447, 22389.461322611864);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 440, 23110.138859157705, 1152.7603086379406, 0.5, 1.889795918367347, 22389.461322611864);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 441, 25840.770070204922, 1341.5842933404144, 0.5, 6.569795918367347, 22609.05997899796);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 445, 24028.02651005579, 1211.158747670189, 0.5, 3.1453061224489796, 22609.05997899796);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 450, 24280.86040830933, 1446.1710563607812, 0.5, 4.96, 22609.05997899796);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 451, 25712.504852368635, 1377.7606987898891, 0.5, 7.8644897959183675, 22275.507556578712);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 455, 24126.213628910336, 1691.1905461557237, 0.5, 3.373061224489796, 22275.507556578712);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 460, 24432.797134579912, 1571.555761851205, 0.5, 3.4604081632653063, 22275.507556578712);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 461, 25654.101018388756, 1574.780146516091, 0.5, 3.473469387755102, 22161.232031108408);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 465, 23328.153448712368, 1250.9632832689936, 0.5, 3.1787755102040816, 22161.232031108408);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 470, 23103.254154952243, 1340.8955142483594, 0.5, 2.7616326530612243, 22161.232031108408);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 471, 26199.56908961843, 1083.608760244492, 0.495, 5.069387755102041, 22624.06499573711);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 475, 24743.73779123394, 754.3666218610034, 0.495, 2.7934693877551022, 22624.06499573711);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 480, 23698.03279039931, 1037.9225689468767, 0.495, 2.286530612244898, 22624.06499573711);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 481, 26464.4890012165, 694.995596389571, 0.5, 2.7444897959183674, 22536.643381603666);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 485, 24201.426926603694, 1580.4243469456962, 0.5, 3.4946938775510206, 22536.643381603666);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 490, 24132.103020032057, 1514.7908352620225, 0.5, 3.2, 22536.643381603666);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 491, 25229.404268915743, 1642.3677617819174, 0.5, 4.333877551020408, 22676.126943305757);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 495, 25210.833589664144, 1204.1276071193479, 0.5, 3.150204081632653, 22676.126943305757);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 500, 23807.42545416898, 1231.0267793069613, 0.5, 2.837551020408163, 22676.126943305757);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 501, 25554.754787124315, 2216.67796043705, 0.495, 5.502857142857143, 22829.74340010683);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 505, 24952.687687043144, 961.4819439054037, 0.495, 3.543673469387755, 22829.74340010683);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 510, 25076.74756892127, 1113.3495134176958, 0.495, 3.4359183673469387, 22829.74340010683);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 511, 26309.685887813135, 934.0713266287494, 0.5, 7.078367346938776, 23060.02880470652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 515, 24071.992192342866, 680.7178011710633, 0.5, 2.817142857142857, 23060.02880470652);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 520, 23537.695172203268, 1116.6684717582555, 0.5, 2.1722448979591835, 22811.596269097252);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 521, 24007.83881074441, 1024.1539930013282, 0.5, 4.622857142857143, 22750.04947606616);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 525, 24804.03713910052, 432.93936589939415, 0.5, 1.593469387755102, 22750.04947606616);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 530, 24862.76464188502, 820.8838595188514, 0.5, 4.0253061224489795, 22750.04947606616);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 531, 25722.856543028134, 971.5290884357275, 0.52, 6.252244897959184, 23067.904800546217);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 535, 24325.178798864807, 1047.2012883702696, 0.51, 3.5763265306122447, 22710.904800546217);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 540, 23951.12986628931, 1235.75280620247, 0.51, 3.309387755102041, 22710.904800546217);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 541, 24452.765163728516, 1701.3081587600518, 0.495, 3.7355102040816326, 22923.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 545, 23896.577322087855, 1460.1712916150616, 0.495, 3.253061224489796, 22923.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 550, 23485.815551449163, 1219.6402941739248, 0.495, 2.2767346938775512, 22923.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 551, 24497.831261380405, 1063.8556718339598, 0.5, 5.155102040816327, 22895.044273359177);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 555, 23809.670275684824, 1101.7795635105938, 0.5, 2.04, 22895.044273359177);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 560, 23685.124263253176, 1238.9802774065486, 0.5, 1.9616326530612245, 22895.044273359177);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 561, 24872.55776372482, 1161.21828511011, 0.5, 6.51265306122449, 22956.476934354123);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 565, 24336.935597647065, 876.2057668787445, 0.5, 3.6751020408163266, 22956.476934354123);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 570, 24884.027182004964, 1337.3863735169352, 0.5, 3.2824489795918366, 22956.476934354123);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 571, 25943.46422137014, 1209.8609365711734, 0.495, 6.36734693877551, 22762.17899396331);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 575, 23467.271086008954, 946.0239789307033, 0.495, 2.6048979591836736, 22762.17899396331);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 580, 23629.925624701882, 1024.4738257140957, 0.495, 2.4261224489795916, 22762.17899396331);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 581, 25148.562731254493, 655.3592998857132, 0.495, 7.3061224489795915, 22733.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 585, 23787.75580161978, 1015.9121827509065, 0.495, 3.8791836734693876, 22733.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 590, 23410.253210367042, 858.578897128822, 0.495, 3.1110204081632653, 22733.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 591, 24837.70201673204, 1321.1588218150614, 0.5, 4.629387755102041, 22683.168973679152);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 595, 22745.070214472722, 688.9812282534683, 0.545, 1.4506122448979593, 22504.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 600, 22695.371377238407, 612.1946550203045, 0.5, 1.0253061224489797, 22504.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 601, 22770.433074987122, 793.1650119664374, 0.5, 0.9224489795918367, 22375.456866394205);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 605, 24122.12862106619, 1933.1893503878891, 0.5, 2.3983673469387754, 22375.456866394205);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 610, 24381.601038251967, 1872.5645211815845, 0.5, 2.5191836734693878, 22375.456866394205);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 611, 24449.873094244205, 1296.6953238758483, 0.5, 2.902857142857143, 22635.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 615, 22789.43753083712, 589.7360069934639, 0.5, 0.6342857142857142, 22635.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 620, 22958.711254595568, 896.0735109072908, 0.5, 1.1322448979591837, 22635.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 621, 24893.720161548546, 617.0198089277754, 0.495, 5.809795918367347, 23130.745687849223);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 625, 24791.462428238876, 973.6237111487709, 0.54, 6.133061224489796, 22876.570197035482);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 630, 24401.924807285006, 1049.7995505895037, 0.54, 4.457142857142857, 22876.570197035482);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 631, 25662.887574743065, 1823.506653938413, 0.5, 5.909387755102041, 23043.942250508713);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 635, 24379.446176943435, 1025.9205784003016, 0.5, 2.3787755102040817, 23043.942250508713);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 640, 24426.548680500895, 1300.3909179707557, 0.5, 2.777142857142857, 23043.942250508713);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 641, 24197.25043349934, 1030.3026060799816, 0.5, 3.3893877551020406, 22501.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 645, 23560.830530892163, 1096.7275337408585, 0.5, 1.8783673469387756, 22501.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 650, 23806.060255550008, 1152.8285356014046, 0.5, 2.3526530612244896, 22501.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 651, 24604.175812371923, 942.7245684998303, 0.5, 4.528163265306122, 22537.46311587864);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 655, 23734.873505187785, 1073.0553100380507, 0.5, 2.5951020408163266, 22537.46311587864);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 660, 23579.86406417891, 1086.5015965867651, 0.5, 1.9216326530612244, 22537.46311587864);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 661, 23174.27839461959, 876.5932141150305, 0.5, 2.4081632653061225, 22641.08088832354);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 665, 23145.863653837616, 884.9290206396993, 0.5, 2.7648979591836733, 22641.08088832354);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 670, 22936.299441156792, 725.9378090235309, 0.5, 1.9306122448979592, 22641.08088832354);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 671, 25013.420308896126, 867.3287910764006, 0.5, 4.688979591836735, 23045.557730365486);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 675, 24125.707622549395, 1106.8111286461549, 0.5, 2.434285714285714, 23045.557730365486);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 680, 24492.12450735377, 1088.0485333607812, 0.5, 3.27265306122449, 23045.557730365486);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 681, 25460.95578134557, 1806.7317262293911, 0.5, 4.016326530612245, 22802.606418445437);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 685, 23765.328778645693, 1305.242729335276, 0.5, 2.6530612244897958, 22802.606418445437);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 690, 23641.785632026204, 1220.5258115789068, 0.5, 2.4089795918367347, 22802.606418445437);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 691, 23419.350970674324, 807.8033540330803, 0.5, 1.606530612244898, 22906.207419251394);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 695, 23758.172022044073, 1044.840829983568, 0.5, 2.8448979591836734, 22906.207419251394);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 700, 23502.484926288467, 871.0612660266733, 0.5, 2.176326530612245, 22906.207419251394);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 701, 24785.94064424718, 1192.2491760743487, 0.5, 4.858775510204081, 22694.921905997053);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 705, 23337.983418707718, 1078.4316695847233, 0.52, 2.2677551020408164, 22590.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 710, 23452.070530892164, 1102.7110776700874, 0.52, 2.573061224489796, 22590.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 711, 24720.439204998467, 1040.4753265655331, 0.5, 5.986122448979592, 22743.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 715, 24364.062603501057, 589.0687559646075, 0.5, 3.9820408163265304, 22743.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 720, 23443.84359288552, 857.8008547956457, 0.5, 1.853061224489796, 22743.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 721, 25837.491121229734, 762.9570298490667, 0.505, 5.537142857142857, 23240.14528300261);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 725, 24448.950373850636, 1034.125730568374, 0.505, 1.8995918367346938, 23240.14528300261);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 730, 24361.97354982527, 1054.9747631710197, 0.505, 2.210612244897959, 23240.14528300261);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 731, 25023.431279625045, 1089.5637668046477, 0.5, 4.015510204081632, 22982.72269880765);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 735, 23833.94269880764, 1053.5300096459, 0.5, 1.5371428571428571, 22982.72269880765);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 740, 23978.80660015319, 1067.3171910125989, 0.5, 1.8922448979591837, 22982.72269880765);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 741, 24219.17517629155, 1060.433539315598, 0.5, 2.816326530612245, 22928.25859006794);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 745, 23823.676853160097, 1032.7882646782668, 0.5, 2.216326530612245, 22928.25859006794);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 750, 24036.571814343613, 1049.091459335351, 0.5, 2.483265306122449, 22928.25859006794);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 751, 24182.50942602335, 1039.9246758910979, 0.5, 2.580408163265306, 23018.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 755, 24180.693329064045, 965.1525808128821, 0.5, 3.3648979591836734, 23018.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 760, 24349.975033545583, 997.692377686824, 0.5, 3.427755102040816, 23018.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 761, 25194.246239174707, 534.9880092663738, 0.495, 5.8979591836734695, 23343.034908087982);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 765, 24617.620230338773, 1180.7156376578012, 0.495, 4.267755102040816, 23343.034908087982);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 770, 24755.12969681335, 1224.0163557894773, 0.495, 4.430204081632653, 23343.034908087982);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 771, 25334.33805097353, 587.0686159005367, 0.5, 4.918367346938775, 22784.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 775, 24089.750530892157, 1035.4066648581386, 0.5, 1.689795918367347, 22784.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 780, 23914.83053089216, 1056.992700532786, 0.5, 1.7420408163265306, 22784.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 781, 24904.54550861743, 1055.6949124717312, 0.5, 2.057142857142857, 23008.124512896225);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 785, 23939.120508520908, 354.45058394187936, 0.5, 1.229387755102041, 23008.124512896225);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 790, 23864.907396446968, 221.62361546038278, 0.5, 0.4710204081632653, 23008.124512896225);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 791, 23516.150159917524, 215.70037895814684, 0.5, 0.47836734693877553, 22903.69698222364);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 795, 23037.309524170378, 469.7878380095954, 0.5, 0.7044897959183674, 22903.69698222364);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 800, 23219.814190744833, 784.1640341831577, 0.5, 0.9159183673469388, 22903.69698222364);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 801, 23737.77961740482, 750.8733441341243, 0.5, 3.376326530612245, 22943.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 805, 23359.397714806233, 897.692030505838, 0.5, 1.1461224489795918, 22943.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 810, 23082.032870566192, 521.9542555050728, 0.5, 0.5893877551020408, 22943.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 811, 23605.396108403707, 658.9660839467516, 0.5, 2.16, 23137.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 815, 23449.72758016582, 740.7577020628297, 0.53, 1.4416326530612245, 23067.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 820, 23244.342503651533, 523.6201641838437, 0.53, 0.723265306122449, 23067.510530892174);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 821, 24148.7444154181, 413.1580179590684, 0.495, 4.933877551020408, 23260.06440078399);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 825, 23679.584914367548, 777.2562720392411, 0.495, 1.5697959183673469, 23260.06440078399);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 830, 23474.224400783984, 651.0424093525016, 0.495, 0.6342857142857142, 23260.06440078399);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 831, 25164.119151053565, 1538.4117275860692, 0.5, 4.462857142857143, 23282.01050687468);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 835, 23375.200169045864, 546.1009658212561, 0.5, 0.27918367346938777, 23282.01050687468);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 840, 23353.37050687467, 228.0441024299056, 0.5, 0.7355102040816327, 23282.01050687468);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 841, 23379.52911522906, 34.22396820942892, 0.5, 0.12, 23374.689115229055);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 845, 23436.077174182767, 242.62265916429337, 0.5, 0.5502040816326531, 23374.689115229055);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 850, 23414.130746349856, 173.12988583595583, 0.5, 0.39346938775510204, 23374.689115229055);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 851, 24066.676224330888, 257.47798113596434, 0.5, 1.766530612244898, 23526.763439734204);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 855, 23583.822673131177, 287.43997615015223, 0.5, 0.356734693877551, 23526.763439734204);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 860, 23583.483056432702, 238.66919224899078, 0.5, 0.39755102040816326, 23526.763439734204);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 861, 23999.670299745532, 246.9032421487485, 0.5, 2.333061224489796, 23564.011668443378);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 865, 23878.587853607154, 523.1039804338812, 0.505, 2.0326530612244897, 23230.328101334442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 870, 23731.39417903629, 573.9060784033328, 0.505, 1.8024489795918368, 23230.328101334442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 871, 24114.188520681462, 415.5795352441163, 0.5, 1.7044897959183674, 23421.464061634528);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 875, 23517.610380003633, 152.8122685386128, 0.5, 0.433469387755102, 23421.464061634528);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 880, 23484.559542410178, 0.6066070756554748, 0.5, 0.12, 23421.464061634528);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 881, 23380.25845450442, 188.2398817298059, 0.5, 0.31755102040816324, 23233.972275723747);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 885, 23254.6914149128, 146.50643820941235, 0.5, 0.12, 23233.972275723747);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 890, 23233.972275723725, 2.204948129406426E-11, 0.5, 0.0, 23233.972275723747);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 891, 23393.051066812648, 116.96723433418919, 0.5, 0.2, 23214.78549455588);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 895, 23258.274179703967, 213.33504900721732, 0.5, 0.35836734693877553, 23214.78549455588);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 900, 23228.62549455587, 97.86357851621818, 0.5, 0.16, 23214.78549455588);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 901, 24004.682295491373, 146.4649283147508, 0.495, 3.4057142857142857, 23753.032910240934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 905, 23935.40392970985, 80.52591575716616, 0.495, 1.250612244897959, 23753.032910240934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 910, 23944.408011420783, 25.44735560259431, 0.495, 0.7248979591836735, 23753.032910240934);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 911, 24138.161407148727, 306.16377693120495, 0.515, 2.060408163265306, 23653.82882469474);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 915, 23704.963458977076, 313.82011282623995, 0.515, 0.39591836734693875, 23653.82882469474);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 920, 23733.558093259413, 397.0418170293941, 0.515, 0.19755102040816327, 23653.82882469474);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 921, 24404.112483227178, 377.8272578244324, 0.495, 0.9689795918367347, 23859.745601326576);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 925, 23862.109490923955, 16.715223642756857, 0.495, 0.12, 23859.745601326576);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 930, 23865.294033607217, 39.233340905891076, 0.495, 0.16, 23859.745601326576);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 931, 24195.425533540834, 159.34335539638326, 0.5, 0.5077551020408163, 24155.104617378274);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 935, 24155.10461737829, 1.469965419604284E-11, 0.5, 0.0, 24155.104617378274);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 940, 23957.98821860507, 101.28316968640732, 0.5, 0.529795918367347, 23927.252530403195);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 941, 24936.87665168055, 45.311430775622085, 0.505, 0.23755102040816325, 24676.99680617469);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 945, 24509.036893259206, 204.49144567061893, 0.5, 1.649795918367347, 24201.53406550305);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 950, 24122.2525304032, 3.67491354901071E-12, 0.5, 0.0, 24122.252530403195);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 951, 24212.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24212.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 955, 24212.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24212.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 960, 24017.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24017.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 961, 24021.419740435216, 27.577164466275367, 0.5, 0.12, 24017.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 965, 24017.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24017.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 970, 24017.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24017.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 971, 24017.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24017.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 975, 24017.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24017.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 980, 24017.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24017.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 981, 24017.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24017.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 985, 24017.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24017.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 990, 24017.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24017.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 991, 24017.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24017.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 995, 24017.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24017.51974043522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1000, 24017.519740435215, 3.67491354901071E-12, 0.5, 0.0, 24017.51974043522);

        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 18, 96, 74, 91, 7, 41, 88, 30, 79, 55, 3, 64, 25, 65, 69, 21, 93, 15, 87, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 91, 7, 41, 88, 30, 79, 55, 96, 74, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[0, 46, 92, 27, 66, 57, 60, 86, 50, 24, 80, 68, 63, 39, 53, 1, 43, 72, 67, 38, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 29, 4, 36, 32, 75, 12, 94, 81, 49, 84, 33, 82, 54, 6, 56, 8, 19, 11, 26, 85, 34, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 93, 21, 15, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 86, 50, 24, 80, 68, 63, 39, 53, 1, 49, 43, 72, 67, 84, 95, 77, 51, 4, 36, 12, 32, 75, 94, 81, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 25, 65, 64, 3, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 55, 96, 3, 64, 65, 25, 30, 79, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 91, 62, 5, 48, 89, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 29, 4, 36, 12, 32, 75, 94, 81, 95, 77, 51, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 3, 64, 65, 25, 96, 74, 55, 79, 30, 88, 41, 7, 91, 62, 89, 48, 5, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 53, 39, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 75, 32, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 87, 15, 21, 69, 93, 52, 18, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 74, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 53, 39, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 75, 32, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 72, 49, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 81, 94, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 28, 45, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 28, 13, 47, 99, 70, 40, 2, 42, 45, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 88, 30, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 12, 32, 75, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 29, 95, 4, 36, 32, 75, 12, 94, 81, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 78, 17, 23, 37, 98, 35, 9, 89, 62, 5, 48, 74, 18, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 88, 30, 79, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 29, 38, 4, 36, 32, 12, 75, 94, 81, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 62, 5, 48, 74, 18, 78, 17, 23, 37, 98, 35, 83, 9, 89, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 70, 40, 99, 13, 2, 42, 28, 45, 33, 82, 54, 11, 6, 8, 56, 19, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 14, 16, 58, 73, 20, 71, 62, 5, 48, 74, 18, 78, 17, 23, 37, 98, 35, 83, 9, 89, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 42, 2, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 78, 17, 23, 37, 98, 35, 83, 89, 62, 5, 48, 74, 18, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 44, 97, 90, 31, 10, 14, 16, 58, 73, 20, 71, 9, 78, 17, 23, 37, 98, 35, 83, 89, 62, 5, 48, 74, 18, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 78, 17, 23, 37, 98, 35, 83, 89, 74, 18, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 28, 45, 42, 70, 40, 99, 47, 13, 2, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 23, 37, 98, 35, 83, 9, 89, 48, 5, 62, 74, 18, 52, 78, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 28, 42, 40, 70, 99, 47, 13, 2, 45, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 23, 37, 98, 35, 83, 9, 89, 74, 18, 52, 78, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 45, 42, 2, 40, 70, 99, 47, 13, 28, 33, 82, 54, 11, 6, 8, 56, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 78, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 91, 7, 41, 88, 30, 79, 55, 74, 18, 52, 17, 23, 98, 35, 37, 83, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 38, 28, 42, 40, 70, 99, 47, 13, 2, 45, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 59, 61, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 62, 91, 7, 88, 41, 30, 79, 55, 74, 52, 87, 15, 93, 21, 69, 64, 65, 25, 3, 96, 18, 78, 17, 23, 37, 98, 35, 83, 9, 89, 5, 48, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 13, 99, 70, 40, 42, 2, 28, 45, 33, 54, 82, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 37, 35, 98, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 96, 91, 7, 41, 88, 30, 79, 55, 74, 18, 89, 5, 48, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 89, 48, 5, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 25, 64, 65, 69, 21, 93, 15, 87, 52, 78, 17, 23, 37, 98, 35, 83, 9, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 11, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 89, 48, 5, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 25, 65, 69, 21, 93, 87, 15, 52, 78, 17, 23, 37, 98, 35, 83, 9, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 38, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 89, 48, 5, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 25, 65, 69, 21, 93, 87, 15, 52, 78, 17, 23, 37, 98, 35, 83, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 38, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 97, 22, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 64, 65, 3, 96, 91, 7, 88, 41, 30, 79, 55, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 91, 7, 41, 88, 30, 79, 55, 74, 18, 52, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 28, 45, 33, 82, 54, 6, 8, 56, 11, 19, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 11, 26, 19, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 14, 16, 10, 58, 73, 20, 71, 62, 5, 48, 89, 9, 83, 98, 35, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 89, 5, 48, 91, 7, 88, 41, 30, 79, 55, 96, 74, 18, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 78, 17, 23, 35, 98, 37, 83, 9, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 28, 45, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 48, 89, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 52, 78, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 64, 65, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 93, 21, 15, 69, 65, 64, 25, 3, 18, 89, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 18, 89, 48, 5, 62, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 56, 8, 6, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 34, 85, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 65, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 11, 19, 26, 85, 34, 61, 59, 76, 97, 90, 22, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 14, 16, 10, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 85, 34, 61, 59, 76, 22, 97, 44, 90, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 64, 25, 65, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 85, 34, 61, 59, 76, 22, 97, 44, 90, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 48, 89, 18, 74, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 44, 90, 97, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 89, 74, 18, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 55, 79, 30, 88, 41, 7, 91, 74, 96, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 74, 91, 7, 88, 41, 30, 79, 55, 96, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 52, 78, 87, 93, 21, 15, 69, 65, 64, 25, 3, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 5, 48, 89, 62, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 48, 89, 18, 74, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 65, 64, 3, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 25, 64, 65, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 96, 55, 79, 30, 41, 88, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 17, 23, 37, 98, 35, 83, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 91, 7, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 65, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 65, 64, 3, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 37, 98, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 96, 74, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 41, 88, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 87, 52, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 93, 21, 69, 18, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 96, 55, 41, 79, 30, 88, 7, 91, 74, 18, 89, 5, 48, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 41, 88, 30, 79, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 88, 30, 41, 7, 91, 62, 5, 48, 89, 18, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 62, 5, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 41, 88, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 48, 89, 18, 74, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 18, 74, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 74, 18, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 74, 18, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 74, 18, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 62, 89, 18, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 18, 74, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 18, 74, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 18, 74, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 18, 74, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 18, 74, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[0, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[0, 46, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 18, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 18, 74, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 18, 74, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[0, 46, 92, 66, 27, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 26, 11, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 23, 98, 37, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 18, 74, 62, 0]");
    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA100_with_seed_1_mag_0_1_freq_100() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_3OPT_MADTSP mmas_3OPT_madtsp = new MMAS_3OPT_MADTSP(graph, 0.8, 1000, 0.1, 100);
        mmas_3OPT_madtsp.setMmasSeed(1);
        mmas_3OPT_madtsp.setDbgpSeed(1);
        mmas_3OPT_madtsp.setStatisticInterval(1);
        mmas_3OPT_madtsp.setShowLog(false);
        mmas_3OPT_madtsp.run();
        assertThat(mmas_3OPT_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(23121.218657899146);
        assertThat(mmas_3OPT_madtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(23121.218657899146);
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getGlobalStatistics())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");

        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1, 32017.634697867114, 2691.8294718872035, 0.0, 54.50775510204082, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 5, 25479.658218801425, 2150.2048167644975, 0.0, 7.645714285714286, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 10, 25622.242881529393, 2382.4290136889053, 0.0, 9.076734693877551, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 11, 25896.545334969658, 2533.650300452743, 0.0, 11.95265306122449, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 15, 25469.053418249878, 2252.188200332902, 0.0, 6.633469387755102, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 20, 25705.991337811807, 2333.084863523, 0.0, 6.917551020408164, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 21, 24948.70506343399, 2059.703210584242, 0.0, 5.746122448979592, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 25, 25631.138427752605, 2184.777178536265, 0.0, 8.511836734693878, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 30, 25135.748370301197, 2098.09309132053, 0.0, 6.539591836734694, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 31, 25085.362165807215, 2548.1986067539306, 0.0, 6.526530612244898, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 35, 26034.875276279698, 1916.95222911935, 0.0, 7.297142857142857, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 40, 25925.229473552594, 2144.7975851805377, 0.0, 6.478367346938776, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 41, 25401.404229199536, 2417.133258982685, 0.0, 6.970612244897959, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 45, 25515.2012031722, 2210.0398768612463, 0.0, 6.150204081632653, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 50, 25571.91250621782, 2108.732593110791, 0.0, 6.039183673469387, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 51, 25462.98493951078, 2634.158950249151, 0.0, 6.4465306122448975, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 55, 25401.479044131087, 2354.948838065112, 0.0, 7.024489795918368, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 60, 25986.474692303058, 2268.386777162022, 0.0, 9.732244897959184, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 61, 25517.992059264976, 2230.2197262243117, 0.0, 6.528163265306122, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 65, 25306.24715969997, 2277.6615282495304, 0.0, 7.116734693877551, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 70, 25197.513155108943, 1958.1098777483114, 0.0, 7.159183673469387, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 71, 25207.382177589097, 2327.625776505774, 0.0, 6.683265306122449, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 75, 25813.14405351202, 2371.529398410467, 0.5, 6.928979591836734, 22538.336392086385);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 80, 25921.39022683231, 2455.8016320337683, 0.5, 6.298775510204082, 22538.336392086385);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 81, 25885.95880770909, 1826.2435975184196, 0.5, 6.395918367346939, 22538.336392086385);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 85, 25382.44060675145, 2213.7562273482035, 0.5, 6.860408163265306, 22538.336392086385);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 90, 25767.457180455996, 2222.3207544896104, 0.5, 6.394285714285714, 22538.336392086385);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 91, 25734.140292413023, 2032.009653885383, 0.5, 5.893877551020408, 22538.336392086385);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 95, 25645.77054161977, 2510.058418650375, 0.5, 5.862857142857143, 22538.336392086385);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 100, 26503.05021092404, 1911.7687307975966, 0.5, 7.315918367346939, 22538.336392086385);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 101, 27717.960581949596, 2049.352079049882, 0.5, 11.696326530612245, 22596.135165323023);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 105, 25584.225667895273, 2371.282472691483, 0.5, 6.443265306122449, 22596.135165323023);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 110, 24859.440975580168, 2212.889013378418, 0.5, 5.116734693877551, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 111, 25387.48301428814, 1853.1927152957735, 0.5, 6.193469387755102, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 115, 24358.749244464474, 1941.6588282771152, 0.5, 5.555102040816327, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 120, 25243.115270360227, 2107.8206956479057, 0.5, 6.426938775510204, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 121, 25184.756099264003, 2285.6277333382277, 0.5, 6.228571428571429, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 125, 25685.339071919665, 1944.4847500991248, 0.5, 7.123265306122449, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 130, 25096.969641960586, 1888.4039823354906, 0.5, 6.231020408163265, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 131, 25603.622710116608, 1803.6554295971418, 0.5, 7.131428571428572, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 135, 25218.30989031417, 2091.405828787264, 0.5, 5.350204081632653, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 140, 25204.65501835894, 2480.28494330459, 0.5, 5.785306122448979, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 141, 25622.742509040036, 2125.732306958032, 0.5, 6.855510204081632, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 145, 25435.740714268526, 1876.4665704136348, 0.5, 6.222857142857142, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 150, 24617.443567233822, 2148.080892165233, 0.5, 5.117551020408163, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 151, 25527.808562773593, 2037.0760119461297, 0.5, 6.347755102040816, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 155, 24878.91234581321, 2031.2058999324372, 0.5, 6.441632653061225, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 160, 24982.01717038787, 2277.0982293673355, 0.5, 4.983673469387755, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 161, 24881.121757596462, 1940.4066344584874, 0.5, 5.9648979591836735, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 165, 24800.153816000457, 2089.8057591578304, 0.5, 5.233469387755102, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 170, 25302.236085313303, 1885.3705973806282, 0.5, 7.174693877551021, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 171, 25479.22565821987, 2140.1939182087067, 0.5, 5.768163265306122, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 175, 24862.508211356122, 1979.7631251472524, 0.5, 6.113469387755102, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 180, 25444.839538914017, 2290.3200227835327, 0.5, 6.18938775510204, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 181, 24617.68169099532, 1969.514368433498, 0.5, 4.761632653061224, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 185, 25074.327971848976, 2399.873002784635, 0.5, 6.182040816326531, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 190, 24866.415453936293, 1902.5217690552463, 0.5, 5.892244897959183, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 191, 25042.29311978674, 1805.6092253825552, 0.5, 6.0351020408163265, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 195, 25038.13723756129, 2187.450635043128, 0.5, 4.8710204081632655, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 200, 25448.466664272637, 2097.794518387592, 0.5, 6.728979591836735, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 201, 30340.67649297834, 2576.548106488814, 0.49, 12.765714285714285, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 205, 26138.709350571513, 2518.7675962562034, 0.49, 6.07265306122449, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 210, 25977.44767002196, 2211.3523907876884, 0.49, 4.9918367346938775, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 211, 26574.05389447389, 2179.3733919466445, 0.49, 5.684897959183673, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 215, 25906.414507736, 1877.1214770001534, 0.49, 4.7273469387755105, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 220, 26322.905272507942, 1405.3593987563816, 0.49, 5.2424489795918365, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 221, 26215.88127599831, 1633.1045327127172, 0.49, 5.475102040816327, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 225, 26532.829427685017, 1958.4315218719166, 0.49, 5.196734693877551, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 230, 24771.605197077955, 1754.8563178402487, 0.49, 3.7942857142857145, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 231, 25515.371723930948, 1747.1526932229397, 0.49, 2.7485714285714287, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 235, 25295.743462351733, 2037.465383913929, 0.49, 3.5983673469387756, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 240, 25598.91609580411, 2055.6203901839463, 0.49, 4.2326530612244895, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 241, 25029.950354532128, 1955.5833651476826, 0.49, 4.956734693877551, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 245, 25875.420364444642, 1995.0929292316744, 0.49, 3.492244897959184, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 250, 25317.06886156396, 1863.7504021582984, 0.49, 3.286530612244898, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 251, 24941.30054665416, 2130.5201797124305, 0.49, 2.639183673469388, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 255, 25428.889384546485, 2106.952618232032, 0.49, 3.28, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 260, 24872.119882036437, 2037.5409818087373, 0.49, 2.969795918367347, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 261, 24954.10740135016, 1844.4205480008843, 0.49, 3.9404081632653063, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 265, 25528.72436833895, 2646.2715066074948, 0.49, 3.6857142857142855, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 270, 24926.128882358837, 2287.681161070469, 0.49, 2.8, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 271, 25142.34349008314, 2101.4910955763685, 0.49, 3.6473469387755104, 22776.28567520234);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 275, 24566.180806499895, 1953.0700521267734, 0.495, 3.8024489795918366, 22561.211219792516);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 280, 24561.617124157547, 2133.419017047826, 0.495, 4.573061224489796, 22561.211219792516);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 281, 25344.51666404733, 2054.630507451571, 0.495, 4.363265306122449, 22561.211219792516);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 285, 24998.005890645596, 1958.2776215176657, 0.495, 4.196734693877551, 22561.211219792516);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 290, 24592.271848664, 2161.105003042748, 0.495, 3.488979591836735, 22561.211219792516);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 291, 23944.568042445397, 2342.7719556231586, 0.495, 2.833469387755102, 22561.211219792516);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 295, 24606.91930514317, 2025.7394573716988, 0.495, 3.376326530612245, 22561.211219792516);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 300, 24967.794930118536, 2037.32753983769, 0.5, 3.8555102040816327, 22561.211219792516);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 301, 27661.620858230126, 1634.1954562241565, 0.49, 11.800816326530612, 23005.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 305, 25135.37047004557, 2096.080212105276, 0.575, 3.142857142857143, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 310, 24040.39039789864, 1598.4164642890394, 0.575, 2.3648979591836734, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 311, 24327.897401406502, 1706.4597411269403, 0.575, 3.005714285714286, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 315, 23968.480618125843, 1554.6228695665286, 0.575, 2.6546938775510203, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 320, 24336.833824007037, 1652.7526103810646, 0.575, 2.946938775510204, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 321, 23910.90935046345, 1687.5165182379103, 0.575, 2.455510204081633, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 325, 23638.713610373456, 1382.4885344189804, 0.575, 1.8310204081632653, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 330, 24045.097948870203, 1686.9173524515372, 0.575, 2.896326530612245, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 331, 23896.088808146753, 1320.0227418937454, 0.575, 2.4612244897959186, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 335, 24098.716094510826, 1993.868080150183, 0.575, 2.366530612244898, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 340, 23761.41480978499, 1307.0607356596183, 0.575, 2.333877551020408, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 341, 24244.50812610833, 1908.2234543165648, 0.575, 3.6212244897959183, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 345, 24209.692695707763, 1635.2760176146705, 0.575, 2.876734693877551, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 350, 24309.37379214392, 1864.2642482399822, 0.575, 2.7820408163265307, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 351, 24188.417081910447, 1886.6598524597919, 0.575, 2.7755102040816326, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 355, 24244.166524133412, 1573.807441513452, 0.575, 3.0906122448979594, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 360, 23989.193271350312, 1416.5522178125116, 0.575, 2.736326530612245, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 361, 24251.237058283696, 1606.7737278590528, 0.575, 3.364081632653061, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 365, 24346.14714686827, 1918.2784228886608, 0.575, 3.1485714285714286, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 370, 24270.08840762455, 2031.824221823566, 0.575, 2.8914285714285715, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 371, 24365.361704407213, 1875.4357696355441, 0.575, 2.969795918367347, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 375, 24219.141410183067, 1731.433440574863, 0.575, 3.0073469387755103, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 380, 23932.37958926703, 1211.3057732662112, 0.575, 3.1844897959183673, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 381, 24257.06996481307, 1984.343120176442, 0.575, 2.8253061224489797, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 385, 23600.428163973094, 1031.1857936477495, 0.575, 1.6963265306122448, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 390, 23932.750783271516, 1958.49422280806, 0.575, 2.204081632653061, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 391, 23625.285712927274, 1009.057549813349, 0.575, 2.0979591836734692, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 395, 23708.074068861482, 1240.7744969703904, 0.575, 2.3020408163265307, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 400, 23476.466370897022, 1035.2164328524743, 0.5, 1.656326530612245, 22882.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 401, 25550.86504756548, 1266.3473616801477, 0.5, 7.342040816326531, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 405, 24153.514993207857, 1336.2722885265443, 0.5, 2.8424489795918366, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 410, 24231.66253576567, 1086.8232530068494, 0.5, 3.0408163265306123, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 411, 24450.229486557204, 1262.8525886739612, 0.5, 3.6351020408163266, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 415, 24526.10447227481, 1503.4594308856076, 0.5, 3.8269387755102042, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 420, 24576.949713235736, 1437.4511792655685, 0.5, 3.7314285714285713, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 421, 24424.530717630772, 1321.361927413134, 0.5, 3.916734693877551, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 425, 24335.925971937297, 1234.6429646680924, 0.5, 3.6130612244897957, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 430, 24076.422164155323, 1119.1263506318298, 0.5, 2.6644897959183673, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 431, 24274.06717276442, 1207.595206378184, 0.5, 3.033469387755102, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 435, 24529.96165168159, 1249.3932270028977, 0.5, 4.0253061224489795, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 440, 24339.60861524986, 1321.700694306149, 0.5, 3.4187755102040818, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 441, 24432.061647671744, 1534.3744994381132, 0.5, 3.6285714285714286, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 445, 24441.187747918288, 1539.6545572165903, 0.5, 3.5983673469387756, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 450, 24400.368760904403, 1260.9034207377506, 0.5, 2.8620408163265307, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 451, 24128.37728365966, 1049.0410972284417, 0.5, 3.3559183673469386, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 455, 24441.159976421775, 1345.0295114869652, 0.5, 3.2677551020408164, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 460, 24431.05096289151, 1476.615995175368, 0.5, 3.6848979591836737, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 461, 24088.669305522246, 929.0856637872845, 0.5, 2.8155102040816327, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 465, 24155.595931851873, 1063.6889604060932, 0.5, 2.526530612244898, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 470, 23734.896548969173, 819.3718525139836, 0.5, 2.3248979591836734, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 471, 24434.55627217579, 1184.6724510241697, 0.5, 3.3102040816326532, 23254.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 475, 23919.657303704087, 1092.4252656212034, 0.5, 2.764081632653061, 23252.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 480, 24321.723091182077, 1211.082287410043, 0.5, 3.750204081632653, 23252.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 481, 24280.876639692695, 1106.443945464563, 0.5, 3.2889795918367346, 23252.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 485, 24496.37420077437, 1215.9567757280724, 0.5, 3.947755102040816, 23252.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 490, 24453.970472638644, 1212.5130426950595, 0.5, 3.476734693877551, 23252.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 491, 24164.300027967136, 1125.0412934603564, 0.5, 2.8955102040816327, 23252.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 495, 24066.18909702942, 1198.2267107544258, 0.5, 2.7616326530612243, 23252.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 500, 24587.600795352482, 1246.5722363362481, 0.5, 3.8848979591836734, 23252.455931851873);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 501, 24908.315636362513, 1072.964460302508, 0.5, 4.681632653061224, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 505, 24212.625818723125, 1005.7939423696704, 0.5, 2.926530612244898, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 510, 23989.280156077682, 1001.6785191555202, 0.5, 2.3624489795918366, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 511, 24224.70323833453, 947.5895287003218, 0.5, 2.8285714285714287, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 515, 24284.82413136764, 1019.9583403166432, 0.5, 2.954285714285714, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 520, 24228.421020083, 1085.925566313997, 0.5, 3.1697959183673468, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 521, 24314.51398033739, 1106.7353077578564, 0.5, 3.0906122448979594, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 525, 24408.26129109033, 1111.8395122498139, 0.5, 2.5812244897959182, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 530, 24128.924454185668, 1028.9359849406414, 0.5, 3.0481632653061226, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 531, 24231.796977754533, 1046.7936646921144, 0.5, 2.4816326530612245, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 535, 23907.131466157432, 925.6879685688832, 0.5, 2.046530612244898, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 540, 23947.843747934712, 951.5926711715085, 0.5, 1.6310204081632653, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 541, 24077.423358773114, 960.1546824252022, 0.5, 2.6685714285714286, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 545, 23978.291029590935, 902.6296910809626, 0.5, 2.8620408163265307, 23377.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 550, 24306.940313991887, 1086.0033517105144, 0.5, 5.939591836734694, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 551, 24134.01728724076, 1040.218536574516, 0.5, 4.6538775510204085, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 555, 23970.358348683938, 972.898325451873, 0.5, 3.9714285714285715, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 560, 23941.2363579976, 911.7126079923509, 0.5, 4.429387755102041, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 561, 24098.208419819806, 988.2077980284067, 0.5, 4.656326530612245, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 565, 23978.37964448993, 899.584930926958, 0.5, 4.433469387755102, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 570, 24068.726371373286, 1018.4528743624784, 0.5, 4.146122448979592, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 571, 24019.716912181244, 973.151451769371, 0.5, 4.644897959183673, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 575, 23906.430868177777, 1074.6836084620816, 0.5, 3.676734693877551, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 580, 24129.243968654042, 1030.068856095706, 0.5, 3.874285714285714, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 581, 24159.84433431963, 1141.254802199315, 0.5, 4.084081632653061, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 585, 24090.62576485721, 1010.7654273756889, 0.5, 4.5869387755102045, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 590, 24023.498266255705, 910.8306393222165, 0.5, 5.195102040816327, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 591, 24108.38633601639, 1035.9105040482348, 0.5, 4.32, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 595, 23791.220701544527, 869.1364481035138, 0.5, 3.6710204081632654, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 600, 24125.016613751748, 1042.0839966211238, 0.5, 4.536326530612245, 23219.11367378183);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 601, 24540.244912712664, 1031.6068416120663, 0.5, 6.711836734693877, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 605, 23642.306664141273, 975.3854364356517, 0.5, 4.074285714285714, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 610, 23415.98408108305, 899.2685061011736, 0.5, 3.6808163265306124, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 611, 23631.74216210874, 1000.4201318689969, 0.5, 3.8048979591836734, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 615, 23548.076767378956, 965.1342412773079, 0.5, 2.8351020408163263, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 620, 23868.737502877, 1076.960362466422, 0.5, 4.556734693877551, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 621, 23550.461708416376, 975.2501192365247, 0.5, 3.339591836734694, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 625, 23737.826058662282, 1036.476974340016, 0.5, 3.9689795918367348, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 630, 23803.23220107468, 1095.3698431932974, 0.5, 3.455510204081633, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 631, 23552.26149454664, 937.897407207223, 0.5, 3.440816326530612, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 635, 23743.731404016093, 998.2820353339205, 0.5, 3.626122448979592, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 640, 23614.545232253928, 1121.8444721968133, 0.5, 4.351020408163265, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 641, 23692.40569643577, 945.4883900809755, 0.5, 3.7012244897959183, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 645, 23601.88854561146, 985.412643284658, 0.5, 3.3836734693877553, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 650, 23317.244883700303, 812.5260074058676, 0.5, 2.6653061224489796, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 651, 23825.01281239216, 1084.714456786799, 0.5, 4.440816326530612, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 655, 23603.08067659378, 986.4587872889138, 0.5, 3.2718367346938777, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 660, 23688.915593198086, 1032.5905894641685, 0.5, 4.43265306122449, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 661, 23590.14138388594, 992.1346328844163, 0.5, 3.57469387755102, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 665, 23561.234852606125, 1060.7285683047376, 0.5, 3.1420408163265305, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 670, 23588.057206836158, 970.9516472007024, 0.5, 3.173877551020408, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 671, 23730.542294953553, 966.3497928939646, 0.5, 3.7542857142857144, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 675, 23518.16588734535, 959.9784996379632, 0.5, 1.7910204081632652, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 680, 23444.015431580534, 915.2600902494141, 0.5, 1.8424489795918368, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 681, 23698.696790657857, 1224.4763697549292, 0.5, 2.1314285714285712, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 685, 23347.281757185916, 868.691740022704, 0.5, 1.526530612244898, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 690, 23527.321757185917, 937.9463517576634, 0.5, 1.653061224489796, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 691, 23605.119839466704, 1034.459653450698, 0.5, 2.2742857142857145, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 695, 23685.144735020745, 1105.2910978958528, 0.5, 2.3510204081632655, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 700, 23358.001757185917, 842.7064080710919, 0.5, 1.3991836734693877, 22876.541757185892);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 701, 24400.79091405449, 901.0498247546249, 0.5, 5.046530612244898, 23245.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 705, 23406.254246842465, 502.6716484023369, 0.5, 0.7853061224489796, 23245.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 710, 23430.411509318812, 515.9630592181486, 0.5, 1.2073469387755102, 23245.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 711, 23443.747607433117, 555.8979604648498, 0.5, 0.6914285714285714, 23245.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 715, 24113.698845783718, 1039.5138606621479, 0.5, 4.25795918367347, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 720, 24158.814246842467, 992.0264224741222, 0.5, 3.2857142857142856, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 721, 24058.587607433117, 940.8820310360544, 0.5, 2.6685714285714286, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 725, 24034.243797828014, 947.2647493473033, 0.5, 2.856326530612245, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 730, 24367.092554899813, 1064.5116501437215, 0.5, 3.229387755102041, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 731, 23976.1733358996, 949.4676549949618, 0.5, 3.2351020408163267, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 735, 24129.3933358996, 975.4672824125614, 0.5, 2.770612244897959, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 740, 24031.847607433116, 958.4021873165049, 0.5, 2.3102040816326532, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 741, 24022.603797828015, 935.8916675844548, 0.5, 2.7118367346938776, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 745, 23893.511105046324, 929.592862581068, 0.5, 1.9942857142857142, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 750, 24187.407607433117, 950.0186601819344, 0.5, 2.6342857142857143, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 751, 24097.727607433117, 923.3703128722937, 0.5, 2.9551020408163264, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 755, 24090.847607433116, 952.534587512791, 0.5, 2.8424489795918366, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 760, 24104.287607433114, 936.7759856801086, 0.5, 2.390204081632653, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 761, 24048.115591799276, 978.3522397667814, 0.5, 2.602448979591837, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 765, 24052.123797828015, 928.4273784049907, 0.5, 2.5942857142857143, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 770, 23882.023797828017, 913.6996310455713, 0.5, 2.2783673469387753, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 771, 24069.207607433116, 926.3183752063317, 0.5, 2.7224489795918365, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 775, 24121.447607433118, 944.0148917884547, 0.5, 2.84, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 780, 23900.243797828014, 926.0512426202652, 0.5, 2.57469387755102, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 781, 24032.687607433116, 934.0675664937254, 0.5, 2.780408163265306, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 785, 24080.79998822292, 937.9784051193199, 0.5, 2.857142857142857, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 790, 24054.567607433117, 946.9144081312368, 0.5, 2.3755102040816327, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 791, 24211.833440023474, 1017.9001973884208, 0.5, 2.6489795918367345, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 795, 24076.887607433117, 913.2745917849678, 0.5, 3.075918367346939, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 800, 24416.687607433112, 912.8067582786533, 0.5, 2.1942857142857144, 23154.527607433116);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 801, 23446.283350257207, 687.6526345758573, 0.5, 1.3673469387755102, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 805, 23244.833713697404, 752.5159680166608, 0.5, 0.8848979591836734, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 810, 23457.331870773844, 1154.0030877693412, 0.5, 1.316734693877551, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 811, 23302.07439987335, 828.7289711524623, 0.5, 1.2277551020408164, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 815, 23413.603901243085, 753.5306262743977, 0.5, 1.9289795918367347, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 820, 23350.076718687673, 804.4162250434397, 0.5, 1.3983673469387754, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 821, 23175.838697735402, 591.5315207575285, 0.5, 0.7910204081632654, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 825, 23329.480268292617, 849.910346461924, 0.5, 1.3012244897959184, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 830, 23295.56026829262, 833.1703568865761, 0.5, 1.1942857142857144, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 831, 23384.641838849835, 1024.0675607721896, 0.5, 1.2930612244897959, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 835, 23167.637127178183, 383.8082668654832, 0.5, 0.9828571428571429, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 840, 23154.35712717818, 387.1275953765644, 0.5, 0.9461224489795919, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 841, 23244.577023346996, 662.1059395507845, 0.5, 1.0661224489795917, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 845, 23455.076854811843, 1082.3326051022639, 0.5, 1.6016326530612246, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 850, 23382.290300216628, 1049.845871576183, 0.5, 1.1991836734693877, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 851, 23123.83712717818, 331.83511088540115, 0.5, 0.7346938775510204, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 855, 23278.000268292613, 811.1331579795471, 0.5, 1.0506122448979591, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 860, 23386.495284254626, 908.6414950410491, 0.5, 1.5077551020408164, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 861, 23422.101838849834, 975.4878136897038, 0.5, 1.5477551020408162, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 865, 23180.378697735396, 620.5533941498383, 0.5, 0.7069387755102041, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 870, 23247.320268292613, 765.0288703128687, 0.5, 0.8612244897959184, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 871, 23317.637127178183, 523.2606269092577, 0.5, 1.8612244897959183, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 875, 23232.01712717818, 439.8709662375724, 0.5, 1.310204081632653, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 880, 23341.040268292618, 860.6741970060451, 0.5, 1.426938775510204, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 881, 23356.698697735403, 689.855367212272, 0.5, 1.8057142857142856, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 885, 23036.137127178183, 154.1492782986676, 0.5, 0.12, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 890, 23014.33712717818, 2.204948129406426E-11, 0.5, 0.0, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 891, 23014.33712717818, 2.204948129406426E-11, 0.5, 0.0, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 895, 23014.33712717818, 2.204948129406426E-11, 0.5, 0.0, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 900, 23014.33712717818, 2.204948129406426E-11, 0.5, 0.0, 23014.337127178158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 901, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 905, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 910, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 911, 23165.39599511581, 312.3809472065969, 0.5, 0.12, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 915, 23164.735995115814, 307.71404245076593, 0.5, 0.12, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 920, 23137.56102728474, 115.55800213199214, 0.5, 0.12, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 921, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 925, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 930, 23141.36102728474, 142.42805981708102, 0.5, 0.2, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 931, 23141.36102728474, 142.42805981708105, 0.5, 0.2, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 935, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 940, 23142.38102728474, 149.64054898518347, 0.5, 0.12, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 941, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 945, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 950, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 951, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 955, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 960, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 961, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 965, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 970, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 971, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 975, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 980, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 981, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 985, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 990, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 991, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 995, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1000, 23121.21865789916, 1.469965419604284E-11, 0.5, 0.0, 23121.218657899146);

        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 18, 96, 74, 91, 7, 41, 88, 30, 79, 55, 3, 64, 25, 65, 69, 21, 93, 15, 87, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 18, 96, 74, 91, 7, 41, 88, 30, 79, 55, 3, 64, 25, 65, 69, 21, 93, 15, 87, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 18, 96, 74, 91, 7, 41, 88, 30, 79, 55, 3, 64, 25, 65, 69, 21, 93, 15, 87, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 18, 96, 74, 91, 7, 41, 88, 30, 79, 55, 3, 64, 25, 65, 69, 21, 93, 15, 87, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 18, 96, 74, 91, 7, 41, 88, 30, 79, 55, 3, 64, 25, 65, 69, 21, 93, 15, 87, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 18, 96, 74, 91, 7, 41, 88, 30, 79, 55, 3, 64, 25, 65, 69, 21, 93, 15, 87, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 18, 96, 74, 91, 7, 41, 88, 30, 79, 55, 3, 64, 25, 65, 69, 21, 93, 15, 87, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 18, 96, 74, 91, 7, 41, 88, 30, 79, 55, 3, 64, 25, 65, 69, 21, 93, 15, 87, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 15, 21, 69, 65, 25, 64, 3, 74, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 15, 21, 69, 65, 25, 64, 3, 74, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 86, 56, 6, 19, 11, 26, 85, 34, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 86, 56, 6, 19, 11, 26, 85, 34, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 86, 56, 6, 19, 11, 26, 85, 34, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 86, 56, 6, 19, 11, 26, 85, 34, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 86, 56, 6, 19, 11, 26, 85, 34, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 86, 56, 6, 19, 11, 26, 85, 34, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 86, 56, 6, 19, 11, 26, 85, 34, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 86, 56, 6, 19, 11, 26, 85, 34, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 56, 86, 19, 11, 26, 85, 34, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 56, 86, 19, 11, 26, 85, 34, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 25, 65, 64, 3, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 55, 96, 3, 64, 65, 25, 30, 79, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 55, 96, 3, 64, 65, 25, 30, 79, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 55, 96, 3, 64, 65, 25, 30, 79, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 55, 96, 3, 64, 65, 25, 30, 79, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 55, 96, 3, 64, 65, 25, 30, 79, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 55, 96, 3, 64, 65, 25, 30, 79, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 55, 96, 3, 64, 65, 25, 30, 79, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 55, 96, 3, 64, 65, 25, 30, 79, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 55, 96, 3, 64, 65, 25, 30, 79, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 55, 96, 3, 64, 65, 25, 30, 79, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 3, 64, 65, 25, 96, 74, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 3, 64, 65, 25, 96, 74, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 3, 64, 65, 25, 96, 74, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 3, 64, 65, 25, 96, 74, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 3, 64, 65, 25, 96, 74, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 3, 64, 65, 25, 96, 74, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 3, 64, 65, 25, 96, 74, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 3, 64, 65, 25, 96, 74, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 3, 64, 65, 25, 96, 74, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 52, 18, 3, 64, 65, 25, 96, 74, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 87, 15, 21, 69, 93, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 87, 15, 21, 69, 93, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 96, 3, 64, 65, 25, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[0, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[0, 27, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 75, 12, 32, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 93, 21, 69, 15, 87, 52, 18, 74, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA150_with_seed_1_mag_0_1_freq_10() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA150));
        MMAS_3OPT_MADTSP mmas_3OPT_madtsp = new MMAS_3OPT_MADTSP(graph, 0.8, 1000, 0.1, 10);
        mmas_3OPT_madtsp.setMmasSeed(1);
        mmas_3OPT_madtsp.setDbgpSeed(1);
        mmas_3OPT_madtsp.setStatisticInterval(1);
        mmas_3OPT_madtsp.setShowLog(true);
        mmas_3OPT_madtsp.run();
        assertThat(mmas_3OPT_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(29831.954382917804);
        assertThat(mmas_3OPT_madtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(29831.954382917804);
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getGlobalStatistics())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 93, 21, 69, 15, 87, 136, 78, 133, 52, 105, 89, 48, 5, 62, 129, 27, 92, 130, 46, 10, 16, 14, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 26, 85, 19, 11, 56, 116, 6, 8, 144, 86, 50, 124, 60, 24, 80, 139, 67, 84, 38, 100, 29, 120, 106, 111, 28, 131, 134, 33, 82, 54, 148, 114, 119, 122, 127, 42, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 146, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 138, 7, 91, 0]");
    }
}
