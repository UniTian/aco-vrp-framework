package com.github.schmittjoaopedro;

import com.github.schmittjoaopedro.algorithms.MMAS_MADTSP;
import com.github.schmittjoaopedro.graph.Graph;
import com.github.schmittjoaopedro.graph.GraphFactory;
import org.junit.Before;
import org.junit.Test;

import java.io.File;

import static org.assertj.core.api.Assertions.assertThat;

public class MMAS_MADTSP_Test {

    private String kroA100;

    private String kroA150;

    @Before
    public void beforeClass() {
        kroA100 = getClass().getClassLoader().getResource("tsp/KroA100.tsp").getFile();
        kroA150 = getClass().getClassLoader().getResource("tsp/KroA150.tsp").getFile();
    }

    @Test
    public void test_mmas_moving_asymmetric_dynamic_tsp_kroA100_with_seed_1_mag_0_1_freq_10() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_MADTSP mmas_madtsp = new MMAS_MADTSP(graph, 0.8, 1000, 0.1, 10);
        mmas_madtsp.setMmasSeed(1);
        mmas_madtsp.setDbgpSeed(1);
        mmas_madtsp.setStatisticInterval(1);
        mmas_madtsp.setShowLog(false);
        mmas_madtsp.run();

        assertThat(mmas_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(23983.958057818214);
        assertThat(mmas_madtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(23983.958057818214);
        assertThat(TestUtils.getTourString(mmas_madtsp.getGlobalStatistics())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");

        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[94, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[94, 75, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");

        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[94, 75, 12, 32, 36, 4, 38, 29, 95, 77, 51, 47, 40, 70, 99, 13, 2, 42, 45, 28, 33, 54, 82, 11, 19, 85, 26, 34, 61, 76, 59, 90, 97, 22, 44, 31, 14, 16, 10, 58, 73, 20, 71, 9, 83, 35, 37, 17, 78, 52, 18, 96, 74, 48, 5, 62, 91, 7, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 93, 15, 87, 21, 89, 23, 98, 46, 0, 92, 27, 57, 66, 80, 24, 60, 6, 8, 56, 86, 50, 68, 63, 39, 53, 1, 43, 49, 72, 84, 67, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[94, 75, 12, 32, 36, 4, 38, 29, 95, 77, 51, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 54, 82, 11, 19, 85, 26, 34, 61, 76, 59, 90, 97, 22, 44, 31, 14, 16, 10, 58, 73, 20, 71, 9, 83, 17, 78, 52, 18, 74, 5, 48, 89, 62, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 69, 21, 15, 87, 93, 23, 37, 98, 35, 46, 0, 27, 92, 57, 66, 60, 24, 80, 68, 49, 72, 43, 1, 63, 39, 53, 81, 67, 84, 50, 86, 56, 8, 6, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[94, 75, 12, 32, 36, 4, 77, 51, 95, 38, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 8, 6, 56, 86, 60, 80, 24, 50, 57, 66, 92, 27, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 69, 21, 15, 87, 93, 23, 37, 98, 35, 83, 17, 78, 52, 18, 74, 5, 48, 89, 9, 71, 20, 73, 58, 10, 16, 14, 31, 90, 97, 22, 44, 46, 0, 91, 7, 62, 76, 59, 61, 19, 85, 26, 34, 11, 54, 82, 33, 67, 72, 43, 49, 1, 39, 53, 63, 68, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 95, 77, 51, 38, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 84, 67, 24, 80, 60, 50, 6, 56, 86, 8, 19, 85, 26, 34, 11, 54, 82, 61, 59, 76, 22, 44, 97, 90, 31, 14, 16, 10, 73, 58, 20, 71, 9, 83, 35, 37, 98, 23, 17, 78, 52, 18, 74, 5, 48, 89, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 69, 21, 15, 87, 93, 46, 27, 92, 57, 66, 68, 72, 43, 49, 1, 39, 53, 63, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 11, 26, 34, 85, 19, 56, 86, 8, 6, 24, 80, 60, 50, 61, 59, 76, 22, 90, 97, 44, 31, 14, 16, 10, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 52, 18, 74, 5, 48, 89, 62, 0, 91, 7, 41, 79, 30, 88, 55, 96, 3, 64, 65, 25, 69, 21, 15, 87, 93, 98, 58, 46, 27, 92, 57, 66, 63, 39, 53, 1, 49, 84, 67, 68, 72, 43, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 11, 19, 56, 8, 6, 24, 80, 60, 50, 86, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 52, 18, 74, 5, 48, 89, 62, 0, 91, 7, 41, 79, 30, 88, 55, 96, 3, 64, 65, 25, 69, 21, 15, 87, 93, 98, 58, 46, 27, 92, 57, 66, 63, 39, 53, 1, 43, 49, 72, 68, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 28, 33, 82, 54, 11, 19, 56, 8, 6, 24, 80, 60, 50, 86, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 73, 20, 58, 71, 9, 83, 35, 23, 37, 17, 78, 52, 18, 96, 3, 64, 65, 25, 69, 21, 15, 87, 93, 98, 89, 0, 91, 7, 41, 79, 30, 88, 55, 74, 48, 5, 62, 46, 92, 27, 57, 66, 63, 39, 53, 1, 43, 49, 72, 68, 67, 84, 45, 2, 42, 13, 47, 70, 40, 99, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 42, 45, 2, 28, 33, 82, 54, 11, 19, 6, 8, 56, 86, 50, 24, 80, 60, 57, 66, 92, 27, 0, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 69, 21, 15, 87, 93, 52, 18, 74, 48, 5, 62, 46, 31, 10, 16, 14, 73, 58, 71, 9, 83, 89, 78, 17, 23, 37, 35, 98, 20, 97, 90, 44, 22, 76, 61, 59, 34, 85, 26, 84, 67, 49, 72, 68, 63, 39, 53, 1, 43, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 42, 45, 2, 28, 82, 54, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 73, 58, 71, 9, 83, 89, 78, 17, 23, 37, 35, 98, 20, 46, 0, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 69, 93, 21, 15, 87, 52, 18, 74, 5, 48, 62, 27, 92, 57, 66, 39, 63, 53, 1, 43, 72, 68, 80, 24, 60, 50, 86, 6, 8, 56, 19, 33, 84, 67, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 42, 2, 28, 45, 33, 82, 54, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 87, 15, 21, 93, 69, 64, 65, 25, 3, 96, 55, 79, 30, 88, 41, 7, 91, 0, 62, 5, 48, 89, 74, 18, 52, 78, 46, 27, 92, 57, 66, 39, 63, 53, 1, 43, 49, 72, 68, 80, 24, 60, 50, 86, 56, 19, 8, 6, 84, 67, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 42, 2, 28, 45, 33, 82, 54, 19, 8, 6, 56, 86, 50, 24, 60, 80, 66, 57, 68, 63, 39, 53, 1, 43, 49, 81, 72, 67, 84, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 64, 65, 25, 3, 96, 55, 79, 30, 88, 41, 7, 91, 48, 5, 62, 0, 46, 27, 92, 89, 18, 74, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 28, 45, 33, 82, 54, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 64, 65, 25, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0, 46, 27, 92, 57, 66, 80, 24, 60, 50, 86, 56, 6, 8, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 21, 87, 93, 69, 64, 65, 25, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0, 46, 27, 92, 57, 60, 50, 86, 84, 67, 72, 49, 43, 1, 39, 53, 63, 80, 24, 68, 66, 33, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 21, 87, 93, 69, 64, 65, 25, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0, 46, 92, 27, 57, 60, 50, 86, 80, 24, 67, 84, 49, 72, 43, 1, 68, 66, 53, 39, 63, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 64, 65, 3, 25, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 87, 15, 21, 69, 93, 89, 48, 5, 62, 0, 46, 92, 27, 57, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 50, 86, 66, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 21, 69, 93, 87, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 89, 48, 5, 62, 0, 46, 92, 27, 57, 60, 24, 80, 68, 72, 67, 84, 50, 86, 66, 53, 39, 63, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 73, 58, 20, 71, 9, 83, 23, 37, 35, 98, 17, 78, 52, 15, 21, 69, 93, 87, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 89, 48, 5, 62, 0, 46, 92, 27, 57, 60, 24, 80, 68, 72, 67, 84, 86, 50, 66, 53, 39, 63, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 73, 58, 20, 71, 83, 9, 23, 37, 35, 98, 17, 78, 52, 15, 21, 69, 93, 87, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 89, 48, 5, 62, 0, 46, 92, 27, 57, 60, 24, 80, 68, 72, 67, 84, 86, 50, 66, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 86, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 57, 66, 27, 92, 0, 46, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 23, 37, 35, 98, 17, 78, 52, 15, 21, 69, 93, 87, 65, 64, 25, 3, 74, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 48, 5, 62, 90, 44, 97, 22, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 26, 85, 34, 61, 59, 76, 86, 50, 60, 24, 80, 68, 49, 72, 67, 84, 8, 6, 56, 19, 11, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 23, 37, 35, 98, 17, 78, 52, 15, 21, 87, 93, 69, 65, 64, 25, 3, 74, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 48, 5, 62, 0, 46, 92, 27, 57, 66, 53, 39, 63, 1, 43, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 23, 37, 35, 98, 17, 78, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 74, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 48, 5, 62, 0, 46, 92, 27, 57, 66, 86, 50, 60, 24, 80, 68, 72, 67, 84, 49, 43, 1, 53, 39, 63, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 23, 37, 35, 98, 17, 78, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 74, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 5, 48, 62, 0, 46, 92, 27, 57, 66, 86, 50, 60, 24, 80, 68, 72, 67, 84, 49, 43, 53, 39, 63, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 23, 37, 35, 98, 17, 78, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 74, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 5, 48, 62, 0, 46, 92, 27, 57, 66, 80, 24, 60, 50, 86, 76, 68, 72, 67, 84, 49, 43, 1, 53, 39, 63, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 17, 23, 37, 35, 98, 78, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 74, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 48, 5, 62, 0, 46, 92, 27, 57, 66, 80, 24, 60, 50, 86, 67, 84, 49, 43, 1, 53, 39, 63, 68, 72, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 17, 23, 37, 35, 98, 78, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 18, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 46, 92, 27, 57, 66, 80, 24, 60, 50, 86, 67, 84, 49, 43, 1, 53, 39, 63, 68, 72, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 34, 26, 11, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 17, 23, 37, 35, 98, 15, 87, 93, 21, 69, 65, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0, 62, 5, 48, 89, 78, 52, 25, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 67, 84, 49, 43, 1, 53, 39, 63, 68, 72, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 34, 26, 11, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 23, 37, 35, 98, 17, 87, 93, 21, 15, 69, 65, 64, 3, 25, 78, 52, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0, 62, 5, 48, 89, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 67, 84, 49, 43, 1, 53, 63, 39, 68, 72, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 23, 37, 35, 98, 17, 87, 15, 21, 93, 69, 65, 64, 3, 25, 78, 52, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0, 62, 5, 48, 89, 46, 92, 27, 66, 57, 60, 50, 86, 80, 24, 67, 84, 49, 43, 1, 53, 63, 39, 68, 72, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 23, 37, 35, 98, 17, 78, 52, 18, 74, 5, 62, 48, 89, 87, 15, 21, 93, 69, 65, 64, 3, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0, 46, 92, 27, 66, 57, 60, 50, 86, 80, 24, 67, 84, 49, 43, 1, 53, 39, 63, 68, 72, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 23, 37, 35, 98, 17, 78, 52, 18, 74, 5, 48, 89, 87, 15, 21, 93, 69, 65, 64, 3, 25, 96, 55, 79, 30, 88, 41, 7, 91, 0, 46, 62, 92, 27, 66, 57, 60, 50, 86, 80, 24, 67, 84, 49, 43, 1, 63, 53, 39, 68, 72, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 23, 37, 35, 98, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 3, 25, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 18, 74, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 72, 67, 84, 49, 43, 1, 63, 53, 39, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 17, 78, 52, 87, 15, 21, 93, 69, 65, 3, 64, 25, 18, 74, 5, 48, 89, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 23, 37, 35, 98, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 72, 67, 84, 49, 43, 1, 53, 39, 63, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 23, 37, 35, 98, 17, 78, 52, 15, 21, 87, 93, 69, 65, 3, 64, 25, 18, 74, 89, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 5, 48, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 72, 67, 84, 49, 43, 39, 63, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 25, 65, 69, 93, 21, 15, 87, 52, 78, 17, 23, 37, 35, 98, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 72, 67, 84, 49, 43, 39, 63, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 89, 48, 5, 62, 0, 91, 7, 41, 88, 79, 30, 55, 96, 74, 18, 3, 64, 25, 65, 69, 93, 21, 15, 87, 52, 78, 17, 23, 37, 35, 98, 46, 92, 27, 66, 57, 80, 24, 50, 86, 60, 68, 72, 67, 84, 49, 43, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 14, 16, 10, 20, 71, 83, 9, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 25, 65, 69, 93, 21, 15, 87, 52, 78, 17, 37, 23, 35, 98, 58, 73, 46, 27, 92, 66, 57, 80, 24, 50, 86, 60, 68, 72, 67, 84, 49, 63, 39, 53, 1, 43, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 25, 65, 69, 93, 21, 15, 87, 52, 78, 17, 37, 23, 35, 98, 46, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 72, 67, 84, 49, 43, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 14, 16, 10, 31, 73, 20, 71, 83, 9, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 25, 65, 69, 93, 21, 15, 87, 52, 78, 17, 23, 37, 35, 98, 58, 46, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 72, 67, 84, 49, 43, 1, 53, 39, 63, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 83, 9, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 25, 65, 69, 93, 21, 15, 87, 52, 78, 17, 23, 37, 98, 35, 46, 92, 27, 66, 57, 50, 86, 60, 24, 80, 68, 72, 67, 84, 49, 43, 1, 53, 39, 63, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 83, 9, 89, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 25, 65, 69, 93, 21, 15, 87, 52, 78, 17, 23, 37, 35, 98, 48, 46, 92, 27, 66, 57, 50, 86, 60, 24, 80, 68, 72, 63, 39, 53, 1, 43, 49, 84, 67, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 89, 78, 17, 23, 37, 35, 98, 83, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 52, 87, 15, 21, 93, 69, 65, 64, 3, 25, 48, 5, 46, 92, 27, 66, 57, 50, 86, 60, 24, 80, 68, 72, 63, 39, 53, 1, 43, 49, 84, 67, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 52, 87, 15, 21, 93, 69, 65, 64, 3, 25, 78, 17, 23, 37, 35, 98, 83, 46, 27, 92, 66, 57, 50, 86, 60, 24, 80, 67, 84, 49, 43, 72, 68, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 52, 87, 21, 93, 15, 69, 64, 65, 3, 25, 78, 17, 23, 37, 35, 98, 83, 46, 27, 92, 66, 57, 50, 86, 60, 24, 80, 67, 84, 49, 43, 72, 68, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 52, 87, 15, 21, 93, 69, 64, 65, 3, 25, 78, 17, 23, 37, 35, 98, 83, 9, 46, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 84, 67, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 78, 17, 23, 37, 35, 98, 83, 9, 46, 92, 27, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 84, 67, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 52, 78, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0, 62, 5, 48, 89, 46, 92, 27, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 52, 78, 21, 69, 65, 3, 64, 25, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0, 62, 5, 48, 89, 46, 92, 27, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 52, 78, 21, 69, 65, 3, 64, 25, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0, 62, 5, 48, 89, 46, 92, 27, 66, 57, 50, 86, 60, 80, 24, 68, 72, 67, 84, 49, 43, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 52, 78, 21, 69, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 91, 0, 62, 5, 48, 89, 18, 74, 46, 92, 27, 66, 57, 50, 86, 60, 80, 24, 67, 84, 72, 49, 43, 68, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 78, 52, 18, 74, 62, 0, 46, 92, 27, 66, 57, 50, 86, 60, 24, 80, 67, 84, 72, 49, 43, 68, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 78, 52, 18, 74, 62, 0, 46, 92, 27, 66, 57, 50, 86, 60, 24, 80, 67, 84, 72, 49, 43, 68, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0, 46, 92, 27, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 81, 49, 43, 72, 67, 84, 74, 18, 52, 78, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 72, 67, 84, 49, 43, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 72, 67, 84, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 50, 86, 60, 24, 80, 68, 72, 67, 84, 49, 43, 1, 63, 39, 53, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 72, 67, 84, 49, 43, 1, 53, 63, 39, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 3, 65, 64, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 27, 92, 66, 57, 50, 86, 24, 80, 60, 68, 39, 63, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 50, 86, 24, 80, 60, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 66, 57, 60, 68, 63, 39, 53, 1, 72, 67, 84, 49, 43, 81, 80, 24, 86, 50, 27, 92, 46, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 66, 57, 27, 92, 46, 68, 63, 39, 53, 1, 72, 67, 84, 49, 43, 80, 24, 86, 50, 60, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 80, 24, 86, 50, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 41, 88, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 80, 24, 86, 50, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 41, 88, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 80, 24, 68, 72, 67, 84, 49, 53, 39, 63, 1, 43, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 41, 88, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 80, 24, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 80, 24, 86, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 80, 24, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 72, 67, 84, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 72, 67, 84, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 72, 67, 84, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 72, 67, 84, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 80, 24, 72, 67, 84, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 80, 24, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 67, 84, 72, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 80, 24, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 80, 24, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 80, 24, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 24, 80, 60, 50, 86, 84, 67, 72, 49, 43, 1, 39, 53, 63, 68, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 80, 24, 60, 50, 86, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 80, 24, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 80, 24, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 80, 24, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 72, 49, 43, 84, 67, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 72, 67, 84, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 67, 84, 43, 49, 72, 68, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 67, 84, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 72, 67, 84, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 67, 84, 72, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 13, 99, 70, 40, 2, 42, 45, 28, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 35, 98, 37, 23, 17, 93, 15, 87, 21, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");

        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 1, 32087.941671030396, 2484.2471787650425, 0.0, 54.590204081632656, 26322.068575260324);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 5, 26129.83419725305, 1290.6931252536815, 0.555, 3.2146938775510203, 25449.357633846703);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 10, 25808.525014770898, 1834.4860968950138, 0.52, 2.996734693877551, 24972.87420872596);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 11, 30468.249692210407, 1711.6203331269542, 0.48, 14.716734693877552, 26422.42840847552);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 15, 26321.65711384796, 1277.1380359031991, 0.53, 3.9616326530612245, 24904.677394618935);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 20, 26203.160005178448, 1116.4437457974857, 0.495, 6.568163265306122, 24610.03842696333);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 21, 33327.22233532953, 2975.2634871122395, 0.53, 21.663673469387756, 27392.662084162515);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 25, 27169.63768849632, 1695.1394046835148, 0.505, 7.697959183673469, 25764.43477038173);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 30, 26553.28006149346, 2079.7360123355957, 0.51, 4.7036734693877555, 25395.434770381726);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 31, 30531.211581664997, 2129.2732624903915, 0.48, 24.70938775510204, 27107.305967870623);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 35, 27381.853307991983, 1936.1929644167244, 0.54, 5.304489795918367, 25804.676736164205);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 40, 27728.79884804127, 2307.2953717248233, 0.51, 7.6938775510204085, 25679.065836727706);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 41, 28442.553409958236, 1358.278970217906, 0.5, 11.027755102040816, 26251.44359404676);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 45, 27807.628685795335, 2099.706264044107, 0.505, 9.457142857142857, 25986.396131245718);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 50, 26978.68093815423, 1851.636169927916, 0.55, 6.470204081632653, 25403.62692765396);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 51, 28764.911289188, 2640.5083294354567, 0.535, 8.48326530612245, 26061.897713628794);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 55, 28379.230276295944, 1963.3912690000006, 0.51, 8.210612244897959, 25922.757804598667);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 60, 27766.723505186434, 2118.3891700654735, 0.515, 7.684897959183673, 25200.64204160446);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 61, 31727.19860450012, 1625.3217451205196, 0.495, 20.622857142857143, 28069.17459169699);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 65, 28809.619156380522, 2674.628402873832, 0.58, 7.355918367346939, 26086.977476124488);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 70, 27834.828239648075, 2302.991089332778, 0.535, 8.817142857142857, 25819.977476124488);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 71, 29581.937558411093, 1963.3019351778978, 0.495, 22.207346938775512, 26211.80112898556);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 75, 26674.380825972672, 2755.218106268427, 0.635, 6.842448979591837, 24758.23021340769);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 80, 26364.955794287984, 2367.1638646202337, 0.5, 7.813877551020409, 24670.23021340769);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 81, 28307.548785599603, 2326.0685408765426, 0.495, 11.74530612244898, 25632.03334934311);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 85, 26633.64250319048, 3366.224319613599, 0.6, 4.093877551020408, 24446.792191221433);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 90, 24841.20120055553, 1458.7409009849155, 0.5, 2.5861224489795918, 24152.792191221433);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 91, 28890.923336625983, 2609.785098376688, 0.495, 8.681632653061225, 24441.99264622547);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 95, 25532.434877209518, 2546.5155121021157, 0.54, 3.8677551020408165, 23906.424113254827);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 100, 27843.06116748304, 1889.3245314209798, 0.495, 5.605714285714286, 23547.542582533835);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 101, 28906.36783818381, 457.30251852749313, 0.495, 5.844897959183673, 27673.882878589822);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 105, 25050.20641960797, 2415.4617414775576, 0.67, 5.101224489795919, 23435.809189271593);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 110, 24080.906742726547, 1969.2551902758116, 0.51, 3.024489795918367, 22935.809189271593);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 111, 25612.765065492993, 2648.629555402039, 0.5, 3.422857142857143, 23958.529387793886);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 115, 25254.607054762775, 2093.219809970849, 0.525, 3.537959183673469, 23848.529387793886);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 120, 24816.526305187206, 2020.292125909056, 0.5, 3.2489795918367346, 23698.529387793886);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 121, 28506.270495621793, 1533.5741194135392, 0.495, 14.089795918367347, 25739.358689434743);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 125, 25357.140882920186, 1901.8451521711359, 0.515, 3.869387755102041, 24262.358689434743);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 130, 25382.915844943822, 2266.7763513186696, 0.54, 4.222857142857142, 23829.08395124816);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 131, 30711.531350285593, 1717.474774227547, 0.54, 11.774693877551021, 26388.480942709037);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 135, 29999.09106967191, 2123.9559819990063, 0.53, 1.7118367346938776, 25472.98280406386);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 140, 29837.514211865026, 2263.625897515033, 0.49, 2.9975510204081632, 25180.93467638769);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 141, 30435.549706077632, 860.4095673217481, 0.495, 4.091428571428572, 25587.502666954206);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 145, 26206.225167151642, 2503.9046982334007, 0.54, 3.012244897959184, 24714.63941045584);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 150, 25577.71839449129, 1911.406508497248, 0.505, 2.9804081632653063, 24540.63941045584);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 151, 28822.74471707639, 2390.0960404992197, 0.49, 7.114285714285714, 25515.749119114684);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 155, 27759.163446477403, 3029.843382387396, 0.51, 5.387755102040816, 24580.72472785726);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 160, 27161.752663977626, 2977.527994495384, 0.51, 4.7338775510204085, 24580.72472785726);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 161, 31426.11616863917, 1216.4106912086202, 0.49, 9.820408163265306, 25376.110033329725);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 165, 28091.57127937598, 3135.6078430687467, 0.5, 4.629387755102041, 25161.05395977406);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 170, 27117.70202020057, 2600.83387775361, 0.505, 4.965714285714285, 24972.639531281584);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 171, 26821.661098863347, 2203.1619977152955, 0.495, 4.180408163265306, 25371.278101699994);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 175, 25872.858018239513, 1990.1307890599576, 0.495, 1.4946938775510203, 25113.278101699994);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 180, 26922.091542964987, 2543.102960455459, 0.5, 5.277551020408163, 24884.278101699994);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 181, 30618.893913601165, 1759.7945623564763, 0.49, 20.94938775510204, 27952.844369389237);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 185, 27443.89889134099, 1751.7818479648229, 0.525, 6.681632653061224, 26072.565289824623);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 190, 27329.029476208463, 2344.0488421692894, 0.49, 5.0318367346938775, 25817.565289824623);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 191, 28845.825225366414, 2270.8113190554127, 0.52, 11.962448979591837, 26403.292398189395);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 195, 29168.827920462318, 2725.5222867963134, 0.525, 9.823673469387755, 25616.915032446806);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 200, 28091.618818139974, 2795.572746268875, 0.505, 6.597551020408163, 25076.193427345064);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 201, 26319.701375944638, 2591.8958608090793, 0.505, 2.829387755102041, 24523.54230863606);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 205, 27184.58664881631, 3091.786230416515, 0.505, 5.566530612244898, 24477.54230863606);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 210, 25954.720344877973, 3044.950193964557, 0.505, 3.2383673469387757, 24183.741039231645);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 211, 25962.32255341404, 2625.912878200927, 0.505, 5.046530612244898, 23863.547319289064);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 215, 25578.65337054034, 2551.6970211993353, 0.505, 3.5142857142857142, 23863.547319289064);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 220, 25268.102394047797, 2337.883705731533, 0.505, 3.6848979591836737, 23863.547319289064);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 221, 27378.237997190092, 1716.170372031998, 0.495, 8.13795918367347, 24750.303564035647);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 225, 26641.21206645448, 2750.79733802007, 0.5, 3.2677551020408164, 24630.0);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 230, 25730.824900706953, 2514.2479010330144, 0.505, 3.773061224489796, 23637.0);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 231, 25452.169783476078, 3154.9701246150767, 0.52, 2.6416326530612246, 23725.860926121488);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 235, 25365.686658702125, 3552.9008163961253, 0.52, 1.6008163265306123, 23725.860926121488);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 240, 26172.939207894713, 3953.305493711998, 0.52, 3.419591836734694, 23725.860926121488);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 241, 28078.371452214724, 2223.351332661653, 0.5, 6.49469387755102, 24637.184649126873);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 245, 25697.27038121658, 2062.537210552353, 0.515, 2.613877551020408, 24561.15910198402);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 250, 24202.906329098434, 1775.1470338331224, 0.525, 1.6538775510204082, 23472.230096435047);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 251, 30820.26938704723, 2205.768960644298, 0.54, 11.358367346938776, 25812.720431381145);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 255, 26286.738226148747, 2524.564633494226, 0.52, 3.773061224489796, 24052.702433838524);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 260, 27063.177449185354, 3082.5025213151744, 0.515, 4.358367346938776, 24002.71944001123);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 261, 30591.333876388897, 4139.721638891352, 0.5, 8.555102040816326, 25578.680911057472);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 265, 26415.911836976215, 2333.311806303953, 0.525, 2.499591836734694, 25073.200314334714);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 270, 26877.703505966652, 2492.494430257968, 0.525, 3.6808163265306124, 25073.200314334714);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 271, 25070.339286337603, 1665.1470295836866, 0.495, 2.2179591836734693, 24496.137934121612);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 275, 25142.62954219439, 1649.6286842644477, 0.51, 2.6563265306122448, 24253.137934121616);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 280, 28476.976428657486, 2018.2679727782713, 0.515, 3.8383673469387753, 24185.121593738873);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 281, 29357.7523047684, 2152.6610302986146, 0.495, 12.485714285714286, 24656.73553462429);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 285, 28188.187672711952, 2675.6648285803003, 0.495, 4.114285714285714, 24656.73553462429);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 290, 28492.809748697626, 2622.23992304285, 0.5, 4.578775510204082, 24268.683531440463);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 291, 28465.25318484576, 2138.706966702684, 0.505, 4.564081632653061, 24946.67262368351);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 295, 26112.906895092718, 2382.022783738009, 0.52, 4.507755102040816, 24571.67262368351);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 300, 25559.17698404406, 1939.9551698380749, 0.5, 1.6987755102040816, 24571.67262368351);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 301, 25570.778416926918, 1624.6544150373802, 0.5, 3.0285714285714285, 24670.74620833453);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 305, 25374.591016744114, 2515.0129665952554, 0.515, 1.0555102040816327, 24387.946335128756);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 310, 24983.54927328117, 2188.8591064816956, 0.51, 1.1746938775510205, 24114.319283351644);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 311, 30105.348368873354, 1418.5635030617516, 0.49, 9.397551020408164, 26230.048348510354);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 315, 27040.229713927034, 2676.5232833913055, 0.5, 3.709387755102041, 25003.814920895686);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 320, 25828.073541844766, 1777.4600354413208, 0.5, 2.073469387755102, 25003.814920895686);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 321, 27999.911990840323, 3473.2270180381684, 0.5, 5.168163265306123, 25339.87185964746);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 325, 26308.247909726197, 2848.9002030225033, 0.515, 2.213877551020408, 25201.87185964746);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 330, 27630.294114033037, 3211.4126245512466, 0.52, 3.045714285714286, 24783.679284648137);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 331, 27457.285145354763, 2569.3705180128086, 0.51, 8.405714285714286, 24843.68553450353);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 335, 26249.519906403882, 2685.1828705739454, 0.555, 4.213061224489796, 24156.797440967624);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 340, 26680.16972657453, 2584.5354780760144, 0.495, 4.561632653061224, 24140.210793610702);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 341, 29724.05862926554, 1975.3766052037136, 0.49, 9.996734693877551, 26276.526135790013);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 345, 28446.966664817435, 3266.515156071419, 0.515, 5.49469387755102, 24808.94963357129);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 350, 27408.830503982812, 3363.020136439517, 0.525, 3.829387755102041, 24414.616968858303);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 351, 29645.9590764072, 2239.8074686107043, 0.525, 10.62938775510204, 25123.068667667438);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 355, 27771.510106460653, 2721.5681484911097, 0.505, 6.524081632653061, 24654.996290018804);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 360, 26387.277926573148, 2598.215350295331, 0.555, 3.0220408163265304, 24457.682195595567);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 361, 26961.702856459076, 2770.1453780874203, 0.515, 4.68, 24473.03662752385);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 365, 26169.112799883933, 2740.043346668826, 0.51, 4.192653061224489, 24280.888616692624);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 370, 26471.104494902735, 3255.2360605671033, 0.51, 2.746122448979592, 24280.888616692624);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 371, 28233.377997509782, 2815.7312795326006, 0.495, 5.0922448979591834, 24706.614163785565);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 375, 26140.523980991555, 2642.385498378467, 0.505, 2.6946938775510203, 24148.543980991562);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 380, 26162.811445688425, 2763.253990666306, 0.525, 3.1330612244897957, 24015.543980991562);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 381, 26702.919382632725, 3011.89865146823, 0.495, 4.566530612244898, 23928.6229067096);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 385, 25286.786647899236, 2313.6855255439345, 0.495, 3.0081632653061225, 23928.6229067096);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 390, 25406.42047850916, 2514.580845688798, 0.495, 3.0359183673469388, 23928.6229067096);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 391, 28599.05797927346, 2502.1439529735608, 0.495, 8.888979591836735, 26048.03973381128);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 395, 28750.543546333876, 2546.7953174388244, 0.52, 5.536326530612245, 25734.454734310137);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 400, 27854.246942985235, 2130.2025622164506, 0.495, 8.228571428571428, 25451.51754095135);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 401, 27616.06563220215, 1776.6643113082803, 0.49, 8.50530612244898, 26292.230055913267);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 405, 26130.23668953587, 1258.3227477830683, 0.535, 2.7110204081632654, 25603.769991124667);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 410, 25633.115590371406, 1660.8027968754, 0.54, 3.8669387755102043, 24916.769991124667);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 411, 28431.78534025494, 1759.1813564251127, 0.495, 10.039183673469388, 25602.591079961836);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 415, 25538.759867473174, 1672.9168873315862, 0.525, 3.8685714285714288, 24876.538439492077);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 420, 25410.486583268987, 1548.2365159533708, 0.495, 2.917551020408163, 24829.022427250296);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 421, 25733.501093649505, 814.3261657754607, 0.495, 2.3020408163265307, 25174.079603958424);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 425, 25761.931114821127, 2703.7251108852993, 0.51, 3.6146938775510202, 24722.507973824657);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 430, 25156.591063311556, 1456.8803105347224, 0.51, 1.497142857142857, 24722.507973824657);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 431, 29355.62913402881, 2418.3308436355615, 0.49, 14.084081632653062, 25816.3671870581);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 435, 26985.682672860752, 2316.32280001095, 0.51, 4.0751020408163265, 25602.3671870581);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 440, 26573.324968402558, 2224.3697633563174, 0.515, 3.9248979591836735, 25342.940391028857);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 441, 29782.756931374242, 2488.031148742791, 0.505, 7.98204081632653, 25393.33570250143);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 445, 27549.956175730335, 2582.098543847742, 0.5, 4.611428571428571, 25095.69703519842);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 450, 28474.53383756429, 3050.437120253366, 0.52, 5.5902040816326535, 24729.495488130364);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 451, 27415.8075180822, 2707.308728010146, 0.64, 4.803265306122449, 23917.134606188232);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 455, 25700.174606188237, 2618.996606117912, 0.64, 2.630204081632653, 23917.134606188232);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 460, 26219.924762681796, 2758.5950816139202, 0.64, 3.427755102040816, 23917.134606188232);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 461, 30251.51441451028, 1526.4193462122976, 0.49, 2.0873469387755104, 24253.36113035149);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 465, 24682.746347969598, 1521.6310568141098, 0.495, 0.9795918367346939, 24243.966347969585);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 470, 24629.946417217405, 1167.5990974834908, 0.495, 1.5526530612244898, 24243.966347969585);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 471, 25677.953622893114, 2202.2740726826546, 0.495, 3.097142857142857, 24337.13256645192);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 475, 25236.68660135002, 2111.2239343298947, 0.505, 2.499591836734694, 24023.846477320265);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 480, 24790.697519224657, 1968.114285945411, 0.505, 1.7453061224489796, 24023.846477320265);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 481, 27011.688328121523, 2238.236958331697, 0.485, 9.693061224489796, 24843.74688898327);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 485, 25591.350482512415, 2683.609779035342, 0.51, 2.3551020408163263, 23885.91235370084);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 490, 24442.807089359776, 1934.74360564279, 0.5, 1.353469387755102, 23612.147901823257);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 491, 29282.277835194076, 1267.2789481097068, 0.5, 5.9983673469387755, 24289.86488198868);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 495, 25598.24131165355, 2284.8944049125193, 0.5, 2.2612244897959184, 24289.86488198868);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 500, 25512.04700174372, 2371.5284405353564, 0.5, 2.8057142857142856, 24289.86488198868);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 501, 34410.16617460344, 3444.724581088537, 0.5, 2.324081632653061, 24985.914265267467);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 505, 33581.39318092198, 3805.8415366938893, 0.5, 2.7118367346938776, 24985.914265267467);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 510, 33167.86705315509, 4012.172735835968, 0.5, 2.8914285714285715, 24733.246749683203);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 511, 29766.475110918487, 436.6851230281132, 0.515, 5.77469387755102, 28992.911243832004);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 515, 26594.624314412973, 2336.6435021101543, 0.495, 3.1420408163265305, 24608.893837412477);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 520, 25719.875582470246, 2300.0771307881896, 0.5, 2.603265306122449, 24119.109290329077);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 521, 27339.49059360541, 2666.4859253687214, 0.5, 5.04734693877551, 23700.493121972737);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 525, 24920.526212715693, 2330.070814905727, 0.51, 2.24734693877551, 23537.493121972737);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 530, 24802.06587507517, 2139.4632743098796, 0.51, 2.2383673469387757, 23537.493121972737);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 531, 24944.117250599396, 2610.5044667407224, 0.495, 2.660408163265306, 23243.608358978287);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 535, 23687.951384544456, 1474.5537143085196, 0.495, 0.6595918367346939, 23243.608358978287);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 540, 24129.92835897829, 1983.7691546083454, 0.495, 1.5983673469387756, 23243.608358978287);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 541, 25131.577024815044, 2768.96730297258, 0.5, 2.6840816326530614, 23465.01528506764);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 545, 24406.992840180428, 2177.3315190013122, 0.5, 1.0726530612244898, 23465.01528506764);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 550, 24610.357518507273, 2098.090169104347, 0.5, 1.9240816326530612, 23465.01528506764);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 551, 25837.69532586813, 2423.656767529001, 0.495, 1.52, 24515.596187753043);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 555, 24980.026054605343, 2193.4970571384315, 0.495, 1.7183673469387755, 23832.29021893024);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 560, 24649.656294124863, 1717.2907435539803, 0.495, 1.8114285714285714, 23832.29021893024);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 561, 24930.52186058645, 2156.3748585969847, 0.5, 1.582857142857143, 23816.078847968434);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 565, 25089.58091783379, 2417.820308739094, 0.5, 1.666938775510204, 23816.078847968434);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 570, 24835.26195054139, 2115.915089272607, 0.5, 1.363265306122449, 23816.078847968434);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 571, 26242.291615881142, 1882.6166924136735, 0.49, 5.452244897959184, 24089.238287976);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 575, 24596.41771437647, 1748.3913539395612, 0.505, 1.2489795918367348, 23922.41771437647);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 580, 24445.27177874988, 1743.0283277290023, 0.5, 2.543673469387755, 23699.756388160517);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 581, 29601.014707358223, 1283.4862056420927, 0.505, 9.752653061224489, 25072.271495605226);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 585, 26173.51558466516, 2138.1819756471405, 0.5, 3.71265306122449, 24252.25982249178);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 590, 26534.571161548127, 2630.9320110095096, 0.505, 3.9779591836734696, 23946.25982249178);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 591, 29430.020051872627, 1973.8101169073084, 0.5, 1.4440816326530612, 23963.776156803957);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 595, 24374.407558066316, 1335.3573402223296, 0.5, 1.1820408163265306, 23963.776156803957);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 600, 23984.495647074076, 1054.1900601763502, 0.5, 0.6742857142857143, 23749.769052603217);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 601, 28215.425963161586, 175.10060100958222, 0.495, 2.7379591836734694, 27457.341705150437);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 605, 25752.606206250275, 1388.2533627471294, 0.54, 1.8848979591836734, 25159.341705150437);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 610, 25388.330084156514, 709.7167703842769, 0.54, 1.106938775510204, 25159.341705150437);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 611, 28982.542071236243, 1138.6748177638246, 0.485, 7.300408163265306, 26976.241559475257);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 615, 25470.443379622757, 1655.9558169077313, 0.54, 2.003265306122449, 24680.32931785637);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 620, 25097.677567378552, 1645.0508716024187, 0.5, 1.3893877551020408, 24424.32931785637);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 621, 24021.46204815952, 1013.6695689741442, 0.5, 0.796734693877551, 23743.521751783013);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 625, 24057.099671034877, 928.2869520237367, 0.5, 0.9444897959183673, 23743.521751783013);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 630, 24127.789819905705, 1040.0998301119905, 0.5, 0.9689795918367347, 23743.521751783013);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 631, 25961.121539537544, 1820.2383979504739, 0.5, 2.3714285714285714, 24748.388816134448);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 635, 24697.223420080645, 849.3946983553435, 0.515, 0.636734693877551, 24466.55308446229);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 640, 24805.901792210705, 1061.6414529375882, 0.515, 1.0277551020408164, 24466.55308446229);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 641, 24652.364116428133, 1104.5519811366257, 0.5, 2.283265306122449, 23949.41771437647);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 645, 24123.75771437647, 698.0460662536863, 0.5, 0.5510204081632653, 23949.41771437647);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 650, 24145.37401223743, 1029.8194341430826, 0.5, 0.27918367346938777, 23940.494012237414);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 651, 25371.538300228454, 1821.5460856952855, 0.5, 2.642448979591837, 24190.73396769439);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 655, 24244.460127482318, 609.3307518181518, 0.505, 0.9983673469387755, 24101.73396769439);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 660, 24512.86209116287, 1771.2782150840878, 0.505, 0.9093877551020408, 24101.73396769439);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 661, 26290.620255281683, 1930.5653511733958, 0.495, 2.369795918367347, 23730.216858277265);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 665, 24105.8339837049, 1128.5643449343725, 0.495, 0.676734693877551, 23730.216858277265);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 670, 24456.840149889904, 1200.2424328283355, 0.495, 1.28734693877551, 23730.216858277265);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 671, 24813.351022750092, 922.6585146868233, 0.5, 1.7175510204081632, 24389.46070250677);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 675, 24465.63269441194, 464.15817162948446, 0.51, 0.47836734693877553, 24194.858297346298);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 680, 24892.720063884008, 1650.5701904852676, 0.51, 1.822857142857143, 24194.858297346298);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 681, 24451.47629911637, 1289.8112976558537, 0.5, 1.12, 23968.276757502877);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 685, 24137.110391668615, 1395.2676897245412, 0.515, 0.5844897959183674, 23684.593123387396);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 690, 23961.416879974542, 964.0420882224265, 0.515, 0.5485714285714286, 23684.593123387396);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 691, 24255.446210671464, 981.8363211787691, 0.495, 0.6579591836734694, 24033.3071611151);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 695, 23712.682232785555, 1029.9312813884894, 0.495, 0.5518367346938775, 23467.324205917346);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 700, 23757.50520819559, 1174.9779911019566, 0.495, 0.516734693877551, 23467.324205917346);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 701, 24485.902301181428, 324.8534891065012, 0.495, 0.7036734693877551, 24389.1728289318);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 705, 24471.430645808498, 373.34013369557556, 0.495, 0.39755102040816326, 24389.1728289318);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 710, 24569.46690596138, 730.5732639272708, 0.495, 0.8636734693877551, 24389.1728289318);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 711, 23909.928059619375, 448.2430803982383, 0.5, 1.0008163265306123, 23764.103375184826);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 715, 23959.14706529244, 759.9326511960012, 0.5, 0.8220408163265306, 23764.103375184826);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 720, 23957.53574982773, 891.1264437475138, 0.5, 0.5551020408163265, 23764.103375184826);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 721, 23816.9782684593, 290.3823609548472, 0.5, 0.7093877551020408, 23733.252344958477);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 725, 23916.41234495848, 485.04442716779147, 0.5, 1.2881632653061224, 23733.252344958477);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 730, 24055.195792728904, 743.1978246128452, 0.5, 1.8481632653061224, 23733.252344958477);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 731, 24095.308308950986, 538.7165095170501, 0.5, 0.626938775510204, 23825.377656070417);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 735, 23895.339915943754, 344.46832506213457, 0.5, 0.5551020408163265, 23825.377656070417);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 740, 23543.377656070417, 0.0, 0.5, 0.0, 23543.377656070417);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 741, 24036.809287696924, 1.837456774505355E-11, 0.495, 0.0, 24036.809287696906);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 745, 23721.028884557163, 525.4772757664587, 0.5, 0.6253061224489795, 23509.228884557164);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 750, 23509.228884557164, 0.0, 0.5, 0.0, 23509.228884557164);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 751, 23847.95771437647, 1159.0918191869546, 0.5, 0.9306122448979591, 23426.41771437647);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 755, 23374.898059274085, 538.7460304599003, 0.5, 0.6742857142857143, 23251.41771437647);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 760, 23368.709385388924, 555.2874217663493, 0.5, 0.7942857142857143, 23251.41771437647);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 761, 24362.105430918233, 589.100892850671, 0.49, 5.18938775510204, 23340.41771437647);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 765, 23419.59771437647, 521.1206014201415, 0.49, 0.24, 23340.41771437647);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 770, 23403.47771437647, 324.8746326489271, 0.49, 0.5526530612244898, 23340.41771437647);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 771, 23742.523944088705, 226.65335268022156, 0.495, 0.6677551020408163, 23676.479573148386);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 775, 23676.479573148386, 0.0, 0.495, 0.0, 23676.479573148386);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 780, 23705.098565899098, 141.82585115497793, 0.495, 0.396734693877551, 23676.479573148386);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 781, 23554.01935469484, 737.4116257741659, 0.495, 0.6359183673469387, 23379.013781644528);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 785, 23481.353781644535, 603.1667319494769, 0.495, 0.24, 23379.013781644528);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 790, 23388.873781644535, 56.348771784597524, 0.495, 0.276734693877551, 23379.013781644528);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 791, 24942.293557643457, 718.3302226027406, 0.49, 5.978775510204081, 23894.41771437647);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 795, 23902.29771437647, 135.408322778, 0.515, 0.5028571428571429, 23882.41771437647);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 800, 23892.197714376467, 55.406214195057316, 0.495, 0.3183673469387755, 23882.41771437647);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 801, 24455.357030629268, 430.72353355233093, 0.49, 3.9371428571428573, 23987.939567351612);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 805, 23535.69307441771, 394.2330298153538, 0.54, 0.4685714285714286, 23442.626819459885);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 810, 23484.14263735821, 205.45013809867945, 0.54, 0.23755102040816325, 23442.626819459885);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 811, 25006.331187575124, 1216.0670651948362, 0.49, 4.290612244897959, 23649.87030950254);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 815, 23903.525049989956, 768.6899446232111, 0.49, 0.5510204081632653, 23649.87030950254);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 820, 23923.40437740605, 774.8243845393546, 0.49, 0.8310204081632653, 23649.87030950254);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 821, 24000.269264756484, 337.7195044393046, 0.5, 0.7093877551020408, 23918.226825918144);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 825, 23955.714305530928, 265.0765104378782, 0.5, 0.16, 23918.226825918144);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 830, 23968.54178514371, 278.40869408791764, 0.5, 0.356734693877551, 23918.226825918144);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 831, 24343.16882124098, 315.5951837859312, 0.495, 0.6310204081632653, 24272.32382415443);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 835, 24201.12382415444, 35.96143058605869, 0.495, 0.6530612244897959, 24183.32382415443);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 840, 24196.701142632784, 94.59192610127572, 0.495, 0.12, 24183.32382415443);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 841, 24307.90967686073, 293.2416888896418, 0.495, 0.6204081632653061, 24211.323218442558);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 845, 24007.15852845853, 292.6461344021337, 0.51, 0.4751020408163265, 23934.323218442558);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 850, 23934.32321844253, 2.939930839208568E-11, 0.51, 0.0, 23934.323218442558);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 851, 24352.856810815414, 178.97344005437782, 0.495, 0.4383673469387755, 24145.61681081542);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 855, 24145.096810815412, 3.676955262170051, 0.5, 0.12, 24119.61681081542);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 860, 24119.616810815412, 7.34982709802142E-12, 0.5, 0.0, 24119.61681081542);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 861, 24061.952850555914, 95.78635346896984, 0.495, 0.5518367346938775, 23884.65871113014);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 865, 23799.838711130134, 311.7342988206858, 0.515, 0.39755102040816326, 23742.65871113014);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 870, 23814.01266105544, 320.99134433896955, 0.515, 0.5510204081632653, 23742.65871113014);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 871, 23828.288750227657, 255.60090647141172, 0.5, 0.12, 23792.14132337897);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 875, 23716.141323378986, 1.469965419604284E-11, 0.5, 0.0, 23716.14132337897);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 880, 23720.33167113401, 29.63023313106869, 0.5, 0.16, 23716.14132337897);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 881, 23961.87057287159, 51.48784600950365, 0.495, 0.34530612244897957, 23760.124047841357);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 885, 23780.904047841384, 146.93678913056456, 0.495, 0.12, 23760.124047841357);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 890, 23780.44404784138, 143.6840979371066, 0.495, 0.12, 23760.124047841357);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 891, 24391.420702203886, 406.7737157763421, 0.5, 2.5216326530612245, 23734.124047841357);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 895, 23749.164047841383, 106.34885989045691, 0.5, 0.2, 23734.124047841357);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 900, 23734.124047841382, 2.572439484307497E-11, 0.495, 0.0, 23734.124047841357);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 901, 23763.27436463292, 3.67491354901071E-12, 0.495, 0.0, 23763.274364632925);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 905, 23763.27436463292, 3.67491354901071E-12, 0.495, 0.0, 23763.274364632925);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 910, 23765.178585893027, 13.46487765898322, 0.495, 0.08, 23763.274364632925);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 911, 24228.989767728744, 46.15902440846576, 0.495, 0.12, 23909.124047841357);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 915, 23935.091919675822, 144.10882072569552, 0.495, 0.23755102040816325, 23909.124047841357);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 920, 23955.71553517913, 256.9520233250535, 0.5, 0.6261224489795918, 23865.124047841357);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 921, 24403.835252157925, 385.8926217541064, 0.5, 1.0653061224489795, 24118.849766531745);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 925, 23978.44404784139, 143.68409793710643, 0.515, 0.12, 23958.124047841357);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 930, 23978.904047841388, 146.93678913056465, 0.515, 0.12, 23958.124047841357);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 931, 24960.13543087658, 329.8633515138425, 0.495, 0.763265306122449, 23734.124047841357);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 935, 23734.124047841382, 2.572439484307497E-11, 0.495, 0.0, 23734.124047841357);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 940, 23734.124047841382, 2.572439484307497E-11, 0.495, 0.0, 23734.124047841357);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 941, 23734.124047841382, 2.572439484307497E-11, 0.495, 0.0, 23734.124047841357);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 945, 23734.124047841382, 2.572439484307497E-11, 0.495, 0.0, 23734.124047841357);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 950, 23734.124047841382, 2.572439484307497E-11, 0.495, 0.0, 23734.124047841357);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 951, 24032.607044631393, 1.102474064703213E-11, 0.495, 0.0, 24032.607044631404);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 955, 24032.607044631393, 1.102474064703213E-11, 0.495, 0.0, 24032.607044631404);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 960, 24032.607044631393, 1.102474064703213E-11, 0.495, 0.0, 24032.607044631404);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 961, 24024.35411771162, 3.67491354901071E-12, 0.495, 0.0, 24024.354117711617);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 965, 24024.35411771162, 3.67491354901071E-12, 0.495, 0.0, 24024.354117711617);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 970, 24024.35411771162, 3.67491354901071E-12, 0.495, 0.0, 24024.354117711617);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 971, 23734.124047841382, 2.572439484307497E-11, 0.495, 0.0, 23734.124047841357);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 975, 23734.124047841382, 2.572439484307497E-11, 0.495, 0.0, 23734.124047841357);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 980, 23734.124047841382, 2.572439484307497E-11, 0.495, 0.0, 23734.124047841357);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 981, 23734.124047841382, 2.572439484307497E-11, 0.495, 0.0, 23734.124047841357);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 985, 23734.124047841382, 2.572439484307497E-11, 0.495, 0.0, 23734.124047841357);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 990, 23734.124047841382, 2.572439484307497E-11, 0.495, 0.0, 23734.124047841357);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 991, 23983.958057818225, 1.102474064703213E-11, 0.495, 0.0, 23983.958057818214);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 995, 23983.958057818225, 1.102474064703213E-11, 0.495, 0.0, 23983.958057818214);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 1000, 23983.958057818225, 1.102474064703213E-11, 0.495, 0.0, 23983.958057818214);
    }

    @Test
    public void test_mmas_moving_asymmetric_dynamic_tsp_kroA150_with_seed_1_mag_0_1_freq_10() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA150));
        MMAS_MADTSP mmas_madtsp = new MMAS_MADTSP(graph, 0.8, 1000, 0.1, 10);
        mmas_madtsp.setMmasSeed(1);
        mmas_madtsp.setDbgpSeed(1);
        mmas_madtsp.setStatisticInterval(1);
        mmas_madtsp.setShowLog(false);
        mmas_madtsp.run();

        assertThat(mmas_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(34266.3288347032);
        assertThat(mmas_madtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(34266.3288347032);
        assertThat(TestUtils.getTourString(mmas_madtsp.getGlobalStatistics())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");

        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 1, 40137.01783897471, 1991.2217779278133, 0.0, 81.65306122448979, 36214.666772975776);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 5, 32977.46612502786, 1654.6677727041329, 0.7166666666666667, 7.913469387755102, 31969.83644211484);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 10, 32607.239974748623, 1497.1134373909554, 0.5, 9.71265306122449, 31721.92074084098);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 11, 35445.73616242004, 1684.9165161151573, 0.49666666666666665, 18.356734693877552, 32564.686252461386);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 15, 33737.774640408024, 2157.6482731804717, 0.5033333333333333, 10.798367346938775, 31634.785711089404);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 20, 34565.663906848116, 2437.9391493686862, 0.51, 12.537142857142857, 31553.568746593774);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 21, 36746.56938722019, 2813.9418382149643, 0.49, 28.30204081632653, 33185.70434889424);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 25, 33749.6448952816, 2058.396123134155, 0.5266666666666666, 14.124081632653061, 31963.949524921303);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 30, 32880.70192754947, 1772.9227176679228, 0.5033333333333333, 9.634285714285713, 31290.033813403566);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 31, 37629.20149739945, 1957.914679106804, 0.5033333333333333, 24.42612244897959, 33479.81295293265);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 35, 33034.79834790708, 1754.1239062180225, 0.5333333333333333, 8.30204081632653, 31712.40229409907);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 40, 32836.752034686106, 2110.952668848965, 0.5066666666666667, 7.99265306122449, 30974.676239931745);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 41, 38260.54235463352, 1675.653049037997, 0.4866666666666667, 34.883265306122446, 34835.51242545792);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 45, 35916.13880006925, 2866.622812367444, 0.5066666666666667, 10.995102040816327, 33349.83067322055);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 50, 35212.614607656054, 2470.085931067196, 0.5133333333333333, 12.555102040816326, 32166.004298419994);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 51, 35689.20736323271, 1015.2219270074485, 0.5166666666666667, 6.419591836734694, 33131.038913704746);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 55, 34546.25576092887, 2069.7987931775992, 0.5433333333333333, 11.684897959183674, 32596.458881762414);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 60, 32809.49401834521, 1663.7538282783496, 0.5066666666666667, 6.169795918367347, 31729.082943405923);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 61, 36815.28016843392, 2194.1801424793452, 0.5066666666666667, 23.908571428571427, 34076.25661575048);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 65, 34531.219289486304, 2138.281656424886, 0.5233333333333333, 5.515102040816327, 33032.410388135235);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 70, 34294.94538347587, 1828.3288917078091, 0.52, 12.281632653061225, 32459.284115018534);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 71, 36016.821480351326, 1798.1015660316498, 0.5233333333333333, 25.216326530612246, 33284.44015406408);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 75, 33583.30578498982, 1925.4680051837663, 0.5366666666666666, 4.676734693877551, 32354.923698758095);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 80, 33353.82163725968, 2482.3347394245175, 0.5066666666666667, 9.481632653061224, 31380.140786712815);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 81, 36285.187214201695, 2221.388469980581, 0.5166666666666667, 11.271020408163265, 33752.55374136157);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 85, 34497.23434832272, 2353.889346851014, 0.5266666666666666, 6.627755102040816, 32615.519116439355);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 90, 34473.11031037891, 2340.6825434619873, 0.5, 7.2359183673469385, 32357.321130989643);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 91, 34762.30102907646, 3112.348504793667, 0.5066666666666667, 9.084897959183673, 32092.13082650039);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 95, 33507.87134102909, 2371.050437400609, 0.5066666666666667, 10.648163265306122, 31749.13082650039);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 100, 32895.19545319384, 2043.562733412994, 0.5033333333333333, 10.498775510204082, 31412.64460079763);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 101, 37441.5084273682, 2433.0291075696896, 0.5, 17.29877551020408, 31839.729865737518);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 105, 32780.18754398822, 2272.8127689992507, 0.53, 10.48408163265306, 30500.981503203868);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 110, 32459.6854280351, 2089.7149270013388, 0.5066666666666667, 6.541224489795918, 30488.981503203868);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 111, 35865.9822514126, 1026.951722843961, 0.49, 14.12, 31914.4404446387);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 115, 31440.69283455806, 1786.8414318018026, 0.5133333333333333, 3.9404081632653063, 30459.32076942085);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 120, 31209.88066236218, 1499.724817984771, 0.51, 3.3151020408163263, 30271.839272394252);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 121, 34646.535835870156, 2240.9772494871404, 0.5333333333333333, 4.717551020408163, 31400.394508227608);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 125, 32678.463361595273, 2900.8519665503813, 0.54, 4.1085714285714285, 30737.90845408836);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 130, 32066.17785477465, 2285.468155091305, 0.49666666666666665, 3.446530612244898, 30557.880594971106);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 131, 35635.63014256285, 1317.7366425252408, 0.5, 10.673469387755102, 31969.79818343917);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 135, 33144.43489243363, 2388.220201082664, 0.49666666666666665, 3.7820408163265307, 31378.136939810425);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 140, 32290.463458301892, 2122.2589227882972, 0.5133333333333333, 4.564897959183673, 31199.136939810425);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 141, 36587.974688672715, 4801.658415607923, 0.48333333333333334, 12.694693877551021, 32300.397416160264);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 145, 32810.87013174348, 1487.3622924411666, 0.51, 4.42530612244898, 31838.172177697095);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 150, 33136.04902117148, 2338.29210267034, 0.5066666666666667, 4.453877551020408, 31451.720255754703);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 151, 37855.57277089766, 1652.1467871721816, 0.49666666666666665, 16.100408163265307, 34191.07713362253);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 155, 34985.35420224216, 1794.636986552713, 0.5033333333333333, 7.661224489795918, 33578.10172630922);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 160, 35140.726553805966, 1666.66500818312, 0.49333333333333335, 6.053877551020408, 33357.20113547319);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 161, 38638.578261225906, 1890.8356935703007, 0.49333333333333335, 16.52408163265306, 35599.540099944534);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 165, 33078.06782037881, 1489.6300813381333, 0.5366666666666666, 5.888163265306122, 32058.496971898327);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 170, 32505.719429194396, 1199.592789308302, 0.5, 4.57469387755102, 31727.16907363695);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 171, 34255.96774120963, 1868.0091213452258, 0.49666666666666665, 15.44, 31628.552688829368);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 175, 34017.29224532898, 2472.2073453396556, 0.5033333333333333, 6.7910204081632655, 31563.696146396847);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 180, 32211.766243081893, 2044.693985346369, 0.5066666666666667, 3.1697959183673468, 31078.492630479945);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 181, 37689.865584422674, 589.9414510087931, 0.5, 7.996734693877551, 36608.45905653777);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 185, 33186.299785036485, 1855.0752595523195, 0.5266666666666666, 4.6938775510204085, 31911.022057386825);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 190, 32672.592038430073, 1956.5176612602904, 0.5, 3.2253061224489796, 31628.56721334091);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 191, 35279.550629429, 2432.585034370147, 0.5133333333333333, 10.601632653061225, 32623.115842098796);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 195, 33323.367520958825, 2133.9751500013085, 0.5366666666666666, 6.804897959183673, 31841.682748809464);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 200, 34610.98305667325, 2304.276612004989, 0.5033333333333333, 8.88408163265306, 31493.27252945259);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 201, 36811.05133772433, 727.9439353226993, 0.49333333333333335, 22.128979591836735, 34832.83861875876);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 205, 33108.697022225584, 1762.142568232926, 0.5166666666666667, 5.603265306122449, 32115.707175182204);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 210, 32145.523237262554, 2493.3440005267826, 0.5033333333333333, 4.945306122448979, 30631.739123954514);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 211, 35364.76518850711, 2196.6189587802032, 0.49666666666666665, 12.534693877551021, 33206.78384251823);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 215, 32755.196290112322, 1462.691809542756, 0.5333333333333333, 6.575510204081633, 31814.4523383918);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 220, 33667.079168339864, 2830.9882454320073, 0.5066666666666667, 3.9771428571428573, 31692.099284335985);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 221, 37426.8669453129, 2898.563367707296, 0.49666666666666665, 8.520816326530612, 33651.355943284405);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 225, 36853.40135497002, 2914.0927118788736, 0.49666666666666665, 7.066122448979592, 33241.63498106044);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 230, 36808.63874202853, 2814.2759884071825, 0.5, 8.697142857142858, 32261.69248466935);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 231, 36734.5644740941, 1770.0207143326331, 0.49333333333333335, 13.692244897959183, 33165.93719391439);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 235, 33199.62592143227, 2139.30473952029, 0.52, 6.180408163265306, 31572.071356320357);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 240, 33774.47431532777, 2617.7283283067877, 0.51, 5.853877551020408, 31506.071356320357);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 241, 36169.7173752084, 2010.5846845662493, 0.49, 13.902857142857142, 33291.94172854832);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 245, 36160.17392205118, 4723.160462066026, 0.5166666666666667, 6.133061224489796, 32219.44406301278);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 250, 32504.87985192332, 2696.5979745285026, 0.5066666666666667, 1.9093877551020408, 31328.754635932386);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 251, 36530.152653610545, 1999.81146063565, 0.5066666666666667, 8.141224489795919, 30927.72707552733);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 255, 32737.98975850446, 2892.9974703572943, 0.5, 5.555918367346939, 30918.802751854153);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 260, 32880.441944744576, 3228.105231094462, 0.5133333333333333, 4.1624489795918365, 30808.375605285153);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 261, 38493.59200193022, 1585.3995420647375, 0.48333333333333334, 14.01061224489796, 33415.48437250922);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 265, 34260.31308083605, 1353.7070250176157, 0.5133333333333333, 6.781224489795918, 33012.874425652495);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 270, 34657.48269048547, 2110.136961194661, 0.5066666666666667, 7.570612244897959, 32547.87442565249);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 271, 35780.24944040818, 2045.5015877250883, 0.5, 9.103673469387756, 32453.007461244106);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 275, 33639.80349701121, 2349.358606394297, 0.52, 4.943673469387755, 31946.41016931381);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 280, 32083.565574421984, 1226.7901311574756, 0.51, 3.363265306122449, 31510.94779510996);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 281, 34402.46749069656, 1656.1778745885063, 0.5, 10.838367346938776, 32084.25172181879);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 285, 32519.602732882264, 2131.257824811395, 0.5133333333333333, 3.596734693877551, 31411.631754543163);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 290, 32231.964419197688, 1430.2072291110023, 0.5133333333333333, 3.446530612244898, 31411.631754543163);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 291, 33200.358406773776, 1490.250524593173, 0.49, 4.636734693877551, 32120.94992283368);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 295, 32141.061790087537, 1442.6770523808511, 0.5233333333333333, 3.2555102040816326, 31501.06278614125);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 300, 31854.59527452747, 1742.7182340808213, 0.49666666666666665, 3.3779591836734695, 30956.06278614125);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 301, 41025.844923013654, 2815.969546053725, 0.49, 13.947755102040816, 33422.82820262659);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 305, 33974.83415381278, 2416.881276785468, 0.52, 4.793469387755102, 32539.162075554577);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 310, 33019.40017998705, 2285.34365519573, 0.5533333333333333, 3.990204081632653, 31761.865524976834);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 311, 40170.72666809943, 2339.024402968114, 0.5066666666666667, 12.404081632653062, 33321.04408410314);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 315, 39051.631514355846, 2823.225523486421, 0.5066666666666667, 7.791836734693877, 32525.36496317725);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 320, 39048.673519686374, 2969.149233791585, 0.5066666666666667, 7.377959183673469, 32525.36496317725);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 321, 36051.84800802919, 2813.8640777263836, 0.49666666666666665, 7.8277551020408165, 32727.83416085366);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 325, 35061.16647680626, 2669.933788576802, 0.51, 5.576326530612245, 32276.11546992681);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 330, 34359.49328306531, 2781.6376351669073, 0.49666666666666665, 4.788571428571428, 32230.11546992681);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 331, 38267.54173798846, 2553.087623309392, 0.4766666666666667, 17.82530612244898, 32840.466797540656);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 335, 33364.88197031575, 2805.676996197641, 0.5233333333333333, 3.5812244897959182, 31691.980959916767);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 340, 31975.201867182375, 3081.4249920059547, 0.5033333333333333, 1.5453061224489797, 30571.425363609258);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 341, 35445.550804728635, 2836.9720329459788, 0.5133333333333333, 8.125714285714286, 31773.486204902314);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 345, 34580.075211238196, 2829.615537605584, 0.5166666666666667, 4.925714285714286, 30883.101175844706);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 350, 33445.65179024203, 2755.595645700221, 0.5, 5.082448979591836, 30858.101175844706);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 351, 35224.462897809855, 2789.266301547794, 0.5033333333333333, 7.966530612244898, 32117.32338152636);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 355, 34163.08688706926, 1664.4879926920237, 0.5066666666666667, 6.7673469387755105, 32114.32338152636);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 360, 33044.06752198704, 1380.1858313745931, 0.5133333333333333, 4.08734693877551, 31792.404088371994);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 361, 33240.011966318445, 742.1570630570423, 0.49333333333333335, 2.1583673469387756, 32851.926236214276);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 365, 33051.7741675012, 1777.8317215572001, 0.5033333333333333, 3.72, 31991.795328088694);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 370, 32039.12091292872, 817.6324186822264, 0.5033333333333333, 1.4489795918367347, 31660.295846009325);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 371, 33692.88251976884, 2032.7826491091525, 0.5066666666666667, 3.817142857142857, 32582.724755311392);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 375, 34080.03073995573, 2485.4014460528324, 0.5066666666666667, 3.3436734693877552, 32582.724755311392);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 380, 32787.450275466785, 2160.7142104685026, 0.5133333333333333, 2.3142857142857145, 31855.722773715774);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 381, 36013.870721118365, 1341.314875623453, 0.5033333333333333, 9.73795918367347, 35149.15070061892);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 385, 34874.01604352042, 4071.844904668532, 0.5033333333333333, 6.39265306122449, 31519.15070061892);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 390, 33498.79345875364, 2904.5107127721253, 0.5033333333333333, 4.611428571428571, 31519.15070061892);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 391, 39686.38312163358, 3523.02536912254, 0.49333333333333335, 8.661224489795918, 32566.148940462142);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 395, 34300.78445990885, 2341.258044142568, 0.51, 4.751020408163265, 32279.278558248072);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 400, 33565.43462867763, 1962.9999806601888, 0.49333333333333335, 3.4661224489795917, 32195.678507793986);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 401, 33557.8680200304, 1799.226665382168, 0.49333333333333335, 5.315918367346939, 32051.00940078282);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 405, 33527.94744314561, 2185.2469610876274, 0.5133333333333333, 6.846530612244898, 31341.80562481748);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 410, 32975.31077448868, 2039.0359750710447, 0.5133333333333333, 5.421224489795918, 31099.733946663415);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 411, 38017.93150394048, 684.505699037245, 0.48333333333333334, 12.227755102040817, 37360.04835693512);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 415, 36743.981998565934, 825.8148921630789, 0.53, 9.286530612244897, 35396.312099580726);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 420, 35130.008529816194, 1448.155681315517, 0.5133333333333333, 5.07265306122449, 34035.75307391819);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 421, 36526.18718693179, 1302.3280878792732, 0.5066666666666667, 17.94530612244898, 34797.357292747394);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 425, 35016.45662194051, 1411.9248778121696, 0.52, 4.97795918367347, 33828.23182893743);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 430, 34879.08052309973, 1765.1553533809777, 0.5133333333333333, 5.610612244897959, 33635.23182893743);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 431, 35349.84740606934, 1407.2520734710804, 0.49333333333333335, 6.264489795918367, 33960.32430613501);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 435, 34768.51020017056, 1495.203797358996, 0.5, 5.059591836734694, 33670.32430613501);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 440, 34939.88147819482, 1939.673687427688, 0.5, 5.5902040816326535, 33670.32430613501);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 441, 35041.176031827235, 1269.505791445907, 0.4866666666666667, 10.489795918367347, 33480.93590481217);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 445, 34033.46209388921, 1517.2166800408993, 0.5466666666666666, 3.306938775510204, 32992.93590481217);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 450, 33347.17627491066, 865.7097436994188, 0.5033333333333333, 3.4824489795918367, 32772.193707981234);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 451, 37421.1547472226, 735.8734458668522, 0.49666666666666665, 11.246530612244898, 35598.95558573578);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 455, 34173.84905542072, 811.2520429364608, 0.5233333333333333, 6.111836734693878, 33409.345326762195);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 460, 33339.42827486261, 1218.8896809866637, 0.5366666666666666, 5.314285714285714, 32619.60332076562);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 461, 34761.94418950443, 1719.812293740331, 0.5066666666666667, 9.664489795918367, 33240.32845927739);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 465, 33017.5155305565, 1944.7418963382952, 0.5233333333333333, 2.079183673469388, 32190.247277500966);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 470, 33094.38733048019, 2219.503628274997, 0.5033333333333333, 2.0179591836734696, 32126.247277500966);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 471, 34604.693320180464, 2025.3529876649459, 0.49666666666666665, 4.05795918367347, 32946.58014241255);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 475, 34127.505938592854, 1878.2047276745848, 0.49666666666666665, 3.073469387755102, 32946.58014241255);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 480, 33364.60694668786, 1550.392586795835, 0.5066666666666667, 2.4244897959183676, 32492.9339592063);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 481, 34960.47044153175, 2254.3385231952448, 0.49666666666666665, 9.857142857142858, 32784.147110481645);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 485, 34607.2855242966, 2354.610971907359, 0.5, 4.44734693877551, 32592.094248838675);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 490, 34038.92142962369, 2000.0669314426996, 0.5, 3.9314285714285715, 32426.856225791907);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 491, 35560.24321159395, 924.8722606751204, 0.49666666666666665, 4.661224489795918, 33764.08339341689);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 495, 34118.92862745201, 942.4863944235226, 0.5033333333333333, 2.333061224489796, 33690.3188630397);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 500, 33756.58366356215, 966.5910963565524, 0.5, 1.7551020408163265, 33328.54369171337);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 501, 35504.68595715308, 974.5071066400527, 0.49666666666666665, 5.8212244897959184, 33907.54558749925);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 505, 33996.80637229069, 1066.3136818013065, 0.5, 3.3053061224489797, 33210.9410301253);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 510, 34450.74557169197, 1119.476559201636, 0.49666666666666665, 5.155102040816327, 33040.4784274281);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 511, 36249.425534257105, 1698.9148137747989, 0.49333333333333335, 15.332244897959184, 33259.481028207316);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 515, 33031.87263030907, 283.7656461517796, 0.5033333333333333, 1.4685714285714286, 32594.76009797434);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 520, 32638.16865906264, 295.4186365163531, 0.5033333333333333, 0.24, 32594.76009797434);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 521, 35022.6232678873, 896.3611070329991, 0.49, 5.997551020408164, 34098.663304823254);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 525, 33427.6781660229, 343.457181137823, 0.5, 1.609795918367347, 33053.12206636909);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 530, 33071.59023361476, 590.8990117928556, 0.49666666666666665, 1.5755102040816327, 32862.53398773554);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 531, 34414.246855492864, 948.4009932222928, 0.5, 2.719183673469388, 33756.27826368593);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 535, 33864.72357650894, 643.9995740903653, 0.5133333333333333, 1.276734693877551, 33619.48357650895);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 540, 33722.68579426696, 410.6409051237047, 0.5, 0.9616326530612245, 33321.8892536998);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 541, 34386.588619671886, 1297.7730538318312, 0.5066666666666667, 6.915102040816326, 32814.05264136286);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 545, 33145.13060824396, 1031.1362031879103, 0.52, 3.6106122448979594, 32330.754677590186);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 550, 32910.22882498971, 953.193115545397, 0.52, 2.9918367346938775, 32330.754677590186);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 551, 33599.8479650374, 1184.7215575940306, 0.49666666666666665, 3.5395918367346937, 32621.16549626462);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 555, 33079.61786572118, 952.7213190176632, 0.5, 2.306938775510204, 32620.16549626462);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 560, 33199.61137607561, 994.5862078045941, 0.5, 2.0930612244897957, 32620.16549626462);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 561, 34545.808339990144, 815.4982967217935, 0.49, 10.303673469387755, 32990.232664827534);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 565, 33213.33876247823, 903.276369459119, 0.5, 2.6277551020408163, 32490.557159509146);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 570, 32943.933657858215, 1111.8596634941919, 0.5, 2.0261224489795917, 32261.557159509146);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 571, 34220.59932817158, 1108.483487176726, 0.5, 3.7224489795918365, 33258.45571448692);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 575, 33137.777328288925, 977.4790538111075, 0.5033333333333333, 2.12, 32619.901861293);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 580, 32822.34988078552, 1155.124816463164, 0.5033333333333333, 1.7804081632653062, 32181.836347192566);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 581, 34296.22515813688, 1791.05408681218, 0.5, 3.4293877551020406, 32837.13682052589);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 585, 34023.55132432233, 1816.0830654099389, 0.5, 3.3853061224489798, 32732.000732444114);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 590, 33399.16632398, 1314.393928611093, 0.5, 1.9314285714285715, 32732.000732444114);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 591, 35705.010926246985, 225.00025589843432, 0.49, 5.603265306122449, 34622.97594168305);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 595, 34583.800498752884, 517.9678543325122, 0.5233333333333333, 6.450612244897959, 33648.3279981191);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 600, 33754.58608375018, 364.89431596987663, 0.49333333333333335, 0.8710204081632653, 33648.3279981191);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 601, 34864.409318374994, 355.87861959152013, 0.49333333333333335, 3.0546938775510206, 34113.450416870226);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 605, 34173.137256147485, 309.5109485666188, 0.5, 1.1689795918367347, 34011.65010861719);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 610, 34211.19233794649, 896.762810337616, 0.5033333333333333, 2.1216326530612246, 33749.64680884475);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 611, 34609.61009002754, 748.6155189744585, 0.49666666666666665, 4.077551020408163, 33868.87215647632);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 615, 33596.409582527376, 349.6669721058926, 0.5066666666666667, 2.2710204081632654, 33413.19483640084);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 620, 33458.82557840151, 504.42234462954235, 0.49666666666666665, 2.4791836734693877, 33241.19483640084);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 621, 33803.5438365547, 615.4399961665325, 0.49666666666666665, 1.2808163265306123, 33569.04402815956);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 625, 33959.03295854286, 807.9370064724701, 0.49666666666666665, 2.183673469387755, 33531.458786421994);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 630, 33893.00704865773, 710.7832911199525, 0.49666666666666665, 2.6530612244897958, 33525.458786421994);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 631, 34557.33486897553, 633.9043378484945, 0.49333333333333335, 5.881632653061224, 33478.938843985234);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 635, 33955.313586750395, 703.5294699939619, 0.49333333333333335, 4.420408163265306, 33478.938843985234);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 640, 33890.921953308, 763.6214107521766, 0.49333333333333335, 3.216326530612245, 33478.938843985234);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 641, 34505.015316734156, 732.7385262120247, 0.49333333333333335, 3.5983673469387756, 34045.141103703456);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 645, 33715.76779994787, 620.3889935367387, 0.5166666666666667, 2.045714285714286, 33416.690358044085);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 650, 33610.703995675154, 723.7375075404387, 0.49333333333333335, 2.1640816326530614, 33290.312922555226);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 651, 33472.959118623876, 808.7858754074502, 0.49666666666666665, 1.8024489795918368, 33217.73955033082);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 655, 33227.621210786085, 787.9179579206346, 0.49666666666666665, 1.666938775510204, 32953.85715700727);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 660, 33252.19450020344, 841.5706644195172, 0.49666666666666665, 2.1248979591836736, 32953.85715700727);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 661, 34452.81662091194, 579.6212700077715, 0.49, 9.700408163265307, 33498.942249357686);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 665, 33648.21059040785, 543.2758175696267, 0.5, 2.1379591836734693, 33191.942249357686);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 670, 33243.562249357696, 259.38120162244223, 0.5, 0.43918367346938775, 33191.942249357686);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 671, 34193.20664861608, 611.9437233485072, 0.49, 4.669387755102041, 33793.81618975487);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 675, 33880.36017039594, 648.5148514344698, 0.5166666666666667, 1.1395918367346938, 33706.01529500572);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 680, 33897.45487399059, 505.44255987732595, 0.49333333333333335, 1.8612244897959183, 33671.81618975487);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 681, 34557.24641214906, 297.8023692273097, 0.5066666666666667, 1.0783673469387756, 34433.186361782224);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 685, 33397.62991878367, 440.1366397298151, 0.5166666666666667, 0.6285714285714286, 33295.68991878366);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 690, 33305.04991878367, 213.27626617672612, 0.5066666666666667, 0.35918367346938773, 33265.68991878366);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 691, 33730.7540074463, 206.73591696095394, 0.49666666666666665, 0.4775510204081633, 33685.4873159244);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 695, 33799.03044421032, 421.0100406736139, 0.49666666666666665, 0.7542857142857143, 33685.4873159244);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 700, 33753.85465173557, 329.34479873776064, 0.49666666666666665, 0.43918367346938775, 33685.4873159244);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 701, 35145.89960923353, 741.6745349269895, 0.49, 3.470204081632653, 33903.94085985759);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 705, 33378.20085985755, 267.52095550190654, 0.51, 0.4791836734693877, 33317.94085985759);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 710, 33392.06413400424, 383.5750911599084, 0.49333333333333335, 0.4383673469387755, 33316.94085985759);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 711, 33913.525603154834, 368.97733076395076, 0.5033333333333333, 2.115918367346939, 33678.726570411774);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 715, 33769.86498772652, 396.9074531421043, 0.5033333333333333, 0.5175510204081633, 33678.726570411774);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 720, 33798.292300115674, 486.78827704959747, 0.5033333333333333, 0.43755102040816324, 33678.726570411774);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 721, 35924.55556150428, 449.95126038931977, 0.48333333333333334, 3.6163265306122447, 34429.581949909);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 725, 34084.700688197816, 844.1842572305895, 0.49333333333333335, 2.373877551020408, 33543.070640651466);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 730, 33590.62123807632, 360.73646442662607, 0.5066666666666667, 0.6693877551020408, 33499.070640651466);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 731, 33624.76162523309, 273.2925620740524, 0.49333333333333335, 0.5306122448979592, 33542.66555340133);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 735, 33753.33949665051, 455.09096449082875, 0.49333333333333335, 1.3771428571428572, 33542.66555340133);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 740, 33602.545553401294, 239.41814160713102, 0.49333333333333335, 0.34530612244897957, 33542.66555340133);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 741, 33742.19712798736, 524.622665921369, 0.49666666666666665, 0.4506122448979592, 33589.04918508745);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 745, 33627.956170812424, 270.6758929749563, 0.49666666666666665, 0.2, 33589.04918508745);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 750, 33891.64134933132, 700.8018270160795, 0.49666666666666665, 1.0114285714285713, 33589.04918508745);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 751, 33450.84770415414, 364.76822064165367, 0.49666666666666665, 0.723265306122449, 33328.94085985759);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 755, 33408.78085985755, 273.49942058663396, 0.49666666666666665, 0.4506122448979592, 33328.94085985759);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 760, 33370.56085985755, 186.40321557180877, 0.49666666666666665, 0.43755102040816324, 33328.94085985759);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 761, 33590.05060808419, 390.24095120835284, 0.49666666666666665, 0.84, 33422.850608084205);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 765, 33607.43148092203, 763.1711930591739, 0.49666666666666665, 0.6808163265306122, 33422.850608084205);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 770, 33502.69060808419, 273.49942058663373, 0.49666666666666665, 0.4506122448979592, 33422.850608084205);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 771, 33625.203220171185, 528.3017086111482, 0.49666666666666665, 1.2669387755102042, 33393.47528572314);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 775, 33442.80459720581, 248.6997244383645, 0.49666666666666665, 0.31755102040816324, 33393.47528572314);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 780, 33544.60459720581, 354.4312930111137, 0.49666666666666665, 0.8914285714285715, 33393.47528572314);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 781, 34485.22697448347, 477.3147364314126, 0.49666666666666665, 2.810612244897959, 33909.83920845259);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 785, 33962.28243930624, 396.5965574010996, 0.5033333333333333, 0.916734693877551, 33815.7415134044);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 790, 33949.420221204404, 416.6033766458892, 0.49666666666666665, 1.423673469387755, 33786.7415134044);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 791, 34044.571816610245, 377.9647512446067, 0.49666666666666665, 1.3110204081632653, 33804.29820157518);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 795, 33884.95105474082, 274.87143693636955, 0.49666666666666665, 0.6612244897959184, 33804.29820157518);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 800, 33824.258201575176, 141.1385135248349, 0.49333333333333335, 0.12, 33804.29820157518);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 801, 34839.16161394448, 577.8840307477947, 0.49333333333333335, 3.4653061224489794, 33972.94085985759);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 805, 33664.54085985755, 290.2765043533353, 0.52, 0.34530612244897957, 33591.94085985759);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 810, 33657.142837295585, 433.6497458966768, 0.52, 0.19918367346938776, 33591.94085985759);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 811, 33834.83210441504, 326.17573890935125, 0.49666666666666665, 0.3526530612244898, 33753.972104415014);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 815, 33753.97210441504, 2.939930839208568E-11, 0.49666666666666665, 0.0, 33753.972104415014);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 820, 33761.25210441505, 51.47737367038062, 0.49666666666666665, 0.16, 33753.972104415014);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 821, 35603.90232575428, 1.469965419604284E-11, 0.49333333333333335, 0.0, 35603.902325754265);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 825, 35603.90232575428, 1.469965419604284E-11, 0.49333333333333335, 0.0, 35603.902325754265);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 830, 35603.90232575428, 1.469965419604284E-11, 0.49333333333333335, 0.0, 35603.902325754265);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 831, 33595.24085985755, 23.334523779156058, 0.49333333333333335, 0.12, 33591.94085985759);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 835, 33591.940859857554, 3.67491354901071E-11, 0.49333333333333335, 0.0, 33591.94085985759);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 840, 33591.940859857554, 3.67491354901071E-11, 0.49333333333333335, 0.0, 33591.94085985759);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 841, 35022.96799040188, 287.49346775698405, 0.49, 0.9420408163265306, 33863.94085985759);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 845, 33873.70085985755, 69.0136218438071, 0.49, 0.16, 33863.94085985759);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 850, 33863.940859857554, 3.67491354901071E-11, 0.49, 0.0, 33863.94085985759);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 851, 34229.94328813302, 642.4562006923322, 0.49333333333333335, 0.5510204081632653, 34017.94355794142);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 855, 34102.74345001805, 419.65063300888465, 0.49333333333333335, 0.23510204081632652, 34017.94355794142);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 860, 33834.324182099954, 7.34982709802142E-12, 0.49333333333333335, 0.0, 33834.32418209996);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 861, 33818.44363369606, 0.0, 0.49666666666666665, 0.0, 33818.44363369606);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 865, 33818.44363369606, 0.0, 0.49666666666666665, 0.0, 33818.44363369606);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 870, 33818.44363369606, 0.0, 0.49666666666666665, 0.0, 33818.44363369606);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 871, 33792.940859857554, 3.67491354901071E-11, 0.49333333333333335, 0.0, 33792.94085985759);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 875, 33792.940859857554, 3.67491354901071E-11, 0.49333333333333335, 0.0, 33792.94085985759);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 880, 33792.940859857554, 3.67491354901071E-11, 0.49333333333333335, 0.0, 33792.94085985759);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 881, 33897.196802736034, 1.469965419604284E-11, 0.49666666666666665, 0.0, 33897.19680273605);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 885, 33897.196802736034, 1.469965419604284E-11, 0.49666666666666665, 0.0, 33897.19680273605);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 890, 33897.196802736034, 1.469965419604284E-11, 0.49666666666666665, 0.0, 33897.19680273605);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 891, 33792.940859857554, 3.67491354901071E-11, 0.49333333333333335, 0.0, 33792.94085985759);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 895, 33792.940859857554, 3.67491354901071E-11, 0.49333333333333335, 0.0, 33792.94085985759);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 900, 33792.940859857554, 3.67491354901071E-11, 0.49333333333333335, 0.0, 33792.94085985759);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 901, 34266.3288347032, 0.0, 0.49333333333333335, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 905, 34266.3288347032, 0.0, 0.49333333333333335, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 910, 34266.3288347032, 0.0, 0.49333333333333335, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 911, 34266.3288347032, 0.0, 0.49, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 915, 34266.3288347032, 0.0, 0.49, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 920, 34266.3288347032, 0.0, 0.49, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 921, 34266.3288347032, 0.0, 0.49, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 925, 34266.3288347032, 0.0, 0.49, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 930, 34266.3288347032, 0.0, 0.49, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 931, 34266.3288347032, 0.0, 0.49333333333333335, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 935, 34266.3288347032, 0.0, 0.49333333333333335, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 940, 34266.3288347032, 0.0, 0.49333333333333335, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 941, 34266.3288347032, 0.0, 0.49, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 945, 34266.3288347032, 0.0, 0.49, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 950, 34266.3288347032, 0.0, 0.49, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 951, 34266.3288347032, 0.0, 0.49, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 955, 34266.3288347032, 0.0, 0.49, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 960, 34266.3288347032, 0.0, 0.49, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 961, 34266.3288347032, 0.0, 0.49333333333333335, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 965, 34266.3288347032, 0.0, 0.49333333333333335, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 970, 34266.3288347032, 0.0, 0.49333333333333335, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 971, 34266.3288347032, 0.0, 0.49, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 975, 34266.3288347032, 0.0, 0.49, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 980, 34266.3288347032, 0.0, 0.49, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 981, 34266.3288347032, 0.0, 0.49, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 985, 34266.3288347032, 0.0, 0.49, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 990, 34266.3288347032, 0.0, 0.49, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 991, 34266.3288347032, 0.0, 0.49333333333333335, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 995, 34266.3288347032, 0.0, 0.49333333333333335, 0.0, 34266.3288347032);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 1000, 34266.3288347032, 0.0, 0.49333333333333335, 0.0, 34266.3288347032);

        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[115, 49, 43, 113, 143, 63, 39, 53, 1, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 6, 56, 116, 19, 11, 26, 85, 149, 61, 76, 109, 59, 90, 97, 22, 44, 31, 108, 16, 14, 10, 73, 20, 140, 58, 126, 103, 98, 101, 110, 35, 23, 37, 17, 136, 78, 133, 52, 15, 87, 21, 93, 69, 3, 64, 65, 123, 25, 117, 128, 118, 142, 96, 55, 138, 88, 41, 121, 30, 79, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 83, 9, 105, 18, 74, 91, 7, 129, 0, 112, 71, 34, 119, 114, 122, 42, 127, 45, 2, 13, 28, 131, 111, 33, 82, 54, 148, 134, 139, 67, 84, 100, 29, 120, 106, 38, 146, 36, 4, 145, 102, 32, 75, 12, 94, 125, 81, 95, 77, 51, 99, 40, 70, 47, 135, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 6, 116, 82, 54, 148, 11, 26, 85, 149, 61, 76, 109, 59, 97, 22, 44, 31, 108, 90, 130, 92, 27, 141, 104, 66, 147, 137, 132, 88, 30, 79, 41, 121, 138, 55, 142, 118, 3, 64, 65, 25, 123, 117, 128, 69, 87, 15, 21, 93, 136, 78, 17, 37, 23, 98, 101, 110, 103, 35, 126, 58, 140, 73, 20, 71, 9, 83, 89, 105, 133, 52, 18, 96, 74, 91, 7, 0, 129, 62, 48, 5, 112, 10, 14, 16, 46, 107, 57, 56, 19, 34, 119, 114, 122, 42, 127, 135, 2, 13, 40, 70, 99, 47, 77, 51, 95, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 146, 38, 106, 120, 29, 100, 111, 131, 28, 45, 33, 134, 139, 84, 67, 43, 113, 143, 63, 39, 53, 1, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 56, 8, 6, 116, 82, 54, 148, 26, 11, 114, 119, 122, 42, 127, 135, 2, 13, 40, 70, 99, 47, 77, 51, 95, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 33, 134, 139, 84, 67, 43, 113, 143, 63, 39, 53, 1, 107, 57, 66, 104, 141, 92, 27, 130, 46, 62, 48, 5, 112, 126, 140, 73, 20, 71, 9, 83, 89, 105, 133, 52, 18, 96, 74, 91, 7, 0, 129, 147, 132, 137, 79, 30, 88, 121, 41, 138, 55, 142, 118, 117, 123, 25, 128, 3, 64, 65, 21, 93, 69, 87, 15, 136, 78, 17, 23, 37, 103, 101, 110, 98, 35, 58, 14, 16, 10, 31, 108, 90, 22, 44, 97, 59, 61, 76, 109, 149, 34, 85, 19, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 124, 50, 144, 86, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 76, 109, 97, 22, 44, 90, 108, 31, 10, 16, 14, 58, 140, 73, 20, 71, 126, 35, 37, 103, 101, 110, 98, 17, 23, 93, 21, 87, 15, 69, 52, 133, 18, 96, 74, 91, 7, 0, 129, 147, 132, 137, 79, 30, 88, 121, 41, 138, 55, 142, 118, 117, 123, 25, 128, 3, 64, 65, 136, 78, 105, 89, 62, 48, 5, 112, 9, 83, 46, 130, 92, 27, 104, 141, 66, 57, 107, 63, 39, 53, 1, 43, 113, 143, 67, 84, 106, 111, 131, 28, 45, 33, 134, 139, 54, 82, 148, 114, 119, 122, 42, 127, 135, 2, 13, 99, 40, 70, 47, 100, 120, 29, 36, 4, 32, 75, 12, 94, 125, 81, 146, 38, 95, 77, 51, 102, 145, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 124, 50, 144, 86, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 76, 109, 97, 22, 44, 90, 108, 31, 10, 16, 14, 140, 58, 73, 20, 71, 126, 35, 37, 103, 101, 110, 98, 17, 23, 136, 78, 52, 133, 18, 96, 74, 91, 7, 129, 0, 62, 48, 5, 112, 9, 83, 105, 89, 15, 21, 87, 93, 69, 128, 25, 123, 117, 64, 65, 3, 118, 142, 55, 138, 121, 41, 88, 79, 30, 132, 137, 147, 141, 104, 66, 92, 27, 130, 46, 57, 107, 63, 39, 53, 1, 143, 43, 113, 67, 84, 131, 28, 45, 33, 82, 54, 148, 114, 119, 122, 42, 127, 135, 2, 13, 99, 40, 70, 47, 95, 51, 77, 4, 36, 145, 32, 75, 12, 94, 125, 81, 146, 38, 100, 120, 29, 106, 111, 102, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 76, 109, 97, 22, 44, 90, 108, 31, 10, 16, 14, 140, 58, 73, 20, 71, 126, 35, 37, 103, 110, 101, 98, 17, 23, 136, 78, 52, 133, 18, 96, 74, 91, 7, 129, 0, 62, 48, 5, 112, 46, 130, 27, 92, 104, 66, 141, 147, 88, 137, 132, 121, 41, 30, 79, 138, 55, 142, 118, 3, 64, 65, 123, 117, 25, 128, 69, 15, 21, 87, 93, 105, 89, 9, 83, 57, 107, 63, 39, 53, 1, 143, 43, 113, 67, 84, 100, 120, 29, 106, 111, 131, 28, 45, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 2, 13, 99, 40, 70, 47, 95, 77, 51, 4, 36, 145, 102, 32, 75, 12, 94, 125, 81, 146, 38, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 44, 90, 108, 31, 10, 16, 14, 140, 58, 73, 20, 71, 126, 35, 37, 103, 110, 101, 98, 23, 17, 136, 78, 52, 133, 18, 96, 74, 91, 7, 121, 41, 30, 79, 88, 137, 132, 147, 141, 104, 66, 107, 57, 92, 27, 46, 130, 97, 0, 129, 62, 48, 5, 112, 9, 83, 105, 89, 15, 21, 87, 93, 69, 128, 25, 123, 117, 65, 64, 3, 118, 142, 55, 138, 53, 1, 143, 43, 113, 67, 84, 100, 38, 29, 120, 106, 111, 131, 28, 45, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 2, 70, 40, 13, 99, 47, 95, 77, 51, 4, 36, 145, 102, 32, 75, 12, 94, 125, 81, 146, 63, 39, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 44, 90, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 37, 103, 110, 101, 98, 23, 17, 136, 78, 52, 133, 18, 96, 74, 91, 7, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 92, 27, 46, 130, 97, 112, 9, 83, 48, 5, 62, 129, 0, 89, 105, 87, 15, 21, 93, 69, 128, 25, 123, 117, 65, 64, 3, 118, 142, 55, 138, 30, 79, 53, 39, 63, 113, 143, 43, 1, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 38, 100, 120, 106, 111, 131, 28, 45, 2, 135, 127, 42, 122, 119, 114, 148, 54, 82, 33, 13, 99, 70, 40, 47, 51, 77, 95, 29, 67, 84, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 44, 90, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 37, 103, 110, 101, 98, 23, 17, 136, 78, 52, 133, 18, 96, 55, 138, 30, 79, 88, 132, 147, 141, 104, 66, 107, 57, 92, 27, 46, 130, 97, 112, 9, 83, 48, 5, 62, 129, 0, 89, 105, 87, 15, 21, 93, 69, 128, 25, 123, 117, 64, 65, 3, 118, 142, 74, 91, 7, 121, 41, 137, 53, 39, 63, 43, 1, 143, 113, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 127, 42, 122, 119, 114, 148, 54, 82, 33, 13, 99, 70, 40, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 44, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 37, 103, 110, 101, 98, 23, 17, 136, 78, 52, 133, 18, 74, 91, 7, 41, 121, 79, 30, 88, 132, 147, 104, 141, 66, 107, 57, 92, 27, 130, 97, 90, 108, 46, 62, 129, 0, 112, 9, 83, 48, 5, 89, 105, 87, 15, 21, 93, 69, 128, 25, 123, 117, 64, 65, 3, 118, 142, 55, 138, 96, 137, 53, 39, 63, 43, 1, 143, 113, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 127, 42, 122, 119, 114, 148, 54, 82, 33, 13, 99, 40, 70, 47, 95, 77, 51, 36, 4, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 46, 62, 5, 48, 0, 129, 91, 7, 41, 121, 79, 30, 88, 132, 147, 104, 141, 66, 107, 57, 92, 27, 130, 44, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 37, 103, 110, 101, 98, 23, 17, 136, 78, 105, 133, 52, 87, 15, 21, 93, 69, 128, 25, 123, 117, 64, 65, 3, 96, 118, 142, 55, 138, 74, 18, 89, 112, 9, 83, 137, 53, 39, 63, 43, 1, 143, 113, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 127, 42, 122, 119, 114, 148, 54, 82, 33, 13, 99, 70, 40, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 37, 103, 110, 101, 98, 23, 17, 136, 78, 105, 133, 52, 87, 15, 21, 93, 69, 128, 25, 123, 117, 64, 65, 3, 96, 118, 142, 55, 138, 74, 18, 5, 48, 89, 112, 9, 83, 62, 129, 0, 147, 104, 141, 66, 107, 57, 27, 92, 130, 46, 44, 91, 7, 41, 121, 79, 30, 88, 132, 137, 53, 39, 63, 143, 113, 43, 1, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 127, 42, 122, 119, 114, 148, 54, 82, 33, 13, 99, 70, 40, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 37, 103, 110, 101, 98, 23, 17, 136, 78, 105, 133, 52, 87, 15, 21, 93, 69, 128, 25, 123, 117, 64, 65, 3, 96, 118, 142, 55, 138, 74, 18, 48, 5, 62, 129, 0, 147, 104, 141, 66, 107, 57, 27, 92, 130, 46, 44, 112, 9, 83, 89, 91, 7, 41, 121, 79, 30, 88, 132, 137, 53, 39, 63, 143, 113, 43, 1, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 127, 42, 122, 119, 114, 148, 54, 82, 33, 13, 40, 70, 99, 47, 95, 77, 51, 36, 4, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 37, 103, 98, 101, 110, 23, 17, 136, 78, 105, 133, 52, 93, 21, 15, 87, 69, 128, 25, 123, 117, 64, 65, 3, 118, 142, 55, 138, 79, 30, 88, 41, 121, 91, 7, 129, 0, 147, 104, 141, 66, 107, 57, 27, 92, 130, 46, 44, 112, 9, 83, 89, 48, 5, 62, 18, 96, 74, 132, 137, 53, 39, 63, 143, 113, 43, 1, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 13, 40, 70, 99, 47, 51, 77, 95, 36, 4, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 112, 9, 83, 89, 48, 5, 62, 129, 0, 91, 7, 41, 121, 88, 30, 79, 138, 55, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 15, 21, 93, 87, 136, 78, 105, 133, 52, 18, 96, 74, 17, 23, 37, 103, 98, 101, 110, 35, 126, 46, 44, 130, 92, 27, 104, 141, 66, 107, 57, 147, 132, 137, 53, 39, 63, 143, 113, 43, 1, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 127, 42, 122, 82, 54, 148, 119, 114, 33, 13, 40, 70, 99, 47, 51, 77, 95, 36, 4, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 20, 71, 112, 9, 83, 133, 52, 18, 96, 74, 89, 48, 5, 62, 129, 0, 91, 7, 41, 121, 88, 30, 79, 138, 55, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 15, 21, 93, 87, 136, 78, 105, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 46, 130, 92, 27, 104, 141, 66, 107, 57, 147, 132, 137, 53, 39, 63, 143, 113, 43, 1, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 13, 40, 70, 99, 47, 51, 77, 95, 36, 4, 146, 102, 145, 32, 12, 75, 94, 125, 81, 33, 82, 54, 148, 119, 114, 122, 42, 127, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 20, 71, 37, 103, 110, 101, 98, 35, 126, 58, 140, 112, 46, 130, 92, 27, 104, 141, 66, 107, 57, 147, 132, 137, 88, 30, 79, 121, 41, 7, 91, 74, 89, 48, 5, 62, 129, 0, 138, 55, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 15, 21, 93, 87, 136, 78, 105, 17, 23, 83, 9, 133, 52, 18, 96, 53, 39, 63, 143, 113, 43, 1, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 13, 47, 51, 77, 95, 36, 4, 102, 145, 32, 12, 75, 94, 125, 81, 146, 33, 82, 54, 148, 119, 114, 122, 42, 127, 40, 70, 99, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 20, 71, 83, 9, 133, 52, 18, 96, 74, 89, 5, 48, 62, 0, 129, 91, 7, 121, 41, 88, 30, 79, 138, 55, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 15, 21, 93, 87, 136, 78, 105, 17, 23, 37, 103, 110, 101, 98, 35, 126, 140, 58, 112, 46, 130, 92, 27, 104, 141, 66, 107, 57, 147, 132, 137, 53, 39, 63, 143, 113, 43, 1, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 119, 114, 127, 40, 70, 99, 135, 13, 47, 51, 77, 95, 36, 4, 102, 145, 32, 12, 75, 94, 125, 81, 146, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 83, 9, 105, 78, 136, 133, 52, 18, 74, 89, 5, 48, 62, 0, 129, 91, 7, 121, 41, 88, 30, 79, 138, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 15, 21, 93, 87, 17, 23, 37, 103, 110, 101, 98, 35, 112, 46, 130, 92, 27, 104, 141, 66, 107, 57, 147, 132, 137, 53, 39, 63, 143, 113, 43, 1, 67, 84, 38, 100, 106, 120, 29, 51, 77, 95, 4, 36, 102, 145, 32, 12, 75, 94, 125, 81, 146, 111, 131, 28, 45, 2, 42, 122, 135, 13, 47, 99, 40, 70, 127, 82, 54, 148, 119, 114, 33, 96, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 83, 9, 105, 89, 48, 5, 62, 0, 129, 91, 7, 121, 41, 88, 30, 79, 138, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 15, 21, 93, 87, 136, 133, 52, 18, 74, 96, 78, 17, 23, 37, 103, 110, 101, 98, 35, 112, 46, 130, 92, 27, 104, 141, 66, 107, 57, 147, 132, 137, 53, 39, 63, 143, 113, 43, 1, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 13, 47, 99, 40, 70, 127, 135, 42, 122, 119, 114, 148, 54, 82, 33, 95, 51, 77, 4, 36, 102, 145, 32, 12, 75, 94, 125, 81, 146, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 83, 9, 105, 78, 133, 52, 18, 74, 96, 3, 64, 65, 69, 15, 21, 93, 87, 136, 17, 23, 37, 103, 110, 101, 98, 35, 112, 46, 130, 92, 27, 104, 141, 147, 132, 137, 53, 39, 63, 143, 113, 43, 1, 67, 84, 38, 100, 120, 29, 106, 111, 95, 77, 51, 36, 4, 102, 145, 32, 12, 75, 94, 125, 81, 146, 47, 99, 40, 70, 13, 135, 42, 122, 119, 114, 148, 54, 82, 33, 45, 2, 131, 28, 127, 57, 107, 66, 129, 91, 7, 121, 41, 88, 79, 30, 138, 55, 142, 118, 117, 25, 123, 128, 89, 48, 5, 62, 0, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 83, 9, 112, 46, 130, 92, 27, 104, 141, 147, 132, 137, 88, 121, 41, 79, 30, 138, 55, 142, 118, 117, 25, 123, 128, 65, 64, 3, 96, 18, 133, 52, 87, 21, 15, 93, 69, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 105, 89, 48, 5, 62, 0, 129, 91, 7, 74, 66, 107, 57, 63, 39, 53, 143, 113, 43, 1, 67, 84, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 13, 47, 99, 40, 70, 127, 42, 122, 119, 114, 148, 54, 82, 33, 95, 77, 51, 36, 4, 102, 145, 32, 12, 75, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 83, 9, 112, 46, 130, 92, 27, 104, 141, 147, 132, 137, 88, 41, 121, 30, 79, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 96, 18, 133, 52, 87, 15, 93, 21, 69, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 105, 89, 48, 5, 62, 0, 129, 91, 7, 138, 74, 66, 107, 57, 63, 39, 53, 143, 113, 43, 1, 67, 84, 146, 38, 100, 120, 29, 106, 111, 131, 28, 2, 135, 42, 122, 114, 119, 148, 54, 82, 33, 45, 127, 13, 47, 99, 40, 70, 51, 77, 95, 4, 36, 102, 145, 32, 12, 75, 125, 81, 94, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 83, 9, 112, 46, 130, 92, 27, 104, 141, 147, 132, 137, 88, 41, 121, 79, 30, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 133, 52, 87, 15, 93, 21, 69, 78, 136, 17, 23, 37, 103, 98, 35, 101, 110, 105, 89, 48, 5, 62, 91, 7, 66, 107, 57, 129, 0, 74, 96, 53, 39, 63, 143, 113, 43, 1, 67, 84, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 127, 135, 42, 122, 114, 119, 148, 54, 82, 33, 2, 13, 47, 99, 40, 70, 51, 77, 95, 4, 36, 102, 145, 32, 12, 75, 125, 94, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 83, 9, 112, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 0, 129, 91, 7, 41, 121, 79, 30, 138, 55, 142, 118, 117, 25, 123, 128, 65, 64, 3, 18, 133, 52, 87, 15, 93, 21, 69, 78, 136, 17, 23, 37, 103, 98, 110, 101, 35, 105, 89, 48, 5, 62, 74, 96, 88, 132, 137, 39, 63, 143, 113, 43, 1, 53, 67, 84, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 13, 47, 99, 40, 70, 135, 42, 122, 114, 119, 148, 54, 82, 33, 127, 51, 77, 95, 4, 36, 102, 145, 32, 12, 75, 125, 94, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 0, 129, 91, 7, 41, 121, 30, 79, 55, 142, 118, 117, 25, 123, 128, 65, 64, 3, 18, 133, 52, 87, 15, 93, 21, 69, 78, 136, 17, 23, 37, 103, 101, 110, 98, 35, 83, 105, 89, 48, 5, 62, 74, 96, 138, 88, 132, 137, 39, 53, 63, 143, 113, 43, 1, 67, 84, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 13, 135, 42, 122, 114, 119, 148, 54, 82, 33, 127, 40, 70, 99, 47, 77, 51, 95, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 0, 129, 62, 5, 48, 91, 7, 41, 121, 30, 79, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 133, 52, 87, 15, 93, 21, 69, 17, 23, 37, 103, 101, 110, 98, 35, 83, 105, 89, 78, 136, 74, 96, 138, 88, 132, 137, 39, 53, 63, 143, 113, 43, 1, 81, 125, 94, 75, 12, 32, 145, 102, 4, 36, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 13, 135, 42, 122, 114, 119, 148, 82, 54, 33, 127, 70, 99, 40, 47, 77, 51, 95, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 104, 141, 147, 66, 107, 57, 92, 0, 129, 62, 5, 48, 91, 7, 41, 121, 30, 79, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 133, 52, 105, 78, 136, 87, 15, 93, 21, 69, 17, 23, 37, 103, 101, 110, 98, 35, 83, 89, 74, 96, 138, 55, 88, 132, 137, 39, 53, 63, 143, 113, 43, 1, 81, 125, 94, 75, 12, 32, 145, 102, 4, 36, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 42, 122, 114, 119, 148, 54, 82, 33, 127, 40, 70, 99, 135, 13, 47, 77, 51, 95, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 104, 141, 147, 66, 107, 57, 92, 0, 129, 62, 5, 48, 89, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 78, 136, 87, 15, 21, 69, 93, 17, 23, 37, 103, 101, 110, 98, 35, 83, 105, 91, 7, 41, 121, 30, 79, 88, 132, 137, 39, 53, 63, 143, 113, 43, 1, 81, 125, 94, 75, 12, 32, 145, 102, 4, 36, 51, 77, 95, 120, 29, 106, 111, 131, 28, 45, 2, 42, 122, 114, 119, 33, 82, 54, 148, 127, 40, 70, 99, 135, 13, 47, 100, 38, 84, 67, 146, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 65, 64, 3, 18, 52, 133, 78, 136, 87, 15, 21, 69, 93, 17, 23, 37, 103, 101, 110, 98, 35, 83, 105, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 75, 12, 32, 145, 102, 4, 36, 51, 77, 95, 120, 29, 106, 111, 131, 28, 45, 2, 42, 122, 114, 119, 33, 82, 54, 148, 127, 40, 70, 99, 135, 13, 47, 100, 38, 146, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 105, 78, 136, 87, 15, 21, 69, 52, 133, 93, 17, 23, 37, 103, 101, 110, 98, 35, 83, 18, 96, 138, 55, 142, 118, 117, 25, 123, 128, 65, 64, 3, 74, 91, 7, 41, 121, 79, 30, 88, 132, 137, 104, 141, 147, 66, 107, 57, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 75, 12, 32, 145, 102, 4, 36, 77, 95, 51, 47, 99, 70, 40, 2, 42, 122, 114, 119, 82, 54, 148, 33, 45, 127, 135, 13, 131, 111, 28, 29, 106, 120, 100, 38, 146, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 37, 103, 101, 110, 98, 35, 23, 17, 78, 136, 87, 15, 21, 69, 52, 133, 93, 105, 18, 96, 138, 55, 142, 118, 117, 25, 123, 128, 65, 64, 3, 74, 91, 7, 41, 121, 79, 30, 88, 132, 137, 66, 141, 104, 147, 107, 57, 63, 39, 53, 143, 113, 67, 84, 38, 100, 106, 120, 29, 111, 28, 45, 122, 114, 119, 82, 54, 148, 33, 131, 47, 99, 70, 40, 2, 42, 127, 135, 13, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 43, 1, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 37, 103, 101, 110, 98, 35, 23, 17, 78, 136, 133, 52, 87, 15, 21, 69, 93, 105, 18, 96, 138, 55, 142, 118, 117, 25, 123, 128, 65, 64, 3, 74, 91, 7, 41, 121, 79, 30, 88, 132, 137, 66, 141, 104, 147, 107, 57, 63, 39, 53, 143, 113, 1, 43, 67, 84, 38, 100, 106, 120, 29, 111, 28, 45, 122, 114, 119, 82, 54, 148, 33, 131, 47, 99, 70, 40, 2, 42, 127, 135, 13, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 78, 136, 133, 52, 87, 15, 21, 69, 93, 105, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 65, 64, 3, 18, 91, 7, 41, 121, 79, 30, 88, 132, 137, 66, 141, 104, 147, 107, 57, 63, 39, 53, 1, 43, 113, 143, 67, 84, 38, 100, 120, 29, 106, 111, 28, 45, 122, 114, 119, 148, 54, 82, 33, 131, 47, 99, 70, 40, 2, 42, 127, 135, 13, 51, 77, 95, 4, 36, 146, 12, 94, 125, 81, 32, 75, 145, 102, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 78, 136, 133, 52, 93, 21, 69, 15, 87, 105, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 57, 107, 63, 39, 53, 1, 143, 113, 43, 67, 84, 38, 100, 29, 120, 106, 111, 28, 45, 122, 114, 119, 148, 54, 82, 33, 131, 13, 2, 42, 127, 135, 70, 40, 99, 47, 51, 77, 95, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 146, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 93, 21, 69, 15, 87, 105, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 3, 64, 65, 18, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 63, 39, 53, 1, 143, 113, 43, 67, 84, 38, 100, 29, 120, 106, 111, 28, 45, 122, 114, 119, 148, 54, 82, 33, 131, 13, 2, 42, 127, 135, 70, 40, 99, 47, 51, 77, 95, 4, 36, 146, 81, 125, 94, 12, 75, 32, 145, 102, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 87, 15, 21, 69, 93, 105, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 66, 104, 141, 107, 57, 63, 39, 53, 1, 143, 113, 43, 67, 84, 100, 29, 120, 106, 111, 131, 13, 2, 42, 127, 135, 70, 40, 99, 47, 51, 77, 95, 4, 36, 146, 81, 125, 94, 12, 75, 32, 145, 102, 38, 28, 45, 122, 114, 119, 148, 54, 82, 33, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 52, 133, 87, 15, 21, 69, 93, 105, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 63, 39, 53, 1, 143, 113, 43, 67, 84, 100, 120, 29, 106, 111, 131, 13, 2, 28, 45, 122, 114, 119, 148, 54, 82, 33, 42, 127, 135, 70, 40, 99, 47, 51, 77, 95, 4, 36, 146, 81, 125, 94, 12, 75, 32, 145, 102, 38, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 93, 21, 15, 87, 105, 74, 18, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 63, 39, 53, 1, 143, 113, 43, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 45, 122, 114, 119, 148, 54, 82, 33, 42, 127, 135, 2, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 146, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 96, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 3, 96, 138, 55, 142, 118, 117, 123, 25, 128, 21, 93, 15, 87, 105, 74, 18, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 63, 39, 53, 1, 143, 113, 43, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 45, 122, 114, 119, 148, 82, 54, 33, 42, 127, 135, 2, 13, 70, 40, 99, 47, 51, 77, 95, 146, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 3, 96, 138, 55, 142, 118, 117, 123, 25, 128, 15, 87, 93, 21, 105, 74, 18, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 63, 39, 53, 1, 143, 113, 43, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 114, 119, 148, 54, 82, 33, 122, 42, 127, 135, 13, 99, 40, 70, 47, 51, 77, 95, 146, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 3, 96, 74, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 63, 39, 53, 1, 143, 113, 43, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 42, 127, 135, 13, 70, 40, 99, 47, 51, 77, 95, 4, 102, 145, 32, 75, 12, 94, 125, 81, 146, 36, 33, 122, 119, 114, 148, 54, 82, 55, 142, 118, 117, 123, 25, 128, 93, 21, 15, 87, 18, 105, 138, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 91, 7, 41, 121, 79, 30, 88, 132, 137, 66, 107, 57, 104, 141, 147, 138, 55, 142, 118, 96, 3, 53, 39, 63, 143, 1, 43, 113, 67, 84, 100, 38, 146, 77, 51, 95, 106, 120, 29, 111, 131, 28, 45, 2, 42, 127, 122, 119, 114, 148, 54, 82, 33, 13, 70, 40, 99, 135, 47, 4, 36, 145, 102, 32, 75, 12, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 121, 41, 88, 132, 137, 66, 107, 57, 104, 141, 147, 7, 91, 138, 55, 142, 118, 96, 3, 79, 30, 53, 39, 63, 143, 1, 43, 113, 67, 84, 100, 38, 146, 77, 51, 95, 106, 120, 29, 111, 131, 28, 45, 2, 135, 127, 42, 122, 119, 114, 148, 54, 82, 33, 13, 70, 40, 99, 47, 4, 36, 145, 102, 32, 75, 12, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 30, 88, 132, 137, 66, 107, 57, 104, 141, 147, 7, 91, 121, 41, 79, 138, 53, 39, 63, 143, 1, 43, 113, 67, 84, 100, 38, 146, 77, 51, 95, 29, 120, 106, 111, 131, 28, 33, 54, 82, 148, 114, 119, 122, 42, 127, 135, 45, 2, 13, 70, 40, 99, 47, 4, 36, 145, 102, 32, 75, 12, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 79, 88, 132, 137, 66, 107, 57, 104, 141, 147, 7, 91, 121, 41, 30, 53, 39, 63, 143, 1, 43, 113, 67, 84, 100, 38, 146, 51, 95, 77, 36, 4, 102, 145, 32, 75, 12, 94, 125, 81, 29, 120, 106, 111, 131, 28, 33, 54, 82, 148, 114, 119, 42, 127, 135, 2, 45, 13, 70, 40, 99, 47, 122, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 79, 88, 132, 137, 121, 41, 30, 7, 91, 141, 147, 104, 66, 107, 57, 63, 39, 53, 113, 43, 143, 1, 125, 81, 94, 12, 75, 32, 145, 102, 36, 4, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 127, 42, 122, 119, 114, 148, 54, 82, 33, 13, 70, 40, 99, 47, 77, 51, 95, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 79, 30, 121, 41, 88, 132, 137, 7, 91, 141, 147, 104, 66, 107, 57, 63, 39, 53, 143, 1, 43, 113, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 45, 135, 127, 42, 122, 119, 114, 148, 54, 82, 33, 2, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 146, 12, 75, 32, 145, 102, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 79, 30, 121, 41, 88, 132, 137, 7, 91, 141, 147, 104, 66, 57, 107, 63, 39, 53, 143, 113, 1, 43, 84, 67, 38, 100, 120, 29, 106, 111, 131, 28, 45, 135, 127, 42, 122, 119, 114, 148, 54, 82, 33, 2, 13, 70, 40, 99, 47, 51, 77, 95, 36, 4, 146, 145, 102, 32, 12, 75, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 79, 30, 121, 41, 88, 132, 137, 7, 91, 141, 147, 104, 66, 107, 57, 63, 39, 53, 143, 113, 1, 43, 84, 67, 38, 100, 120, 29, 106, 111, 131, 28, 45, 122, 119, 114, 148, 54, 82, 33, 2, 135, 127, 42, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 146, 145, 102, 32, 12, 75, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 79, 30, 121, 41, 88, 132, 137, 7, 91, 141, 147, 66, 104, 107, 57, 63, 39, 53, 143, 113, 43, 1, 84, 67, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 42, 122, 114, 119, 148, 54, 82, 33, 127, 135, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 146, 145, 102, 32, 12, 75, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 88, 79, 30, 121, 41, 53, 39, 63, 143, 113, 43, 1, 67, 84, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 114, 119, 148, 54, 82, 33, 127, 135, 13, 99, 70, 40, 47, 51, 77, 95, 4, 36, 146, 145, 102, 32, 12, 75, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 30, 79, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 53, 39, 63, 143, 43, 1, 113, 67, 84, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 119, 114, 82, 54, 148, 33, 127, 135, 13, 99, 70, 40, 47, 51, 77, 95, 4, 36, 146, 145, 102, 32, 75, 12, 94, 125, 81, 38, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 53, 39, 63, 143, 43, 1, 113, 67, 84, 100, 29, 120, 106, 111, 131, 28, 2, 42, 122, 119, 114, 148, 54, 82, 33, 45, 127, 135, 13, 99, 70, 40, 47, 51, 77, 95, 38, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 143, 113, 43, 1, 53, 39, 67, 84, 38, 100, 29, 120, 106, 111, 131, 28, 2, 42, 122, 114, 119, 148, 54, 82, 33, 45, 127, 135, 13, 99, 70, 40, 47, 51, 77, 95, 4, 36, 102, 145, 32, 75, 12, 125, 94, 81, 146, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 1, 143, 113, 43, 67, 84, 38, 100, 29, 120, 106, 111, 131, 28, 122, 114, 119, 148, 54, 82, 33, 45, 2, 42, 127, 135, 13, 99, 70, 40, 47, 51, 77, 95, 36, 4, 102, 145, 32, 75, 12, 125, 94, 81, 146, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 1, 143, 113, 43, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 122, 114, 119, 148, 54, 82, 33, 45, 2, 42, 127, 135, 13, 70, 40, 99, 47, 95, 77, 51, 36, 4, 102, 145, 32, 75, 12, 125, 94, 81, 146, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 1, 143, 113, 43, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 122, 119, 114, 148, 54, 82, 33, 45, 2, 42, 127, 135, 13, 70, 40, 99, 47, 95, 77, 51, 36, 4, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 1, 143, 113, 43, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 122, 119, 114, 148, 54, 82, 33, 45, 2, 127, 42, 135, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 1, 143, 113, 43, 125, 81, 94, 12, 75, 32, 145, 102, 4, 36, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 13, 70, 40, 99, 47, 51, 77, 95, 84, 67, 33, 54, 82, 148, 114, 119, 122, 42, 127, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 77, 51, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 13, 70, 40, 99, 47, 42, 127, 122, 114, 119, 148, 54, 82, 33, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 127, 13, 70, 40, 99, 47, 42, 122, 114, 119, 148, 54, 82, 33, 84, 67, 38, 146, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 146, 38, 100, 120, 29, 106, 111, 28, 45, 2, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 131, 13, 70, 40, 99, 47, 51, 77, 95, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 95, 51, 47, 99, 40, 70, 13, 2, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 111, 131, 28, 45, 29, 120, 106, 100, 38, 146, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 95, 51, 47, 99, 40, 70, 13, 2, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 111, 131, 28, 45, 29, 120, 106, 100, 38, 146, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 47, 99, 40, 70, 13, 2, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 45, 28, 131, 111, 29, 120, 106, 100, 38, 146, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 13, 70, 40, 99, 47, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 120, 29, 106, 111, 131, 28, 45, 2, 135, 70, 40, 99, 47, 13, 127, 42, 122, 114, 119, 148, 54, 82, 33, 84, 67, 100, 38, 146, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 135, 70, 40, 99, 47, 13, 127, 42, 122, 114, 119, 148, 54, 82, 33, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 135, 70, 40, 99, 47, 13, 127, 42, 122, 114, 119, 148, 54, 82, 33, 67, 84, 146, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 135, 70, 40, 99, 47, 13, 33, 82, 54, 148, 119, 114, 122, 42, 127, 84, 67, 146, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 135, 70, 40, 99, 47, 13, 42, 127, 122, 114, 119, 148, 82, 54, 33, 67, 84, 146, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 135, 70, 40, 99, 47, 13, 127, 42, 122, 114, 119, 148, 82, 54, 33, 67, 84, 146, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 135, 13, 99, 47, 70, 40, 127, 42, 122, 114, 119, 148, 54, 82, 33, 67, 84, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 135, 13, 99, 47, 70, 40, 127, 42, 122, 114, 119, 148, 54, 82, 33, 67, 84, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 135, 13, 99, 47, 70, 40, 127, 42, 122, 114, 119, 148, 54, 82, 33, 67, 84, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 135, 13, 99, 47, 70, 40, 127, 42, 122, 114, 119, 148, 54, 82, 33, 67, 84, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 135, 13, 99, 47, 70, 40, 127, 42, 122, 114, 119, 148, 54, 82, 33, 67, 84, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 135, 13, 99, 47, 70, 40, 127, 122, 42, 119, 114, 148, 54, 82, 33, 67, 84, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 135, 13, 99, 47, 70, 40, 127, 114, 119, 148, 82, 54, 33, 67, 84, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 127, 135, 13, 99, 47, 70, 40, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 127, 135, 13, 99, 70, 40, 47, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 127, 135, 13, 99, 70, 40, 47, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 127, 135, 13, 99, 70, 40, 47, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 70, 40, 99, 47, 13, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 70, 40, 99, 47, 13, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");

        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[115, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 10, 14, 16, 73, 140, 58, 126, 20, 71, 9, 112, 46, 130, 27, 92, 0, 129, 62, 5, 48, 89, 83, 35, 37, 103, 101, 110, 98, 23, 17, 136, 78, 133, 52, 69, 65, 64, 25, 123, 117, 128, 93, 21, 15, 87, 18, 105, 74, 96, 3, 118, 142, 55, 138, 41, 121, 79, 30, 88, 7, 91, 141, 104, 66, 107, 57, 147, 132, 137, 63, 39, 53, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 33, 82, 54, 148, 114, 119, 135, 127, 40, 70, 99, 47, 13, 84, 67, 115]");
    }

}
