package com.github.schmittjoaopedro.thesis;

import com.github.schmittjoaopedro.vrp.thesis.ALNS_DPDP;
import com.github.schmittjoaopedro.vrp.thesis.algorithms.LNSOptimizer;
import com.github.schmittjoaopedro.vrp.thesis.problem.Instance;
import com.github.schmittjoaopedro.vrp.thesis.problem.Reader;
import com.github.schmittjoaopedro.vrp.thesis.problem.Solution;
import org.junit.Test;

import java.nio.file.Paths;
import java.util.Random;

import static org.assertj.core.api.AssertionsForClassTypes.assertThat;

public class DynamicALNSDPDPTest {

    private static int maxIterations = 25000;

    private static final String dpdptw100Directory;

    static {
        dpdptw100Directory = Paths.get(DynamicALNSDPDPTest.class.getClassLoader().getResource("dpdptw_100").getFile().substring(1)).toString();
    }

    @Test
    public void dpdptw_lc103_a_0_1_test() throws Exception {
        Instance instance = Reader.getInstance(Paths.get(dpdptw100Directory, "lc103_a_0.1.txt").toFile());
        ALNS_DPDP ALNSDPDP = new ALNS_DPDP(instance, new Random(1), maxIterations, true, true, LNSOptimizer.Type.ALNS);
        ALNSDPDP.init();
        ALNSDPDP.run();
        Solution solutionBest = ALNSDPDP.getSolutionBest();
        assertThat(solutionBest.feasible).isTrue();
        assertThat(solutionBest.totalCost).isEqualTo(1039.159290519845);
        assertThat(solutionBest.tours.size()).isEqualTo(9);
        int counter = 0;
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [0, 1]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   2, TC =    126.74]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [2]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   3, TC =    193.89]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [3]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   4, TC =    273.21]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [4, 5]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   5, TC =    341.20]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [6, 7]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    459.67]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [8, 9]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    499.14]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [10, 11, 12]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    563.83]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    578.25] at iteration 425");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [13, 14]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    619.87]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [15, 16, 17, 18]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    791.21]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    797.38] at iteration 607");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    792.16] at iteration 608");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    788.73] at iteration 615");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    736.82] at iteration 616");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    734.41] at iteration 654");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    722.64] at iteration 658");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    713.37] at iteration 660");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [19]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    728.15]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [20, 21, 22, 23]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    880.76]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    842.01] at iteration 789");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    786.93] at iteration 790");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    980.57] at iteration 797");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    978.77] at iteration 799");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    959.42] at iteration 802");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [24]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    965.79]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    960.04] at iteration 846");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    957.05] at iteration 864");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    947.09] at iteration 867");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [25]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    947.89]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    945.86] at iteration 957");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    942.00] at iteration 958");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    909.35] at iteration 964");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [26, 27]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    919.43]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [28]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    920.19]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [29]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    922.50]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [30]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1005.89]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    942.04] at iteration 1194");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    833.19] at iteration 1195");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    792.91] at iteration 1213");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [31]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    838.91]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [32, 33, 34]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    883.91]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    894.77] at iteration 1356");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [35]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    894.85]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [36]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    923.85]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [37]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    931.30]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    926.31] at iteration 1649");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [38]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    928.50]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [39]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    931.43]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [40]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    935.22]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [41]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    945.88]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [42]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    972.65]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [43]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1007.47]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1003.12] at iteration 2010");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    988.97] at iteration 2011");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [44, 45]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1042.75]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [46, 47, 48]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1056.92]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1055.97] at iteration 2054");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [49]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1073.25]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1072.25] at iteration 2071");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [50]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1077.23]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [51]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1077.32]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1062.51] at iteration 2582");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1061.14] at iteration 2606");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1060.49] at iteration 2647");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1054.42] at iteration 2661");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1053.21] at iteration 4133");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1039.16] at iteration 7225");
    }

    @Test
    public void dpdptw_lc103_a_0_5_test() throws Exception {
        Instance instance = Reader.getInstance(Paths.get(dpdptw100Directory, "lc103_a_0.5.txt").toFile());
        ALNS_DPDP ALNSDPDP = new ALNS_DPDP(instance, new Random(1), maxIterations, true, true, LNSOptimizer.Type.ALNS);
        ALNSDPDP.init();
        ALNSDPDP.run();
        Solution solutionBest = ALNSDPDP.getSolutionBest();
        assertThat(solutionBest.totalCost).isEqualTo(1039.159290519845);
        assertThat(solutionBest.tours.size()).isEqualTo(9);
        assertThat(solutionBest.feasible).isTrue();
        int counter = 0;
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [0]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   1, TC =     26.01]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [1]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   2, TC =    126.74]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [2]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   3, TC =    193.89]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [3]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   4, TC =    273.21]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [4]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   4, TC =    283.78]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [5]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   5, TC =    341.20]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [6]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   6, TC =    415.32]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [7]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    459.67]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [8]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    468.77]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [9]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    499.14]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [10]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    518.95]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [11]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    557.65]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    572.07] at iteration 2146");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    564.98] at iteration 2147");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [12]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    608.81]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    578.25] at iteration 2185");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [13, 14]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    619.87]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [15, 16]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    626.59]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [17]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    702.74]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    708.91] at iteration 3075");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [18]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    797.38]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    787.24] at iteration 3095");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    749.22] at iteration 3097");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    748.97] at iteration 3098");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    741.27] at iteration 3099");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    739.05] at iteration 3102");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    722.64] at iteration 3125");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    713.37] at iteration 3126");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [19]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    728.15]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [20]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    744.37]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [21, 22]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    866.76]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    882.85] at iteration 3965");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    969.48] at iteration 3966");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    905.27] at iteration 3972");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    889.72] at iteration 3975");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [23]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    903.72]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    863.93] at iteration 4015");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [24]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    926.03]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    857.62] at iteration 4046");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    837.43] at iteration 4047");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    737.60] at iteration 4049");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    714.15] at iteration 4050");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    967.59] at iteration 4130");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    965.79] at iteration 4134");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    951.35] at iteration 4167");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    941.20] at iteration 4349");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    908.92] at iteration 4419");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    876.50] at iteration 4424");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [25]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    962.52]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    942.59] at iteration 4794");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    854.16] at iteration 4795");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    833.64] at iteration 4799");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    799.45] at iteration 4800");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    788.73] at iteration 4801");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    909.35] at iteration 4808");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [26, 27]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    919.43]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [28]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    920.19]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [29]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    922.50]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [30]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1005.89]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    994.74] at iteration 5969");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    952.32] at iteration 5971");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    912.05] at iteration 5974");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    792.91] at iteration 5995");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [31]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    838.91]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [32]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    882.09]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    892.96] at iteration 6776");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    887.96] at iteration 6790");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [33, 34]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    889.77]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [35]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    889.85]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [36]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    918.85]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [37]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    926.31]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    906.91] at iteration 8540");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [38]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    909.11]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [39]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    912.03]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [40]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    961.94]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    940.21] at iteration 9797");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [41]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    950.88]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    946.52] at iteration 9925");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [42]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    973.29]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [43]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    993.97]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [44]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1027.75]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1005.96] at iteration 10138");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    994.77] at iteration 10141");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [45]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1023.74]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [46]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1028.39]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [47]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1049.22]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1034.20] at iteration 10236");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [48]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1034.40]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [49]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1051.67]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1050.67] at iteration 10378");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1045.68] at iteration 10392");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1040.62] at iteration 10397");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [50]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1067.53]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1055.83] at iteration 11192");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [51]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1055.92]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1054.76] at iteration 12460");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1054.42] at iteration 17650");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1054.27] at iteration 17663");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1053.21] at iteration 17668");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1047.51] at iteration 19341");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1047.13] at iteration 19342");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1044.67] at iteration 19346");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1042.02] at iteration 19352");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1041.63] at iteration 19379");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1039.16] at iteration 19396");
    }

    @Test
    public void dpdptw_lc103_q_0_0_1_test() throws Exception {
        Instance instance = Reader.getInstance(Paths.get(dpdptw100Directory, "lc103_q_0_0.1.txt").toFile());
        ALNS_DPDP ALNSDPDP = new ALNS_DPDP(instance, new Random(1), maxIterations, true, true, LNSOptimizer.Type.ALNS);
        ALNSDPDP.init();
        ALNSDPDP.run();
        Solution solutionBest = ALNSDPDP.getSolutionBest();
        assertThat(solutionBest.totalCost).isEqualTo(1038.3507683136877);
        assertThat(solutionBest.tours.size()).isEqualTo(9);
        assertThat(solutionBest.feasible).isTrue();
        int counter = 0;
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   2, TC =    218.70]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   2, TC =    192.62] at iteration 3");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [4]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   3, TC =    218.63]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   2, TC =    219.05] at iteration 506");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [5]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   3, TC =    319.77]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   3, TC =    263.23] at iteration 587");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   3, TC =    259.82] at iteration 590");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [6]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   4, TC =    339.15]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   4, TC =    322.69] at iteration 1234");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   4, TC =    317.82] at iteration 1235");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [7]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   4, TC =    365.82]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   4, TC =    353.12] at iteration 2309");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   4, TC =    349.72] at iteration 2313");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [8]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   5, TC =    407.14]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [9]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   6, TC =    481.25]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    476.94] at iteration 2468");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [10]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    521.29]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [11]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    591.50]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    551.36] at iteration 4203");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    545.18] at iteration 4205");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [12]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    577.55]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    585.13] at iteration 4208");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    578.62] at iteration 4212");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    569.30] at iteration 4215");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [13]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    626.63]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    617.42] at iteration 4275");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    602.99] at iteration 4297");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [14]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    641.70]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    656.12] at iteration 4309");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    631.47] at iteration 4310");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [15]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    675.30]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    630.07] at iteration 4369");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    628.82] at iteration 4379");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    703.19] at iteration 4401");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    680.56] at iteration 4402");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [16]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    690.56]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [17, 18]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    784.99]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    700.96] at iteration 6068");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    698.86] at iteration 6069");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [19]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    775.02]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    769.42] at iteration 6170");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    738.40] at iteration 6171");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    728.33] at iteration 6188");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [20]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    816.80]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    788.38] at iteration 6193");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    771.10] at iteration 6212");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    759.68] at iteration 6213");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    750.41] at iteration 6269");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    743.37] at iteration 6372");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    743.04] at iteration 7329");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [21]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    749.21]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [22]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    830.01]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    850.79] at iteration 7929");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    841.06] at iteration 7933");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    835.17] at iteration 7940");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [23]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    876.76]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    870.78] at iteration 7950");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    963.59] at iteration 7951");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    954.32] at iteration 7953");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    940.33] at iteration 7981");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    885.76] at iteration 7985");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    865.64] at iteration 7987");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    860.66] at iteration 7998");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    858.63] at iteration 8010");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    854.77] at iteration 8012");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [24]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    868.77]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [25]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    930.87]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    841.74] at iteration 8111");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    840.66] at iteration 8115");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    807.20] at iteration 8120");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    718.99] at iteration 8123");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    965.45] at iteration 8143");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    956.19] at iteration 8153");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    951.93] at iteration 8309");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    946.04] at iteration 8314");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    913.76] at iteration 8354");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    881.34] at iteration 8395");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [26]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    967.36]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    914.63] at iteration 9588");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    904.39] at iteration 9590");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    819.81] at iteration 9591");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    780.41] at iteration 9595");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1005.81] at iteration 9597");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    914.19] at iteration 9732");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [27]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    919.43]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [28]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    920.19]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [29]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    922.50]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [30]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1005.89]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    932.65] at iteration 11934");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    912.15] at iteration 11939");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    908.04] at iteration 11941");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    907.52] at iteration 11943");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    833.19] at iteration 11944");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    798.13] at iteration 11951");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    792.91] at iteration 11958");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [31]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    838.91]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [32]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    882.09]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    892.96] at iteration 13573");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    887.96] at iteration 13577");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [33, 34]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    889.77]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [35]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    889.85]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [36]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    918.85]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [37]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    926.31]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [38]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    928.50]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [39]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    931.43]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [40]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    935.22]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [41]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    945.88]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [42]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    972.65]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    968.29] at iteration 19912");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [43]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    988.97]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [44]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1022.75]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [45]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1042.75]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1023.74] at iteration 20392");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [46]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1028.39]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [47]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1049.22]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1034.20] at iteration 20481");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [48]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1034.40]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [49]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1051.67]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1050.67] at iteration 20764");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1046.22] at iteration 20821");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1043.94] at iteration 20830");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1038.44] at iteration 20831");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [50]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1039.20]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1039.07] at iteration 22341");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1038.41] at iteration 22527");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [51]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1038.41]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1038.35] at iteration 22550");
    }

    @Test
    public void dpdptw_lc103_q_0_0_5_test() throws Exception {
        Instance instance = Reader.getInstance(Paths.get(dpdptw100Directory, "lc103_q_0_0.5.txt").toFile());
        ALNS_DPDP ALNSDPDP = new ALNS_DPDP(instance, new Random(1), maxIterations, true, true, LNSOptimizer.Type.ALNS);
        ALNSDPDP.init();
        ALNSDPDP.run();
        Solution solutionBest = ALNSDPDP.getSolutionBest();
        assertThat(solutionBest.totalCost).isEqualTo(1039.1592905198452);
        assertThat(solutionBest.tours.size()).isEqualTo(9);
        assertThat(solutionBest.feasible).isTrue();
        int counter = 0;
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =   1109.05]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =   1065.67] at iteration 1");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    856.20] at iteration 2");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    761.46] at iteration 4");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    917.45] at iteration 5");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    899.80] at iteration 6");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    831.97] at iteration 7");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    790.23] at iteration 12");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    779.14] at iteration 13");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    776.26] at iteration 14");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    763.20] at iteration 19");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    747.98] at iteration 23");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    739.77] at iteration 33");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    735.13] at iteration 130");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    732.09] at iteration 192");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    725.62] at iteration 242");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [29]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   6, TC =    735.41]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [30]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    802.56]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    748.12] at iteration 692");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    742.40] at iteration 695");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    737.96] at iteration 697");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    734.26] at iteration 698");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    706.34] at iteration 703");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    705.64] at iteration 755");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =   1008.23] at iteration 1002");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    978.12] at iteration 1003");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    964.27] at iteration 1057");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    873.19] at iteration 1062");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    868.63] at iteration 1064");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    864.62] at iteration 1076");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    863.63] at iteration 1085");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    860.10] at iteration 1088");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [31]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    917.52]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    900.04] at iteration 2387");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    863.85] at iteration 2388");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    847.69] at iteration 2397");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    825.13] at iteration 2401");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    824.10] at iteration 2406");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    791.21] at iteration 2471");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    789.98] at iteration 2516");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    772.00] at iteration 2524");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [32]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    804.37]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    946.30] at iteration 4213");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    922.69] at iteration 4245");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    905.64] at iteration 4256");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    898.50] at iteration 4258");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    887.23] at iteration 4259");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    883.79] at iteration 4389");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    882.46] at iteration 4394");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [33, 34]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    965.32]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    956.37] at iteration 6029");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1014.79] at iteration 6030");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1014.50] at iteration 6031");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1005.01] at iteration 6033");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1004.01] at iteration 6034");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    918.37] at iteration 6038");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    903.80] at iteration 6040");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    868.01] at iteration 6054");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [35]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    918.95]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    903.20] at iteration 6068");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    879.75] at iteration 6069");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    836.08] at iteration 6071");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    797.79] at iteration 6073");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    789.21] at iteration 6074");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    781.82] at iteration 6075");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    913.07] at iteration 6079");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    874.83] at iteration 6116");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    867.41] at iteration 6120");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    864.16] at iteration 6171");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [36]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    952.62]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    841.63] at iteration 6191");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    762.07] at iteration 6192");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    962.31] at iteration 6209");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    917.97] at iteration 6383");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [37]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1003.93]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    860.78] at iteration 7828");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    803.05] at iteration 7829");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    800.20] at iteration 7831");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    776.66] at iteration 7833");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    770.13] at iteration 7834");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1013.90] at iteration 7850");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    960.98] at iteration 7870");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    941.99] at iteration 7885");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [38]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1004.09]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    986.61] at iteration 8111");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    976.25] at iteration 8113");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    901.30] at iteration 8116");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    894.77] at iteration 8117");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    892.50] at iteration 8118");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    890.37] at iteration 8121");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    889.42] at iteration 8123");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    888.97] at iteration 8126");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    867.33] at iteration 8128");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    865.11] at iteration 8132");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    864.43] at iteration 8140");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    863.49] at iteration 8209");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1071.94] at iteration 8295");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1060.40] at iteration 8298");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1056.63] at iteration 8302");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1052.79] at iteration 8303");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1019.82] at iteration 8312");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1015.54] at iteration 8324");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [39]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =   1043.01]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1040.27] at iteration 11673");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [40]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1123.66]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1073.69] at iteration 11934");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1038.74] at iteration 11935");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1034.90] at iteration 11942");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    986.82] at iteration 11956");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    979.97] at iteration 11959");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    884.27] at iteration 11961");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    880.59] at iteration 11971");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    876.75] at iteration 11972");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [41]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    922.75]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [42]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    965.93]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1130.33] at iteration 13573");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1025.55] at iteration 13576");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    995.03] at iteration 13577");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    987.77] at iteration 13593");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    986.14] at iteration 13597");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    983.76] at iteration 13600");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [43]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    986.74]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    986.57] at iteration 13741");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [44]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    986.95]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    986.61] at iteration 15082");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    982.77] at iteration 15084");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    982.60] at iteration 15849");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [45]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    985.53]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [46]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1006.20]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1005.29] at iteration 20230");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1005.13] at iteration 20235");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    999.02] at iteration 20295");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [47]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1029.64]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [48]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1034.29]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [49]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1034.49]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [50]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1051.77]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1050.76] at iteration 20762");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1050.44] at iteration 21001");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1049.24] at iteration 21230");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1047.24] at iteration 21302");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1041.82] at iteration 21309");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1040.86] at iteration 21911");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1038.53] at iteration 21912");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1038.39] at iteration 21913");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("New requests = [51]");
        assertThat(ALNSDPDP.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1039.16]");
    }

}
