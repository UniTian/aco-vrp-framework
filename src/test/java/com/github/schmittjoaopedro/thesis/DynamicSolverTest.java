package com.github.schmittjoaopedro.thesis;

import com.github.schmittjoaopedro.vrp.thesis.Solver;
import com.github.schmittjoaopedro.vrp.thesis.problem.Instance;
import com.github.schmittjoaopedro.vrp.thesis.problem.Reader;
import com.github.schmittjoaopedro.vrp.thesis.problem.Solution;
import org.apache.commons.lang3.StringUtils;
import org.junit.Test;

import java.nio.file.Paths;
import java.util.Random;

import static org.assertj.core.api.AssertionsForClassTypes.assertThat;

public class DynamicSolverTest {

    private static int maxIterations = 25000;

    private static final String dpdptw100Directory;

    static {
        dpdptw100Directory = Paths.get(DynamicSolverTest.class.getClassLoader().getResource("dpdptw_100").getFile().substring(1)).toString();
    }

    @Test
    public void dpdptw_lc103_a_0_1_test() throws Exception {
        Instance instance = Reader.getInstance(Paths.get(dpdptw100Directory, "lc103_a_0.1.txt").toFile());
        Solver solver = new Solver(instance, new Random(1), maxIterations, true, true);
        solver.init();
        solver.run();
        Solution solutionBest = solver.getSolutionBest();
        assertThat(solutionBest.totalCost).isEqualTo(1052.3333702027996);
        assertThat(solutionBest.tours.size()).isEqualTo(9);
        int counter = 0;
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [0, 1]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   2, TC =    126.74]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [2]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   3, TC =    193.89]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [3]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   4, TC =    273.21]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [4, 5]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   5, TC =    341.20]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [6, 7]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    459.67]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [8, 9]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    560.25]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    499.14] at iteration 405");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [10, 11, 12]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    752.15]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    769.85] at iteration 425");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    710.90] at iteration 426");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    649.79] at iteration 428");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    630.10] at iteration 430");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    563.83] at iteration 433");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    630.52] at iteration 436");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    578.25] at iteration 443");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [13, 14]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    718.63]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    667.23] at iteration 587");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    606.22] at iteration 588");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    605.68] at iteration 591");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    866.29] at iteration 595");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    829.57] at iteration 596");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    820.21] at iteration 597");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [15, 16, 17, 18]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    729.35]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    739.05] at iteration 607");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    722.64] at iteration 618");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    713.37] at iteration 649");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [19]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    744.13]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    753.83] at iteration 771");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    737.42] at iteration 780");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    732.38] at iteration 785");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [20, 21, 22, 23]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    706.56]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [24]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    714.15]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    984.90] at iteration 871");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    935.69] at iteration 872");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [25]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    788.73]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [26, 27]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    844.24]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    798.82] at iteration 976");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    994.32] at iteration 987");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [28]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1025.32]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    952.19] at iteration 992");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    845.00] at iteration 993");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    799.57] at iteration 994");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    786.41] at iteration 1030");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    920.19] at iteration 1088");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [29]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1018.70]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    801.00] at iteration 1153");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    787.84] at iteration 1163");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [30]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1088.70]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1019.63] at iteration 1194");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1302.18] at iteration 1195");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    950.75] at iteration 1196");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    905.32] at iteration 1197");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    875.80] at iteration 1204");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    806.07] at iteration 1205");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    792.91] at iteration 1210");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [31]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1110.08]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1064.65] at iteration 1315");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    880.62] at iteration 1316");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    843.48] at iteration 1319");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    778.55] at iteration 1321");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    898.16] at iteration 1329");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    879.96] at iteration 1332");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    838.91] at iteration 1333");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [32, 33, 34]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    940.77]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    895.75] at iteration 1356");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    780.55] at iteration 1358");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    976.08] at iteration 1361");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    907.12] at iteration 1362");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    906.11] at iteration 1369");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [35]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    995.93]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    825.89] at iteration 1376");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    780.63] at iteration 1387");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    974.79] at iteration 1394");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    895.45] at iteration 1396");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    894.85] at iteration 1397");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    889.85] at iteration 1480");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [36]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    998.31]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    783.02] at iteration 1517");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    938.36] at iteration 1524");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [37]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1005.77]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1205.05] at iteration 1538");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1203.43] at iteration 1539");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1153.25] at iteration 1552");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1149.98] at iteration 1553");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1091.87] at iteration 1635");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    983.30] at iteration 1643");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    973.08] at iteration 1646");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    936.52] at iteration 1649");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    931.30] at iteration 1650");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [38]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1197.30]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1079.96] at iteration 1760");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    816.12] at iteration 1761");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    792.67] at iteration 1762");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1082.83] at iteration 1768");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1061.78] at iteration 1771");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1015.90] at iteration 1773");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    933.50] at iteration 1790");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    928.50] at iteration 1881");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [39]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1270.97]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1268.01] at iteration 1882");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1173.18] at iteration 1883");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1115.66] at iteration 1884");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    822.70] at iteration 1885");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    795.60] at iteration 1886");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1067.26] at iteration 1904");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    993.21] at iteration 1905");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    947.17] at iteration 1910");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    943.37] at iteration 1913");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [40]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1332.26]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1266.53] at iteration 1942");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1368.98] at iteration 1943");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1334.89] at iteration 1947");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1177.09] at iteration 1951");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1168.80] at iteration 1952");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1074.28] at iteration 1955");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1072.62] at iteration 1960");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [41]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1352.31]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1102.10] at iteration 1962");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    891.77] at iteration 1964");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    800.48] at iteration 1965");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1281.65] at iteration 1966");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1281.39] at iteration 1967");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1276.04] at iteration 1971");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1265.31] at iteration 1978");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1264.46] at iteration 1979");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1238.50] at iteration 1980");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1235.23] at iteration 1981");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [42]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1354.50]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    833.93] at iteration 1983");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    810.48] at iteration 1985");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1148.61] at iteration 1989");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1148.38] at iteration 1990");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1061.07] at iteration 1991");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [43]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1363.37]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    937.95] at iteration 2003");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    811.35] at iteration 2004");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1214.08] at iteration 2021");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1201.00] at iteration 2022");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [44, 45]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1232.43]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    974.92] at iteration 2023");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    851.19] at iteration 2025");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    815.44] at iteration 2029");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [46, 47, 48]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1294.56]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1015.24] at iteration 2043");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    938.49] at iteration 2044");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    902.74] at iteration 2045");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    853.72] at iteration 2046");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    823.17] at iteration 2047");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [49]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1192.27]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1015.07] at iteration 2066");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    934.06] at iteration 2069");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    825.24] at iteration 2070");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    825.04] at iteration 2073");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1265.75] at iteration 2098");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1247.31] at iteration 2106");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1227.17] at iteration 2107");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1122.63] at iteration 2108");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1113.81] at iteration 2125");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [50]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1188.51]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    943.76] at iteration 2227");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    896.86] at iteration 2228");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    861.11] at iteration 2229");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    860.91] at iteration 2234");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    828.56] at iteration 2235");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [51]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1125.81]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    972.45] at iteration 2246");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    881.06] at iteration 2247");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    827.86] at iteration 2248");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1239.35] at iteration 2278");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1235.38] at iteration 2279");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1219.14] at iteration 2293");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1212.36] at iteration 2305");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1211.35] at iteration 2308");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1210.25] at iteration 2309");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1208.12] at iteration 2411");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1205.36] at iteration 2422");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1146.48] at iteration 2511");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1145.37] at iteration 2521");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1142.52] at iteration 2525");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1099.33] at iteration 2541");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1098.64] at iteration 2542");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1096.94] at iteration 2543");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1096.47] at iteration 2550");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1093.62] at iteration 2556");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1075.41] at iteration 2584");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1074.93] at iteration 2599");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1071.61] at iteration 2600");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1069.91] at iteration 2615");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1060.27] at iteration 2673");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1054.42] at iteration 2756");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1053.21] at iteration 2760");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1052.49] at iteration 5207");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1052.33] at iteration 11175");

        int idx = 0;
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 20 24 25 27 30 45 43 23 50 51 46 101 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 57 55 54 53 56 59 64 61 66 69 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 5 3 7 8 10 11 9 6 4 2 1 75 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 13 17 18 19 15 16 14 12 22 21 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 90 87 62 74 84 85 88 86 89 91 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 32 33 31 35 104 37 38 39 36 34 29 28 26 103 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 72 42 41 40 44 58 60 68 48 52 49 47 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 81 78 76 71 70 73 77 79 80 83 82 63 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 67 65 98 94 92 93 102 97 100 99 96 95 0");
    }

    @Test
    public void dpdptw_lc103_a_0_5_test() throws Exception {
        Instance instance = Reader.getInstance(Paths.get(dpdptw100Directory, "lc103_a_0.5.txt").toFile());
        Solver solver = new Solver(instance, new Random(1), maxIterations, true, true);
        solver.init();
        solver.run();
        Solution solutionBest = solver.getSolutionBest();
        assertThat(solutionBest.totalCost).isEqualTo(1035.3499342457626);
        assertThat(solutionBest.tours.size()).isEqualTo(9);
        int counter = 0;
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [0]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   1, TC =     26.01]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [1]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   2, TC =    126.74]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [2]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   3, TC =    193.89]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [3]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   4, TC =    273.21]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [4]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   4, TC =    283.78]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [5]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   5, TC =    341.20]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [6]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   6, TC =    415.32]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [7]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    459.67]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [8]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    529.87]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    468.77] at iteration 2091");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [9]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    560.25]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    499.14] at iteration 2104");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [10]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    617.58]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    580.05] at iteration 2124");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    518.95] at iteration 2130");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [11]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    722.55]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    751.79] at iteration 2145");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    690.69] at iteration 2146");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    661.86] at iteration 2148");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    564.98] at iteration 2149");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [12]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    752.15]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    699.04] at iteration 2185");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    630.10] at iteration 2186");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    668.25] at iteration 2187");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    645.99] at iteration 2189");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    630.52] at iteration 2194");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    578.25] at iteration 2195");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [13, 14]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    718.63]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    605.68] at iteration 3014");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [15, 16]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    784.83]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    777.96] at iteration 3034");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    652.21] at iteration 3035");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    611.92] at iteration 3036");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    626.59] at iteration 3045");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [17]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    735.73]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    669.46] at iteration 3075");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    742.29] at iteration 3076");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    684.33] at iteration 3077");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    765.64] at iteration 3084");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    765.02] at iteration 3087");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    712.02] at iteration 3088");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [18]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    729.35]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    862.20] at iteration 3095");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    804.19] at iteration 3102");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    722.64] at iteration 3103");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    713.37] at iteration 3119");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [19]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    744.13]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    898.02] at iteration 3904");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    896.42] at iteration 3905");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    778.17] at iteration 3914");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    753.83] at iteration 3916");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    737.42] at iteration 3940");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [20]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    682.56]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    772.43] at iteration 3945");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    761.01] at iteration 3948");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    751.74] at iteration 3950");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [21, 22]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    692.56]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1038.67] at iteration 3979");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1004.31] at iteration 3981");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [23]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    706.56]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [24]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    714.15]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    960.04] at iteration 4123");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    951.35] at iteration 4166");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    935.69] at iteration 4274");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [25]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    788.73]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    775.57] at iteration 4847");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [26, 27]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    844.24]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    831.09] at iteration 4938");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    785.66] at iteration 4939");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [28]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1025.32]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    845.00] at iteration 4998");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    799.57] at iteration 5001");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    791.63] at iteration 5008");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    786.41] at iteration 5011");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    920.19] at iteration 5088");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [29]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1018.70]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    973.27] at iteration 5826");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    882.38] at iteration 5827");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    801.00] at iteration 5856");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    787.84] at iteration 5874");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [30]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1088.70]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    954.70] at iteration 5968");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1281.02] at iteration 5969");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1239.61] at iteration 5971");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1235.30] at iteration 5973");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    984.14] at iteration 5974");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    914.01] at iteration 5977");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    833.19] at iteration 5978");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    792.91] at iteration 5982");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [31]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1110.08]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1064.65] at iteration 6617");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    868.42] at iteration 6620");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    831.28] at iteration 6621");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    814.06] at iteration 6622");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    977.57] at iteration 6624");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    967.75] at iteration 6633");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    838.91] at iteration 6638");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [32]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1027.70]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    981.86] at iteration 6777");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    916.51] at iteration 6778");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [33, 34]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    940.77]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    895.75] at iteration 6858");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1140.06] at iteration 6860");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [35]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    995.93]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    932.07] at iteration 6878");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    837.55] at iteration 6882");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    953.27] at iteration 6883");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    900.66] at iteration 6897");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    897.81] at iteration 6898");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    894.85] at iteration 6899");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    889.85] at iteration 6993");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [36]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    998.31]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    996.69] at iteration 7646");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    938.12] at iteration 7647");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    935.69] at iteration 7649");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    931.47] at iteration 7656");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    930.79] at iteration 7659");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [37]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1005.77]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    959.12] at iteration 7708");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    843.93] at iteration 7710");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    790.47] at iteration 7712");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1227.08] at iteration 7716");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1223.13] at iteration 7719");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1128.70] at iteration 7720");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1096.53] at iteration 7721");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1067.61] at iteration 7725");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1022.35] at iteration 7726");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    955.21] at iteration 7733");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    926.31] at iteration 7734");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    912.12] at iteration 8149");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    906.91] at iteration 8156");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [38]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1197.30]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1176.59] at iteration 8799");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1153.75] at iteration 8803");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1148.89] at iteration 8804");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1103.33] at iteration 8805");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    946.37] at iteration 8807");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1120.47] at iteration 8812");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1085.68] at iteration 8815");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1050.55] at iteration 8817");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1049.38] at iteration 8829");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1027.66] at iteration 8831");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    978.76] at iteration 8874");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    933.50] at iteration 8876");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    928.50] at iteration 9078");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [39]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1270.97]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1085.27] at iteration 9467");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1040.01] at iteration 9468");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1176.47] at iteration 9469");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1176.38] at iteration 9471");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1174.27] at iteration 9481");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1148.03] at iteration 9501");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    993.21] at iteration 9737");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    943.37] at iteration 9746");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [40]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1332.26]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1065.48] at iteration 9790");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    950.52] at iteration 9791");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    868.96] at iteration 9793");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    845.51] at iteration 9795");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    799.38] at iteration 9797");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1140.40] at iteration 9812");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1025.37] at iteration 9815");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1017.66] at iteration 9818");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    977.12] at iteration 9819");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    976.97] at iteration 9834");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    969.45] at iteration 9881");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [41]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1352.31]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1350.97] at iteration 9891");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1202.01] at iteration 9893");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1170.90] at iteration 9894");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1518.16] at iteration 9896");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1517.92] at iteration 9899");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1517.71] at iteration 9903");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1434.26] at iteration 9913");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1187.10] at iteration 9940");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1123.12] at iteration 9942");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1073.78] at iteration 9948");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1049.52] at iteration 9950");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [42]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1354.50]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1269.68] at iteration 9953");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1225.45] at iteration 9954");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1032.23] at iteration 9955");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1061.05] at iteration 9958");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1047.64] at iteration 9961");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1047.59] at iteration 9964");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1042.68] at iteration 9965");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1039.92] at iteration 9967");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1029.86] at iteration 9978");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1008.27] at iteration 9984");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    977.65] at iteration 9986");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    976.57] at iteration 10013");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    973.29] at iteration 10015");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [43]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1363.37]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1302.60] at iteration 10053");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1174.68] at iteration 10056");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    902.69] at iteration 10059");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    893.92] at iteration 10060");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    811.35] at iteration 10061");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1449.40] at iteration 10063");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1365.21] at iteration 10067");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1360.36] at iteration 10068");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1311.84] at iteration 10077");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1284.23] at iteration 10078");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1276.98] at iteration 10096");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1267.53] at iteration 10101");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [44]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1365.46]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1081.92] at iteration 10115");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    836.24] at iteration 10117");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    812.79] at iteration 10121");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1438.67] at iteration 10132");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1438.46] at iteration 10134");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1222.53] at iteration 10148");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [45]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1232.43]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1213.54] at iteration 10154");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1144.74] at iteration 10155");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1143.12] at iteration 10157");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1094.85] at iteration 10159");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1017.96] at iteration 10160");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    982.21] at iteration 10162");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    980.89] at iteration 10163");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    899.40] at iteration 10166");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    815.44] at iteration 10172");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1142.24] at iteration 10202");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1141.05] at iteration 10213");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [46]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1262.98]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1131.56] at iteration 10215");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1002.05] at iteration 10216");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    993.50] at iteration 10218");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    985.05] at iteration 10220");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1156.72] at iteration 10225");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1129.86] at iteration 10227");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1116.59] at iteration 10228");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1081.01] at iteration 10232");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1080.95] at iteration 10234");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [47]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1267.34]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1244.62] at iteration 10236");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1218.98] at iteration 10238");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    849.12] at iteration 10239");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    822.97] at iteration 10249");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1297.86] at iteration 10274");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1230.75] at iteration 10275");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1216.13] at iteration 10278");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1170.41] at iteration 10279");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1142.51] at iteration 10281");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1075.93] at iteration 10282");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [48]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1294.56]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    989.85] at iteration 10298");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    935.59] at iteration 10299");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    899.84] at iteration 10300");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    823.37] at iteration 10302");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    823.17] at iteration 10313");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1184.20] at iteration 10319");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1113.49] at iteration 10330");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1086.97] at iteration 10335");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1069.07] at iteration 10336");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1065.47] at iteration 10345");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [49]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1192.27]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1162.18] at iteration 10377");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    940.16] at iteration 10378");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    907.81] at iteration 10379");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    907.11] at iteration 10381");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    853.04] at iteration 10383");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    825.24] at iteration 10385");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    825.04] at iteration 10394");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1128.75] at iteration 10404");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1120.45] at iteration 10419");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1110.43] at iteration 10489");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1090.85] at iteration 10543");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1088.77] at iteration 10551");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1080.55] at iteration 10677");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1049.15] at iteration 10681");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1040.62] at iteration 10978");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [50]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1188.51]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1066.03] at iteration 11166");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    986.60] at iteration 11168");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    882.34] at iteration 11171");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    827.86] at iteration 11173");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1095.25] at iteration 11243");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1091.96] at iteration 11246");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [51]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1125.81]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1078.27] at iteration 11267");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    988.00] at iteration 11269");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    987.80] at iteration 11270");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    954.03] at iteration 11276");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    936.82] at iteration 11277");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    929.12] at iteration 11282");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    910.88] at iteration 11283");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    907.65] at iteration 11285");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    834.25] at iteration 11290");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    827.86] at iteration 11292");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1315.35] at iteration 11315");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1284.72] at iteration 11320");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1281.96] at iteration 11323");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1262.28] at iteration 11352");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1259.52] at iteration 11353");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1198.71] at iteration 11416");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1197.55] at iteration 11422");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1167.37] at iteration 11443");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1087.71] at iteration 11448");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1085.46] at iteration 11496");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1068.68] at iteration 11505");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1068.60] at iteration 11780");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1063.83] at iteration 11860");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1059.31] at iteration 13665");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1052.98] at iteration 13806");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1046.92] at iteration 13807");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1035.35] at iteration 14420");

        int idx = 0;
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 32 33 31 35 104 37 38 39 36 34 29 28 26 103 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 67 65 62 74 72 61 64 68 66 69 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 20 25 27 15 30 24 23 18 16 14 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 81 78 76 71 70 73 77 79 80 83 82 63 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 5 3 7 8 10 11 9 6 4 2 1 75 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 43 42 41 40 44 46 101 45 48 51 50 52 49 47 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 57 55 54 53 56 58 60 59 22 21 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 90 87 98 92 84 85 88 86 89 91 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 13 17 19 94 93 102 97 100 99 96 95 12 0");
    }

    @Test
    public void dpdptw_lc103_q_0_0_1_test() throws Exception {
        Instance instance = Reader.getInstance(Paths.get(dpdptw100Directory, "lc103_q_0_0.1.txt").toFile());
        Solver solver = new Solver(instance, new Random(1), maxIterations, true, true);
        solver.init();
        solver.run();
        Solution solutionBest = solver.getSolutionBest();
        assertThat(solutionBest.totalCost).isEqualTo(1049.4850914325707);
        assertThat(solutionBest.tours.size()).isEqualTo(9);
        int counter = 0;
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   2, TC =    218.70]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   2, TC =    192.62] at iteration 3");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [4]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   2, TC =    219.05]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [5]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   3, TC =    319.77]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   3, TC =    263.23] at iteration 588");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   3, TC =    259.82] at iteration 593");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [6]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   4, TC =    322.69]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   4, TC =    317.82] at iteration 1235");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [7]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   5, TC =    396.24]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   4, TC =    353.12] at iteration 2306");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   4, TC =    349.72] at iteration 2312");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [8]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   6, TC =    453.67]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   5, TC =    407.14] at iteration 2387");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [9]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    527.78]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    484.66] at iteration 2468");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    476.94] at iteration 2472");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [10]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    615.27]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    579.21] at iteration 2610");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    568.74] at iteration 2611");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    521.29] at iteration 2612");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [11]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    685.47]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    599.22] at iteration 4187");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    538.66] at iteration 4190");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [12]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    740.37]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    671.32] at iteration 4208");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    569.30] at iteration 4209");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [13]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    792.18]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    712.18] at iteration 4268");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    743.55] at iteration 4270");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    684.61] at iteration 4271");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    660.79] at iteration 4276");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    651.58] at iteration 4278");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    649.23] at iteration 4283");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    634.80] at iteration 4287");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [14]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    735.23]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    728.37] at iteration 4309");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    725.01] at iteration 4314");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    652.20] at iteration 4316");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    669.35] at iteration 4317");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    631.47] at iteration 4319");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [15]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    703.89]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    604.13] at iteration 4370");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    776.84] at iteration 4371");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    740.27] at iteration 4373");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    710.53] at iteration 4374");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    682.15] at iteration 4375");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    680.56] at iteration 4382");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [16]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    717.41]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    681.80] at iteration 6029");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    690.56] at iteration 6037");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [17, 18]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    788.04]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    721.69] at iteration 6069");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    675.09] at iteration 6070");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    654.15] at iteration 6071");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    698.86] at iteration 6086");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [19]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    738.94]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    677.84] at iteration 6170");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    694.18] at iteration 6171");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    652.45] at iteration 6177");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [20]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    732.56]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    681.23] at iteration 6191");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    874.58] at iteration 6194");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    820.28] at iteration 6196");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    790.08] at iteration 6198");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    750.41] at iteration 6206");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    743.04] at iteration 6232");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [21]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    747.34]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    777.27] at iteration 7828");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    765.85] at iteration 7830");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    756.58] at iteration 7833");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    749.21] at iteration 7860");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [22]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    824.73]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    843.25] at iteration 7929");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [23]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    757.34]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    697.40] at iteration 7950");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1043.51] at iteration 7957");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1009.15] at iteration 7961");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    999.88] at iteration 7965");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    966.71] at iteration 8004");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    963.59] at iteration 8014");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    929.57] at iteration 8018");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    920.31] at iteration 8021");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [24]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    771.33]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    711.40] at iteration 8030");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    954.33] at iteration 8091");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    908.56] at iteration 8103");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [25]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    778.92]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    718.99] at iteration 8112");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    913.76] at iteration 8416");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    881.34] at iteration 8433");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [26]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    853.51]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    793.57] at iteration 9590");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    780.41] at iteration 9592");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    914.19] at iteration 9660");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [27]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    844.24]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    798.82] at iteration 9871");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    785.66] at iteration 9902");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    994.32] at iteration 9907");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    925.33] at iteration 9912");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    923.29] at iteration 9931");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    919.43] at iteration 9933");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [28]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1025.32]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    889.00] at iteration 9993");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    851.42] at iteration 9994");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    799.57] at iteration 9999");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    786.41] at iteration 10000");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    920.19] at iteration 10269");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [29]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1018.70]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    973.27] at iteration 11671");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    824.46] at iteration 11674");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    801.00] at iteration 11680");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    787.84] at iteration 11709");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    922.50] at iteration 11848");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [30]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1088.70]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1019.63] at iteration 11934");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    887.36] at iteration 11935");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    887.03] at iteration 11941");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    814.83] at iteration 11979");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    809.94] at iteration 11981");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    806.07] at iteration 11982");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    792.91] at iteration 11985");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [31]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1110.08]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1345.54] at iteration 13250");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1152.17] at iteration 13251");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    919.98] at iteration 13252");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    879.19] at iteration 13256");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    838.91] at iteration 13286");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [32]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1027.70]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    966.95] at iteration 13575");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    906.12] at iteration 13589");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    892.96] at iteration 13594");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [33, 34]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    940.77]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1021.10] at iteration 13734");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    988.93] at iteration 13742");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [35]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    995.93]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    880.97] at iteration 13755");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    835.71] at iteration 13756");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    945.85] at iteration 13757");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    923.00] at iteration 13796");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    894.85] at iteration 13877");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    889.85] at iteration 14051");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [36]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    998.31]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    783.02] at iteration 15292");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1327.27] at iteration 15323");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1327.11] at iteration 15325");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1241.59] at iteration 15327");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1080.78] at iteration 15329");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1078.81] at iteration 15333");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    902.20] at iteration 15335");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    899.45] at iteration 15338");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [37]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1005.77]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1205.05] at iteration 15433");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1149.98] at iteration 15434");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1122.08] at iteration 15499");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1116.88] at iteration 15506");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1055.11] at iteration 15507");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    992.71] at iteration 15562");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    931.30] at iteration 15576");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [38]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1197.30]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1141.91] at iteration 17598");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1096.89] at iteration 17599");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    796.54] at iteration 17600");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1223.19] at iteration 17604");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1197.79] at iteration 17614");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1197.70] at iteration 17618");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1152.18] at iteration 17626");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    991.01] at iteration 17639");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    945.85] at iteration 17675");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    944.85] at iteration 17676");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    938.72] at iteration 17677");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    933.50] at iteration 17686");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    928.50] at iteration 18138");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    909.11] at iteration 18688");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [39]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1270.97]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1210.31] at iteration 18954");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1208.86] at iteration 18957");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1146.83] at iteration 18958");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1094.83] at iteration 18959");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1136.44] at iteration 18966");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1114.30] at iteration 18969");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1016.80] at iteration 18970");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    968.47] at iteration 18971");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    949.08] at iteration 19007");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    931.43] at iteration 19246");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    929.25] at iteration 19424");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    912.03] at iteration 19425");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [40]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1332.26]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1276.87] at iteration 19580");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1204.98] at iteration 19581");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1193.60] at iteration 19583");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1163.20] at iteration 19584");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1127.52] at iteration 19585");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1047.62] at iteration 19586");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1042.65] at iteration 19588");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1006.09] at iteration 19589");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1000.87] at iteration 19590");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    989.07] at iteration 19594");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    969.45] at iteration 19608");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    964.02] at iteration 19754");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [41]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1352.31]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1221.79] at iteration 19802");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1150.82] at iteration 19803");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1046.29] at iteration 19804");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    876.02] at iteration 19807");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    866.45] at iteration 19808");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    828.99] at iteration 19811");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    823.93] at iteration 19813");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    800.48] at iteration 19818");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1032.01] at iteration 19856");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1022.11] at iteration 19869");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1021.91] at iteration 19876");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1021.68] at iteration 19878");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1012.58] at iteration 19889");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [42]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1354.50]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1210.74] at iteration 19903");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1438.00] at iteration 19905");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1393.38] at iteration 19906");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1368.82] at iteration 19907");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1367.06] at iteration 19908");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1363.20] at iteration 19909");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1362.98] at iteration 19910");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1360.24] at iteration 19923");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1355.68] at iteration 19924");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1351.28] at iteration 19956");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1339.12] at iteration 19961");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1288.42] at iteration 19965");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1236.65] at iteration 19966");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1122.07] at iteration 19968");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1027.24] at iteration 19971");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [43]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1363.37]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1040.55] at iteration 20126");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    971.04] at iteration 20127");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    970.73] at iteration 20128");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    908.05] at iteration 20130");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    905.06] at iteration 20131");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    871.11] at iteration 20132");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    811.35] at iteration 20135");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1112.24] at iteration 20160");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1102.34] at iteration 20164");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1102.14] at iteration 20185");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1056.61] at iteration 20192");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [44]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1365.46]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1093.38] at iteration 20227");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    971.03] at iteration 20233");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    836.24] at iteration 20236");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    812.79] at iteration 20237");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1269.67] at iteration 20251");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1269.51] at iteration 20253");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1264.08] at iteration 20255");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1134.87] at iteration 20258");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1118.67] at iteration 20260");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1107.36] at iteration 20261");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1075.34] at iteration 20268");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1057.44] at iteration 20270");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1040.42] at iteration 20322");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [45]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1232.43]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1183.07] at iteration 20328");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1099.10] at iteration 20329");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1085.64] at iteration 20330");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1053.29] at iteration 20331");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1384.17] at iteration 20332");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1369.25] at iteration 20338");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1260.51] at iteration 20339");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1180.18] at iteration 20342");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1127.70] at iteration 20344");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1124.47] at iteration 20346");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1121.79] at iteration 20352");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1102.12] at iteration 20353");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1100.25] at iteration 20354");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1099.20] at iteration 20359");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1061.37] at iteration 20390");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1035.53] at iteration 20392");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1027.92] at iteration 20407");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [46]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1262.98]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    900.24] at iteration 20429");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    845.99] at iteration 20432");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    818.81] at iteration 20434");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1215.13] at iteration 20436");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1138.32] at iteration 20442");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1133.61] at iteration 20448");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1119.12] at iteration 20450");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1111.71] at iteration 20458");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [47]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1267.34]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1133.49] at iteration 20470");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    936.76] at iteration 20473");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    850.15] at iteration 20474");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    832.83] at iteration 20477");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    832.63] at iteration 20478");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    823.17] at iteration 20479");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    822.97] at iteration 20483");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1580.13] at iteration 20484");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1510.61] at iteration 20486");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1482.33] at iteration 20487");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1479.00] at iteration 20492");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1420.13] at iteration 20499");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1395.40] at iteration 20508");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1392.32] at iteration 20510");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1375.10] at iteration 20512");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1363.63] at iteration 20515");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1362.96] at iteration 20520");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1265.97] at iteration 20531");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1264.21] at iteration 20534");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1260.75] at iteration 20535");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1233.40] at iteration 20541");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1210.46] at iteration 20548");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1208.69] at iteration 20549");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1208.03] at iteration 20555");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1207.83] at iteration 20556");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1161.55] at iteration 20565");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1151.23] at iteration 20567");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1146.01] at iteration 20577");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1144.22] at iteration 20583");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1143.66] at iteration 20586");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [48]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1294.56]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1244.67] at iteration 20591");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    921.82] at iteration 20592");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    921.62] at iteration 20594");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    823.86] at iteration 20596");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    823.17] at iteration 20599");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1277.78] at iteration 20654");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1242.34] at iteration 20656");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1233.86] at iteration 20657");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1202.58] at iteration 20658");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1189.56] at iteration 20659");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1188.55] at iteration 20660");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1132.82] at iteration 20662");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1132.60] at iteration 20666");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1085.78] at iteration 20671");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1075.38] at iteration 20676");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1075.24] at iteration 20679");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [49]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1192.27]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1101.62] at iteration 20753");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    841.59] at iteration 20754");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    825.24] at iteration 20756");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1493.55] at iteration 20771");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1386.52] at iteration 20774");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1217.08] at iteration 20778");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1164.19] at iteration 20781");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1081.16] at iteration 20782");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1052.19] at iteration 20783");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1040.62] at iteration 20784");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [50]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1188.51]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1035.15] at iteration 22331");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    828.06] at iteration 22332");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    827.86] at iteration 22338");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1277.87] at iteration 22450");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1277.68] at iteration 22453");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1265.78] at iteration 22494");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [51]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1125.81]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1124.16] at iteration 22533");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1040.20] at iteration 22534");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    994.30] at iteration 22535");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    828.06] at iteration 22537");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    827.86] at iteration 22548");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1121.60] at iteration 22579");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1109.28] at iteration 22581");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1054.23] at iteration 22645");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1049.49] at iteration 23504");

        int idx = 0;
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 41 40 44 48 45 64 61 66 69 50 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 90 87 62 74 84 85 88 86 89 91 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 5 3 7 8 10 11 9 6 4 2 1 75 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 43 42 25 27 30 23 52 51 49 47 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 81 78 76 71 70 73 77 79 80 83 82 63 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 32 33 31 35 104 37 38 39 36 34 29 28 26 103 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 57 55 54 53 56 58 72 68 59 60 46 101 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 13 17 18 19 15 16 14 12 22 20 24 21 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 67 65 98 94 92 93 102 97 100 99 96 95 0");
    }

    @Test
    public void dpdptw_lc103_q_0_0_5_test() throws Exception {
        Instance instance = Reader.getInstance(Paths.get(dpdptw100Directory, "lc103_q_0_0.5.txt").toFile());
        Solver solver = new Solver(instance, new Random(1), maxIterations, true, true);
        solver.init();
        solver.run();
        Solution solutionBest = solver.getSolutionBest();
        assertThat(solutionBest.totalCost).isEqualTo(1035.3499342457624);
        assertThat(solutionBest.tours.size()).isEqualTo(9);
        int counter = 0;
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =   1109.05]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =   1065.67] at iteration 1");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    799.40] at iteration 2");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    784.72] at iteration 5");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    784.35] at iteration 6");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    752.71] at iteration 7");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    750.35] at iteration 11");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    735.13] at iteration 14");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    725.62] at iteration 179");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [29]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =   1082.46]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1046.19] at iteration 506");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    935.00] at iteration 507");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    848.30] at iteration 512");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    815.82] at iteration 513");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    820.72] at iteration 517");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    805.47] at iteration 519");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    801.03] at iteration 551");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    796.36] at iteration 659");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    793.63] at iteration 672");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    780.82] at iteration 673");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    766.83] at iteration 676");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    735.41] at iteration 677");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [30]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =   1007.20]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    932.60] at iteration 688");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    933.98] at iteration 691");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    907.40] at iteration 692");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    832.80] at iteration 693");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    827.79] at iteration 695");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    756.36] at iteration 697");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    713.85] at iteration 704");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    713.34] at iteration 706");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    706.83] at iteration 709");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =   1188.29] at iteration 713");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =   1185.60] at iteration 714");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =   1181.32] at iteration 721");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =   1032.32] at iteration 734");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =   1020.87] at iteration 736");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =   1000.32] at iteration 739");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    983.70] at iteration 742");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    978.01] at iteration 749");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    960.52] at iteration 770");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    959.76] at iteration 790");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    941.18] at iteration 802");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    924.94] at iteration 805");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    922.99] at iteration 808");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    922.90] at iteration 1704");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    918.34] at iteration 1708");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    916.38] at iteration 1733");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    911.82] at iteration 1762");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    909.13] at iteration 1774");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    890.08] at iteration 2013");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    882.03] at iteration 2014");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    874.85] at iteration 2023");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    874.51] at iteration 2029");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    866.77] at iteration 2039");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    860.10] at iteration 2045");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [31]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    983.28]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    970.88] at iteration 2387");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    898.57] at iteration 2388");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    840.80] at iteration 2389");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    817.81] at iteration 2391");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    798.64] at iteration 2393");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    766.52] at iteration 2394");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    737.16] at iteration 2396");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    736.72] at iteration 2397");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    893.82] at iteration 2399");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    886.01] at iteration 2409");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    855.86] at iteration 2412");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    832.61] at iteration 2413");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    824.71] at iteration 2414");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    824.05] at iteration 2417");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    812.78] at iteration 2422");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    812.68] at iteration 2426");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    792.11] at iteration 2440");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    791.21] at iteration 2443");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    772.00] at iteration 2494");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [32]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =   1012.69]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    854.77] at iteration 4208");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    818.47] at iteration 4209");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    817.90] at iteration 4212");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    791.75] at iteration 4220");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    778.91] at iteration 4229");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    755.91] at iteration 4230");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    755.57] at iteration 4235");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    931.46] at iteration 4282");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    926.53] at iteration 4286");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    913.80] at iteration 4309");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    905.27] at iteration 5085");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    891.66] at iteration 5101");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [33, 34]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1071.82]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1070.37] at iteration 6028");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    896.89] at iteration 6029");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    854.70] at iteration 6030");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    805.88] at iteration 6032");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    776.51] at iteration 6034");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    920.25] at iteration 6036");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    888.97] at iteration 6037");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    884.20] at iteration 6045");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    882.30] at iteration 6047");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    881.71] at iteration 6055");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    863.28] at iteration 6056");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [35]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1025.02]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    912.23] at iteration 6069");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    759.91] at iteration 6070");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    759.40] at iteration 6072");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    757.51] at iteration 6074");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1014.45] at iteration 6081");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1008.58] at iteration 6085");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    982.08] at iteration 6087");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    980.12] at iteration 6088");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    968.85] at iteration 6092");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    961.23] at iteration 6096");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    931.57] at iteration 6098");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    929.76] at iteration 6101");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    897.21] at iteration 6105");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    890.49] at iteration 6144");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    864.63] at iteration 6183");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    862.28] at iteration 6184");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    862.14] at iteration 6185");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    862.05] at iteration 6186");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    860.30] at iteration 6189");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [36]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1031.67]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    795.76] at iteration 6190");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    764.47] at iteration 6202");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    763.96] at iteration 6206");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    762.07] at iteration 6211");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1002.91] at iteration 6262");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    996.99] at iteration 6264");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    987.04] at iteration 6265");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    985.71] at iteration 6267");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    984.44] at iteration 6320");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    981.52] at iteration 6321");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    981.46] at iteration 6380");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    952.98] at iteration 6568");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    949.27] at iteration 6574");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    924.04] at iteration 6590");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    921.69] at iteration 6616");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    917.97] at iteration 6640");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [37]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1037.84]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    973.98] at iteration 7828");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    900.99] at iteration 7832");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    900.05] at iteration 7835");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    769.19] at iteration 7840");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1072.38] at iteration 7916");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1055.30] at iteration 7929");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1052.95] at iteration 7932");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1045.30] at iteration 8028");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1042.60] at iteration 8033");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [38]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1260.83]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1164.91] at iteration 8111");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1151.75] at iteration 8113");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1129.30] at iteration 8114");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1062.76] at iteration 8115");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    991.06] at iteration 8116");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    975.48] at iteration 8119");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    883.63] at iteration 8120");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    879.79] at iteration 8122");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    878.85] at iteration 8134");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    864.52] at iteration 8163");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    864.43] at iteration 8174");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    863.93] at iteration 8178");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    863.49] at iteration 8273");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    862.61] at iteration 8308");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1019.38] at iteration 9282");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1015.54] at iteration 9284");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [39]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1300.68]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1175.72] at iteration 11671");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1077.12] at iteration 11672");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    918.43] at iteration 11673");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    947.79] at iteration 11676");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    894.40] at iteration 11681");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    883.75] at iteration 11687");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    882.18] at iteration 11703");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    869.70] at iteration 11704");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    865.86] at iteration 11707");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    864.92] at iteration 11712");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    864.04] at iteration 11850");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1076.26] at iteration 11872");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1050.45] at iteration 11873");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1044.11] at iteration 11880");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1040.27] at iteration 11881");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [40]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1370.68]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1101.98] at iteration 11935");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1010.54] at iteration 11936");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1009.09] at iteration 11937");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    998.85] at iteration 11941");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    994.79] at iteration 11943");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    913.59] at iteration 11944");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    911.38] at iteration 11953");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    891.24] at iteration 11981");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    891.22] at iteration 11989");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    876.75] at iteration 11990");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [41]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1226.37]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1166.12] at iteration 13249");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    998.99] at iteration 13253");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    996.77] at iteration 13259");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    965.58] at iteration 13285");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    958.27] at iteration 13287");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    958.13] at iteration 13292");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    953.86] at iteration 13307");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    953.42] at iteration 13314");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    933.84] at iteration 13424");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    932.65] at iteration 13438");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [42]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1136.40]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1135.89] at iteration 13573");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1066.50] at iteration 13576");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    844.51] at iteration 13578");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    810.98] at iteration 13579");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1015.98] at iteration 13610");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1006.52] at iteration 13615");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    961.53] at iteration 13618");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    961.09] at iteration 13620");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    960.94] at iteration 13626");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    954.68] at iteration 13638");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [43]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1167.44]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1146.29] at iteration 13737");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    989.10] at iteration 13739");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1216.31] at iteration 13742");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1215.37] at iteration 13745");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1113.88] at iteration 13751");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    983.62] at iteration 13753");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [44]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1222.60]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1302.90] at iteration 13755");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1214.74] at iteration 13756");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1212.70] at iteration 13757");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1202.22] at iteration 13768");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1087.40] at iteration 13769");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1087.24] at iteration 13774");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1041.27] at iteration 13775");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1041.07] at iteration 13777");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1006.55] at iteration 13778");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1000.24] at iteration 13898");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    996.89] at iteration 13899");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    984.39] at iteration 13920");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    982.60] at iteration 14290");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [45]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1240.95]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1078.01] at iteration 18953");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1068.35] at iteration 18954");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1068.15] at iteration 18955");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1052.73] at iteration 18956");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    825.33] at iteration 18957");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    814.89] at iteration 18958");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1241.71] at iteration 18960");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1241.49] at iteration 18964");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1230.31] at iteration 18969");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1221.19] at iteration 18984");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1179.55] at iteration 18985");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1160.78] at iteration 18989");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1125.02] at iteration 19032");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1027.49] at iteration 19039");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1025.91] at iteration 19044");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1025.77] at iteration 19052");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1025.21] at iteration 19077");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1025.07] at iteration 19227");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1007.82] at iteration 19532");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    993.42] at iteration 20113");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    989.88] at iteration 20121");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [46]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1179.89]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1074.65] at iteration 20127");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1073.03] at iteration 20128");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    820.79] at iteration 20129");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    817.15] at iteration 20130");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    816.95] at iteration 20146");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1549.86] at iteration 20151");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1107.91] at iteration 20157");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1071.98] at iteration 20160");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1045.92] at iteration 20164");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [47]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1132.65]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1016.33] at iteration 20328");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    987.68] at iteration 20330");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1211.58] at iteration 20332");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1207.74] at iteration 20337");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1205.34] at iteration 20340");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1204.14] at iteration 20341");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1201.19] at iteration 20343");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1184.58] at iteration 20372");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1182.42] at iteration 20381");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1176.41] at iteration 20408");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1173.10] at iteration 20409");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1169.77] at iteration 20410");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1139.25] at iteration 20412");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1087.19] at iteration 20416");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1082.30] at iteration 20418");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1078.43] at iteration 20419");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [48]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1159.86]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    822.97] at iteration 20429");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1059.24] at iteration 20459");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [49]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1190.41]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1160.32] at iteration 20593");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1136.48] at iteration 20594");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    947.28] at iteration 20595");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    934.14] at iteration 20596");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    886.95] at iteration 20597");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    886.25] at iteration 20598");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1267.53] at iteration 20600");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1263.36] at iteration 20601");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1253.25] at iteration 20608");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1154.75] at iteration 20609");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1151.51] at iteration 20614");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1139.49] at iteration 20619");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1060.73] at iteration 20626");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1055.89] at iteration 20640");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1052.91] at iteration 20643");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1040.37] at iteration 20646");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [50]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1129.57]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1127.93] at iteration 20753");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    991.48] at iteration 20758");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    916.53] at iteration 20767");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    881.80] at iteration 20768");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    835.68] at iteration 20770");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    825.04] at iteration 20777");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1233.31] at iteration 20874");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1228.76] at iteration 20876");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1216.33] at iteration 20883");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1206.54] at iteration 20884");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1201.99] at iteration 20886");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1195.46] at iteration 20888");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1173.82] at iteration 20891");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1159.49] at iteration 20923");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1155.24] at iteration 20928");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1151.97] at iteration 21016");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1126.01] at iteration 21021");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1121.28] at iteration 21031");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1117.57] at iteration 21038");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1070.65] at iteration 21044");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1068.01] at iteration 21128");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1062.04] at iteration 21140");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1061.00] at iteration 21318");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1053.11] at iteration 22175");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1051.51] at iteration 22189");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1039.93] at iteration 22196");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1039.61] at iteration 22239");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [51]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1125.81]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1041.84] at iteration 22332");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =   1013.20] at iteration 22333");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    998.69] at iteration 22336");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    837.43] at iteration 22340");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    827.86] at iteration 22345");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1219.86] at iteration 22417");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1219.65] at iteration 22419");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1215.68] at iteration 22421");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1142.91] at iteration 22435");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1112.79] at iteration 22436");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1112.64] at iteration 22437");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1085.40] at iteration 22439");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1068.68] at iteration 22621");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1041.41] at iteration 24424");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1035.35] at iteration 24432");

        int idx = 0;
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 20 25 27 15 30 24 23 18 16 14 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 67 65 62 74 72 61 64 68 66 69 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 90 87 98 92 84 85 88 86 89 91 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 57 55 54 53 56 58 60 59 22 21 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 81 78 76 71 70 73 77 79 80 83 82 63 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 32 33 31 35 104 37 38 39 36 34 29 28 26 103 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 43 42 41 40 44 46 101 45 48 51 50 52 49 47 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 5 3 7 8 10 11 9 6 4 2 1 75 0");
        assertThat(StringUtils.join(solutionBest.tours.get(idx++), ' ')).isEqualTo("0 13 17 19 94 93 102 97 100 99 96 95 12 0");
    }

}
