package com.github.schmittjoaopedro.thesis;

import com.github.schmittjoaopedro.vrp.thesis.Solver;
import com.github.schmittjoaopedro.vrp.thesis.problem.Instance;
import com.github.schmittjoaopedro.vrp.thesis.problem.Reader;
import com.github.schmittjoaopedro.vrp.thesis.problem.Solution;
import org.junit.Test;

import java.nio.file.Paths;
import java.util.Random;

import static org.assertj.core.api.AssertionsForClassTypes.assertThat;

public class DynamicSolverTest {

    private static int maxIterations = 25000;

    private static final String dpdptw100Directory;

    static {
        dpdptw100Directory = Paths.get(DynamicSolverTest.class.getClassLoader().getResource("dpdptw_100").getFile().substring(1)).toString();
    }

    @Test
    public void dpdptw_lc103_a_0_1_test() throws Exception {
        Instance instance = Reader.getInstance(Paths.get(dpdptw100Directory, "lc103_a_0.1.txt").toFile());
        Solver solver = new Solver(instance, new Random(1), maxIterations, true, true);
        solver.init();
        solver.run();
        Solution solutionBest = solver.getSolutionBest();
        assertThat(solutionBest.feasible).isTrue();
        assertThat(solutionBest.totalCost).isEqualTo(1035.3499342457626);
        assertThat(solutionBest.tours.size()).isEqualTo(9);
        int counter = 0;
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [0, 1]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   2, TC =    126.74]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [2]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   3, TC =    193.89]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [3]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   4, TC =    273.21]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [4, 5]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   5, TC =    341.20]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [6, 7]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    459.67]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [8, 9]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    499.14]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [10, 11, 12]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    563.83]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    563.58] at iteration 425");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    578.25] at iteration 428");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [13, 14]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    619.87]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [15, 16, 17, 18]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    791.21]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    854.75] at iteration 607");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    816.26] at iteration 608");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    753.19] at iteration 609");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    732.26] at iteration 610");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    722.64] at iteration 624");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    713.37] at iteration 625");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [19]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    728.15]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [20, 21, 22, 23]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    880.76]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    895.37] at iteration 789");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    845.58] at iteration 790");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    947.18] at iteration 797");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [24]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1009.28]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    810.05] at iteration 811");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    762.25] at iteration 815");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    759.48] at iteration 817");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    718.71] at iteration 822");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    714.15] at iteration 824");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    957.95] at iteration 879");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [25]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1043.97]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1029.14] at iteration 952");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    990.80] at iteration 953");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    913.91] at iteration 955");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    909.35] at iteration 964");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [26, 27]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    919.43]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [28]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    920.19]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [29]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    922.50]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [30]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1005.89]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    860.23] at iteration 1194");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    835.96] at iteration 1195");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    833.19] at iteration 1196");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    792.91] at iteration 1213");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [31]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    838.91]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [32, 33, 34]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    883.91]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1015.65] at iteration 1357");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    957.43] at iteration 1360");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    951.91] at iteration 1362");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    929.14] at iteration 1363");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [35]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    929.21]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    923.00] at iteration 1426");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [36]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    925.38]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [37]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    932.84]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [38]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    948.31]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [39]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    951.23]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    943.37] at iteration 1905");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [40]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    969.45]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    964.02] at iteration 1942");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [41]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    996.92]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [42]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1017.06]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1007.07] at iteration 1995");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [43]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1041.89]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1013.94] at iteration 2005");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [44, 45]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1040.47]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [46, 47, 48]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1078.55]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1066.98] at iteration 2051");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [49]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1087.82]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1080.89] at iteration 2074");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1039.84] at iteration 2137");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1033.11] at iteration 2148");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1032.43] at iteration 2157");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [50]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1035.26]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [51]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1035.35]");
    }

    @Test
    public void dpdptw_lc103_a_0_5_test() throws Exception {
        Instance instance = Reader.getInstance(Paths.get(dpdptw100Directory, "lc103_a_0.5.txt").toFile());
        Solver solver = new Solver(instance, new Random(1), maxIterations, true, true);
        solver.init();
        solver.run();
        Solution solutionBest = solver.getSolutionBest();
        assertThat(solutionBest.totalCost).isEqualTo(1038.3507683136877);
        assertThat(solutionBest.tours.size()).isEqualTo(9);
        assertThat(solutionBest.feasible).isTrue();
        int counter = 0;
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [0]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   1, TC =     26.01]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [1]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   2, TC =    126.74]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [2]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   3, TC =    193.89]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [3]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   4, TC =    273.21]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [4]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   4, TC =    283.78]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [5]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   5, TC =    341.20]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [6]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   6, TC =    415.32]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [7]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    459.67]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [8]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    468.77]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [9]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    499.14]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [10]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    518.95]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [11]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    557.65]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    648.35] at iteration 2147");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    587.24] at iteration 2148");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    572.07] at iteration 2154");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [12]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    578.25]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [13, 14]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    619.87]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [15, 16]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    626.59]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [17]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    702.74]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    641.66] at iteration 3076");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    641.41] at iteration 3077");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    755.29] at iteration 3079");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    754.67] at iteration 3081");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    708.91] at iteration 3084");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [18]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    797.38]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    749.22] at iteration 3095");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    734.41] at iteration 3099");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    722.64] at iteration 3177");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    713.37] at iteration 3180");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [19]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    728.15]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [20]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    744.37]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [21, 22]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    866.76]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    787.17] at iteration 3965");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    698.38] at iteration 3966");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    695.53] at iteration 3967");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    692.56] at iteration 3968");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    905.27] at iteration 3970");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    884.95] at iteration 3991");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    855.82] at iteration 3994");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    853.79] at iteration 4001");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [23]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    867.78]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    863.93] at iteration 4013");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [24]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    926.03]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    861.68] at iteration 4046");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    857.62] at iteration 4049");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    716.92] at iteration 4052");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    714.15] at iteration 4056");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    988.91] at iteration 4078");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    984.90] at iteration 4092");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    935.69] at iteration 4115");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    876.50] at iteration 4233");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [25]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    962.52]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    932.93] at iteration 4795");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    848.12] at iteration 4797");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    833.64] at iteration 4800");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    814.97] at iteration 4805");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    788.73] at iteration 4817");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    775.57] at iteration 4823");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [26, 27]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    785.66]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    923.29] at iteration 4979");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    919.43] at iteration 4980");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [28]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    920.19]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [29]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    922.50]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [30]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1005.89]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    940.10] at iteration 5968");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    935.58] at iteration 5969");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    833.19] at iteration 5971");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    792.91] at iteration 5980");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [31]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    838.91]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [32]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    882.09]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    892.96] at iteration 6776");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    887.96] at iteration 6790");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [33, 34]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    889.77]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [35]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    889.85]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [36]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    918.85]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [37]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    926.31]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [38]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    928.50]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [39]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    931.43]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [40]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    935.22]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [41]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    945.88]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [42]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    972.65]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [43]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1007.47]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1005.07] at iteration 10089");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [44]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1038.86]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1034.20] at iteration 10141");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [45]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1063.17]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1032.98] at iteration 10167");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1027.92] at iteration 10172");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [46]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1056.73]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1056.31] at iteration 10231");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [47]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1068.32]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1067.88] at iteration 10235");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [48]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1068.08]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1061.18] at iteration 10303");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1059.77] at iteration 10311");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1059.72] at iteration 10321");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1053.72] at iteration 10324");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [49]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1071.00]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1069.99] at iteration 10377");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1069.84] at iteration 10397");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1061.92] at iteration 10401");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1058.42] at iteration 10491");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1058.27] at iteration 10492");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1051.36] at iteration 10677");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1050.67] at iteration 10698");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1045.68] at iteration 10719");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1040.62] at iteration 10728");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [50]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1067.53]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1058.21] at iteration 11210");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [51]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1058.30]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1055.92] at iteration 11268");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1054.19] at iteration 11344");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1053.21] at iteration 11552");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1051.79] at iteration 13017");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1051.64] at iteration 13019");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1051.49] at iteration 13031");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1049.95] at iteration 13169");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1049.26] at iteration 13174");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1047.75] at iteration 13200");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1047.70] at iteration 13204");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1038.35] at iteration 13217");
    }

    @Test
    public void dpdptw_lc103_q_0_0_1_test() throws Exception {
        Instance instance = Reader.getInstance(Paths.get(dpdptw100Directory, "lc103_q_0_0.1.txt").toFile());
        Solver solver = new Solver(instance, new Random(1), maxIterations, true, true);
        solver.init();
        solver.run();
        Solution solutionBest = solver.getSolutionBest();
        assertThat(solutionBest.totalCost).isEqualTo(1038.3507683136875);
        assertThat(solutionBest.tours.size()).isEqualTo(9);
        assertThat(solutionBest.feasible).isTrue();
        int counter = 0;
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   2, TC =    218.70]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   2, TC =    192.62] at iteration 3");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [4]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   3, TC =    218.63]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   2, TC =    219.05] at iteration 506");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [5]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   3, TC =    319.77]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   3, TC =    263.23] at iteration 587");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   3, TC =    259.82] at iteration 590");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [6]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   4, TC =    339.15]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   4, TC =    317.82] at iteration 1234");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [7]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   4, TC =    365.82]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   4, TC =    360.58] at iteration 2307");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   4, TC =    353.12] at iteration 2308");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   4, TC =    349.72] at iteration 2324");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [8]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   5, TC =    407.14]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [9]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   6, TC =    481.25]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    476.94] at iteration 2469");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [10]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    521.29]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [11]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    591.50]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    538.66] at iteration 4187");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [12]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    569.30]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [13]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    626.63]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    617.42] at iteration 4278");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    602.99] at iteration 4304");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [14]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    641.70]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    631.47] at iteration 4309");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [15]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    675.30]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    630.07] at iteration 4369");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    628.82] at iteration 4370");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    750.32] at iteration 4380");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    712.00] at iteration 4383");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    704.65] at iteration 4384");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    680.56] at iteration 4395");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [16]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    690.56]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [17, 18]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    784.99]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    700.96] at iteration 6068");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    698.86] at iteration 6078");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [19]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    775.02]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    769.42] at iteration 6171");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    734.17] at iteration 6172");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    717.27] at iteration 6177");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [20]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    771.99]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    752.31] at iteration 6228");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    743.04] at iteration 6236");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [21]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    749.21]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [22]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    830.01]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    850.79] at iteration 7929");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [23]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    892.38]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    884.41] at iteration 7950");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1052.37] at iteration 7951");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    943.78] at iteration 7987");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    894.56] at iteration 7999");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    854.77] at iteration 8020");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [24]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    868.77]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [25]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    930.87]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    721.76] at iteration 8111");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    718.99] at iteration 8112");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    965.45] at iteration 8170");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    956.19] at iteration 8171");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    940.53] at iteration 8274");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    881.34] at iteration 9131");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [26]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    967.36]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    853.98] at iteration 9588");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    844.76] at iteration 9589");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    841.99] at iteration 9592");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    793.57] at iteration 9594");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    780.41] at iteration 9610");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1005.81] at iteration 9615");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    946.84] at iteration 9646");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    914.19] at iteration 9660");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [27]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    919.43]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [28]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    920.19]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [29]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    922.50]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [30]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1005.89]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    945.13] at iteration 11935");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    835.96] at iteration 11937");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    833.19] at iteration 11940");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    792.91] at iteration 11961");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [31]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    838.91]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [32]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    882.09]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    892.96] at iteration 13573");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    889.76] at iteration 13606");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [33, 34]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    975.40]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1057.47] at iteration 13734");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    935.33] at iteration 13737");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    929.01] at iteration 13752");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [35]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    929.08]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    928.40] at iteration 13787");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    923.00] at iteration 13880");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    900.06] at iteration 13909");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    894.85] at iteration 13910");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    889.85] at iteration 14120");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [36]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    918.85]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [37]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    926.31]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [38]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    928.50]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [39]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    931.43]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [40]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    935.22]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [41]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    945.88]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [42]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    972.65]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [43]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1007.47]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1005.07] at iteration 20150");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [44]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1038.86]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [45]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1067.83]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1056.72] at iteration 20329");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1053.87] at iteration 20381");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1049.59] at iteration 20389");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1039.67] at iteration 20391");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1028.09] at iteration 20397");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1023.74] at iteration 20424");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [46]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1028.39]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [47]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1049.22]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1045.39] at iteration 20537");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1041.55] at iteration 20538");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1034.20] at iteration 20555");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [48]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1034.40]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [49]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1051.67]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1050.67] at iteration 20758");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1040.62] at iteration 20872");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [50]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1067.53]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [51]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1075.27]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1071.11] at iteration 22551");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1041.40] at iteration 22679");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1041.25] at iteration 22680");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1040.48] at iteration 22681");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1040.05] at iteration 22755");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1038.35] at iteration 22758");
    }

    @Test
    public void dpdptw_lc103_q_0_0_5_test() throws Exception {
        Instance instance = Reader.getInstance(Paths.get(dpdptw100Directory, "lc103_q_0_0.5.txt").toFile());
        Solver solver = new Solver(instance, new Random(1), maxIterations, true, true);
        solver.init();
        solver.run();
        Solution solutionBest = solver.getSolutionBest();
        assertThat(solutionBest.totalCost).isEqualTo(1035.3499342457624);
        assertThat(solutionBest.tours.size()).isEqualTo(9);
        assertThat(solutionBest.feasible).isTrue();
        int counter = 0;
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =   1109.05]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =   1065.67] at iteration 1");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    799.40] at iteration 2");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    784.72] at iteration 5");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    784.35] at iteration 6");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    752.71] at iteration 7");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    750.35] at iteration 11");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    735.13] at iteration 14");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    725.62] at iteration 179");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [29]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   6, TC =    735.41]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [30]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    802.56]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    787.79] at iteration 688");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    748.82] at iteration 691");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    738.46] at iteration 692");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    710.04] at iteration 696");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    706.34] at iteration 702");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    705.64] at iteration 709");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =   1006.05] at iteration 1089");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    994.10] at iteration 1097");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    977.60] at iteration 1098");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    973.06] at iteration 1107");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    959.89] at iteration 1110");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    958.72] at iteration 1115");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    943.92] at iteration 1174");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    934.83] at iteration 1185");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    926.25] at iteration 1186");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    918.58] at iteration 1250");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    912.86] at iteration 1461");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    897.14] at iteration 1470");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    892.34] at iteration 1474");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    871.51] at iteration 1476");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    871.17] at iteration 1480");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    862.56] at iteration 1487");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   6, TC =    860.10] at iteration 1489");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [31]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   7, TC =    917.52]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    879.85] at iteration 2388");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    857.32] at iteration 2389");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    854.93] at iteration 2390");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    850.79] at iteration 2391");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    850.08] at iteration 2424");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    802.37] at iteration 2449");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    801.65] at iteration 2453");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    791.21] at iteration 2528");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    772.00] at iteration 2529");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [32]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    804.37]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    761.15] at iteration 4211");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    759.30] at iteration 4212");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    755.57] at iteration 4218");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =   1106.38] at iteration 4222");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =   1084.93] at iteration 4225");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =   1060.92] at iteration 4227");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =   1054.14] at iteration 4230");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =   1053.03] at iteration 4232");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =   1033.78] at iteration 4237");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =   1004.03] at iteration 4241");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    997.11] at iteration 4243");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    968.04] at iteration 4248");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    966.53] at iteration 4256");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    950.17] at iteration 4275");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    949.07] at iteration 4295");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    946.05] at iteration 4311");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    939.31] at iteration 4402");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    929.50] at iteration 4463");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    927.07] at iteration 4468");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    917.76] at iteration 4491");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    907.72] at iteration 4886");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   7, TC =    888.50] at iteration 4895");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [33, 34]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    971.36]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    932.18] at iteration 6028");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    921.44] at iteration 6029");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    903.83] at iteration 6032");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    758.81] at iteration 6033");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    757.46] at iteration 6034");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1035.87] at iteration 6035");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1021.39] at iteration 6036");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1021.36] at iteration 6038");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1017.09] at iteration 6039");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1016.95] at iteration 6040");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    894.08] at iteration 6042");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    869.74] at iteration 6044");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    865.59] at iteration 6048");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    864.22] at iteration 6049");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    860.75] at iteration 6052");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    849.64] at iteration 6056");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [35]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =    856.68]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    854.54] at iteration 6137");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    853.43] at iteration 6183");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [36]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    941.89]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    896.58] at iteration 6191");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    864.65] at iteration 6194");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    856.15] at iteration 6199");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    855.70] at iteration 6200");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    970.27] at iteration 6209");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    963.88] at iteration 6210");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    921.69] at iteration 6340");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    918.32] at iteration 6370");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    917.97] at iteration 6400");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [37]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1003.93]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    994.62] at iteration 7828");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    905.38] at iteration 7829");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    847.02] at iteration 7835");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    844.64] at iteration 7838");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    840.49] at iteration 7839");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    769.19] at iteration 7840");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =    941.99] at iteration 7878");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [38]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1004.09]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    967.20] at iteration 8126");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    916.97] at iteration 8128");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    903.81] at iteration 8131");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    900.13] at iteration 8132");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    868.27] at iteration 8136");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    864.43] at iteration 8140");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1046.44] at iteration 8147");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1033.57] at iteration 8149");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1028.41] at iteration 8192");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1021.89] at iteration 8202");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1015.54] at iteration 8204");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [39]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   8, TC =   1043.01]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   8, TC =   1040.27] at iteration 11675");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [40]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1123.66]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1097.24] at iteration 11935");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1078.71] at iteration 11936");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    920.16] at iteration 11939");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    918.63] at iteration 11941");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    886.29] at iteration 11945");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    876.75] at iteration 11981");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [41]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    922.75]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [42]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =    965.93]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    910.80] at iteration 13573");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    858.54] at iteration 13574");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    811.48] at iteration 13575");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =  10, TC =    810.04] at iteration 13585");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1006.07] at iteration 13602");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1002.23] at iteration 13603");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    983.76] at iteration 13604");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    982.55] at iteration 13684");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    976.80] at iteration 13685");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [43]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    979.78]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [44]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =  10, TC =   1050.52]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1057.62] at iteration 13755");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1018.71] at iteration 13761");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1018.51] at iteration 13762");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1018.24] at iteration 13771");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1016.61] at iteration 13774");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    982.77] at iteration 13778");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    982.60] at iteration 13837");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [45]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =    985.53]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [46]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1006.20]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =    999.02] at iteration 20243");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [47]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1029.64]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [48]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1034.29]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [49]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1034.49]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [50]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1051.77]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1040.71] at iteration 20820");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New best = [F = true, NV =   9, TC =   1032.52] at iteration 21225");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("New requests = [51]");
        assertThat(solver.getLogs().get(counter++)).isEqualTo("Insertion heuristic = [F = true, NV =   9, TC =   1035.35]");
    }

}
