package com.github.schmittjoaopedro;

import com.github.schmittjoaopedro.algorithms.MMAS_CMADTSP;
import com.github.schmittjoaopedro.graph.Graph;
import com.github.schmittjoaopedro.graph.GraphFactory;
import org.junit.Before;
import org.junit.Test;

import java.io.File;

import static org.assertj.core.api.Assertions.assertThat;

public class MMAS_CMADTSP_Test {

    private String kroA100;

    private String kroA150;

    @Before
    public void beforeClass() {
        kroA100 = getClass().getClassLoader().getResource("tsp/KroA100.tsp").getFile();
        kroA150 = getClass().getClassLoader().getResource("tsp/KroA150.tsp").getFile();
    }

    @Test
    public void test_mmas_cycle_moving_adtsp_freq_10_mag_0_5_kroA100() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_CMADTSP mmas_cmadtsp = new MMAS_CMADTSP(graph, 0.8, 1000, 0.5, 10, 4);
        mmas_cmadtsp.setMmasSeed(1);
        mmas_cmadtsp.setDbgpSeed(1);
        mmas_cmadtsp.setStatisticInterval(1);
        mmas_cmadtsp.setShowLog(false);
        mmas_cmadtsp.run();
        assertThat(mmas_cmadtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(32547.017935634198);
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getGlobalStatistics())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 96, 55, 79, 30, 88, 41, 7, 91, 0, 52, 74]");

        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 1, 38845.35851682551, 3004.3870870225496, 0.0, 57.41877551020408, 32527.274478424253);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 5, 31645.140873562006, 1720.4912022112023, 0.645, 5.708571428571428, 30358.85635324978);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 10, 30668.454414194377, 1772.5118625887405, 0.54, 7.686530612244898, 29460.552513262268);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 11, 30912.402661647382, 2982.204574455355, 0.565, 7.735510204081633, 29195.706287108525);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 15, 28849.37795779313, 1338.8450075335845, 0.52, 2.929795918367347, 28200.18591301644);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 20, 29125.809185295468, 1743.1230927249096, 0.515, 6.0351020408163265, 28058.18591301644);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 21, 40365.872975585706, 2399.7090390599415, 0.455, 29.739591836734693, 35916.8908360566);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 25, 34658.45321167476, 2728.19808651151, 0.56, 10.591020408163265, 31445.654287830886);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 30, 33521.91109700419, 2151.4883338489026, 0.525, 8.106122448979592, 30300.51627570957);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 31, 38677.906508430446, 2682.7505701389027, 0.52, 28.354285714285716, 34262.3314196653);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 35, 35123.687679780174, 2646.390111025182, 0.66, 11.026938775510205, 31553.993218977208);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 40, 33636.28152374379, 2998.615961092, 0.505, 6.597551020408163, 30911.01221859491);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 41, 39288.062398266724, 1912.6343845047566, 0.485, 25.420408163265307, 32415.123151954303);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 45, 31965.737924513738, 2659.725222582318, 0.555, 7.565714285714286, 29070.78819736202);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 50, 31036.50449789863, 3733.2542344625354, 0.515, 5.451428571428571, 28347.019873462934);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 51, 41517.57189265436, 3540.8421668147153, 0.485, 27.100408163265307, 35467.9933088491);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 55, 34563.02662096079, 3267.5336766742644, 0.625, 11.71265306122449, 29985.00189256767);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 60, 34379.695434897396, 2980.306573891027, 0.575, 8.495510204081633, 29871.314392839995);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 61, 36529.922124947974, 2313.3558527417567, 0.485, 21.96816326530612, 32131.558804587552);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 65, 36999.16051830489, 2771.6140481705274, 0.535, 13.635102040816326, 32034.332765842115);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 70, 35172.5426633873, 2561.75571090781, 0.52, 12.008979591836734, 31432.380527534206);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 71, 40281.00034121016, 2785.0906456611465, 0.49, 28.240816326530613, 35673.106885422996);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 75, 34853.39603303697, 3704.9242213569155, 0.525, 7.9648979591836735, 31822.850953248977);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 80, 33008.470216419286, 2600.1640272473687, 0.625, 9.203265306122448, 30941.94096005984);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 81, 38958.10758663367, 2440.9653819075693, 0.51, 25.53795918367347, 34913.34492216405);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 85, 36855.306726388546, 3210.144856790416, 0.555, 19.035918367346937, 31088.574225193424);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 90, 34598.4090277992, 2901.059928494224, 0.5, 10.098775510204081, 30465.51323062962);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 91, 37649.4206132603, 3840.926437314393, 0.455, 30.76, 32269.665126427655);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 95, 34246.50768877837, 3356.5044682175776, 0.545, 8.506122448979593, 30716.091394801573);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 100, 35034.80359982562, 5282.836975521284, 0.54, 5.725714285714286, 29843.746203637125);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 101, 37943.4524314359, 2023.008896520568, 0.52, 28.644897959183673, 32868.65735642633);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 105, 36124.25910364611, 2203.3764259778013, 0.575, 12.551020408163266, 32088.624727155104);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 110, 36373.612912065626, 2217.6632105345216, 0.5, 16.219591836734693, 31872.819133559628);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 111, 38039.92206723361, 2767.864483174602, 0.51, 27.92734693877551, 34281.89241925552);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 115, 37243.81395643784, 2867.865867303557, 0.555, 12.50530612244898, 31711.632143593462);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 120, 35924.51603519167, 2687.8627730560593, 0.505, 13.63265306122449, 31230.765927079276);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 121, 36142.10691274816, 2306.1956888638906, 0.505, 22.70122448979592, 31981.125803307186);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 125, 33602.63725389204, 3330.106843604126, 0.545, 8.484897959183673, 29722.213512904997);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 130, 32651.753215410565, 3491.4309954759588, 0.525, 9.38204081632653, 28594.702329091804);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 131, 34722.541650733954, 1700.9783458896004, 0.485, 24.929795918367347, 32094.2532682129);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 135, 31127.52511890091, 3260.17147242533, 0.54, 4.508571428571429, 28969.86338559872);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 140, 30023.991062003202, 2169.916290110007, 0.515, 4.230204081632653, 28427.213379461613);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 141, 37740.27772677355, 1754.3904874754746, 0.49, 14.048979591836735, 33590.31545271383);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 145, 35707.83981580592, 2732.1750925947554, 0.55, 8.060408163265306, 32692.618071450754);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 150, 36111.00190982756, 2491.3435045552596, 0.5, 10.586938775510204, 32200.821341206578);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 151, 39475.01258528771, 3220.2915566684355, 0.495, 23.056326530612246, 34254.42482345532);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 155, 33437.40137688053, 2735.0135014500634, 0.54, 5.343673469387755, 31205.81670254235);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 160, 32665.43926401688, 3203.6504797836355, 0.535, 5.459591836734694, 30544.80116165095);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 161, 38845.6522010136, 3969.7056958220346, 0.505, 19.267755102040816, 33423.93271455725);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 165, 33045.11548348181, 2166.5991109207, 0.575, 10.817142857142857, 29772.20532307036);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 170, 31680.78369217261, 3598.7345975735716, 0.515, 5.82204081632653, 29000.156132378386);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 171, 33535.6230576636, 1739.7388397502643, 0.505, 17.096326530612245, 30746.301003841785);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 175, 31741.922979235344, 1968.7912593714077, 0.525, 9.623673469387755, 29587.77748915852);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 180, 30935.202285116036, 3066.6413370417854, 0.52, 6.278367346938776, 28756.907856399976);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 181, 36483.144984441686, 1696.752126259382, 0.505, 13.419591836734694, 34024.00174385938);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 185, 33487.31751821272, 2904.0828413181916, 0.56, 8.54204081632653, 30271.906508433574);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 190, 32127.237964433603, 2832.793941590353, 0.515, 6.761632653061224, 29533.152334009283);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 191, 34324.75277927774, 2153.1951419914676, 0.5, 15.418775510204082, 30472.521501233186);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 195, 32436.81796735582, 3010.3018688595216, 0.52, 6.330612244897959, 29489.90684742017);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 200, 31615.872117660772, 2682.2569349455975, 0.495, 5.254693877551021, 29489.90684742017);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 201, 36038.93605068443, 1701.0587836088744, 0.49, 17.580408163265307, 31272.1674330994);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 205, 32916.43422164312, 2363.858790858192, 0.555, 11.351836734693878, 29949.48898274014);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 210, 31636.657348374603, 2296.155855717825, 0.525, 9.562448979591837, 29491.954266019333);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 211, 34913.18508343522, 2756.9785369223964, 0.5, 21.641632653061226, 30866.573615321027);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 215, 32591.173483209004, 1849.3790480801645, 0.57, 12.724897959183673, 30508.143073345353);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 220, 32776.72762529817, 2901.7704945153914, 0.5, 9.879183673469388, 30378.909333656407);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 221, 37212.936354859376, 1989.0080650589523, 0.49, 24.93387755102041, 32750.36540944014);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 225, 33144.51079309087, 2831.6566006306857, 0.565, 7.755918367346939, 30645.531685808084);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 230, 34312.21751206245, 2710.4858587965664, 0.52, 8.037551020408163, 30198.19424439952);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 231, 38324.00769186224, 2818.753147425745, 0.485, 23.528979591836734, 32388.67466128683);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 235, 33289.131330822005, 3274.994683990463, 0.57, 8.235918367346938, 30530.66159358926);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 240, 30886.52363393744, 3104.73859776429, 0.54, 3.746938775510204, 29220.24148098406);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 241, 36774.96643215036, 3552.9844714772303, 0.505, 10.90938775510204, 32084.984543495455);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 245, 33053.59791331905, 3563.8506070847193, 0.54, 7.248979591836735, 29655.67528145897);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 250, 32188.776981422827, 2908.9522242004928, 0.54, 6.07265306122449, 29655.67528145897);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 251, 34631.30950597823, 3054.7626729232475, 0.485, 12.24326530612245, 30401.55919689417);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 255, 31160.29460321011, 2644.914451142306, 0.525, 6.674285714285714, 29430.50174080471);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 260, 31061.176872739507, 2131.582695629955, 0.525, 6.662857142857143, 29430.50174080471);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 261, 36190.60233831158, 2810.4115654250504, 0.495, 13.01142857142857, 32020.062686793088);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 265, 33115.44262831467, 1914.9017556459878, 0.525, 6.021224489795919, 31560.03990129774);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 270, 32271.234489963856, 1993.859568190934, 0.53, 4.348571428571429, 30967.035805535103);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 271, 39082.09974717394, 1999.5282174340723, 0.485, 13.292244897959185, 32747.742940473927);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 275, 33762.825329462474, 2462.7339763164064, 0.585, 6.442448979591837, 31476.00394925208);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 280, 33275.15554395236, 2533.3841087674673, 0.51, 4.077551020408163, 31308.130826236156);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 281, 37248.91517430255, 3429.045890406979, 0.48, 21.94448979591837, 33199.8002813969);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 285, 32707.634789538784, 2146.1334699625563, 0.53, 6.368163265306123, 30936.29355503314);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 290, 31051.12347207521, 2962.3096947501786, 0.545, 4.2963265306122445, 28419.995929495333);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 291, 36255.057168550135, 1870.4675425348366, 0.48, 18.332244897959185, 33113.936867152726);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 295, 32205.964026517468, 3123.342054401843, 0.565, 3.4881632653061225, 30560.25423812296);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 300, 30847.72791043134, 3023.842277667143, 0.495, 2.1575510204081634, 29714.92024181545);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 301, 38425.98265121068, 2649.9518478262135, 0.475, 20.311836734693877, 33128.03423810195);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 305, 35403.3547466105, 2629.342719218319, 0.56, 6.835102040816326, 31814.16497769574);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 310, 35407.00147792711, 2437.811072675917, 0.515, 8.976326530612244, 31441.157130582433);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 311, 37218.502225820135, 2450.576705973966, 0.475, 20.059591836734693, 33292.34095743726);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 315, 33643.49767557744, 3009.3030425468587, 0.54, 5.983673469387755, 31587.90420862599);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 320, 32254.64155679971, 2809.692769026054, 0.57, 4.973061224489796, 30676.005913533798);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 321, 37539.45866045442, 3970.903620606718, 0.5, 19.166530612244898, 32314.25538510919);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 325, 35443.8689378232, 3166.8783276512977, 0.515, 8.273469387755101, 31175.900038764998);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 330, 34247.149284453764, 2762.6731315440743, 0.495, 8.511836734693878, 31019.2668310908);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 331, 35592.537057218324, 2282.9317293712875, 0.48, 17.51265306122449, 31429.36318661503);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 335, 32628.33514680584, 2020.1789741695482, 0.59, 4.755102040816326, 30750.90552193643);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 340, 31845.638865301968, 2856.385063649738, 0.515, 3.3616326530612244, 29964.62028389254);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 341, 37914.38716810024, 2121.354541062286, 0.475, 20.31020408163265, 33485.79179295399);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 345, 34896.822195269895, 2649.884726395577, 0.565, 5.548571428571429, 32927.73974231954);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 350, 34539.494644108105, 2660.7824507735913, 0.49, 6.395918367346939, 32689.76704064467);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 351, 36432.48970606681, 2224.8332671619864, 0.495, 9.166530612244898, 32323.474934765098);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 355, 32974.807406145825, 2956.2421842258914, 0.555, 5.089795918367347, 30934.420628276268);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 360, 31754.67529490505, 1983.8882785250155, 0.49, 2.6342857142857143, 30737.75797982362);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 361, 36145.853872928674, 3164.3155890329804, 0.515, 11.560816326530611, 32619.28699388013);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 365, 32596.965667429744, 3219.6168358117534, 0.545, 3.9746938775510205, 29692.61386727333);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 370, 31395.472342138528, 3190.1010168372995, 0.53, 3.8481632653061224, 29269.051526135645);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 371, 36734.3647056224, 2216.207452533376, 0.495, 10.11673469387755, 33030.86296083067);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 375, 31700.10573809677, 2058.180682684919, 0.545, 2.4816326530612245, 30436.347702809137);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 380, 35279.182744414524, 5045.706802550901, 0.52, 3.813877551020408, 30015.54972080881);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 381, 38946.48109843545, 4470.140877883487, 0.505, 11.118367346938776, 33878.85192724151);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 385, 34186.21060186436, 3471.90460802082, 0.545, 4.403265306122449, 31392.79766753178);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 390, 31997.918787240298, 2029.1356080028859, 0.515, 2.991020408163265, 31082.930000028304);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 391, 39231.67142786812, 4368.951285754578, 0.47, 17.140408163265306, 33847.46379264457);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 395, 34722.04745524126, 3315.445433166433, 0.545, 5.156734693877551, 32113.631235137964);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 400, 34170.440924012124, 3342.4982483659865, 0.5, 3.7346938775510203, 31569.99230650978);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 401, 35087.95665525526, 1910.085410226283, 0.48, 16.488979591836735, 30706.419588672656);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 405, 29552.90321121261, 1632.6545273623647, 0.575, 1.956734693877551, 29042.71468049543);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 410, 29294.197576844203, 1421.5237146628672, 0.52, 1.0914285714285714, 28889.746757726745);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 411, 39044.840719657266, 2850.0038041713406, 0.505, 8.917551020408164, 33871.95153057721);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 415, 36272.910389936296, 5092.728096222382, 0.54, 4.220408163265306, 31232.80039304647);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 420, 32266.17212919933, 2856.345097212609, 0.535, 3.4481632653061225, 29916.4070491306);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 421, 37016.91279716727, 3430.2134265341297, 0.49, 13.347755102040816, 32735.101294215783);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 425, 33563.591770218074, 1952.285804512295, 0.54, 5.457959183673469, 31953.405729651768);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 430, 31813.472101639596, 2001.182568594364, 0.535, 1.7526530612244897, 31057.509950565996);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 431, 39131.42528371818, 3589.344600945379, 0.48, 11.638367346938775, 33818.95304513364);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 435, 31515.243776265736, 2044.1209686508435, 0.535, 0.8342857142857143, 31026.790595779945);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 440, 31114.185778108793, 698.4713930980597, 0.5, 1.1893877551020409, 30943.513910305614);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 441, 35529.110476716116, 3244.6286049449845, 0.495, 10.876734693877552, 32079.838725677753);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 445, 34735.202675388835, 4014.0507993177407, 0.495, 8.795102040816326, 31028.251646568864);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 450, 31211.624132708366, 2108.3733253974124, 0.555, 3.966530612244898, 29890.560746517614);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 451, 36873.48397115444, 3741.2011821325987, 0.505, 10.962448979591837, 31404.014899246045);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 455, 32305.871342963335, 2949.140413726085, 0.525, 4.383673469387755, 29881.965388338627);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 460, 32318.798035394215, 2949.015388068568, 0.525, 4.528979591836735, 29881.965388338627);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 461, 37428.98102731927, 1928.6619912689637, 0.485, 13.282448979591837, 34195.597063576104);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 465, 36162.42214846692, 2547.5271846223545, 0.52, 11.838367346938776, 33681.2187046319);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 470, 36244.83054039294, 2868.003745922332, 0.495, 7.969795918367347, 32804.74425352414);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 471, 38338.61965561749, 3023.8650762641782, 0.52, 18.08408163265306, 33872.388768559584);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 475, 35652.108458371455, 2621.508821507072, 0.595, 9.470204081632653, 32635.596735471485);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 480, 33498.08104715832, 1965.1944608577073, 0.505, 4.7673469387755105, 31920.098767592386);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 481, 35759.946059803086, 1641.9900027102942, 0.495, 11.867755102040816, 31459.450195804515);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 485, 31030.807083660784, 2746.376981438362, 0.575, 4.227755102040816, 29938.467500926658);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 490, 30032.450438435877, 897.3874969296908, 0.51, 1.229387755102041, 29765.825369874678);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 491, 39285.94733613292, 3295.033150609664, 0.49, 10.795918367346939, 33251.54791426801);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 495, 32676.66231004525, 3555.0552891137386, 0.53, 1.4261224489795918, 31114.592967764762);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 500, 31912.18414484625, 2198.319844490252, 0.52, 2.4824489795918367, 30824.65514264192);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 501, 37205.80667772095, 1765.3619475046737, 0.505, 8.15265306122449, 33737.66752895907);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 505, 33793.1069620078, 1523.604994405649, 0.54, 4.972244897959183, 32170.246140117848);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 510, 33282.95915759412, 2414.1797076329503, 0.495, 4.701224489795918, 31890.786832445185);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 511, 38423.468385835884, 2726.988770656684, 0.48, 16.277551020408165, 32281.978062833517);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 515, 32865.099142606305, 1445.2970861077815, 0.53, 4.857142857142857, 31925.840406328385);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 520, 32660.77136043131, 1217.141442416583, 0.48, 4.248163265306123, 31454.471528748993);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 521, 36592.941801979236, 2299.399239929153, 0.49, 15.384489795918368, 32305.858874239304);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 525, 31345.04771321811, 2714.6765610967695, 0.525, 1.2791836734693878, 29949.757997448516);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 530, 30592.25805020599, 1900.0173753854392, 0.525, 1.1787755102040816, 29949.757997448516);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 531, 37987.060624442835, 2511.588052940152, 0.475, 8.986122448979591, 34685.20499293451);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 535, 34098.37954375321, 1931.0598119033511, 0.52, 2.397551020408163, 32853.322233284256);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 540, 31444.260686239915, 1031.9896214413766, 0.53, 1.8612244897959183, 31134.69784646541);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 541, 36702.484419931396, 1727.4975874000738, 0.51, 11.711020408163265, 33839.81138436505);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 545, 34455.09550412123, 1785.650259497034, 0.515, 3.2310204081632654, 32977.40346724474);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 550, 33945.05719953439, 1779.8414825919665, 0.515, 3.0906122448979594, 32655.438506700684);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 551, 37278.26799915389, 3255.0072640103813, 0.48, 14.584489795918367, 33098.282827498224);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 555, 32222.69328911316, 1797.1402915203078, 0.55, 1.6416326530612244, 31835.015483977426);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 560, 31810.25346788102, 1349.5316193308215, 0.52, 1.9355102040816325, 31125.532637421366);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 561, 37071.99479073309, 2601.1939830702113, 0.52, 9.043265306122448, 32244.77376517877);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 565, 32305.756554514053, 2939.257652510775, 0.555, 3.476734693877551, 30652.838858663537);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 570, 32517.795215093316, 2783.7429399246425, 0.495, 4.308571428571429, 30560.214295837803);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 571, 33507.302606561134, 1785.886765583209, 0.52, 6.938775510204081, 31860.81205659857);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 575, 31442.11791319448, 911.839427752314, 0.51, 0.7959183673469388, 31226.086092065525);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 580, 32300.351984875346, 2838.941364238333, 0.49, 2.8277551020408165, 31121.71001078212);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 581, 37199.79349459191, 1374.5416209430891, 0.485, 10.672653061224489, 34212.28184168014);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 585, 34105.03724743369, 2056.592323714992, 0.52, 6.564081632653061, 32642.171432530384);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 590, 34109.848068324856, 2518.10141085202, 0.495, 6.238367346938776, 31923.09217688323);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 591, 40780.05755806522, 2691.9788113241343, 0.5, 11.489795918367347, 34144.30701475978);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 595, 35312.60131371759, 2160.7859366769603, 0.535, 2.866122448979592, 33680.6033341114);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 600, 33972.958032245704, 963.8755865071611, 0.495, 2.262857142857143, 33494.98126500426);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 601, 36997.83878776521, 2831.9046166761527, 0.48, 15.801632653061224, 32128.09578767004);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 605, 31723.523413510662, 1924.7611833320782, 0.545, 2.2057142857142855, 30805.612247731748);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 610, 31676.021533408533, 1284.5270641780596, 0.545, 2.9183673469387754, 30805.612247731748);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 611, 37888.87267770879, 3219.296250138966, 0.485, 7.286530612244898, 32849.80292488677);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 615, 32086.931596694227, 1675.0174184021057, 0.53, 1.72, 31560.39512863614);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 620, 31831.556892269127, 1212.6029304866734, 0.53, 0.676734693877551, 31560.39512863614);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 621, 36276.92204633589, 1641.7958807865523, 0.48, 8.928979591836734, 34057.41547829925);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 625, 35172.411214941, 2070.4677454889807, 0.48, 2.1551020408163266, 34057.41547829925);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 630, 32245.14710945957, 1713.9973199543144, 0.54, 2.1142857142857143, 31514.314827547783);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 631, 34320.60778327662, 1682.6274186612231, 0.5, 6.455510204081633, 32724.077544703756);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 635, 32671.20182465566, 1810.7315046612807, 0.525, 2.8653061224489798, 32088.4347422539);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 640, 33606.291155513885, 2741.9097235948893, 0.525, 3.52, 32088.4347422539);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 641, 34904.07198499289, 2269.317240700576, 0.49, 5.7706122448979595, 32013.254361776984);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 645, 31926.439172411534, 940.9469168563388, 0.535, 0.6677551020408163, 31720.254361776984);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 650, 31986.4441255428, 1354.0500340640817, 0.495, 0.5159183673469387, 31529.1419857895);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 651, 37681.20447901008, 3760.5427527704855, 0.49, 11.962448979591837, 33497.24916471405);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 655, 32615.528368197603, 2167.4665227655164, 0.525, 1.206530612244898, 31933.371607110803);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 660, 32153.949958156656, 860.1324124653859, 0.525, 0.6693877551020408, 31933.371607110803);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 661, 38414.770707640746, 2515.077282008738, 0.485, 9.498775510204082, 34576.74715121056);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 665, 32434.55064086383, 1325.46971126028, 0.54, 2.149387755102041, 32004.33996971549);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 670, 32136.783894269407, 619.266819688797, 0.495, 0.9722448979591837, 31880.260475860992);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 671, 36216.61847576511, 3804.277913483841, 0.49, 7.26530612244898, 33099.26913241034);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 675, 32222.94092711421, 374.07657475708794, 0.535, 1.64, 32064.771340388797);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 680, 32391.82140368069, 1669.8834719233514, 0.5, 0.35346938775510206, 32035.7104273767);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 681, 35635.66199432777, 1630.8338279371546, 0.475, 9.914285714285715, 32875.298855021116);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 685, 32085.592843241255, 922.7760232151566, 0.525, 1.5657142857142856, 31848.638555997994);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 690, 32194.189012555966, 1301.2488333189083, 0.525, 1.3020408163265307, 31848.638555997994);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 691, 35005.65950901767, 1491.2087580801342, 0.49, 5.562448979591837, 33407.54127655798);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 695, 32701.74607045377, 1965.1673120889457, 0.52, 0.5844897959183674, 32176.76999482008);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 700, 32809.08312989215, 1671.7048574421508, 0.505, 3.3746938775510205, 32134.29267202132);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 701, 38937.514798518896, 3041.299380802913, 0.495, 11.253061224489796, 32892.14975448814);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 705, 31874.811561357077, 169.9279721967642, 0.54, 0.6179591836734694, 31826.468379812144);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 710, 31679.289246073608, 1186.961431972715, 0.545, 0.8179591836734694, 31468.699278749697);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 711, 34305.64946829868, 928.1497364393666, 0.49, 2.4840816326530613, 33034.317873631706);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 715, 33625.52767652905, 1483.9478542084612, 0.525, 5.677551020408163, 31959.5166128958);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 720, 33572.31992928986, 1282.4559200934114, 0.525, 4.950204081632653, 31959.5166128958);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 721, 33457.886948490064, 1120.6181914467188, 0.48, 6.721632653061224, 31973.858666018372);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 725, 32066.299641753278, 663.5545466646101, 0.49, 0.23918367346938776, 31905.75229482891);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 730, 32110.09867438226, 1335.8936537752181, 0.49, 0.5151020408163265, 31905.75229482891);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 731, 35580.118522117795, 1946.5538051465692, 0.485, 6.142857142857143, 33282.28574513715);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 735, 32393.834174061525, 323.30869143449536, 0.505, 0.3526530612244898, 32014.36580859464);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 740, 32078.88444613372, 257.69612314791095, 0.505, 0.673469387755102, 32014.36580859464);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 741, 33079.192888977654, 1148.2140763601037, 0.48, 5.973877551020408, 32016.344112960553);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 745, 32323.494010529426, 1558.8283323824132, 0.495, 0.793469387755102, 31807.344112960553);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 750, 31792.860760666314, 676.2801733685986, 0.515, 0.5126530612244898, 31619.88765809727);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 751, 35115.25441550009, 695.6075596944396, 0.49, 2.5942857142857143, 33620.682123734856);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 755, 33058.55372347236, 1444.384865692369, 0.51, 0.8522448979591837, 32645.803666875247);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 760, 32324.268450097115, 242.7004015006979, 0.55, 0.47020408163265304, 32275.225350348515);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 761, 33529.86860140773, 1675.7674940332029, 0.5, 6.648163265306122, 32061.67172691092);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 765, 32127.308073639622, 154.86189671932587, 0.5, 1.966530612244898, 32061.67172691092);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 770, 31816.36797929333, 680.0959814396092, 0.49, 0.31918367346938775, 31699.3138579629);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 771, 32649.310737139742, 393.7730306167432, 0.495, 2.230204081632653, 32157.090531400594);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 775, 32531.914893883044, 1210.3915093035635, 0.495, 0.7044897959183674, 32157.090531400594);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 780, 32284.58447233233, 763.3601580832877, 0.495, 0.396734693877551, 32122.67520807877);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 781, 34695.83875143475, 1127.4776768880022, 0.505, 7.488163265306122, 32085.302046852456);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 785, 32085.302046852434, 2.204948129406426E-11, 0.505, 0.0, 32085.302046852456);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 790, 32228.73589173284, 398.84440419473884, 0.5, 1.0408163265306123, 32014.679007861243);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 791, 34287.71708187661, 1423.9296638413277, 0.48, 7.275102040816327, 32642.62056674314);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 795, 32097.550876557078, 209.12535557680442, 0.545, 0.28, 32065.82123453381);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 800, 32100.3508551984, 254.0358510746652, 0.505, 0.23918367346938776, 31998.625610395346);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 801, 33829.63569508698, 803.5345761475545, 0.5, 5.097142857142857, 31496.691349747794);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 805, 31496.69134974782, 2.572439484307497E-11, 0.5, 0.0, 31496.691349747794);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 810, 31528.213366590375, 191.97580253173663, 0.5, 0.356734693877551, 31496.691349747794);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 811, 34590.87780885883, 1891.7705503745578, 0.485, 6.668571428571428, 31743.041109835856);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 815, 31806.678076535783, 449.98130687637445, 0.485, 0.2, 31743.041109835856);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 820, 31794.06367840458, 253.23855421398994, 0.495, 0.35918367346938773, 31736.84858783311);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 821, 35295.0733523246, 936.4994884049529, 0.505, 5.571428571428571, 33734.5876326333);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 825, 32138.64039482632, 1083.8840633711209, 0.505, 0.8081632653061225, 31595.863942890628);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 830, 31891.1504401608, 1511.6861622338872, 0.505, 0.35346938775510206, 31595.863942890628);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 831, 35081.19698268593, 383.61320457225213, 0.49, 0.9591836734693877, 33063.045674721296);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 835, 32447.317761924463, 381.64347343440215, 0.5, 0.7371428571428571, 32294.88241978002);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 840, 32311.867825107947, 135.09239174519604, 0.49, 0.3159183673469388, 32219.243864386848);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 841, 33716.64003285215, 979.1274229265732, 0.505, 3.7444897959183674, 32566.705270554616);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 845, 31893.693710653348, 2.572439484307497E-11, 0.525, 0.0, 31893.693710653373);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 850, 31893.693710653348, 2.572439484307497E-11, 0.525, 0.0, 31893.693710653373);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 851, 36841.01028659626, 472.33012000729786, 0.485, 0.35836734693877553, 33746.286026874615);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 855, 31827.786526070562, 175.79000001716756, 0.525, 0.12, 31802.926065855158);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 860, 31896.33052634567, 405.0065280726803, 0.525, 0.356734693877551, 31802.926065855158);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 861, 35342.33131338414, 828.6754006474345, 0.49, 4.859591836734694, 33906.27632470304);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 865, 31607.320800773316, 37.048359996626914, 0.53, 0.12, 31602.08137145624);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 870, 31646.55188633532, 314.45402633868053, 0.53, 0.12, 31602.08137145624);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 871, 34982.53630647392, 165.97760557134563, 0.49, 1.1853061224489796, 34155.229902125044);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 875, 33936.494114095905, 178.8561069161742, 0.5, 0.276734693877551, 33826.912025177364);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 880, 33909.43332824943, 529.5277829097128, 0.5, 0.23918367346938776, 33826.912025177364);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 881, 34209.344903217716, 992.6803465008431, 0.485, 3.7281632653061223, 32688.194591950185);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 885, 32692.878455665876, 33.1199179553388, 0.485, 0.12, 32688.194591950185);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 890, 32688.194591950163, 2.204948129406426E-11, 0.485, 0.0, 32688.194591950185);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 891, 33106.247749070586, 404.6491737721644, 0.49, 2.3453061224489797, 31868.954645976435);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 895, 31944.96152520056, 304.01192244176053, 0.49, 0.35346938775510206, 31868.954645976435);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 900, 31897.976010720744, 205.21203809992093, 0.495, 0.12, 31868.954645976435);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 901, 33224.50860778166, 810.9755650915411, 0.49, 5.375510204081633, 32163.102896649343);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 905, 32163.102896649372, 2.939930839208568E-11, 0.49, 0.0, 32163.102896649343);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 910, 32184.809659749135, 153.48999385451984, 0.49, 0.08, 32163.102896649343);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 911, 33056.593099543534, 113.38069585596256, 0.48, 0.12, 33040.5586477645);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 915, 33104.69645488078, 219.71008371757162, 0.48, 0.4506122448979592, 33040.5586477645);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 920, 33113.92753806179, 328.2790866465628, 0.48, 0.35183673469387755, 33040.5586477645);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 921, 33553.20489934588, 122.26321642700682, 0.485, 0.12, 33535.91426946085);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 925, 33535.91426946084, 1.469965419604284E-11, 0.485, 0.0, 33535.91426946085);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 930, 33535.91426946084, 1.469965419604284E-11, 0.485, 0.0, 33535.91426946085);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 931, 32788.72222078119, 2.939930839208568E-11, 0.485, 0.0, 32788.72222078116);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 935, 32788.72222078119, 2.939930839208568E-11, 0.485, 0.0, 32788.72222078116);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 940, 32788.72222078119, 2.939930839208568E-11, 0.485, 0.0, 32788.72222078116);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 941, 32587.42442152121, 2.939930839208568E-11, 0.49, 0.0, 32587.42442152124);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 945, 32587.42442152121, 2.939930839208568E-11, 0.49, 0.0, 32587.42442152124);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 950, 32587.42442152121, 2.939930839208568E-11, 0.49, 0.0, 32587.42442152124);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 951, 33202.28821239784, 0.0, 0.48, 0.0, 33202.28821239784);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 955, 33202.28821239784, 0.0, 0.48, 0.0, 33202.28821239784);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 960, 33202.28821239784, 0.0, 0.48, 0.0, 33202.28821239784);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 961, 33683.890708972875, 7.34982709802142E-12, 0.485, 0.0, 33683.89070897287);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 965, 33683.890708972875, 7.34982709802142E-12, 0.485, 0.0, 33683.89070897287);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 970, 33683.890708972875, 7.34982709802142E-12, 0.485, 0.0, 33683.89070897287);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 971, 32702.313673812907, 247.35403611387486, 0.485, 0.08, 32667.33253055493);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 975, 32667.33253055491, 1.837456774505355E-11, 0.485, 0.0, 32667.33253055493);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 980, 32667.33253055491, 1.837456774505355E-11, 0.485, 0.0, 32667.33253055493);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 981, 32311.617881980095, 1.837456774505355E-11, 0.49, 0.0, 32311.617881980113);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 985, 32311.617881980095, 1.837456774505355E-11, 0.49, 0.0, 32311.617881980113);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 990, 32311.617881980095, 1.837456774505355E-11, 0.49, 0.0, 32311.617881980113);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 991, 32547.01793563418, 1.837456774505355E-11, 0.48, 0.0, 32547.017935634198);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 995, 32547.01793563418, 1.837456774505355E-11, 0.48, 0.0, 32547.017935634198);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 1000, 32547.01793563418, 1.837456774505355E-11, 0.48, 0.0, 32547.017935634198);

        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[74, 18, 3, 64, 65, 25, 21, 69, 93, 87, 15, 78, 17, 37, 23, 98, 35, 20, 73, 58, 31, 97, 22, 90, 44, 16, 14, 10, 71, 83, 9, 89, 5, 48, 62, 46, 92, 27, 57, 60, 24, 80, 50, 86, 6, 8, 56, 19, 11, 26, 85, 34, 76, 59, 61, 54, 82, 33, 42, 2, 45, 95, 77, 51, 36, 4, 47, 99, 70, 40, 13, 28, 84, 67, 38, 29, 81, 75, 12, 32, 94, 39, 63, 53, 1, 43, 72, 49, 68, 66, 0, 7, 91, 79, 41, 88, 30, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 71, 20, 73, 58, 16, 14, 10, 31, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 54, 82, 33, 6, 8, 56, 86, 50, 60, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 11, 19, 57, 92, 27, 66, 0, 91, 48, 5, 62, 46, 96, 55, 41, 88, 30, 79, 7, 65, 64, 25, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 23, 37, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 44, 97, 22, 90, 59, 61, 34, 26, 85, 54, 82, 33, 11, 19, 8, 56, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 29, 77, 51, 4, 36, 32, 75, 12, 94, 81, 95, 38, 47, 70, 40, 99, 13, 2, 28, 42, 45, 6, 76, 92, 27, 0, 91, 7, 96, 55, 30, 79, 88, 41, 66, 57, 98, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 17, 23, 37, 35, 83, 9, 89, 78, 98, 71, 20, 73, 58, 14, 16, 10, 31, 90, 97, 22, 59, 61, 34, 26, 85, 11, 56, 86, 6, 8, 19, 76, 44, 0, 62, 46, 27, 92, 57, 66, 53, 39, 63, 68, 67, 84, 49, 43, 1, 72, 24, 80, 60, 50, 54, 82, 33, 2, 28, 42, 45, 70, 40, 99, 13, 51, 77, 95, 38, 47, 4, 36, 32, 75, 12, 94, 81, 29, 7, 91, 41, 88, 30, 79, 55, 96, 5, 48, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 17, 23, 37, 35, 83, 9, 89, 78, 98, 71, 20, 73, 58, 14, 16, 10, 31, 90, 97, 22, 76, 59, 61, 19, 11, 6, 8, 56, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 29, 95, 77, 51, 36, 4, 12, 94, 81, 32, 75, 47, 70, 40, 99, 2, 28, 45, 42, 13, 33, 82, 54, 26, 85, 34, 44, 46, 27, 92, 57, 66, 0, 62, 5, 48, 91, 7, 41, 88, 30, 79, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 52, 89, 48, 5, 62, 46, 27, 92, 66, 57, 0, 91, 7, 41, 88, 30, 79, 55, 96, 83, 9, 20, 73, 58, 14, 16, 10, 31, 90, 97, 22, 61, 19, 11, 6, 8, 56, 86, 50, 60, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 29, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 26, 85, 34, 59, 76, 44, 37, 98, 35, 23, 17, 71, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 52, 89, 48, 5, 62, 46, 16, 14, 73, 20, 71, 58, 35, 37, 98, 23, 17, 83, 9, 10, 31, 44, 90, 97, 22, 59, 61, 34, 85, 26, 11, 54, 82, 33, 28, 45, 42, 2, 40, 99, 70, 13, 29, 38, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 53, 39, 63, 68, 49, 72, 67, 84, 86, 50, 56, 6, 8, 19, 76, 60, 80, 24, 57, 27, 92, 66, 30, 79, 88, 41, 7, 0, 91, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 52, 89, 48, 5, 62, 46, 16, 14, 10, 31, 44, 90, 97, 22, 59, 61, 76, 50, 60, 24, 80, 86, 6, 8, 56, 11, 54, 82, 33, 28, 45, 2, 42, 40, 99, 70, 13, 29, 38, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 53, 39, 63, 68, 49, 72, 67, 84, 19, 85, 26, 34, 57, 66, 7, 0, 91, 96, 55, 30, 79, 88, 41, 27, 92, 73, 20, 71, 83, 9, 17, 23, 37, 98, 35, 58, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 23, 37, 35, 98, 73, 58, 10, 31, 90, 97, 22, 44, 16, 14, 20, 71, 83, 9, 91, 7, 41, 88, 30, 79, 55, 96, 52, 48, 5, 62, 0, 92, 27, 57, 66, 50, 60, 24, 80, 86, 6, 8, 56, 85, 26, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 13, 29, 38, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 53, 39, 63, 68, 49, 72, 67, 84, 19, 61, 76, 59, 34, 89, 46, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 23, 37, 98, 35, 83, 9, 73, 58, 10, 16, 14, 20, 71, 46, 31, 44, 22, 90, 97, 59, 61, 76, 85, 26, 34, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 13, 29, 38, 47, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 49, 43, 72, 67, 84, 60, 68, 63, 39, 53, 1, 86, 6, 8, 56, 19, 80, 24, 50, 27, 57, 66, 92, 0, 91, 7, 41, 88, 30, 79, 55, 96, 52, 89, 48, 5, 62, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 10, 16, 14, 31, 44, 22, 90, 97, 59, 61, 76, 85, 26, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 13, 29, 38, 47, 77, 95, 51, 4, 36, 32, 75, 12, 94, 81, 49, 43, 72, 67, 84, 60, 80, 24, 86, 50, 68, 63, 39, 53, 1, 66, 92, 27, 57, 8, 56, 6, 19, 34, 46, 0, 91, 7, 41, 88, 30, 79, 55, 96, 52, 89, 48, 5, 62, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 10, 14, 16, 31, 46, 0, 91, 7, 41, 88, 30, 79, 55, 96, 52, 89, 5, 48, 62, 22, 44, 90, 97, 59, 61, 76, 85, 26, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 13, 29, 38, 47, 77, 95, 51, 4, 36, 32, 75, 12, 94, 81, 49, 43, 72, 67, 84, 19, 34, 6, 56, 8, 86, 50, 60, 80, 24, 68, 63, 39, 53, 1, 57, 92, 27, 66, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 46, 97, 90, 44, 22, 76, 59, 61, 34, 85, 26, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 13, 29, 38, 47, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 49, 43, 72, 67, 84, 86, 50, 56, 8, 6, 19, 57, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 52, 89, 48, 5, 62, 27, 92, 60, 80, 24, 68, 63, 39, 53, 1, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 10, 16, 14, 20, 73, 58, 31, 46, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 52, 71, 44, 22, 90, 97, 59, 61, 34, 85, 26, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 49, 43, 72, 67, 84, 24, 80, 60, 68, 63, 39, 53, 1, 50, 86, 56, 6, 8, 19, 76, 57, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 59, 61, 34, 85, 26, 19, 11, 54, 82, 33, 28, 45, 42, 2, 40, 70, 99, 47, 13, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 39, 63, 72, 67, 84, 49, 43, 53, 68, 60, 50, 86, 56, 8, 6, 80, 24, 76, 57, 92, 27, 66, 88, 30, 79, 41, 7, 96, 52, 91, 0, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 59, 61, 76, 57, 92, 27, 66, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 39, 63, 53, 68, 80, 24, 67, 84, 19, 85, 26, 34, 44, 0, 91, 7, 96, 52, 55, 30, 79, 41, 88, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 71, 20, 73, 58, 14, 16, 10, 31, 90, 97, 22, 59, 61, 76, 57, 92, 27, 66, 24, 80, 50, 86, 56, 8, 6, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 39, 53, 63, 68, 67, 84, 60, 19, 85, 26, 34, 44, 46, 62, 5, 48, 0, 91, 7, 30, 79, 41, 88, 55, 96, 52, 89, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 48, 5, 0, 91, 7, 41, 88, 30, 79, 55, 96, 52, 89, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 44, 61, 34, 26, 85, 19, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 8, 6, 56, 86, 50, 60, 24, 80, 57, 92, 27, 66, 76, 59, 46, 62, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 52, 71, 20, 73, 58, 16, 14, 10, 44, 90, 97, 22, 59, 61, 76, 34, 26, 85, 19, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 8, 6, 56, 86, 50, 60, 24, 80, 57, 92, 27, 66, 46, 31, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 91, 7, 41, 88, 30, 79, 55, 96, 52, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 59, 61, 76, 34, 85, 26, 19, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 24, 80, 60, 50, 8, 6, 56, 86, 57, 66, 27, 92, 0, 46, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 91, 7, 41, 88, 30, 79, 55, 96, 52, 71, 20, 73, 58, 14, 16, 10, 31, 90, 97, 22, 59, 61, 76, 34, 26, 85, 19, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 51, 95, 77, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 8, 6, 56, 86, 57, 27, 92, 0, 46, 44, 60, 80, 24, 50, 66, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 90, 97, 22, 31, 44, 59, 61, 76, 34, 26, 85, 19, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 8, 6, 56, 86, 50, 60, 80, 24, 66, 0, 46, 92, 27, 57, 7, 41, 88, 30, 79, 55, 96, 52, 71, 20, 73, 58, 10, 16, 14, 91, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 90, 97, 22, 31, 44, 46, 76, 34, 26, 85, 19, 11, 54, 82, 33, 28, 45, 42, 2, 40, 70, 99, 47, 13, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 63, 53, 39, 80, 24, 50, 60, 67, 84, 68, 86, 8, 6, 56, 59, 61, 57, 66, 27, 92, 0, 91, 7, 41, 88, 30, 79, 55, 96, 52, 71, 20, 73, 58, 10, 16, 14, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 66, 57, 60, 24, 80, 84, 67, 72, 49, 1, 43, 63, 53, 39, 68, 86, 8, 6, 56, 26, 85, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 50, 19, 59, 61, 76, 34, 0, 91, 7, 41, 79, 30, 88, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 16, 14, 10, 31, 46, 92, 27, 66, 57, 60, 24, 80, 86, 50, 8, 6, 56, 34, 85, 26, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 39, 53, 63, 68, 67, 84, 19, 76, 59, 61, 44, 90, 97, 22, 0, 91, 7, 41, 88, 30, 79, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 16, 14, 10, 31, 46, 92, 27, 66, 57, 60, 80, 24, 67, 84, 8, 6, 56, 34, 26, 85, 19, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 39, 53, 63, 68, 50, 86, 76, 59, 61, 44, 22, 90, 97, 0, 91, 7, 41, 88, 30, 79, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 90, 97, 22, 44, 31, 46, 92, 27, 66, 57, 60, 80, 24, 67, 84, 8, 6, 56, 86, 76, 59, 61, 34, 26, 85, 19, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 39, 53, 63, 68, 50, 0, 91, 7, 41, 79, 30, 88, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 44, 90, 97, 22, 46, 92, 27, 0, 91, 7, 41, 79, 30, 88, 55, 96, 52, 31, 76, 59, 61, 34, 85, 26, 19, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 24, 80, 60, 50, 8, 6, 56, 86, 57, 66, 63, 39, 53, 1, 43, 72, 49, 84, 67, 68, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 44, 90, 97, 22, 46, 92, 27, 57, 66, 41, 7, 88, 30, 79, 55, 96, 52, 91, 0, 31, 76, 59, 61, 34, 85, 26, 19, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 67, 84, 6, 8, 56, 86, 50, 60, 24, 80, 39, 53, 63, 68, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 46, 27, 92, 66, 57, 60, 24, 80, 39, 53, 63, 68, 49, 43, 72, 67, 84, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 86, 50, 8, 56, 6, 11, 54, 82, 33, 28, 34, 26, 85, 19, 76, 59, 61, 90, 44, 22, 97, 0, 7, 91, 79, 30, 88, 41, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 22, 97, 90, 46, 76, 59, 61, 85, 26, 34, 19, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 63, 39, 53, 68, 72, 49, 43, 24, 80, 57, 60, 50, 8, 6, 56, 86, 67, 84, 66, 27, 92, 0, 7, 91, 41, 55, 30, 88, 79, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 22, 97, 90, 46, 0, 7, 41, 79, 30, 88, 55, 96, 52, 91, 92, 27, 66, 57, 60, 24, 80, 86, 56, 8, 6, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 67, 84, 49, 72, 39, 53, 63, 68, 19, 85, 26, 34, 61, 59, 76, 50, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 76, 59, 61, 34, 85, 26, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 1, 43, 67, 84, 86, 56, 8, 6, 19, 60, 24, 80, 50, 57, 66, 27, 92, 63, 39, 53, 68, 72, 49, 88, 30, 79, 55, 96, 52, 0, 46, 91, 7, 41, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 50, 86, 56, 6, 8, 19, 11, 26, 85, 76, 59, 61, 34, 82, 54, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 63, 39, 53, 68, 67, 84, 60, 80, 24, 66, 0, 46, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 66, 80, 24, 60, 50, 8, 6, 56, 86, 11, 26, 85, 34, 82, 54, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 43, 72, 49, 68, 67, 84, 19, 61, 76, 59, 91, 0, 7, 41, 88, 30, 79, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 66, 80, 24, 60, 50, 86, 56, 8, 6, 11, 26, 85, 34, 61, 59, 76, 19, 82, 54, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 67, 84, 49, 43, 72, 7, 41, 79, 30, 88, 55, 96, 52, 0, 91, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 66, 24, 80, 60, 50, 86, 56, 8, 6, 19, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 39, 53, 63, 68, 67, 84, 26, 85, 34, 61, 59, 76, 0, 91, 7, 41, 88, 30, 79, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 50, 86, 56, 8, 6, 19, 11, 26, 85, 34, 61, 59, 76, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 72, 67, 84, 60, 24, 80, 68, 63, 39, 53, 88, 30, 79, 55, 96, 52, 41, 7, 91, 66, 0, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 50, 86, 56, 6, 8, 19, 11, 26, 85, 34, 61, 76, 59, 54, 82, 33, 28, 45, 2, 42, 40, 47, 99, 70, 13, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 72, 67, 84, 63, 39, 53, 68, 80, 24, 66, 88, 30, 79, 41, 7, 0, 91, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 50, 86, 8, 6, 56, 11, 26, 85, 34, 61, 76, 59, 82, 54, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 53, 39, 63, 68, 80, 24, 67, 49, 72, 43, 1, 29, 38, 84, 19, 66, 91, 7, 0, 88, 30, 79, 41, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 8, 6, 19, 11, 26, 85, 34, 61, 59, 76, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 84, 67, 49, 72, 43, 1, 53, 39, 63, 68, 81, 94, 12, 32, 75, 4, 36, 51, 77, 95, 66, 41, 88, 30, 79, 55, 96, 52, 0, 91, 7, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 8, 6, 19, 11, 26, 85, 34, 61, 59, 76, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 95, 77, 51, 36, 4, 75, 94, 81, 12, 32, 49, 43, 67, 84, 72, 1, 53, 39, 63, 68, 66, 41, 88, 30, 79, 55, 96, 52, 0, 91, 7, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 19, 11, 26, 85, 34, 61, 76, 59, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 43, 67, 84, 68, 72, 49, 1, 53, 39, 63, 66, 88, 30, 79, 7, 96, 55, 41, 91, 0, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 76, 59, 61, 82, 54, 33, 28, 45, 2, 42, 40, 70, 99, 13, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 63, 39, 53, 68, 67, 84, 66, 79, 30, 88, 41, 7, 55, 96, 52, 0, 91, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 19, 11, 26, 85, 61, 59, 76, 34, 82, 54, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 66, 79, 30, 88, 41, 7, 55, 96, 52, 0, 91, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 19, 11, 26, 85, 61, 59, 76, 34, 82, 54, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 43, 67, 84, 72, 49, 68, 63, 39, 53, 1, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 19, 11, 26, 85, 34, 82, 54, 33, 28, 45, 42, 2, 40, 70, 99, 47, 13, 29, 38, 4, 36, 32, 75, 12, 94, 81, 43, 1, 63, 39, 53, 68, 67, 84, 49, 72, 95, 77, 51, 59, 61, 76, 66, 88, 30, 79, 55, 96, 52, 7, 41, 91, 0, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 95, 77, 51, 84, 49, 53, 39, 63, 68, 67, 11, 26, 85, 34, 19, 76, 59, 61, 66, 79, 55, 96, 41, 30, 88, 7, 91, 0, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 84, 67, 72, 49, 43, 39, 53, 63, 68, 76, 59, 61, 85, 34, 26, 11, 19, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 1, 66, 0, 88, 41, 30, 79, 55, 96, 52, 91, 7, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 1, 53, 39, 63, 68, 72, 49, 43, 67, 84, 29, 38, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 0, 7, 41, 88, 30, 79, 55, 96, 52, 91, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 43, 49, 72, 67, 84, 29, 38, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 68, 0, 7, 91, 41, 88, 30, 79, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 72, 67, 84, 38, 29, 11, 26, 85, 34, 61, 59, 76, 19, 66, 53, 39, 63, 68, 0, 91, 7, 41, 79, 30, 88, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 72, 53, 39, 63, 68, 67, 84, 11, 26, 85, 34, 19, 61, 59, 76, 91, 7, 41, 79, 30, 88, 55, 96, 52, 0, 66, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 95, 77, 51, 36, 4, 94, 75, 32, 12, 81, 1, 43, 49, 72, 67, 84, 63, 39, 53, 68, 66, 0, 91, 7, 30, 79, 55, 96, 52, 41, 88, 76, 61, 19, 11, 26, 85, 34, 59, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 68, 63, 39, 53, 72, 67, 84, 38, 95, 29, 13, 85, 26, 19, 11, 34, 61, 59, 76, 66, 88, 30, 79, 55, 96, 52, 91, 7, 41, 0, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 72, 67, 84, 38, 29, 13, 11, 34, 61, 59, 76, 19, 85, 26, 66, 53, 39, 63, 68, 41, 30, 79, 88, 7, 91, 0, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 63, 39, 53, 68, 67, 84, 38, 29, 13, 11, 26, 85, 19, 61, 59, 76, 34, 66, 0, 91, 7, 41, 30, 79, 88, 55, 52, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 63, 39, 53, 68, 67, 84, 38, 29, 13, 19, 11, 26, 85, 34, 59, 61, 76, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 67, 84, 49, 72, 53, 39, 63, 68, 43, 1, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 76, 59, 66, 88, 30, 79, 55, 96, 52, 91, 7, 41, 0, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 67, 84, 49, 72, 43, 1, 53, 39, 63, 68, 66, 91, 7, 96, 52, 55, 79, 30, 88, 41, 0, 59, 61, 76, 85, 26, 34, 19, 11, 13, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 49, 72, 43, 1, 53, 39, 63, 68, 81, 12, 75, 32, 94, 36, 4, 77, 95, 51, 13, 26, 85, 34, 11, 19, 61, 76, 59, 66, 0, 91, 7, 41, 79, 30, 88, 55, 52, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 13, 19, 11, 26, 85, 34, 61, 76, 59, 66, 0, 91, 7, 41, 88, 30, 79, 55, 52, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 76, 59, 66, 88, 30, 79, 7, 41, 91, 0, 96, 52, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 11, 26, 85, 34, 19, 76, 59, 61, 66, 91, 0, 7, 41, 30, 79, 88, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 11, 26, 85, 19, 61, 59, 76, 34, 66, 0, 41, 88, 30, 79, 55, 96, 52, 91, 7, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 32, 75, 12, 94, 81, 51, 95, 77, 36, 4, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 0, 7, 91, 96, 52, 41, 88, 30, 79, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 12, 32, 75, 4, 36, 51, 77, 95, 13, 19, 11, 26, 85, 34, 61, 76, 59, 66, 96, 55, 79, 30, 88, 41, 91, 7, 0, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 12, 32, 75, 36, 4, 77, 51, 95, 13, 34, 85, 26, 11, 61, 59, 76, 19, 66, 91, 7, 0, 55, 79, 30, 88, 41, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 12, 32, 75, 81, 4, 36, 95, 77, 51, 13, 26, 11, 19, 61, 59, 76, 85, 34, 66, 0, 7, 41, 88, 30, 79, 55, 96, 52, 91, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 12, 32, 75, 94, 81, 4, 36, 51, 77, 95, 13, 26, 11, 19, 85, 34, 61, 59, 76, 66, 0, 7, 91, 96, 52, 41, 88, 30, 79, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 12, 32, 75, 4, 36, 51, 77, 95, 13, 85, 26, 19, 11, 34, 61, 59, 76, 66, 88, 30, 79, 55, 96, 52, 91, 41, 7, 0, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 85, 26, 11, 34, 61, 59, 76, 19, 66, 91, 7, 0, 55, 79, 30, 88, 41, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 11, 26, 85, 19, 61, 59, 76, 34, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 85, 26, 19, 11, 76, 34, 61, 59, 66, 0, 91, 7, 96, 55, 30, 79, 41, 88, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 85, 26, 19, 11, 34, 61, 59, 76, 66, 88, 41, 7, 96, 55, 79, 30, 91, 0, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 85, 26, 11, 34, 61, 59, 76, 19, 66, 91, 0, 7, 41, 79, 30, 88, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 26, 11, 19, 85, 61, 59, 76, 34, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 26, 85, 34, 11, 19, 76, 61, 59, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 88, 30, 79, 7, 41, 91, 0, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 11, 26, 85, 19, 76, 59, 61, 34, 0, 66, 91, 7, 41, 79, 30, 88, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 11, 26, 85, 19, 61, 59, 76, 34, 66, 0, 7, 41, 88, 30, 79, 55, 96, 52, 91, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 76, 59, 66, 0, 7, 91, 30, 79, 88, 41, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 76, 59, 66, 91, 0, 7, 41, 30, 79, 88, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 76, 59, 61, 66, 91, 0, 7, 41, 30, 79, 88, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 76, 59, 61, 66, 41, 88, 30, 79, 55, 96, 52, 0, 91, 7, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 76, 59, 66, 41, 88, 30, 79, 55, 96, 52, 0, 7, 91, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 76, 59, 66, 91, 0, 7, 41, 88, 79, 30, 96, 52, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 91, 96, 55, 30, 88, 41, 79, 7, 0, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 0, 7, 41, 88, 30, 79, 55, 96, 52, 91, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 0, 7, 91, 30, 79, 88, 41, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 96, 55, 79, 30, 88, 41, 7, 91, 0, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 96, 55, 79, 30, 88, 41, 7, 91, 0, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 96, 55, 79, 30, 88, 41, 7, 91, 0, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 96, 55, 79, 30, 88, 41, 7, 91, 0, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 96, 55, 79, 30, 88, 41, 7, 91, 0, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 96, 55, 79, 30, 88, 41, 7, 91, 0, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 96, 55, 79, 30, 88, 41, 7, 91, 0, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 96, 55, 79, 30, 88, 41, 7, 91, 0, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 96, 55, 79, 30, 88, 41, 7, 91, 0, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 96, 55, 79, 30, 88, 41, 7, 91, 0, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 96, 55, 79, 30, 88, 41, 7, 91, 0, 52, 74]");

        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[74, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[74, 18, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 96, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 96, 55, 79, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 96, 55, 79, 30, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 96, 55, 79, 30, 88, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 96, 55, 79, 30, 88, 41, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 96, 55, 79, 30, 88, 41, 7, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 96, 55, 79, 30, 88, 41, 7, 91, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 96, 55, 79, 30, 88, 41, 7, 91, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 96, 55, 79, 30, 88, 41, 7, 91, 0, 52, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 29, 38, 84, 67, 72, 43, 1, 53, 39, 63, 68, 49, 94, 81, 32, 75, 12, 36, 4, 95, 77, 51, 13, 19, 11, 26, 85, 34, 61, 59, 76, 66, 96, 55, 79, 30, 88, 41, 7, 91, 0, 52, 74]");

    }

    @Test
    public void test_mmas_cycle_moving_adtsp_freq_100_mag_0_5_kroA100() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_CMADTSP mmas_cmadtsp = new MMAS_CMADTSP(graph, 0.8, 1000, 0.5, 100, 4);
        mmas_cmadtsp.setMmasSeed(1);
        mmas_cmadtsp.setDbgpSeed(1);
        mmas_cmadtsp.setStatisticInterval(1);
        mmas_cmadtsp.setShowLog(false);
        mmas_cmadtsp.run();
        assertThat(mmas_cmadtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(29212.658123157602);
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getGlobalStatistics())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 41, 88, 30, 79, 55, 7, 96, 74]");

        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 1, 38845.35851682551, 3004.3870870225496, 0.0, 57.41877551020408, 32527.274478424253);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 50, 28368.78225041139, 1580.2066802896666, 0.5, 3.0228571428571427, 27594.49031013005);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 100, 29054.637939716536, 3020.070551752632, 0.5, 4.790204081632653, 27198.468925602167);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 101, 28092.40839472521, 2046.2137744165339, 0.5, 2.4808163265306122, 27198.468925602167);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 150, 28339.288464394293, 2299.8374769616116, 0.5, 2.8179591836734694, 27198.468925602167);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 200, 28031.65105558292, 2124.980769942078, 0.5, 2.196734693877551, 27198.468925602167);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 201, 37176.13596080941, 2236.0522292755777, 0.485, 19.301224489795917, 32694.658167860078);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 250, 29326.60652896155, 2652.358479747826, 0.5, 4.846530612244898, 27529.495606536744);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 300, 28784.27793158722, 2603.406960199842, 0.5, 1.8057142857142856, 27507.99185065664);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 301, 37303.58635230866, 2855.381926153159, 0.5, 14.80326530612245, 31762.578473291072);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 350, 33121.580554322805, 3738.953823292047, 0.5, 6.925714285714286, 29128.257556794426);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 400, 28365.280612581206, 2262.4886173027803, 0.5, 1.2473469387755103, 27528.51793699891);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 401, 35928.38003074941, 2414.1278123278344, 0.485, 17.358367346938774, 30779.43546445117);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 450, 27643.527974505043, 2351.6287045053296, 0.5, 0.43755102040816324, 27148.35484560096);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 500, 27148.354845600923, 3.67491354901071E-11, 0.5, 0.0, 27148.35484560096);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 501, 36692.334845459845, 3691.180664326308, 0.49, 10.433469387755101, 30948.152580391063);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 550, 28679.09985380663, 2862.7253222849895, 0.52, 0.830204081632653, 27883.493923436195);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 600, 28676.115385205998, 2524.138458327708, 0.5, 1.0955102040816327, 27838.966516510838);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 601, 37714.45535771914, 2159.724686403591, 0.485, 9.037551020408163, 32153.931287576303);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 650, 29398.789614677076, 1506.047420237811, 0.495, 1.5436734693877552, 28819.07450335049);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 700, 29125.059117881432, 1250.1734624667204, 0.495, 0.8571428571428571, 28752.07859479315);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 701, 34986.0956856547, 1596.7064021951135, 0.49, 3.809795918367347, 30249.961264931266);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 750, 29906.198999596018, 1335.475703931327, 0.495, 2.153469387755102, 29272.1753445252);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 800, 29374.85054489328, 747.2789680156418, 0.5, 0.5134693877551021, 29166.81382522288);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 801, 31101.68179270005, 1608.371136019269, 0.49, 3.0342857142857143, 28837.776741641777);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 850, 27793.42248359943, 2.939930839208568E-11, 0.54, 0.0, 27793.4224835994);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 900, 27863.776791858636, 363.1444645280317, 0.5, 0.23918367346938776, 27793.4224835994);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 901, 29301.54968081322, 1.102474064703213E-11, 0.5, 0.0, 29301.54968081323);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 950, 29212.65812315762, 1.837456774505355E-11, 0.5, 0.0, 29212.658123157602);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 1000, 29212.65812315762, 1.837456774505355E-11, 0.5, 0.0, 29212.658123157602);

        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[74, 18, 3, 64, 65, 25, 21, 69, 93, 87, 15, 78, 17, 37, 23, 98, 35, 20, 73, 58, 31, 97, 22, 90, 44, 16, 14, 10, 71, 83, 9, 89, 5, 48, 62, 46, 92, 27, 57, 60, 24, 80, 50, 86, 6, 8, 56, 19, 11, 26, 85, 34, 76, 59, 61, 54, 82, 33, 42, 2, 45, 95, 77, 51, 36, 4, 47, 99, 70, 40, 13, 28, 84, 67, 38, 29, 81, 75, 12, 32, 94, 39, 63, 53, 1, 43, 72, 49, 68, 66, 0, 7, 91, 79, 41, 88, 30, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 71, 20, 73, 58, 16, 14, 10, 31, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 54, 82, 33, 6, 8, 56, 86, 50, 60, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 11, 19, 57, 92, 27, 66, 0, 91, 48, 5, 62, 46, 96, 55, 41, 88, 30, 79, 7, 65, 64, 25, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 54, 82, 33, 6, 8, 56, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 11, 19, 57, 92, 27, 66, 0, 91, 30, 79, 88, 41, 7, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 59, 61, 34, 26, 85, 54, 82, 33, 6, 8, 56, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 11, 19, 76, 57, 92, 27, 66, 0, 91, 30, 79, 88, 41, 7, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 59, 61, 34, 26, 85, 54, 82, 33, 6, 8, 56, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 11, 19, 76, 57, 92, 27, 66, 0, 91, 30, 79, 88, 41, 7, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 59, 61, 34, 26, 85, 54, 82, 33, 6, 8, 56, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 11, 19, 76, 57, 92, 27, 66, 0, 91, 30, 79, 88, 41, 7, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 59, 61, 34, 26, 85, 11, 19, 56, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 82, 54, 33, 6, 8, 76, 57, 92, 27, 66, 0, 91, 30, 79, 88, 41, 7, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 59, 61, 34, 26, 85, 6, 8, 56, 86, 50, 60, 80, 24, 67, 72, 49, 43, 1, 53, 39, 63, 68, 84, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 82, 54, 33, 11, 19, 76, 57, 92, 27, 66, 0, 91, 30, 79, 88, 41, 7, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 59, 61, 34, 26, 85, 6, 8, 56, 86, 50, 60, 80, 24, 67, 84, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 43, 72, 49, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 82, 54, 33, 11, 19, 76, 57, 92, 27, 66, 0, 91, 30, 79, 88, 41, 7, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 59, 61, 34, 26, 85, 6, 8, 56, 86, 50, 60, 80, 24, 67, 84, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 43, 72, 49, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 82, 54, 33, 11, 19, 76, 57, 92, 27, 66, 0, 91, 30, 79, 88, 41, 7, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 59, 61, 34, 26, 85, 6, 8, 56, 86, 50, 60, 80, 24, 67, 84, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 43, 72, 49, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 82, 54, 33, 11, 19, 76, 57, 92, 27, 66, 0, 91, 30, 79, 88, 41, 7, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 59, 61, 34, 26, 85, 6, 8, 56, 86, 50, 60, 80, 24, 67, 84, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 43, 72, 49, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 82, 54, 33, 11, 19, 76, 57, 92, 27, 66, 0, 91, 30, 79, 88, 41, 7, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 59, 61, 34, 26, 85, 6, 8, 56, 86, 50, 60, 80, 24, 67, 84, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 43, 72, 49, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 82, 54, 33, 11, 19, 76, 57, 92, 27, 66, 0, 91, 30, 79, 88, 41, 7, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 59, 61, 34, 26, 85, 6, 8, 56, 86, 50, 60, 80, 24, 67, 84, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 43, 72, 49, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 82, 54, 33, 11, 19, 76, 57, 92, 27, 66, 0, 91, 30, 79, 88, 41, 7, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 59, 61, 34, 26, 85, 6, 8, 56, 86, 50, 60, 80, 24, 67, 84, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 43, 72, 49, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 82, 54, 33, 11, 19, 76, 57, 92, 27, 66, 0, 91, 30, 79, 88, 41, 7, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 59, 61, 34, 26, 85, 6, 8, 56, 86, 50, 60, 80, 24, 67, 84, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 43, 72, 49, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 82, 54, 33, 11, 19, 76, 57, 92, 27, 66, 0, 91, 30, 79, 88, 41, 7, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 59, 61, 34, 26, 85, 6, 8, 56, 86, 50, 60, 80, 24, 67, 84, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 43, 72, 49, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 82, 54, 33, 11, 19, 76, 57, 92, 27, 66, 0, 91, 30, 79, 88, 41, 7, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 59, 61, 34, 26, 85, 6, 8, 56, 86, 50, 60, 80, 24, 67, 84, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 43, 72, 49, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 82, 54, 33, 11, 19, 76, 57, 92, 27, 66, 0, 91, 30, 79, 88, 41, 7, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 59, 61, 34, 26, 85, 6, 8, 56, 86, 50, 60, 80, 24, 67, 84, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 43, 72, 49, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 82, 54, 33, 11, 19, 76, 57, 92, 27, 66, 0, 91, 30, 79, 88, 41, 7, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 59, 61, 34, 26, 85, 6, 8, 56, 86, 50, 60, 80, 24, 67, 84, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 43, 72, 49, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 82, 54, 33, 11, 19, 76, 57, 92, 27, 66, 0, 91, 30, 79, 88, 41, 7, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 59, 61, 34, 26, 85, 6, 8, 56, 86, 50, 60, 80, 24, 67, 84, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 43, 72, 49, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 82, 54, 33, 11, 19, 76, 57, 92, 27, 66, 91, 30, 79, 88, 41, 7, 96, 55, 0, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 59, 61, 34, 85, 26, 19, 11, 82, 54, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 43, 72, 49, 67, 84, 50, 60, 80, 24, 86, 8, 56, 6, 76, 57, 66, 27, 92, 0, 91, 7, 41, 79, 30, 88, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 59, 61, 34, 85, 26, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 63, 39, 53, 68, 43, 72, 49, 67, 84, 50, 60, 80, 24, 86, 8, 6, 56, 19, 76, 57, 66, 27, 92, 0, 91, 7, 41, 79, 30, 88, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 59, 61, 34, 85, 26, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 53, 39, 63, 1, 68, 43, 72, 49, 67, 84, 50, 60, 80, 24, 86, 8, 6, 56, 19, 76, 57, 66, 27, 92, 0, 91, 7, 41, 79, 30, 88, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 44, 90, 97, 22, 59, 61, 34, 85, 26, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 53, 39, 63, 1, 68, 43, 72, 49, 67, 84, 24, 80, 60, 50, 86, 8, 6, 56, 19, 76, 57, 66, 27, 92, 0, 91, 7, 41, 79, 30, 88, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 44, 22, 97, 90, 59, 61, 34, 85, 26, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 53, 39, 63, 1, 68, 43, 72, 49, 67, 84, 24, 80, 60, 50, 86, 8, 6, 56, 19, 76, 57, 66, 27, 92, 0, 91, 7, 41, 79, 30, 88, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 44, 22, 97, 90, 59, 61, 34, 85, 26, 11, 54, 82, 33, 28, 45, 2, 42, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 53, 39, 63, 1, 68, 43, 72, 49, 67, 84, 24, 80, 60, 50, 86, 8, 6, 56, 19, 76, 57, 66, 27, 92, 0, 91, 7, 41, 79, 30, 88, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 44, 22, 97, 90, 59, 61, 34, 85, 26, 11, 54, 82, 33, 28, 45, 2, 42, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 53, 39, 63, 1, 68, 43, 72, 49, 67, 84, 24, 80, 60, 50, 86, 8, 6, 56, 19, 76, 57, 66, 27, 92, 0, 91, 7, 41, 79, 30, 88, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 44, 22, 97, 90, 59, 61, 34, 85, 26, 11, 54, 82, 33, 28, 45, 2, 42, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 53, 39, 63, 1, 68, 43, 72, 49, 67, 84, 24, 80, 60, 50, 86, 8, 6, 56, 19, 76, 57, 66, 27, 92, 0, 91, 7, 41, 79, 30, 88, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 44, 22, 97, 90, 59, 61, 34, 85, 26, 11, 54, 82, 33, 28, 45, 2, 42, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 53, 39, 63, 1, 68, 43, 72, 49, 67, 84, 24, 80, 60, 50, 86, 8, 6, 56, 19, 76, 57, 66, 27, 92, 0, 91, 7, 41, 79, 30, 88, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 34, 85, 26, 11, 54, 82, 33, 28, 45, 2, 42, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 53, 39, 63, 1, 68, 43, 72, 49, 67, 84, 24, 80, 60, 50, 86, 8, 6, 56, 19, 76, 57, 66, 27, 92, 0, 91, 7, 41, 79, 30, 88, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 34, 85, 26, 11, 54, 82, 33, 28, 45, 2, 42, 47, 13, 70, 40, 99, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 53, 39, 63, 68, 67, 84, 24, 80, 60, 50, 86, 6, 8, 56, 19, 76, 57, 66, 27, 92, 0, 91, 7, 41, 79, 30, 88, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 19, 11, 82, 54, 33, 28, 45, 2, 42, 47, 13, 70, 40, 99, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 53, 39, 63, 68, 67, 84, 24, 80, 60, 50, 86, 56, 6, 8, 34, 26, 85, 76, 57, 66, 27, 92, 0, 91, 7, 41, 79, 30, 88, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 19, 11, 82, 54, 33, 28, 45, 2, 42, 47, 13, 70, 40, 99, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 53, 39, 63, 68, 67, 84, 24, 80, 60, 50, 86, 56, 6, 8, 34, 26, 85, 76, 57, 66, 27, 92, 0, 91, 7, 41, 79, 30, 88, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 19, 11, 82, 54, 33, 28, 45, 2, 42, 47, 13, 70, 40, 99, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 53, 39, 63, 68, 67, 84, 24, 80, 60, 50, 86, 56, 6, 8, 34, 26, 85, 76, 57, 66, 27, 92, 0, 91, 7, 41, 79, 30, 88, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 34, 26, 85, 19, 11, 82, 54, 33, 28, 45, 2, 42, 47, 13, 70, 40, 99, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 53, 39, 63, 68, 67, 84, 24, 80, 60, 50, 86, 56, 6, 8, 76, 57, 66, 27, 92, 0, 91, 7, 41, 79, 30, 88, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 11, 82, 54, 33, 28, 45, 2, 42, 47, 13, 70, 40, 99, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 53, 39, 63, 68, 67, 84, 24, 80, 60, 50, 86, 56, 6, 8, 19, 57, 66, 27, 92, 0, 91, 7, 41, 79, 30, 88, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 11, 6, 8, 56, 86, 50, 60, 24, 80, 84, 67, 72, 49, 43, 68, 63, 39, 53, 1, 81, 94, 12, 32, 75, 36, 4, 77, 51, 95, 38, 29, 99, 70, 40, 13, 45, 2, 42, 47, 28, 33, 54, 82, 19, 57, 66, 27, 92, 0, 91, 7, 88, 41, 79, 30, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 11, 6, 8, 56, 86, 50, 60, 24, 80, 84, 67, 72, 49, 43, 68, 63, 39, 53, 1, 81, 94, 12, 32, 75, 36, 4, 77, 51, 95, 38, 29, 99, 70, 40, 13, 45, 2, 42, 47, 28, 33, 54, 82, 19, 57, 66, 27, 92, 0, 91, 7, 88, 41, 79, 30, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 11, 6, 8, 56, 86, 50, 60, 24, 80, 84, 67, 72, 49, 43, 68, 63, 39, 53, 1, 81, 94, 12, 32, 75, 36, 4, 77, 51, 95, 38, 29, 45, 2, 42, 40, 70, 99, 47, 13, 28, 33, 54, 82, 19, 57, 66, 27, 92, 0, 91, 7, 88, 41, 30, 79, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 85, 26, 11, 6, 8, 56, 86, 50, 60, 24, 80, 72, 49, 43, 68, 63, 39, 53, 1, 84, 67, 82, 54, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 38, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 19, 57, 66, 27, 92, 0, 91, 7, 88, 41, 30, 79, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 8, 56, 86, 50, 60, 24, 80, 72, 49, 43, 63, 39, 53, 1, 68, 67, 84, 29, 38, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 47, 13, 2, 42, 40, 70, 99, 45, 28, 33, 82, 54, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 72, 49, 43, 63, 39, 53, 1, 68, 67, 84, 29, 38, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 47, 13, 2, 42, 40, 70, 99, 45, 28, 33, 82, 54, 8, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 72, 49, 43, 63, 39, 53, 1, 68, 67, 84, 29, 38, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 47, 13, 2, 42, 40, 70, 99, 45, 28, 33, 82, 54, 8, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 72, 49, 43, 63, 39, 53, 1, 68, 67, 84, 29, 38, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 72, 49, 43, 63, 39, 53, 1, 68, 67, 84, 29, 38, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 72, 49, 43, 63, 39, 53, 1, 68, 67, 84, 29, 38, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 72, 49, 43, 63, 39, 53, 1, 68, 67, 84, 29, 38, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 72, 49, 43, 63, 39, 53, 1, 68, 67, 84, 29, 38, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 72, 49, 43, 63, 39, 53, 1, 68, 67, 84, 29, 38, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 72, 49, 43, 63, 39, 53, 1, 68, 67, 84, 29, 38, 95, 77, 51, 36, 4, 75, 12, 32, 94, 81, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 42, 45, 28, 13, 2, 47, 99, 70, 40, 67, 84, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 43, 49, 68, 63, 39, 53, 1, 72, 57, 92, 27, 66, 0, 91, 7, 96, 55, 41, 88, 30, 79, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 49, 63, 39, 53, 1, 72, 67, 84, 29, 38, 68, 57, 92, 27, 66, 0, 91, 7, 96, 55, 30, 79, 88, 41, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 42, 45, 28, 13, 2, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 49, 63, 39, 53, 1, 72, 67, 84, 29, 38, 68, 57, 92, 27, 66, 0, 91, 30, 79, 88, 41, 7, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 2, 45, 42, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 49, 1, 53, 39, 63, 72, 67, 84, 29, 38, 68, 57, 92, 27, 66, 0, 91, 30, 79, 88, 41, 7, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 2, 45, 42, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 49, 1, 53, 39, 63, 72, 67, 84, 29, 38, 68, 57, 92, 27, 66, 0, 91, 30, 79, 88, 41, 7, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 2, 45, 42, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 49, 1, 53, 39, 63, 72, 67, 84, 29, 38, 68, 57, 92, 27, 66, 0, 91, 30, 79, 88, 41, 7, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 49, 1, 53, 39, 63, 72, 67, 84, 29, 38, 68, 57, 92, 27, 66, 0, 91, 30, 79, 88, 41, 7, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 49, 1, 53, 39, 63, 72, 67, 84, 29, 38, 68, 57, 92, 27, 66, 0, 91, 30, 79, 88, 41, 7, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 49, 1, 53, 39, 63, 72, 67, 84, 29, 38, 68, 57, 92, 27, 66, 0, 91, 30, 79, 88, 41, 7, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 49, 1, 53, 39, 63, 72, 67, 84, 29, 38, 99, 47, 40, 70, 92, 27, 57, 66, 68, 0, 91, 30, 79, 88, 41, 7, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 68, 63, 53, 39, 49, 72, 67, 84, 29, 38, 57, 66, 27, 92, 0, 91, 7, 41, 30, 79, 88, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 68, 63, 53, 39, 49, 72, 67, 84, 29, 38, 57, 66, 27, 92, 0, 91, 7, 41, 30, 79, 88, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 68, 63, 53, 39, 49, 72, 67, 84, 29, 38, 57, 66, 27, 92, 0, 91, 7, 41, 30, 79, 88, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 68, 63, 53, 39, 49, 72, 67, 84, 29, 38, 57, 66, 27, 92, 0, 91, 7, 41, 30, 79, 88, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 68, 63, 53, 39, 49, 72, 67, 84, 29, 38, 57, 66, 27, 92, 0, 91, 7, 41, 30, 79, 88, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 68, 63, 53, 39, 49, 72, 67, 84, 29, 38, 57, 66, 27, 92, 0, 91, 7, 41, 30, 79, 88, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 68, 63, 53, 39, 49, 72, 67, 84, 29, 38, 57, 66, 27, 92, 0, 91, 7, 41, 79, 30, 88, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 68, 63, 53, 39, 49, 72, 67, 84, 29, 38, 57, 66, 27, 92, 0, 91, 7, 41, 79, 30, 88, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 68, 63, 53, 39, 49, 72, 67, 84, 29, 38, 57, 66, 27, 92, 0, 91, 7, 41, 79, 30, 88, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 67, 84, 38, 29, 63, 53, 39, 68, 49, 57, 66, 27, 92, 0, 91, 7, 41, 79, 30, 88, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 67, 84, 38, 29, 63, 53, 39, 68, 57, 66, 27, 92, 0, 91, 7, 30, 88, 41, 79, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 67, 84, 63, 53, 39, 68, 57, 66, 27, 92, 0, 91, 7, 30, 88, 41, 79, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 67, 84, 63, 53, 39, 68, 57, 66, 27, 92, 0, 91, 7, 30, 88, 41, 79, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 67, 84, 63, 53, 39, 68, 57, 66, 27, 92, 0, 91, 7, 30, 88, 41, 79, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 67, 84, 63, 53, 39, 68, 57, 66, 27, 92, 0, 91, 7, 30, 88, 41, 79, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 67, 84, 63, 53, 39, 68, 57, 92, 27, 66, 79, 30, 88, 41, 7, 0, 91, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 67, 84, 63, 53, 39, 68, 57, 92, 27, 66, 79, 30, 88, 41, 7, 0, 91, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 67, 84, 63, 53, 39, 68, 57, 92, 27, 66, 79, 30, 88, 41, 7, 0, 91, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 67, 84, 63, 53, 39, 68, 57, 92, 27, 66, 79, 30, 88, 41, 7, 0, 91, 96, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 67, 84, 39, 63, 53, 68, 57, 92, 27, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 7, 96, 55, 41, 88, 30, 79, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 41, 88, 30, 79, 55, 7, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 41, 88, 30, 79, 55, 7, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 41, 88, 30, 79, 55, 7, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 41, 88, 30, 79, 55, 7, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 41, 88, 30, 79, 55, 7, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 41, 88, 30, 79, 55, 7, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 41, 88, 30, 79, 55, 7, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 41, 88, 30, 79, 55, 7, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 41, 88, 30, 79, 55, 7, 96, 74]");

        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[74, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[74, 18, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 41, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 41, 88, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 41, 88, 30, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 41, 88, 30, 79, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 41, 88, 30, 79, 55, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 41, 88, 30, 79, 55, 7, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 41, 88, 30, 79, 55, 7, 96, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[74, 18, 3, 65, 64, 25, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 56, 86, 50, 60, 24, 80, 8, 54, 82, 33, 28, 13, 45, 42, 2, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 38, 29, 84, 67, 53, 39, 63, 68, 57, 27, 92, 66, 0, 91, 41, 88, 30, 79, 55, 7, 96, 74]");

    }

    @Test
    public void test_mmas_cycle_moving_adtsp_freq_10_mag_0_5_kroA150() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA150));
        MMAS_CMADTSP mmas_cmadtsp = new MMAS_CMADTSP(graph, 0.8, 1000, 0.5, 10, 4);
        mmas_cmadtsp.setMmasSeed(1);
        mmas_cmadtsp.setDbgpSeed(1);
        mmas_cmadtsp.setStatisticInterval(1);
        mmas_cmadtsp.setShowLog(false);
        mmas_cmadtsp.run();
        assertThat(mmas_cmadtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(44602.57719671454);
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getGlobalStatistics())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");

        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 1, 48631.26584637324, 3256.9421086281377, 0.0, 85.8269387755102, 43037.34303154829);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 5, 39380.244725952005, 2236.2113695227135, 0.69, 11.180408163265307, 37253.5435331412);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 10, 37824.97515641779, 1718.5425901800982, 0.5033333333333333, 3.5951020408163266, 36953.25669688103);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 11, 37772.69070937771, 1439.2545753718443, 0.5033333333333333, 3.670204081632653, 36953.25669688103);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 15, 37773.04260530159, 1809.8665362155805, 0.5033333333333333, 2.4244897959183676, 36953.25669688103);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 20, 37435.43571185079, 1473.8742768928782, 0.49666666666666665, 4.836734693877551, 36576.25669688103);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 21, 48549.33541227654, 2300.1926852976467, 0.4766666666666667, 41.329795918367346, 43322.53555458481);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 25, 44084.20716505089, 2958.4520711194677, 0.5766666666666667, 15.07265306122449, 40501.13013384248);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 30, 43274.607697073305, 2820.9045408031498, 0.52, 21.461224489795917, 39112.4675215903);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 31, 50696.577200180094, 3031.3938561856457, 0.4866666666666667, 43.585306122448976, 44449.79255129207);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 35, 43665.8452353042, 3074.3800853784846, 0.61, 22.324897959183673, 40260.97963752795);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 40, 40068.56271460273, 2252.3570826921527, 0.5266666666666666, 19.814693877551022, 37655.24207066426);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 41, 50772.38644066258, 2386.667800189229, 0.49666666666666665, 50.69632653061225, 45519.312075835296);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 45, 48953.27747076925, 3247.361847651394, 0.55, 29.26938775510204, 43836.00091917383);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 50, 44485.703988166664, 2418.7231890158437, 0.5, 24.155102040816328, 41023.12675348965);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 51, 48907.665322936344, 2508.5529469819376, 0.5166666666666667, 57.10367346938776, 44505.55885532792);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 55, 43165.40409712275, 2336.2907080429163, 0.5633333333333334, 20.289795918367346, 39025.63892328277);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 60, 39882.073852290276, 2245.6123258502257, 0.5, 14.37877551020408, 37558.256227468395);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 61, 48215.83537390568, 2972.1444944340687, 0.48333333333333334, 44.65061224489796, 43225.31419449655);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 65, 44195.18139557589, 1846.7934780548073, 0.65, 17.252244897959184, 42113.69798982261);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 70, 41888.751216646764, 1929.338294616342, 0.5833333333333334, 18.997551020408164, 40492.888460556394);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 71, 49475.59787256088, 2764.2886950745133, 0.5066666666666667, 45.31183673469388, 43621.888619056335);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 75, 44471.89951637022, 2818.0801052479655, 0.5633333333333334, 12.841632653061225, 40351.22693334319);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 80, 42536.60842513419, 3332.7427987466654, 0.5266666666666666, 8.686530612244898, 39467.191647569256);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 81, 50787.34149940466, 2863.8329310833556, 0.5033333333333333, 49.50204081632653, 45796.56032117114);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 85, 46369.00611395425, 3232.021221957137, 0.53, 18.99918367346939, 41628.50237419671);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 90, 46338.08850342214, 3089.485938917166, 0.5033333333333333, 20.20408163265306, 41476.780418187256);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 91, 48285.33788891699, 2055.4067297610222, 0.45666666666666667, 49.08816326530612, 44862.82098837405);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 95, 43249.105370397614, 2594.1420520268093, 0.5833333333333334, 14.355102040816327, 40803.75978475862);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 100, 40746.54256955819, 2629.988413086997, 0.49333333333333335, 12.165714285714285, 38609.55485939534);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 101, 50339.76179261419, 3538.2682145828276, 0.47, 39.801632653061226, 42957.71302531414);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 105, 42548.8023052111, 3313.4702572385886, 0.5133333333333333, 9.14938775510204, 38887.76052143179);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 110, 41290.824020338056, 3031.85093202933, 0.5, 8.151020408163266, 38470.261891829);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 111, 48538.44469313356, 2644.4966887055866, 0.4866666666666667, 43.395102040816326, 41614.55357121549);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 115, 43523.181108053075, 2861.7275755312603, 0.5566666666666666, 17.376326530612246, 37862.50038475921);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 120, 41106.97104055373, 3453.826061999997, 0.5266666666666666, 10.831836734693878, 36652.72147761944);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 121, 49480.06781314981, 3006.300950589496, 0.49666666666666665, 49.16244897959184, 43821.61107007555);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 125, 46070.82285817643, 2745.42687013207, 0.62, 26.317551020408164, 42247.221715763204);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 130, 41976.05598721702, 2418.591596644952, 0.5533333333333333, 4.953469387755102, 40201.49736345569);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 131, 49809.2942352961, 2389.2673096605827, 0.47333333333333333, 40.71918367346939, 46106.46580557071);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 135, 44244.40957155425, 1930.529536449533, 0.56, 21.040816326530614, 41871.85852495205);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 140, 41208.5459455842, 1837.2874902013468, 0.53, 11.118367346938776, 39445.623674551665);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 141, 48205.47136347103, 3009.4384795994642, 0.5133333333333333, 33.55673469387755, 40853.478612051214);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 145, 40035.718777399365, 2968.948487511817, 0.57, 11.531428571428572, 37615.06876860455);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 150, 39200.2703475255, 2786.766992348194, 0.5033333333333333, 9.838367346938776, 36900.16594800199);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 151, 48101.217880820426, 2206.6156873424047, 0.48333333333333334, 30.511020408163265, 44077.27194509023);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 155, 42535.257899660886, 2503.4379620729924, 0.5933333333333334, 24.770612244897958, 39261.74497552754);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 160, 40381.116891365986, 2884.3544455776755, 0.5333333333333333, 12.586938775510204, 38165.21679863553);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 161, 46707.653360731834, 1954.9259772555426, 0.47, 41.18775510204082, 43995.85685226648);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 165, 44744.92498589513, 2972.4002612848767, 0.5333333333333333, 20.05142857142857, 41235.82201727408);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 170, 42992.28798142514, 2753.037524209492, 0.5333333333333333, 12.597551020408163, 39280.10580389429);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 171, 49226.81863642424, 2657.8293659846063, 0.5, 32.816326530612244, 43912.38709513447);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 175, 42331.787071737956, 2296.623461651781, 0.5833333333333334, 10.851428571428572, 39153.28423586019);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 180, 39862.17619491587, 1711.668132825205, 0.51, 5.838367346938775, 38732.76703316563);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 181, 45517.27262221978, 2584.2225581132516, 0.4866666666666667, 31.965714285714284, 41745.904035510655);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 185, 43593.41804305929, 3004.6667497188, 0.55, 15.880816326530612, 39630.61028043593);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 190, 42718.91254864646, 4502.205111580469, 0.5266666666666666, 8.285714285714286, 38733.8974519017);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 191, 49102.2567489388, 2477.4970397820175, 0.49, 25.798367346938775, 44149.65302022684);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 195, 46358.656696916456, 2862.688003203076, 0.51, 15.305306122448979, 41928.26042770758);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 200, 45695.42389207617, 3113.6945436240094, 0.5066666666666667, 16.897959183673468, 40143.334948305535);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 201, 47251.61592970746, 2009.94497003329, 0.49, 34.10857142857143, 43126.02306255608);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 205, 46016.5175765305, 2945.0877132754154, 0.53, 17.11591836734694, 41595.42215718282);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 210, 43041.94620969246, 2398.029464537667, 0.55, 14.813877551020408, 40519.55613337031);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 211, 48893.79099114365, 2704.026468412242, 0.5233333333333333, 34.07020408163265, 42241.76723299511);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 215, 40467.194381417765, 2274.3955915498304, 0.6233333333333333, 15.471836734693877, 38115.35160390275);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 220, 39583.07894143387, 2237.2195514223154, 0.49666666666666665, 13.405714285714286, 37004.84130630636);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 221, 48679.943726646685, 3670.3445182213172, 0.49, 41.499591836734695, 42743.75703168748);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 225, 43311.23434730783, 2874.427402127279, 0.5133333333333333, 9.41469387755102, 39300.10275764883);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 230, 41246.77662813736, 2824.4009371751913, 0.5166666666666667, 9.636734693877552, 38390.86652193604);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 231, 49905.84501554063, 2296.7448697668765, 0.4866666666666667, 35.13142857142857, 44821.06766617913);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 235, 44120.32274045012, 2533.1917173064912, 0.5466666666666666, 16.191836734693876, 41101.663166993574);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 240, 42900.43647081657, 2128.0694934472526, 0.5033333333333333, 13.146938775510204, 40567.84915380489);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 241, 48730.02627453707, 2396.3515225086862, 0.4866666666666667, 37.35673469387755, 44855.76948849309);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 245, 46686.15647174153, 3442.1972942867706, 0.5566666666666666, 16.377142857142857, 41598.844495150464);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 250, 44360.09676291332, 3668.9833371791997, 0.51, 14.551836734693877, 40047.44988239623);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 251, 48559.41931581235, 2953.0881753556787, 0.48333333333333334, 40.95265306122449, 43166.77524871479);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 255, 43964.86566169433, 2203.4627008953726, 0.5566666666666666, 15.704489795918366, 40366.7976698453);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 260, 42425.50856143, 2934.57840504409, 0.49333333333333335, 9.954285714285714, 39780.48108333397);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 261, 47038.768005299615, 2649.160438753371, 0.47333333333333333, 35.224489795918366, 42433.429681671216);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 265, 43393.15999813205, 2380.4689549764826, 0.5733333333333334, 16.53469387755102, 39747.321290064254);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 270, 40030.37910029813, 2936.0625612900317, 0.5166666666666667, 8.791020408163265, 38341.30932432713);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 271, 49177.93519102024, 2503.9177202994883, 0.48, 32.91755102040816, 43252.278280040264);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 275, 43331.84012071485, 2701.613091011522, 0.5333333333333333, 10.907755102040817, 40911.3207715197);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 280, 41722.162088511504, 2739.7322399571035, 0.5366666666666666, 6.997551020408164, 39209.452474247024);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 281, 46733.2158391359, 2442.4386934606227, 0.49, 39.751020408163264, 42489.23660612482);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 285, 44654.78661203717, 2801.0361701363877, 0.5733333333333334, 17.34857142857143, 40304.71935218436);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 290, 44169.80899342184, 2979.6440283497836, 0.5733333333333334, 18.17795918367347, 40304.71935218436);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 291, 46275.194773511656, 2448.986171282875, 0.47333333333333333, 30.863673469387756, 41588.042608045005);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 295, 41515.88115898521, 1753.3061148588483, 0.51, 12.984489795918368, 39954.77443280811);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 300, 41271.88117153892, 1728.2502265777025, 0.5033333333333333, 8.050612244897959, 39546.999879037874);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 301, 46840.683289392626, 2173.9092956745076, 0.48333333333333334, 27.317551020408164, 42594.73392063776);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 305, 42454.586833440786, 2033.2950573292658, 0.5166666666666667, 10.063673469387755, 40703.39636381813);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 310, 40774.11108446979, 2008.2357031241743, 0.5366666666666666, 9.113469387755101, 39407.63516994761);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 311, 49993.76406968534, 2326.0626637517917, 0.49, 39.70285714285714, 45236.09615158063);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 315, 42404.69271805067, 1753.0071082729123, 0.58, 12.522448979591836, 40289.32476261735);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 320, 41689.80221753213, 2540.4075097335717, 0.5, 8.693061224489796, 40016.85709873545);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 321, 48085.834049193865, 2936.613155504644, 0.47333333333333333, 40.67836734693878, 43757.92611207269);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 325, 42320.93190977859, 2954.4532854898293, 0.5666666666666667, 8.307755102040817, 40057.15527306964);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 330, 40720.48738338522, 2086.98093402629, 0.5066666666666667, 4.016326530612245, 39425.577068388724);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 331, 45372.20310978867, 2023.6300104271681, 0.47333333333333333, 29.608979591836736, 41073.93927940923);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 335, 43502.67351260742, 2016.522799173223, 0.5333333333333333, 11.653061224489797, 39955.13737278565);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 340, 41598.71878917025, 2522.384787929651, 0.5166666666666667, 7.9951020408163265, 38923.59065322601);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 341, 46729.717123657276, 3069.3332490457365, 0.4766666666666667, 33.65877551020408, 42504.78459807252);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 345, 42324.93379013867, 2427.8387047190777, 0.58, 10.004081632653062, 39397.30844265811);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 350, 41192.42699211735, 2673.8430872936137, 0.5533333333333333, 5.595918367346939, 38790.70802177077);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 351, 48071.64236025901, 1414.5594040308067, 0.48, 32.199183673469385, 45270.54376753305);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 355, 44520.34045169366, 2065.9158841572216, 0.5766666666666667, 7.151836734693878, 42990.70074219794);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 360, 43644.54095279077, 2038.0482540107257, 0.51, 8.604897959183674, 41703.27632635193);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 361, 48599.01161707025, 2072.629234526304, 0.47333333333333333, 30.227755102040817, 45114.07834159273);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 365, 43148.49752423234, 1974.3797303888418, 0.5666666666666667, 13.467755102040817, 41073.212810400815);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 370, 42024.53043034389, 2970.465245169141, 0.5366666666666666, 8.631836734693877, 39105.440306809396);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 371, 47176.06670706249, 1940.959615671687, 0.4766666666666667, 24.103673469387754, 43783.532439371585);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 375, 43183.21133257052, 2420.4175392075304, 0.51, 10.016326530612245, 41355.41852366992);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 380, 41952.11642148452, 2033.0885903287299, 0.5166666666666667, 9.0, 40068.9556475914);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 381, 47701.34420796049, 2189.2264057906586, 0.49, 21.746938775510205, 42523.80371342594);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 385, 42108.457617191, 2204.0834502138614, 0.5333333333333333, 7.560816326530612, 40157.183846210915);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 390, 39991.725148783524, 1623.6093221304093, 0.51, 7.08734693877551, 38911.43359601438);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 391, 46556.816317400495, 1585.4179502283077, 0.5, 23.475102040816328, 43662.463363929615);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 395, 43441.425051708946, 1750.7646480366932, 0.5333333333333333, 8.978775510204082, 41455.18890198772);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 400, 40964.9656365077, 1995.646897303343, 0.49333333333333335, 3.2008163265306124, 39991.933558135956);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 401, 46263.75975394326, 2011.4549293775501, 0.48333333333333334, 23.217142857142857, 42430.32707607964);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 405, 41629.21623971874, 1652.7520853158246, 0.5166666666666667, 9.48, 40217.45987201649);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 410, 40487.95914724004, 1389.3401154161832, 0.5166666666666667, 4.314285714285714, 39831.79615412612);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 411, 46839.42111466911, 2589.683253222595, 0.4866666666666667, 28.049795918367348, 42982.58819981314);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 415, 43039.62621526906, 2965.3747477014413, 0.5266666666666666, 9.868571428571428, 40821.89959989807);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 420, 41035.028665651924, 2098.169681367846, 0.5366666666666666, 5.556734693877551, 39830.98700634953);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 421, 44985.63972729296, 1881.9798550599016, 0.48333333333333334, 22.281632653061223, 42435.49995628094);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 425, 41474.456563120286, 1174.015432000475, 0.57, 13.338775510204082, 40148.25340040119);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 430, 41894.64074685215, 1483.0045055953565, 0.5233333333333333, 14.538775510204081, 40085.99191573604);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 431, 46165.01137637547, 2118.5839324567496, 0.48333333333333334, 26.90612244897959, 42428.39588616687);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 435, 42358.70636022441, 2013.4731994160413, 0.5266666666666666, 7.92734693877551, 40328.72492534559);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 440, 40381.402061844106, 1410.3662135784477, 0.5, 4.067755102040817, 39518.07360415786);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 441, 44479.671504332444, 2030.1690775215013, 0.48333333333333334, 11.831836734693878, 40216.744032502786);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 445, 43216.044937560655, 2762.0726797386933, 0.53, 8.554285714285715, 40015.79084419039);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 450, 43068.183219169936, 3063.0890421685467, 0.49666666666666665, 7.478367346938776, 39969.811638796215);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 451, 47555.66857080816, 2009.095252449998, 0.4766666666666667, 19.8734693877551, 42485.72106920038);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 455, 42987.13261346424, 2730.548127278984, 0.53, 6.369795918367347, 40934.55430336358);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 460, 42700.449637846, 2741.8141686408617, 0.53, 4.467755102040816, 40934.55430336358);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 461, 46143.90880521892, 2136.054589927053, 0.48, 19.82938775510204, 41885.3271152991);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 465, 41402.74553471741, 1926.3282303099027, 0.5433333333333333, 7.59265306122449, 39829.76072494824);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 470, 41347.88167591415, 1998.3316796485988, 0.5066666666666667, 8.135510204081633, 39632.61663392706);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 471, 45592.896241609975, 1466.6348898254053, 0.48, 19.28, 43204.550043049065);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 475, 42895.480566945334, 1410.970451580774, 0.56, 9.244897959183673, 41409.88047274011);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 480, 42106.89622424412, 1692.8950980873328, 0.5166666666666667, 5.422857142857143, 40915.61724457432);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 481, 46347.87731083942, 2551.6372491976385, 0.53, 26.97142857142857, 41442.10767284043);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 485, 40810.11431485898, 1307.4684487017335, 0.5133333333333333, 2.0351020408163265, 40177.023352634336);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 490, 40480.33754556196, 1015.6254328139422, 0.5, 4.1689795918367345, 40082.78295709949);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 491, 44411.39121864338, 1628.2485167031157, 0.4866666666666667, 19.180408163265305, 41366.83701151825);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 495, 42785.56953492763, 2052.6481131401756, 0.5166666666666667, 5.9951020408163265, 40420.93069852478);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 500, 40804.14693663574, 1791.5307886788087, 0.5433333333333333, 3.8146938775510204, 39406.92257023875);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 501, 45640.26808285222, 2252.7865245814332, 0.5233333333333333, 19.260408163265307, 42558.331180729394);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 505, 41857.44484366539, 1508.648881133457, 0.5266666666666666, 3.464489795918367, 40621.54567981018);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 510, 39587.06245755602, 1116.915770011306, 0.5133333333333333, 2.1395918367346938, 39149.97997365424);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 511, 44959.74636869454, 1718.493693742997, 0.4866666666666667, 15.555102040816326, 42626.08754013124);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 515, 43020.65160552857, 970.3698676877754, 0.51, 6.129795918367347, 41979.62141582351);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 520, 41423.404351576755, 866.2166973711553, 0.5066666666666667, 1.1820408163265306, 41184.796566962505);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 521, 43961.04222634255, 1427.6071770443782, 0.4666666666666667, 21.80734693877551, 42224.175446583155);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 525, 42459.61414741987, 2075.367410801252, 0.5433333333333333, 4.755918367346939, 40871.20991859037);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 530, 42308.77162501265, 2494.281402265734, 0.5466666666666666, 8.353469387755101, 40604.09604037813);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 531, 44485.56231557289, 1495.1776023141927, 0.5, 16.97877551020408, 42368.985817275134);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 535, 41533.494723677584, 126.39795824495873, 0.5133333333333333, 0.4, 41166.30798169382);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 540, 40759.92107891878, 638.3263518086304, 0.51, 2.049795918367347, 40469.93060579798);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 541, 43865.82517532475, 1192.3467774488888, 0.49666666666666665, 13.413877551020407, 41508.01835976515);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 545, 41702.87995078625, 774.2559881698414, 0.6, 3.3289795918367346, 41401.4163584365);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 550, 41186.03544533041, 1379.6045695271696, 0.49666666666666665, 2.3257142857142856, 40662.318964231476);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 551, 45248.9445853482, 1270.1363412202738, 0.4766666666666667, 20.473469387755102, 42734.02000715626);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 555, 44481.845020075954, 2207.364248784405, 0.54, 4.979591836734694, 42039.42406277865);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 560, 41790.01468945106, 1088.1772292186881, 0.51, 2.7983673469387753, 41335.22430427244);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 561, 45727.65249086168, 1932.9720505819478, 0.49666666666666665, 14.464489795918368, 42396.05785597245);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 565, 42117.94592532828, 2163.058855187448, 0.5066666666666667, 1.7395918367346939, 40926.75064513336);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 570, 41461.85791011122, 1548.9885166219142, 0.49666666666666665, 3.8636734693877552, 40665.30019243565);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 571, 45983.60305321906, 1610.7897679859138, 0.49, 16.34204081632653, 42043.347235438545);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 575, 42900.68004857669, 1695.447329288419, 0.49666666666666665, 8.55265306122449, 41521.64725259955);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 580, 42047.01219458764, 1672.9886707424985, 0.5066666666666667, 3.437551020408163, 41253.31108678656);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 581, 45195.51333380074, 1562.145496062514, 0.4866666666666667, 13.031836734693877, 42858.63794933938);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 585, 42764.347656323946, 1645.5886798894308, 0.5666666666666667, 8.648163265306122, 41755.1133993105);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 590, 43151.705505896636, 1619.8963042970308, 0.5666666666666667, 10.19265306122449, 41755.1133993105);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 591, 47549.27416309235, 1334.39774743949, 0.48333333333333334, 19.45877551020408, 44511.58504124078);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 595, 44673.927346010554, 2005.8468193677104, 0.5166666666666667, 4.316734693877551, 43344.17778085644);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 600, 43874.88419303635, 1926.3773206261938, 0.5, 3.2489795918367346, 43005.04793045481);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 601, 46312.08810402879, 2395.8394832505946, 0.49, 15.90938775510204, 41132.9976352747);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 605, 41516.15311025305, 1500.38993450159, 0.49, 1.2955102040816326, 41132.9976352747);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 610, 41454.35208485475, 1333.3987580228534, 0.49333333333333335, 0.9697959183673469, 41083.40456095101);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 611, 46651.819038425114, 1769.412845711059, 0.47333333333333333, 18.591836734693878, 44174.98180944886);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 615, 44150.5213699734, 1124.2670995354424, 0.5533333333333333, 1.4244897959183673, 43643.74182586512);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 620, 43920.53513226771, 971.5313930425534, 0.49, 1.0620408163265307, 43584.93503895552);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 621, 46612.59790736736, 837.1202817056565, 0.48333333333333334, 1.813061224489796, 43696.608441383876);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 625, 42760.86022494357, 647.3795671482598, 0.5133333333333333, 1.3387755102040817, 42045.78967320641);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 630, 42380.93556227405, 950.3255787936928, 0.49666666666666665, 2.1575510204081634, 41943.05152177295);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 631, 46029.57648187936, 1482.5268486692123, 0.48, 16.08, 43167.34010509537);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 635, 43349.68058582638, 918.5669825613526, 0.5033333333333333, 3.779591836734694, 42583.566569787465);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 640, 42212.75729865567, 428.8593569137229, 0.5133333333333333, 0.34530612244897957, 42105.496845794325);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 641, 45494.7290673816, 767.7650359471468, 0.4866666666666667, 5.274285714285714, 42944.12609739673);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 645, 43187.40538854156, 1574.8624315120378, 0.5133333333333333, 5.8212244897959184, 42071.19162175318);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 650, 41312.92915562871, 752.7358527031425, 0.52, 1.030204081632653, 41080.966119725024);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 651, 47087.7303241318, 886.4372328951854, 0.48333333333333334, 9.755918367346938, 45048.0187000814);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 655, 42685.22911898332, 216.3920729773605, 0.5233333333333333, 0.35918367346938773, 42643.406330856145);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 660, 42778.62625856933, 674.6138521930106, 0.49, 0.8938775510204081, 42605.035510132184);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 661, 45894.06187855526, 1699.3043994694433, 0.48333333333333334, 13.347755102040816, 43574.27260621409);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 665, 45259.79040080439, 1930.3572020250745, 0.5033333333333333, 5.991020408163266, 42964.18473554923);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 670, 42691.82473621252, 199.24116995577654, 0.5066666666666667, 1.0097959183673468, 42639.11384801405);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 671, 45997.904375861435, 462.4229308641535, 0.4866666666666667, 3.7485714285714287, 43579.51346849869);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 675, 42150.768779421436, 487.7768166801685, 0.51, 3.3322448979591837, 41849.97988236737);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 680, 42110.24999413815, 1045.2964457490593, 0.51, 2.6587755102040815, 41756.0503865722);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 681, 46842.865149572564, 1942.372463850482, 0.49, 6.768163265306122, 43342.27274496446);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 685, 41987.58301111823, 55.07915419879038, 0.52, 0.3183673469387755, 41608.5062297589);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 690, 41846.395300262106, 771.7986878579551, 0.5133333333333333, 0.9828571428571429, 41593.918825598244);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 691, 46961.72761254942, 1434.6332172373168, 0.48333333333333334, 10.406530612244898, 44149.64056158145);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 695, 43542.873425485006, 952.9107510076847, 0.49666666666666665, 2.1216326530612246, 42538.334892209044);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 700, 42556.12294793502, 612.333269032279, 0.5066666666666667, 1.0751020408163265, 42217.090560924225);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 701, 46974.05503543586, 1738.2866445255854, 0.49, 9.153469387755102, 42593.39006178814);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 705, 43552.90062977991, 1984.6799559968865, 0.49, 3.155918367346939, 42593.39006178814);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 710, 43453.80221658214, 2017.0688399772937, 0.49, 2.72, 42593.39006178814);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 711, 48200.73278864228, 1392.9621149974218, 0.48, 10.627755102040817, 43748.390259279564);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 715, 42151.92303029325, 807.5253250312904, 0.5033333333333333, 0.9159183673469388, 41926.760333188395);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 720, 41917.15014196445, 144.17772052668616, 0.5233333333333333, 0.12, 41896.760333188395);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 721, 44591.59053197333, 488.43997648875313, 0.4866666666666667, 1.2359183673469387, 43412.36973643583);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 725, 43455.0252581984, 264.72662761034053, 0.49333333333333335, 0.7477551020408163, 43050.796052903264);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 730, 43008.22507352389, 211.4613892720161, 0.5, 2.4840816326530613, 42913.84286459087);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 731, 44943.914154308026, 883.8568728059752, 0.48333333333333334, 4.183673469387755, 43721.05568332364);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 735, 43723.56848289481, 17.76817616532349, 0.48333333333333334, 0.12, 43721.05568332364);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 740, 43731.45812024399, 73.55633687237692, 0.48333333333333334, 0.16, 43721.05568332364);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 741, 42531.94792668466, 129.41341464830958, 0.48333333333333334, 0.7853061224489796, 42101.64784475577);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 745, 41842.42881813926, 118.51175736556625, 0.5433333333333333, 1.7175510204081632, 41811.79871703591);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 750, 41842.46026468501, 155.44687258073134, 0.5433333333333333, 0.39918367346938777, 41811.79871703591);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 751, 44324.14964639366, 867.0182264261167, 0.48333333333333334, 4.209795918367347, 42270.2803183254);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 755, 41950.884649757805, 2.204948129406426E-11, 0.5033333333333333, 0.0, 41950.88464975783);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 760, 41969.20741249879, 129.56149784222146, 0.5033333333333333, 0.12, 41950.88464975783);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 761, 43155.68378922652, 81.19123915023562, 0.49666666666666665, 0.23918367346938776, 42988.026992246334);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 765, 41462.65920380863, 76.0919586367406, 0.5366666666666666, 0.35020408163265304, 41445.56307246702);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 770, 41476.035067957426, 161.47370810936158, 0.5366666666666666, 0.3575510204081633, 41445.56307246702);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 771, 46126.77525646247, 205.9992682179059, 0.49, 0.7518367346938776, 44985.00950247215);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 775, 42761.39762353142, 34.277547003553806, 0.5066666666666667, 0.5126530612244898, 42576.793749244214);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 780, 42576.79374924419, 2.204948129406426E-11, 0.5066666666666667, 0.0, 42576.793749244214);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 781, 43352.70461200362, 2.204948129406426E-11, 0.48333333333333334, 0.0, 43352.704612003596);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 785, 43352.70461200362, 2.204948129406426E-11, 0.48333333333333334, 0.0, 43352.704612003596);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 790, 43352.70461200362, 2.204948129406426E-11, 0.48333333333333334, 0.0, 43352.704612003596);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 791, 44594.95859103295, 812.6775422689296, 0.48, 4.022857142857143, 43648.46742094992);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 795, 43648.46742094989, 2.939930839208568E-11, 0.48, 0.0, 43648.46742094992);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 800, 43720.63355597932, 510.2916345132684, 0.4866666666666667, 0.4, 43648.46742094992);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 801, 44910.92687326956, 419.3193113775437, 0.4866666666666667, 1.782857142857143, 43292.33985958874);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 805, 43422.87563238882, 280.25031530456465, 0.5233333333333333, 0.7853061224489796, 43284.33985958874);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 810, 43402.42542599723, 256.18013875188694, 0.5233333333333333, 1.043265306122449, 43284.33985958874);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 811, 42994.02167117126, 112.205062660225, 0.48333333333333334, 0.12, 42978.15347903316);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 815, 42978.15347903316, 0.0, 0.48333333333333334, 0.0, 42978.15347903316);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 820, 42978.15347903316, 0.0, 0.48333333333333334, 0.0, 42978.15347903316);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 821, 44625.193817493244, 2.939930839208568E-11, 0.48333333333333334, 0.0, 44625.193817493215);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 825, 44628.315556927184, 22.074031228373137, 0.48333333333333334, 0.12, 44625.193817493215);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 830, 44625.193817493244, 2.939930839208568E-11, 0.48333333333333334, 0.0, 44625.193817493215);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 831, 46353.33702876342, 2.939930839208568E-11, 0.48333333333333334, 0.0, 46353.33702876339);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 835, 46353.33702876342, 2.939930839208568E-11, 0.48333333333333334, 0.0, 46353.33702876339);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 840, 46353.33702876342, 2.939930839208568E-11, 0.48333333333333334, 0.0, 46353.33702876339);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 841, 44136.45398150618, 7.34982709802142E-12, 0.4866666666666667, 0.0, 44136.45398150619);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 845, 44137.83684624319, 9.778330330009146, 0.4866666666666667, 0.08, 44136.45398150619);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 850, 44136.45398150618, 7.34982709802142E-12, 0.4866666666666667, 0.0, 44136.45398150619);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 851, 46895.77522683919, 3.67491354901071E-11, 0.48333333333333334, 0.0, 46895.77522683923);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 855, 46895.77522683919, 3.67491354901071E-11, 0.48333333333333334, 0.0, 46895.77522683923);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 860, 46895.77522683919, 3.67491354901071E-11, 0.48333333333333334, 0.0, 46895.77522683923);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 861, 44612.82455813327, 7.34982709802142E-12, 0.48, 0.0, 44612.824558133274);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 865, 44612.82455813327, 7.34982709802142E-12, 0.48, 0.0, 44612.824558133274);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 870, 44612.82455813327, 7.34982709802142E-12, 0.48, 0.0, 44612.824558133274);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 871, 46218.2476508782, 2.939930839208568E-11, 0.48333333333333334, 0.0, 46218.24765087817);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 875, 46218.2476508782, 2.939930839208568E-11, 0.48333333333333334, 0.0, 46218.24765087817);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 880, 46218.2476508782, 2.939930839208568E-11, 0.48333333333333334, 0.0, 46218.24765087817);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 881, 44739.30413435545, 4.409896258812852E-11, 0.4866666666666667, 0.0, 44739.304134355494);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 885, 44739.30413435545, 4.409896258812852E-11, 0.4866666666666667, 0.0, 44739.304134355494);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 890, 44739.30413435545, 4.409896258812852E-11, 0.4866666666666667, 0.0, 44739.304134355494);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 891, 44634.83622040318, 2.204948129406426E-11, 0.4866666666666667, 0.0, 44634.83622040316);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 895, 44634.83622040318, 2.204948129406426E-11, 0.4866666666666667, 0.0, 44634.83622040316);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 900, 44634.83622040318, 2.204948129406426E-11, 0.4866666666666667, 0.0, 44634.83622040316);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 901, 44602.57719671451, 2.939930839208568E-11, 0.48333333333333334, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 905, 44602.57719671451, 2.939930839208568E-11, 0.48333333333333334, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 910, 44602.57719671451, 2.939930839208568E-11, 0.48333333333333334, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 911, 44602.57719671451, 2.939930839208568E-11, 0.4866666666666667, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 915, 44602.57719671451, 2.939930839208568E-11, 0.4866666666666667, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 920, 44602.57719671451, 2.939930839208568E-11, 0.4866666666666667, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 921, 44602.57719671451, 2.939930839208568E-11, 0.4866666666666667, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 925, 44602.57719671451, 2.939930839208568E-11, 0.4866666666666667, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 930, 44602.57719671451, 2.939930839208568E-11, 0.4866666666666667, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 931, 44602.57719671451, 2.939930839208568E-11, 0.4866666666666667, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 935, 44602.57719671451, 2.939930839208568E-11, 0.4866666666666667, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 940, 44602.57719671451, 2.939930839208568E-11, 0.4866666666666667, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 941, 44602.57719671451, 2.939930839208568E-11, 0.48333333333333334, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 945, 44602.57719671451, 2.939930839208568E-11, 0.48333333333333334, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 950, 44602.57719671451, 2.939930839208568E-11, 0.48333333333333334, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 951, 44602.57719671451, 2.939930839208568E-11, 0.4866666666666667, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 955, 44602.57719671451, 2.939930839208568E-11, 0.4866666666666667, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 960, 44602.57719671451, 2.939930839208568E-11, 0.4866666666666667, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 961, 44602.57719671451, 2.939930839208568E-11, 0.4866666666666667, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 965, 44602.57719671451, 2.939930839208568E-11, 0.4866666666666667, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 970, 44602.57719671451, 2.939930839208568E-11, 0.4866666666666667, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 971, 44602.57719671451, 2.939930839208568E-11, 0.4866666666666667, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 975, 44602.57719671451, 2.939930839208568E-11, 0.4866666666666667, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 980, 44602.57719671451, 2.939930839208568E-11, 0.4866666666666667, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 981, 44602.57719671451, 2.939930839208568E-11, 0.48333333333333334, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 985, 44602.57719671451, 2.939930839208568E-11, 0.48333333333333334, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 990, 44602.57719671451, 2.939930839208568E-11, 0.48333333333333334, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 991, 44602.57719671451, 2.939930839208568E-11, 0.4866666666666667, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 995, 44602.57719671451, 2.939930839208568E-11, 0.4866666666666667, 0.0, 44602.57719671454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 1000, 44602.57719671451, 2.939930839208568E-11, 0.4866666666666667, 0.0, 44602.57719671454);

        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 60, 24, 80, 68, 1, 43, 113, 49, 115, 146, 32, 145, 102, 12, 75, 94, 125, 81, 38, 100, 106, 29, 120, 95, 77, 51, 4, 36, 84, 67, 63, 39, 53, 143, 72, 139, 54, 82, 26, 85, 61, 59, 76, 109, 19, 149, 34, 11, 148, 42, 135, 13, 2, 122, 45, 28, 131, 111, 33, 119, 114, 70, 40, 99, 47, 127, 134, 107, 147, 141, 104, 66, 27, 92, 130, 108, 31, 10, 58, 140, 73, 20, 71, 126, 112, 62, 48, 5, 78, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103, 101, 98, 110, 17, 133, 52, 89, 18, 74, 129, 0, 91, 7, 121, 41, 30, 79, 142, 55, 138, 137, 132, 88, 96, 3, 64, 65, 128, 123, 25, 117, 118, 105, 9, 83, 46, 44, 97, 90, 22, 16, 14, 57, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 145, 32, 12, 75, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 47, 13, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 26, 34, 19, 149, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 16, 14, 10, 58, 140, 73, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 55, 138, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 133, 52, 136, 78, 105, 89, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 126, 46, 130, 92, 27, 104, 141, 129, 0, 66, 147, 107, 57, 139, 134, 84, 115, 146, 99, 70, 40, 127, 135, 122, 42, 114, 119, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 60, 24, 80, 68, 72, 67, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 145, 32, 12, 75, 102, 36, 4, 51, 77, 95, 47, 13, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 26, 34, 85, 149, 61, 59, 76, 109, 22, 90, 108, 31, 44, 16, 14, 10, 58, 140, 73, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 104, 141, 129, 0, 66, 147, 107, 57, 27, 92, 130, 97, 46, 83, 9, 126, 35, 103, 110, 101, 98, 17, 105, 89, 18, 133, 52, 136, 78, 21, 69, 93, 23, 37, 87, 15, 65, 128, 123, 25, 117, 64, 3, 96, 118, 74, 142, 55, 138, 30, 79, 88, 137, 49, 84, 115, 146, 38, 100, 106, 29, 120, 70, 40, 99, 127, 135, 122, 42, 114, 119, 134, 139, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 60, 24, 80, 68, 72, 67, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 4, 51, 77, 95, 100, 120, 29, 106, 131, 111, 28, 45, 2, 122, 42, 127, 135, 13, 99, 70, 40, 47, 36, 146, 115, 49, 38, 134, 139, 33, 82, 54, 148, 11, 26, 34, 85, 149, 61, 59, 109, 76, 44, 22, 90, 97, 46, 108, 31, 10, 14, 16, 126, 35, 103, 110, 101, 98, 23, 37, 136, 78, 105, 89, 18, 133, 52, 15, 87, 93, 21, 69, 65, 128, 123, 25, 117, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 141, 147, 107, 57, 27, 92, 130, 0, 129, 91, 7, 62, 48, 5, 112, 71, 20, 73, 58, 140, 83, 9, 17, 74, 104, 66, 19, 114, 119, 84, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 60, 24, 80, 68, 72, 49, 143, 63, 39, 53, 1, 113, 43, 107, 57, 27, 92, 130, 66, 104, 147, 141, 129, 0, 62, 48, 5, 9, 83, 93, 21, 69, 133, 52, 15, 87, 136, 78, 105, 89, 18, 74, 91, 7, 138, 121, 41, 88, 137, 132, 55, 96, 118, 142, 79, 30, 3, 64, 65, 128, 123, 25, 117, 17, 37, 23, 110, 101, 98, 103, 35, 126, 58, 140, 73, 20, 71, 112, 46, 90, 97, 108, 44, 22, 59, 61, 34, 85, 26, 11, 54, 82, 148, 119, 114, 127, 33, 122, 42, 135, 2, 28, 45, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 75, 32, 12, 145, 102, 94, 125, 81, 115, 84, 67, 139, 134, 47, 13, 70, 40, 99, 19, 149, 109, 76, 10, 14, 16, 31, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 72, 49, 115, 84, 67, 139, 134, 82, 54, 148, 11, 26, 85, 19, 149, 109, 76, 34, 61, 59, 22, 90, 97, 10, 14, 16, 31, 108, 44, 112, 62, 48, 5, 9, 83, 89, 0, 129, 147, 141, 104, 66, 27, 92, 130, 46, 71, 58, 140, 73, 20, 126, 35, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 52, 133, 21, 15, 87, 93, 69, 64, 65, 128, 123, 25, 117, 118, 3, 96, 55, 142, 79, 121, 41, 88, 30, 138, 7, 74, 18, 91, 39, 53, 1, 113, 43, 143, 63, 107, 60, 57, 132, 137, 125, 81, 145, 102, 32, 12, 75, 94, 36, 146, 4, 100, 38, 120, 29, 106, 111, 122, 42, 127, 99, 40, 70, 13, 47, 95, 77, 51, 131, 28, 45, 2, 135, 33, 119, 114, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 72, 49, 115, 84, 67, 106, 120, 29, 100, 38, 95, 77, 51, 102, 145, 12, 75, 32, 94, 125, 81, 146, 4, 36, 47, 13, 28, 45, 2, 135, 122, 42, 127, 99, 40, 70, 131, 111, 33, 119, 114, 11, 26, 85, 19, 149, 109, 76, 61, 59, 22, 90, 97, 108, 44, 31, 46, 0, 129, 92, 27, 104, 141, 147, 41, 121, 79, 30, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 52, 133, 18, 89, 48, 5, 74, 136, 78, 105, 17, 37, 23, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 91, 7, 88, 137, 132, 66, 57, 107, 60, 130, 10, 14, 16, 148, 82, 54, 134, 139, 43, 113, 143, 63, 39, 53, 1, 34, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 146, 4, 36, 94, 125, 81, 12, 75, 32, 145, 102, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 127, 99, 70, 47, 13, 33, 54, 82, 148, 114, 119, 42, 122, 40, 139, 134, 84, 67, 72, 60, 107, 57, 66, 129, 0, 91, 62, 48, 5, 89, 105, 17, 37, 23, 101, 98, 103, 110, 69, 87, 15, 21, 93, 136, 78, 52, 133, 18, 74, 7, 121, 79, 30, 138, 55, 142, 96, 118, 3, 64, 128, 123, 25, 117, 65, 41, 88, 137, 132, 141, 147, 104, 27, 92, 130, 46, 31, 108, 44, 90, 97, 22, 61, 59, 109, 76, 149, 19, 11, 26, 85, 34, 14, 16, 10, 140, 58, 20, 73, 126, 35, 83, 9, 112, 71, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 84, 67, 72, 134, 139, 28, 45, 2, 42, 122, 40, 70, 99, 47, 13, 135, 127, 114, 119, 148, 82, 54, 33, 111, 131, 106, 100, 29, 120, 95, 77, 51, 4, 36, 145, 102, 32, 12, 75, 94, 125, 81, 38, 146, 19, 11, 26, 85, 149, 34, 59, 109, 76, 57, 107, 60, 66, 141, 147, 104, 27, 92, 130, 46, 0, 129, 91, 121, 41, 88, 137, 132, 30, 138, 55, 142, 96, 118, 3, 64, 128, 25, 123, 117, 65, 69, 87, 15, 21, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 35, 126, 140, 58, 73, 20, 71, 9, 83, 112, 89, 48, 5, 62, 18, 133, 52, 74, 7, 79, 90, 97, 22, 10, 14, 16, 31, 108, 44, 61, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 100, 29, 120, 95, 77, 51, 4, 36, 145, 102, 32, 12, 75, 94, 125, 81, 38, 146, 84, 67, 72, 134, 139, 82, 54, 148, 11, 26, 85, 149, 61, 59, 109, 76, 130, 92, 27, 66, 104, 141, 147, 129, 0, 62, 48, 5, 74, 91, 121, 41, 88, 30, 79, 137, 132, 107, 60, 57, 97, 22, 90, 108, 44, 16, 14, 10, 31, 112, 71, 20, 73, 140, 58, 126, 35, 98, 103, 110, 101, 37, 23, 17, 136, 78, 105, 52, 133, 87, 15, 21, 93, 69, 128, 25, 123, 117, 65, 3, 64, 142, 96, 118, 55, 138, 7, 89, 18, 9, 83, 46, 33, 45, 2, 42, 122, 40, 70, 99, 47, 13, 135, 127, 131, 111, 28, 119, 114, 34, 19, 106, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 94, 125, 81, 38, 100, 106, 29, 120, 95, 77, 51, 4, 36, 146, 32, 12, 75, 145, 102, 47, 99, 70, 40, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 97, 22, 90, 108, 31, 10, 14, 16, 44, 20, 73, 140, 58, 126, 35, 37, 23, 17, 136, 78, 105, 52, 133, 87, 15, 21, 93, 69, 128, 25, 123, 117, 3, 64, 65, 18, 89, 48, 5, 74, 96, 118, 55, 142, 79, 30, 138, 7, 41, 121, 88, 137, 132, 104, 66, 141, 147, 0, 62, 83, 9, 71, 110, 101, 103, 98, 112, 46, 130, 92, 27, 129, 91, 60, 57, 107, 67, 72, 84, 134, 139, 114, 119, 122, 42, 127, 135, 13, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 75, 145, 102, 32, 12, 146, 36, 4, 77, 51, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 114, 119, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 33, 82, 54, 148, 11, 26, 85, 149, 61, 59, 109, 76, 97, 90, 108, 31, 44, 22, 46, 89, 48, 5, 62, 0, 129, 91, 7, 41, 121, 30, 79, 88, 137, 132, 104, 66, 141, 147, 107, 57, 27, 92, 130, 112, 71, 20, 73, 140, 58, 126, 35, 37, 23, 17, 136, 78, 105, 52, 133, 87, 15, 21, 93, 69, 128, 25, 123, 117, 3, 64, 65, 18, 74, 96, 118, 142, 138, 55, 9, 83, 110, 101, 103, 98, 16, 14, 10, 34, 19, 139, 134, 84, 67, 72, 60, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 75, 32, 12, 145, 102, 146, 36, 4, 77, 51, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 42, 122, 2, 135, 13, 47, 99, 70, 40, 127, 54, 82, 148, 119, 114, 11, 19, 149, 61, 59, 109, 76, 34, 85, 26, 33, 84, 67, 72, 60, 57, 104, 141, 147, 66, 107, 92, 27, 129, 0, 62, 48, 5, 89, 9, 83, 35, 23, 17, 136, 78, 105, 52, 133, 87, 15, 21, 69, 128, 25, 123, 117, 3, 64, 65, 118, 142, 55, 79, 30, 88, 121, 41, 91, 7, 138, 96, 74, 18, 93, 110, 101, 98, 103, 37, 126, 58, 140, 73, 20, 71, 14, 16, 10, 108, 31, 90, 97, 44, 22, 130, 46, 112, 132, 137, 139, 134, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 102, 145, 32, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 127, 42, 122, 114, 119, 33, 54, 82, 148, 11, 19, 149, 61, 59, 109, 76, 22, 97, 90, 108, 46, 130, 27, 92, 104, 66, 107, 57, 141, 147, 129, 0, 91, 7, 138, 55, 79, 30, 88, 121, 41, 132, 137, 60, 67, 72, 84, 95, 77, 51, 4, 36, 47, 99, 70, 40, 13, 26, 85, 34, 134, 139, 44, 31, 10, 14, 16, 140, 58, 126, 73, 20, 71, 35, 23, 37, 110, 101, 98, 103, 17, 136, 78, 105, 52, 133, 87, 15, 21, 69, 128, 25, 123, 117, 3, 64, 65, 118, 142, 96, 74, 18, 5, 48, 83, 9, 112, 62, 89, 93, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 122, 42, 127, 114, 119, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 19, 22, 90, 108, 31, 97, 44, 16, 14, 10, 20, 73, 58, 140, 126, 71, 83, 9, 46, 130, 27, 92, 57, 107, 66, 104, 141, 147, 137, 132, 138, 55, 79, 30, 88, 121, 41, 7, 74, 96, 118, 142, 3, 64, 65, 128, 25, 123, 117, 93, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 133, 87, 15, 21, 69, 52, 18, 112, 35, 37, 110, 101, 98, 103, 23, 17, 60, 72, 67, 84, 134, 139, 33, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 122, 42, 127, 119, 114, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 109, 76, 97, 44, 16, 14, 10, 20, 73, 58, 140, 126, 35, 37, 103, 110, 101, 98, 23, 17, 136, 78, 105, 89, 48, 5, 62, 0, 129, 104, 141, 147, 66, 57, 107, 60, 67, 84, 134, 139, 33, 19, 22, 90, 108, 31, 46, 112, 71, 9, 83, 52, 93, 15, 87, 21, 69, 128, 25, 123, 117, 3, 64, 65, 96, 118, 142, 55, 79, 30, 88, 121, 41, 138, 74, 18, 133, 7, 91, 132, 137, 92, 27, 130, 72, 146, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 72, 67, 60, 134, 84, 106, 29, 120, 100, 38, 51, 95, 77, 47, 99, 70, 40, 135, 127, 114, 119, 148, 33, 54, 82, 28, 13, 131, 111, 45, 122, 42, 2, 11, 19, 149, 85, 26, 34, 59, 61, 76, 109, 130, 27, 92, 57, 107, 66, 104, 141, 147, 129, 0, 91, 5, 62, 48, 89, 23, 17, 136, 78, 105, 83, 35, 20, 73, 58, 140, 126, 37, 103, 110, 101, 98, 133, 52, 93, 15, 87, 21, 69, 128, 25, 123, 117, 3, 64, 65, 118, 142, 55, 79, 30, 88, 7, 137, 132, 41, 121, 138, 74, 18, 96, 9, 112, 71, 10, 16, 14, 31, 90, 108, 97, 22, 44, 46, 139, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 120, 29, 106, 38, 100, 84, 67, 72, 134, 139, 82, 54, 148, 11, 85, 26, 34, 19, 149, 61, 59, 109, 76, 22, 90, 108, 31, 44, 97, 130, 27, 92, 57, 107, 66, 104, 141, 147, 129, 0, 91, 5, 48, 74, 18, 96, 142, 55, 138, 79, 30, 41, 121, 7, 118, 3, 64, 65, 128, 25, 123, 117, 69, 133, 52, 21, 87, 93, 136, 78, 105, 83, 9, 112, 71, 20, 73, 58, 140, 126, 35, 23, 17, 37, 103, 110, 101, 98, 89, 62, 46, 10, 16, 14, 15, 88, 137, 132, 60, 28, 13, 47, 99, 70, 40, 135, 127, 42, 45, 122, 114, 119, 33, 2, 131, 111, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 120, 29, 100, 38, 106, 111, 131, 28, 45, 2, 135, 127, 42, 13, 47, 99, 70, 40, 122, 114, 119, 34, 85, 26, 149, 61, 59, 76, 109, 108, 31, 44, 97, 22, 90, 16, 14, 10, 71, 20, 73, 58, 140, 126, 35, 23, 17, 37, 101, 98, 110, 103, 136, 78, 105, 83, 9, 89, 62, 5, 48, 74, 18, 55, 138, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 52, 133, 112, 46, 0, 129, 91, 7, 41, 121, 30, 79, 88, 137, 132, 27, 92, 130, 141, 147, 66, 104, 107, 60, 57, 19, 11, 54, 82, 148, 33, 134, 139, 67, 72, 84, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 120, 29, 100, 38, 106, 111, 131, 28, 45, 2, 135, 127, 42, 13, 47, 99, 70, 40, 122, 114, 119, 34, 85, 26, 149, 61, 59, 76, 109, 22, 90, 97, 108, 31, 44, 16, 14, 10, 71, 20, 73, 58, 140, 126, 35, 37, 101, 98, 110, 103, 23, 17, 136, 52, 133, 15, 87, 93, 21, 69, 128, 123, 25, 117, 64, 65, 3, 96, 118, 142, 55, 74, 5, 48, 62, 0, 129, 91, 7, 41, 121, 30, 79, 88, 137, 132, 147, 141, 104, 66, 107, 57, 92, 130, 112, 46, 89, 78, 105, 83, 9, 18, 138, 27, 60, 134, 139, 67, 72, 84, 33, 54, 82, 148, 11, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 127, 42, 13, 47, 99, 70, 40, 119, 114, 122, 54, 82, 33, 148, 11, 19, 26, 85, 149, 61, 59, 76, 109, 22, 90, 97, 108, 31, 44, 16, 14, 10, 73, 58, 140, 126, 35, 37, 101, 98, 110, 103, 23, 17, 136, 78, 105, 83, 9, 89, 133, 52, 21, 15, 87, 93, 69, 128, 123, 25, 117, 64, 65, 3, 96, 118, 142, 55, 138, 91, 7, 41, 121, 30, 79, 88, 137, 132, 147, 141, 104, 66, 107, 57, 139, 134, 84, 67, 72, 60, 92, 27, 130, 46, 112, 62, 0, 129, 5, 48, 74, 18, 20, 71, 34, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 135, 127, 42, 13, 47, 99, 70, 40, 33, 148, 82, 54, 114, 119, 122, 11, 19, 149, 61, 59, 109, 76, 34, 26, 85, 22, 90, 108, 31, 44, 97, 27, 92, 130, 46, 112, 62, 5, 48, 74, 18, 105, 83, 9, 89, 78, 136, 87, 93, 69, 21, 15, 52, 133, 17, 23, 37, 101, 103, 110, 35, 98, 126, 73, 58, 140, 20, 71, 10, 14, 16, 129, 0, 91, 7, 121, 30, 79, 88, 137, 132, 41, 138, 55, 142, 96, 118, 128, 64, 65, 117, 123, 25, 3, 147, 141, 104, 66, 57, 107, 60, 134, 84, 67, 72, 139, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 127, 42, 122, 13, 47, 99, 70, 40, 33, 82, 54, 148, 11, 26, 85, 149, 34, 19, 76, 109, 59, 61, 22, 90, 108, 46, 31, 44, 97, 10, 14, 16, 73, 58, 140, 20, 71, 126, 35, 37, 103, 110, 101, 98, 17, 23, 93, 136, 78, 105, 83, 9, 89, 48, 5, 74, 18, 52, 133, 87, 15, 21, 69, 128, 117, 123, 25, 64, 65, 3, 96, 118, 142, 55, 79, 88, 137, 132, 41, 121, 30, 138, 91, 7, 129, 0, 62, 112, 130, 27, 92, 147, 141, 104, 66, 57, 107, 60, 134, 84, 67, 72, 139, 114, 119, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 33, 19, 61, 59, 109, 76, 149, 34, 85, 26, 148, 82, 54, 139, 134, 67, 72, 60, 107, 57, 104, 141, 66, 92, 27, 130, 46, 108, 31, 44, 16, 14, 10, 73, 58, 140, 20, 71, 126, 35, 37, 103, 110, 101, 98, 17, 23, 93, 21, 69, 128, 65, 3, 64, 25, 123, 117, 79, 30, 138, 91, 7, 129, 0, 62, 48, 5, 112, 9, 83, 78, 105, 136, 52, 133, 87, 15, 89, 74, 18, 55, 142, 118, 96, 88, 137, 132, 41, 121, 147, 97, 90, 22, 122, 42, 127, 119, 114, 84, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 42, 127, 122, 135, 99, 70, 40, 13, 47, 84, 67, 72, 60, 107, 57, 104, 141, 66, 92, 27, 130, 46, 108, 31, 90, 97, 22, 44, 16, 14, 10, 73, 58, 140, 20, 71, 126, 35, 37, 23, 103, 110, 101, 98, 17, 18, 55, 142, 118, 96, 74, 7, 129, 0, 62, 48, 5, 112, 9, 83, 78, 105, 89, 52, 133, 15, 87, 136, 93, 21, 69, 64, 65, 3, 117, 25, 123, 128, 138, 91, 41, 121, 88, 30, 79, 137, 132, 147, 109, 76, 149, 34, 85, 26, 11, 19, 82, 54, 33, 114, 119, 139, 134, 148, 61, 59, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 42, 127, 135, 99, 70, 40, 13, 47, 122, 33, 114, 119, 139, 134, 82, 54, 148, 11, 85, 26, 34, 19, 149, 61, 59, 76, 109, 97, 22, 44, 10, 16, 14, 140, 20, 71, 73, 58, 9, 83, 35, 98, 101, 110, 103, 37, 23, 17, 136, 78, 105, 89, 48, 5, 62, 91, 41, 121, 88, 30, 79, 137, 132, 147, 129, 0, 7, 142, 55, 138, 18, 133, 52, 93, 21, 15, 87, 3, 117, 123, 25, 64, 65, 69, 128, 118, 96, 74, 112, 126, 46, 90, 108, 31, 130, 92, 27, 104, 141, 66, 57, 60, 107, 72, 67, 84, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 42, 127, 135, 99, 70, 40, 13, 47, 33, 54, 82, 148, 11, 85, 26, 34, 149, 61, 59, 76, 109, 19, 119, 114, 122, 134, 139, 84, 67, 72, 57, 107, 60, 92, 27, 104, 141, 66, 147, 137, 132, 121, 41, 30, 79, 88, 55, 74, 3, 64, 65, 69, 15, 87, 21, 93, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 96, 18, 133, 52, 23, 17, 37, 110, 101, 98, 35, 83, 9, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 44, 97, 22, 90, 108, 46, 130, 112, 103, 128, 25, 123, 117, 118, 142, 138, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 33, 54, 82, 148, 11, 85, 26, 34, 149, 61, 59, 109, 76, 97, 22, 90, 108, 31, 44, 16, 14, 10, 73, 58, 140, 126, 35, 83, 9, 105, 89, 48, 5, 62, 0, 129, 91, 7, 74, 96, 18, 133, 52, 93, 21, 15, 87, 136, 78, 17, 37, 23, 101, 98, 103, 110, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 55, 138, 121, 41, 30, 79, 88, 132, 141, 66, 147, 107, 60, 57, 104, 27, 92, 130, 46, 112, 71, 20, 137, 139, 134, 84, 67, 72, 19, 114, 119, 122, 42, 127, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 84, 67, 72, 60, 57, 107, 66, 104, 27, 92, 130, 46, 112, 71, 20, 73, 140, 58, 126, 35, 37, 23, 101, 98, 103, 110, 93, 21, 15, 87, 136, 78, 105, 89, 48, 5, 62, 83, 9, 17, 133, 52, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 55, 138, 121, 41, 79, 30, 88, 132, 141, 147, 129, 0, 91, 7, 137, 96, 74, 18, 10, 14, 16, 31, 44, 90, 108, 97, 22, 59, 61, 85, 26, 19, 11, 76, 109, 149, 34, 148, 119, 114, 122, 42, 127, 54, 82, 33, 139, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 84, 67, 72, 139, 33, 82, 54, 148, 11, 26, 19, 85, 34, 149, 109, 76, 61, 59, 22, 97, 130, 92, 27, 104, 141, 147, 129, 0, 91, 7, 79, 30, 88, 132, 137, 121, 41, 138, 55, 142, 96, 74, 18, 133, 52, 15, 87, 136, 78, 105, 89, 48, 5, 62, 83, 9, 10, 14, 16, 31, 108, 90, 44, 46, 112, 71, 20, 73, 140, 58, 126, 35, 37, 23, 103, 110, 101, 98, 17, 93, 21, 69, 65, 128, 25, 123, 117, 64, 3, 118, 66, 57, 107, 60, 119, 114, 122, 42, 127, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 130, 92, 27, 104, 141, 147, 66, 57, 107, 60, 109, 76, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 37, 23, 103, 110, 101, 98, 17, 93, 21, 15, 87, 136, 78, 105, 89, 48, 5, 62, 83, 9, 71, 112, 46, 0, 129, 91, 7, 121, 41, 138, 55, 96, 118, 142, 79, 30, 88, 132, 137, 3, 64, 65, 128, 123, 25, 117, 69, 52, 133, 18, 74, 72, 67, 84, 33, 114, 119, 122, 42, 127, 19, 139, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 109, 76, 59, 61, 85, 26, 34, 149, 19, 11, 54, 82, 148, 119, 114, 122, 42, 127, 33, 67, 84, 72, 107, 66, 57, 104, 141, 147, 41, 121, 138, 55, 142, 118, 96, 74, 5, 48, 62, 89, 18, 87, 136, 78, 105, 9, 83, 35, 37, 23, 103, 110, 101, 98, 17, 93, 21, 15, 69, 128, 123, 25, 117, 64, 65, 3, 52, 133, 71, 73, 58, 140, 126, 20, 90, 108, 31, 44, 16, 14, 10, 112, 46, 0, 129, 91, 7, 30, 88, 79, 132, 137, 92, 27, 130, 97, 22, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 104, 141, 147, 66, 107, 130, 27, 92, 90, 108, 31, 10, 14, 16, 140, 58, 126, 20, 73, 71, 112, 62, 48, 5, 91, 79, 30, 88, 132, 137, 41, 121, 138, 55, 142, 118, 96, 74, 18, 133, 52, 69, 15, 87, 136, 78, 105, 89, 9, 83, 35, 98, 103, 101, 110, 37, 23, 17, 93, 21, 128, 123, 25, 117, 64, 65, 3, 7, 0, 129, 97, 44, 22, 59, 61, 76, 109, 11, 19, 26, 85, 34, 149, 54, 82, 148, 119, 114, 122, 42, 127, 33, 84, 67, 72, 46, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 129, 0, 91, 74, 18, 133, 52, 136, 78, 105, 89, 48, 5, 62, 112, 71, 126, 58, 140, 73, 20, 10, 14, 16, 31, 108, 90, 97, 22, 76, 109, 149, 85, 34, 26, 19, 11, 82, 54, 148, 114, 119, 122, 42, 127, 33, 84, 67, 72, 27, 92, 130, 44, 46, 9, 83, 35, 98, 103, 101, 110, 37, 23, 17, 93, 21, 15, 87, 69, 128, 25, 123, 117, 64, 65, 3, 118, 96, 142, 55, 138, 79, 30, 88, 121, 41, 132, 137, 7, 59, 61, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 137, 88, 121, 41, 30, 79, 142, 55, 138, 91, 74, 96, 118, 64, 65, 3, 128, 123, 25, 117, 69, 21, 87, 15, 93, 133, 52, 136, 78, 105, 89, 48, 5, 62, 112, 71, 126, 58, 140, 73, 20, 10, 14, 16, 31, 108, 90, 97, 22, 76, 109, 59, 34, 85, 11, 148, 54, 82, 33, 114, 119, 122, 42, 127, 26, 19, 149, 61, 130, 44, 27, 92, 46, 0, 129, 9, 83, 35, 37, 23, 17, 110, 101, 98, 103, 18, 7, 132, 72, 67, 84, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 92, 130, 46, 108, 31, 44, 90, 97, 22, 76, 109, 59, 61, 149, 19, 11, 26, 85, 34, 148, 82, 54, 33, 114, 119, 122, 42, 127, 67, 72, 84, 27, 129, 0, 5, 62, 48, 105, 133, 52, 23, 17, 136, 78, 35, 37, 98, 103, 110, 101, 93, 21, 87, 15, 69, 128, 123, 25, 117, 64, 65, 3, 118, 142, 55, 138, 41, 121, 30, 79, 74, 96, 18, 89, 9, 71, 126, 20, 58, 140, 73, 16, 14, 10, 112, 83, 7, 91, 88, 137, 132, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 96, 118, 142, 55, 138, 30, 79, 7, 129, 0, 5, 62, 48, 105, 78, 136, 87, 15, 21, 93, 69, 64, 65, 3, 52, 133, 18, 89, 9, 83, 35, 126, 20, 73, 140, 58, 112, 71, 31, 44, 90, 97, 22, 76, 109, 59, 61, 149, 19, 11, 26, 85, 34, 148, 54, 82, 33, 122, 42, 127, 114, 119, 67, 72, 84, 27, 92, 130, 46, 108, 16, 14, 10, 37, 23, 110, 101, 98, 103, 17, 128, 123, 25, 117, 121, 41, 88, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 3, 64, 65, 128, 123, 25, 117, 69, 93, 15, 21, 87, 136, 78, 105, 89, 52, 133, 17, 37, 23, 110, 101, 98, 103, 35, 126, 58, 140, 73, 20, 71, 112, 62, 5, 48, 83, 9, 10, 31, 44, 14, 16, 108, 90, 97, 22, 59, 61, 149, 85, 34, 148, 54, 82, 33, 114, 119, 11, 26, 19, 109, 76, 130, 27, 92, 129, 0, 7, 121, 41, 88, 132, 137, 30, 79, 96, 118, 18, 46, 72, 67, 84, 122, 42, 127, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 93, 15, 21, 87, 136, 17, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 112, 62, 5, 48, 83, 9, 89, 52, 133, 78, 105, 18, 96, 7, 121, 41, 30, 79, 88, 137, 132, 129, 0, 46, 130, 92, 27, 90, 97, 22, 108, 31, 44, 16, 14, 10, 109, 76, 59, 149, 85, 34, 61, 11, 26, 19, 54, 82, 148, 119, 114, 42, 127, 33, 122, 84, 67, 72, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 89, 9, 83, 110, 101, 98, 103, 37, 23, 17, 133, 52, 18, 96, 7, 41, 121, 30, 79, 88, 137, 132, 129, 0, 46, 108, 31, 44, 16, 14, 10, 71, 20, 73, 140, 58, 126, 35, 5, 48, 112, 62, 27, 92, 130, 22, 97, 90, 109, 76, 59, 61, 85, 34, 149, 19, 11, 26, 148, 82, 54, 33, 114, 119, 122, 42, 127, 67, 72, 84, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 87, 15, 93, 136, 78, 105, 89, 9, 83, 112, 71, 20, 73, 140, 58, 126, 35, 110, 101, 98, 103, 37, 23, 17, 133, 52, 18, 96, 30, 79, 121, 41, 88, 137, 132, 7, 129, 0, 62, 5, 48, 46, 27, 92, 130, 76, 109, 59, 61, 85, 26, 34, 149, 19, 11, 54, 82, 33, 148, 119, 114, 122, 42, 127, 84, 67, 72, 44, 22, 97, 90, 108, 31, 10, 14, 16, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 15, 21, 87, 93, 136, 78, 105, 89, 48, 5, 62, 0, 129, 92, 27, 130, 22, 97, 59, 61, 85, 26, 34, 149, 109, 76, 11, 19, 54, 82, 148, 114, 119, 122, 42, 127, 33, 84, 67, 72, 88, 137, 132, 41, 121, 79, 30, 7, 96, 18, 52, 133, 23, 17, 37, 101, 98, 103, 110, 35, 58, 140, 73, 20, 71, 126, 9, 83, 10, 14, 16, 44, 108, 31, 90, 112, 46, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 112, 71, 20, 73, 58, 140, 126, 35, 37, 101, 98, 103, 110, 23, 17, 52, 133, 18, 96, 79, 30, 7, 129, 0, 62, 46, 130, 92, 27, 76, 109, 61, 59, 22, 97, 90, 108, 31, 44, 16, 14, 10, 83, 9, 121, 41, 88, 137, 132, 72, 84, 67, 54, 82, 148, 114, 119, 122, 42, 127, 33, 19, 149, 85, 26, 34, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 93, 136, 78, 105, 17, 37, 101, 98, 103, 23, 110, 35, 83, 9, 112, 71, 20, 73, 58, 140, 126, 16, 14, 10, 31, 44, 22, 97, 90, 108, 46, 0, 62, 48, 5, 89, 18, 96, 79, 30, 88, 41, 121, 7, 129, 27, 92, 130, 59, 61, 109, 76, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 67, 72, 84, 137, 132, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 105, 89, 48, 5, 62, 0, 129, 108, 46, 90, 97, 22, 44, 31, 10, 14, 16, 58, 140, 20, 73, 126, 35, 83, 9, 112, 71, 23, 37, 103, 101, 98, 110, 17, 136, 93, 18, 96, 121, 79, 30, 88, 41, 7, 137, 132, 27, 92, 130, 76, 109, 59, 61, 85, 26, 34, 149, 19, 11, 54, 82, 148, 119, 114, 122, 42, 127, 33, 84, 67, 72, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 18, 96, 7, 41, 121, 79, 30, 88, 137, 132, 27, 92, 130, 44, 31, 10, 14, 16, 140, 20, 73, 58, 126, 35, 83, 9, 112, 71, 37, 103, 110, 101, 98, 17, 23, 105, 89, 48, 5, 62, 0, 129, 108, 46, 90, 97, 22, 61, 85, 26, 34, 149, 19, 11, 148, 54, 82, 33, 84, 67, 72, 119, 114, 122, 42, 127, 59, 76, 109, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 18, 96, 7, 41, 121, 79, 30, 88, 137, 132, 27, 92, 130, 44, 31, 10, 14, 16, 140, 20, 73, 58, 126, 35, 103, 110, 101, 98, 17, 23, 37, 83, 9, 112, 71, 105, 89, 48, 5, 62, 0, 129, 46, 90, 97, 22, 108, 109, 76, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 33, 54, 114, 119, 122, 42, 127, 67, 72, 84, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 17, 23, 37, 103, 110, 101, 98, 35, 126, 10, 14, 16, 108, 31, 90, 97, 22, 44, 27, 92, 130, 46, 0, 129, 121, 41, 30, 79, 88, 137, 132, 7, 96, 18, 89, 105, 83, 9, 62, 48, 5, 112, 71, 20, 73, 58, 140, 59, 149, 19, 11, 148, 82, 54, 34, 85, 26, 119, 114, 122, 42, 127, 33, 84, 67, 72, 76, 109, 61, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 17, 18, 96, 121, 41, 79, 30, 88, 137, 132, 7, 129, 0, 92, 27, 130, 46, 90, 108, 31, 10, 14, 16, 58, 140, 73, 20, 71, 37, 103, 110, 101, 98, 35, 126, 9, 89, 105, 83, 112, 5, 48, 62, 97, 22, 44, 76, 109, 59, 61, 85, 26, 34, 19, 11, 82, 54, 33, 148, 114, 119, 122, 42, 127, 84, 67, 72, 149, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 17, 105, 89, 48, 5, 62, 0, 129, 92, 27, 130, 108, 44, 22, 97, 90, 10, 14, 16, 31, 46, 112, 18, 96, 7, 41, 121, 30, 79, 137, 132, 88, 72, 84, 67, 82, 54, 148, 114, 119, 122, 42, 127, 33, 11, 26, 34, 149, 19, 85, 61, 59, 76, 109, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 83, 9, 48, 5, 62, 0, 129, 27, 92, 130, 108, 44, 97, 22, 90, 10, 14, 16, 31, 46, 89, 105, 17, 112, 18, 96, 7, 41, 121, 30, 79, 88, 137, 132, 59, 76, 109, 61, 19, 11, 26, 85, 34, 149, 114, 119, 122, 42, 127, 33, 54, 82, 148, 84, 67, 72, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 18, 96, 7, 41, 121, 30, 79, 88, 137, 132, 129, 0, 62, 5, 48, 9, 83, 89, 112, 71, 20, 73, 58, 140, 126, 10, 14, 16, 44, 97, 22, 90, 108, 46, 31, 130, 27, 92, 109, 76, 59, 61, 85, 26, 148, 82, 54, 119, 114, 122, 42, 127, 33, 11, 19, 149, 34, 67, 72, 84, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 112, 71, 20, 73, 140, 58, 126, 16, 14, 10, 31, 108, 46, 130, 27, 92, 129, 0, 62, 48, 5, 18, 96, 41, 88, 137, 132, 30, 79, 121, 7, 9, 83, 44, 22, 97, 90, 109, 76, 59, 61, 85, 26, 148, 82, 54, 33, 122, 42, 127, 114, 119, 11, 19, 149, 34, 84, 67, 72, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 92, 27, 130, 31, 108, 46, 112, 71, 20, 73, 58, 140, 126, 9, 83, 10, 14, 16, 44, 97, 90, 61, 149, 85, 26, 34, 19, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 84, 67, 72, 88, 30, 79, 121, 41, 132, 137, 7, 96, 18, 22, 109, 76, 59, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 92, 27, 130, 90, 97, 22, 44, 31, 108, 46, 10, 14, 16, 73, 20, 71, 112, 140, 58, 126, 83, 9, 18, 7, 96, 79, 121, 41, 30, 137, 132, 88, 72, 67, 84, 33, 82, 54, 148, 11, 26, 34, 85, 149, 61, 59, 76, 109, 19, 119, 114, 42, 127, 122, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 92, 27, 130, 90, 97, 22, 44, 108, 46, 112, 71, 126, 20, 73, 140, 58, 16, 14, 10, 31, 76, 109, 59, 61, 34, 85, 149, 19, 11, 26, 148, 82, 54, 42, 127, 122, 114, 119, 33, 67, 84, 72, 137, 132, 88, 41, 30, 79, 121, 7, 96, 18, 83, 9, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 30, 79, 121, 41, 88, 132, 137, 96, 18, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 108, 97, 22, 44, 90, 46, 130, 27, 92, 109, 76, 59, 61, 34, 85, 149, 19, 11, 26, 148, 82, 54, 33, 114, 119, 122, 127, 42, 67, 72, 84, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 132, 137, 30, 79, 121, 41, 18, 96, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 108, 44, 90, 97, 22, 59, 61, 149, 85, 34, 19, 11, 26, 148, 54, 82, 33, 114, 119, 122, 42, 127, 84, 67, 72, 27, 92, 130, 46, 109, 76, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 79, 30, 137, 132, 27, 92, 130, 90, 97, 22, 108, 44, 31, 46, 109, 76, 19, 11, 148, 82, 54, 114, 119, 122, 42, 127, 33, 84, 67, 72, 26, 85, 34, 149, 61, 59, 16, 14, 10, 73, 58, 140, 20, 126, 71, 112, 83, 9, 18, 96, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 132, 137, 92, 27, 130, 46, 97, 90, 108, 44, 22, 31, 73, 58, 140, 126, 10, 14, 16, 20, 71, 112, 9, 83, 18, 96, 109, 76, 59, 61, 19, 26, 119, 114, 42, 127, 122, 82, 54, 148, 11, 85, 34, 149, 72, 67, 84, 33, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 83, 112, 9, 71, 73, 140, 58, 126, 20, 14, 16, 10, 31, 44, 22, 97, 90, 108, 46, 130, 27, 92, 132, 137, 72, 67, 84, 82, 54, 33, 148, 114, 119, 122, 42, 127, 11, 19, 26, 85, 34, 149, 61, 59, 109, 76, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 20, 73, 140, 58, 126, 14, 16, 10, 31, 44, 22, 97, 90, 108, 46, 130, 27, 92, 76, 109, 59, 61, 149, 26, 85, 34, 19, 11, 148, 54, 82, 114, 119, 122, 42, 127, 33, 84, 67, 72, 71, 112, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 20, 73, 140, 58, 126, 71, 112, 46, 130, 27, 92, 31, 44, 97, 22, 90, 108, 10, 14, 16, 109, 76, 59, 61, 149, 26, 85, 34, 119, 114, 54, 82, 148, 33, 19, 11, 122, 42, 127, 67, 72, 84, 137, 132, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 73, 58, 140, 126, 20, 16, 14, 10, 31, 90, 97, 22, 44, 108, 46, 112, 27, 92, 130, 59, 61, 149, 19, 11, 148, 82, 54, 34, 85, 26, 119, 114, 122, 42, 127, 33, 84, 67, 72, 132, 137, 109, 76, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 14, 16, 10, 31, 90, 97, 22, 44, 108, 46, 112, 126, 109, 76, 149, 85, 26, 34, 11, 54, 82, 148, 119, 114, 122, 42, 127, 33, 84, 67, 72, 132, 137, 27, 92, 130, 61, 59, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 10, 31, 90, 97, 22, 44, 108, 46, 130, 27, 92, 76, 109, 59, 61, 85, 26, 34, 149, 19, 11, 148, 54, 82, 119, 114, 122, 42, 127, 33, 84, 67, 72, 14, 16, 112, 126, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 10, 31, 108, 46, 92, 130, 90, 97, 22, 76, 109, 59, 61, 85, 26, 34, 149, 19, 11, 148, 54, 82, 119, 114, 122, 42, 127, 33, 84, 67, 72, 27, 137, 132, 112, 126, 14, 16, 44, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 108, 44, 22, 97, 90, 46, 112, 27, 92, 130, 59, 61, 85, 26, 34, 149, 19, 11, 148, 119, 114, 54, 82, 33, 84, 67, 72, 137, 132, 109, 76, 122, 42, 127, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 44, 22, 97, 61, 85, 26, 34, 149, 19, 11, 148, 119, 114, 122, 42, 127, 33, 54, 82, 84, 67, 72, 137, 132, 130, 27, 92, 46, 112, 59, 109, 76, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 97, 22, 59, 61, 85, 26, 34, 149, 109, 76, 19, 11, 148, 82, 54, 33, 119, 114, 42, 127, 122, 84, 67, 72, 27, 92, 130, 44, 46, 112, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 109, 76, 61, 59, 22, 44, 97, 130, 92, 27, 137, 132, 112, 85, 26, 34, 149, 19, 11, 148, 82, 54, 114, 119, 122, 42, 127, 33, 84, 67, 72, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 27, 92, 130, 44, 97, 22, 76, 109, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 67, 72, 84, 137, 132, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 109, 76, 59, 61, 85, 26, 34, 149, 19, 11, 54, 82, 148, 119, 114, 122, 42, 127, 33, 84, 67, 72, 137, 132, 130, 27, 92, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 149, 85, 26, 34, 19, 11, 148, 82, 54, 114, 119, 122, 42, 127, 33, 84, 67, 72, 137, 132, 27, 92, 130, 76, 109, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 149, 19, 11, 148, 82, 54, 114, 119, 122, 42, 127, 33, 84, 67, 72, 137, 132, 27, 92, 130, 109, 76, 85, 26, 34, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 119, 114, 122, 42, 127, 33, 84, 67, 72, 137, 132, 130, 27, 92, 109, 76, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 11, 54, 82, 148, 114, 119, 122, 42, 127, 33, 84, 67, 72, 137, 132, 130, 27, 92, 109, 76, 149, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 109, 76, 19, 54, 148, 114, 119, 122, 42, 127, 33, 82, 11, 92, 27, 130, 132, 137, 72, 67, 84, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 114, 119, 122, 42, 127, 33, 84, 67, 72, 27, 92, 130, 109, 76, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 42, 122, 127, 33, 114, 119, 76, 109, 130, 27, 92, 137, 132, 72, 67, 84, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 109, 76, 130, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 132, 137, 109, 76, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 109, 76, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 109, 76, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");

        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[56, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 24, 80, 68, 39, 53, 1, 113, 143, 63, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 13, 47, 134, 139, 60, 57, 107, 66, 104, 141, 147, 91, 74, 55, 138, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 136, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 48, 5, 62, 0, 129, 7, 88, 121, 41, 30, 79, 96, 18, 9, 83, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 112, 44, 22, 97, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 33, 114, 119, 122, 42, 127, 84, 67, 72, 92, 27, 130, 76, 109, 132, 137, 56]");

    }

    @Test
    public void test_mmas_cycle_moving_adtsp_freq_100_mag_0_5_kroA150() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA150));
        MMAS_CMADTSP mmas_cmadtsp = new MMAS_CMADTSP(graph, 0.8, 1000, 0.5, 100, 4);
        mmas_cmadtsp.setMmasSeed(1);
        mmas_cmadtsp.setDbgpSeed(1);
        mmas_cmadtsp.setStatisticInterval(1);
        mmas_cmadtsp.setShowLog(false);
        mmas_cmadtsp.run();
        assertThat(mmas_cmadtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(36951.02818502805);
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getGlobalStatistics())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");

        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 1, 48631.26584637324, 3256.9421086281377, 0.0, 85.8269387755102, 43037.34303154829);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 50, 37056.866958756254, 2076.5245484553766, 0.49666666666666665, 7.652244897959184, 35458.79232161565);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 100, 35808.82110073387, 1928.5694461193432, 0.49666666666666665, 4.062857142857143, 34699.50107651403);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 101, 35649.04657080741, 1840.7933823653595, 0.49666666666666665, 3.59265306122449, 34699.50107651403);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 150, 35692.94318631791, 2098.8688956060723, 0.49666666666666665, 5.254693877551021, 34637.77649728906);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 200, 35520.830307915516, 2096.6757479640332, 0.49666666666666665, 3.0146938775510206, 34538.4141219932);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 201, 44367.449499970004, 1843.2900912630605, 0.47333333333333333, 32.39591836734694, 41231.278785416784);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 250, 37634.634936404254, 2615.090327530059, 0.49666666666666665, 3.947755102040816, 36010.27725568691);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 300, 37616.02189456596, 2852.8464383183464, 0.49666666666666665, 3.973061224489796, 35675.72398170143);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 301, 46362.45804641948, 2364.3486453901996, 0.48333333333333334, 33.674285714285716, 42719.69122303965);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 350, 38271.977873471864, 2414.644162838592, 0.49666666666666665, 8.454693877551021, 36397.882004494364);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 400, 38077.91646762842, 2037.8421831331918, 0.49666666666666665, 9.47265306122449, 36328.88082191335);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 401, 45329.95136251248, 2409.2303779779027, 0.47333333333333333, 35.11020408163265, 40697.307487364495);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 450, 38418.42720503693, 2338.8566031902565, 0.5033333333333333, 4.026122448979592, 36578.82091165334);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 500, 38489.97758035422, 2327.1870648157196, 0.49666666666666665, 5.086530612244898, 36578.82091165334);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 501, 43185.2685223584, 2665.85839519364, 0.4866666666666667, 17.47591836734694, 38091.98387214944);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 550, 37860.89580736703, 2219.3726689445, 0.5, 1.9689795918367348, 36850.32615704773);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 600, 37660.94979518961, 1924.1268329935863, 0.5, 1.6424489795918367, 36801.443334809344);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 601, 43683.920806762486, 3223.70033679458, 0.49, 11.09142857142857, 37627.57465890152);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 650, 36950.39018337115, 1548.977194980089, 0.49666666666666665, 0.6261224489795918, 36504.75141479246);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 700, 36667.8225159574, 659.6514323482664, 0.49666666666666665, 0.5159183673469387, 36504.75141479246);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 701, 41389.633013658604, 1195.7015511615648, 0.48, 8.458775510204081, 39396.84389255563);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 750, 37851.28134507945, 1266.7809108960817, 0.49666666666666665, 1.1714285714285715, 37461.24721323708);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 800, 37647.5174278897, 809.4064782840384, 0.49333333333333335, 0.5183673469387755, 37461.24721323708);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 801, 38164.70932975175, 908.8157151293403, 0.49666666666666665, 0.8146938775510204, 37340.02532733858);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 850, 37340.0253273386, 1.469965419604284E-11, 0.49666666666666665, 0.0, 37340.02532733858);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 900, 37340.0253273386, 1.469965419604284E-11, 0.49666666666666665, 0.0, 37340.02532733858);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 901, 36951.028185028066, 1.469965419604284E-11, 0.5, 0.0, 36951.02818502805);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 950, 36951.028185028066, 1.469965419604284E-11, 0.5, 0.0, 36951.02818502805);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 1000, 36951.028185028066, 1.469965419604284E-11, 0.5, 0.0, 36951.02818502805);

        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 60, 24, 80, 68, 1, 43, 113, 49, 115, 146, 32, 145, 102, 12, 75, 94, 125, 81, 38, 100, 106, 29, 120, 95, 77, 51, 4, 36, 84, 67, 63, 39, 53, 143, 72, 139, 54, 82, 26, 85, 61, 59, 76, 109, 19, 149, 34, 11, 148, 42, 135, 13, 2, 122, 45, 28, 131, 111, 33, 119, 114, 70, 40, 99, 47, 127, 134, 107, 147, 141, 104, 66, 27, 92, 130, 108, 31, 10, 58, 140, 73, 20, 71, 126, 112, 62, 48, 5, 78, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103, 101, 98, 110, 17, 133, 52, 89, 18, 74, 129, 0, 91, 7, 121, 41, 30, 79, 142, 55, 138, 137, 132, 88, 96, 3, 64, 65, 128, 123, 25, 117, 118, 105, 9, 83, 46, 44, 97, 90, 22, 16, 14, 57, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 145, 32, 12, 75, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 47, 13, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 26, 34, 19, 149, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 16, 14, 10, 58, 140, 73, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 55, 138, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 133, 52, 136, 78, 105, 89, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 126, 46, 130, 92, 27, 104, 141, 129, 0, 66, 147, 107, 57, 139, 134, 84, 115, 146, 99, 70, 40, 127, 135, 122, 42, 114, 119, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 145, 32, 12, 75, 102, 36, 4, 51, 77, 95, 47, 13, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 26, 34, 19, 149, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 16, 14, 10, 58, 140, 73, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 55, 138, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 133, 52, 136, 78, 105, 89, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 126, 46, 130, 92, 27, 104, 141, 129, 0, 66, 147, 107, 57, 139, 134, 84, 115, 146, 38, 100, 106, 29, 120, 99, 70, 40, 127, 135, 122, 42, 114, 119, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 145, 32, 12, 75, 102, 36, 4, 51, 77, 95, 47, 13, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 26, 34, 19, 149, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 16, 14, 10, 73, 58, 140, 126, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 55, 138, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 133, 52, 136, 78, 105, 89, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 46, 130, 92, 27, 104, 141, 129, 0, 66, 147, 107, 57, 139, 134, 84, 115, 146, 38, 100, 106, 29, 120, 99, 70, 40, 127, 135, 122, 42, 114, 119, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 145, 32, 12, 75, 102, 36, 4, 51, 77, 95, 47, 13, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 26, 34, 19, 149, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 16, 14, 10, 73, 58, 140, 126, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 55, 138, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 133, 52, 136, 78, 105, 89, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 46, 130, 92, 27, 104, 141, 129, 0, 66, 147, 107, 57, 139, 134, 84, 115, 146, 38, 100, 106, 29, 120, 99, 70, 40, 127, 135, 122, 42, 114, 119, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 26, 34, 19, 149, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 16, 14, 10, 73, 58, 140, 126, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 55, 138, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 133, 52, 136, 78, 105, 89, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 46, 0, 129, 104, 141, 147, 66, 57, 92, 130, 27, 107, 139, 134, 84, 115, 146, 38, 100, 106, 29, 120, 99, 70, 40, 127, 135, 122, 42, 114, 119, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 26, 34, 19, 149, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 58, 140, 126, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 46, 0, 129, 104, 141, 147, 66, 57, 92, 130, 27, 107, 139, 134, 84, 115, 146, 38, 100, 106, 29, 120, 99, 70, 40, 127, 135, 122, 42, 114, 119, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 26, 34, 19, 149, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 58, 140, 126, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 46, 0, 129, 27, 92, 130, 104, 141, 147, 66, 57, 107, 139, 134, 84, 115, 146, 38, 100, 106, 29, 120, 99, 70, 40, 127, 135, 122, 42, 114, 119, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 26, 34, 19, 149, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 58, 140, 126, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 46, 0, 129, 27, 92, 130, 104, 141, 147, 66, 57, 107, 139, 134, 84, 115, 146, 38, 100, 106, 29, 120, 99, 70, 40, 127, 135, 122, 42, 114, 119, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 26, 34, 19, 149, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 58, 140, 126, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 46, 0, 129, 27, 92, 130, 104, 141, 147, 66, 57, 107, 139, 134, 84, 115, 146, 38, 100, 106, 29, 120, 99, 70, 40, 127, 135, 122, 42, 114, 119, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 26, 34, 19, 149, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 58, 140, 126, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 46, 0, 129, 130, 92, 27, 104, 141, 147, 66, 57, 107, 139, 134, 84, 115, 146, 38, 100, 106, 29, 120, 99, 70, 40, 127, 135, 122, 42, 114, 119, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 26, 34, 19, 149, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 58, 140, 126, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 46, 0, 129, 130, 92, 27, 104, 141, 147, 66, 57, 107, 139, 134, 84, 115, 146, 38, 100, 106, 29, 120, 99, 70, 40, 127, 135, 122, 42, 114, 119, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 26, 34, 19, 149, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 58, 140, 126, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 46, 0, 129, 130, 92, 27, 104, 141, 147, 66, 57, 107, 139, 134, 84, 115, 146, 38, 100, 106, 29, 120, 99, 70, 40, 127, 135, 122, 42, 114, 119, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 26, 34, 19, 149, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 58, 140, 126, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 46, 0, 129, 130, 92, 27, 104, 141, 147, 66, 57, 107, 139, 134, 84, 115, 146, 38, 100, 106, 29, 120, 99, 70, 40, 127, 135, 122, 42, 114, 119, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 26, 34, 19, 149, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 58, 140, 126, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 46, 0, 129, 130, 92, 27, 104, 141, 147, 66, 57, 107, 139, 134, 84, 115, 146, 38, 100, 106, 29, 120, 99, 70, 40, 127, 135, 122, 42, 114, 119, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 2, 45, 28, 131, 111, 33, 82, 54, 148, 26, 34, 19, 149, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 58, 140, 126, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 46, 0, 129, 130, 92, 27, 104, 141, 147, 66, 57, 107, 139, 134, 84, 115, 146, 38, 100, 106, 29, 120, 99, 70, 40, 127, 135, 122, 42, 114, 119, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 2, 45, 28, 131, 111, 33, 82, 54, 148, 26, 34, 19, 149, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 58, 140, 126, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 46, 0, 129, 130, 92, 27, 104, 141, 147, 66, 57, 107, 139, 134, 84, 115, 146, 38, 100, 106, 29, 120, 99, 70, 40, 127, 135, 122, 42, 114, 119, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 2, 45, 28, 131, 111, 33, 82, 54, 148, 26, 34, 19, 149, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 58, 140, 126, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 46, 0, 129, 130, 92, 27, 104, 141, 147, 66, 57, 107, 139, 134, 84, 115, 146, 38, 100, 106, 29, 120, 99, 70, 40, 127, 42, 135, 122, 114, 119, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 2, 45, 28, 131, 111, 33, 82, 54, 148, 26, 34, 19, 149, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 58, 140, 126, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 46, 0, 129, 130, 92, 27, 104, 141, 147, 66, 57, 107, 139, 134, 84, 115, 146, 38, 100, 106, 29, 120, 99, 70, 40, 127, 42, 135, 122, 114, 119, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 2, 45, 28, 131, 111, 33, 82, 54, 148, 26, 34, 19, 149, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 58, 140, 126, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 46, 0, 129, 130, 92, 27, 104, 141, 147, 66, 57, 107, 139, 134, 84, 115, 146, 38, 100, 106, 29, 120, 99, 70, 40, 127, 42, 135, 122, 114, 119, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 85, 26, 34, 149, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 16, 14, 10, 73, 58, 140, 126, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 17, 23, 37, 35, 103, 110, 101, 98, 83, 9, 46, 0, 129, 130, 92, 27, 104, 141, 147, 66, 57, 107, 137, 30, 79, 88, 132, 139, 134, 84, 115, 146, 38, 100, 106, 29, 120, 122, 114, 119, 42, 135, 127, 99, 70, 40, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 135, 127, 2, 45, 28, 131, 111, 120, 29, 100, 106, 38, 146, 115, 84, 134, 139, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 109, 76, 90, 97, 22, 108, 31, 44, 16, 14, 10, 73, 58, 140, 126, 20, 71, 112, 89, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 46, 130, 92, 27, 104, 141, 147, 66, 57, 107, 137, 30, 79, 88, 132, 7, 41, 121, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 62, 48, 5, 91, 129, 0, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 135, 127, 2, 45, 28, 131, 111, 120, 29, 100, 106, 38, 146, 115, 84, 134, 139, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 109, 76, 90, 97, 22, 108, 31, 44, 16, 14, 10, 73, 58, 140, 126, 20, 71, 112, 89, 91, 129, 0, 27, 92, 104, 141, 147, 66, 57, 107, 137, 30, 79, 88, 132, 7, 41, 121, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 48, 5, 62, 46, 130, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 100, 106, 38, 146, 115, 84, 134, 139, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 109, 76, 90, 97, 22, 108, 31, 44, 16, 14, 10, 73, 58, 140, 126, 20, 71, 112, 89, 48, 5, 62, 91, 129, 0, 27, 92, 104, 141, 147, 66, 57, 107, 137, 30, 79, 88, 132, 7, 41, 121, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 46, 130, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 100, 106, 38, 146, 115, 84, 134, 139, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 109, 76, 90, 97, 22, 108, 31, 44, 16, 14, 10, 73, 58, 140, 126, 20, 71, 112, 89, 48, 5, 62, 91, 129, 0, 27, 92, 104, 141, 147, 66, 57, 107, 137, 30, 79, 88, 132, 121, 41, 7, 138, 55, 96, 3, 64, 65, 128, 123, 25, 117, 118, 142, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 46, 130, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 100, 106, 38, 146, 115, 84, 134, 139, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 109, 76, 90, 97, 22, 108, 31, 44, 16, 14, 10, 73, 58, 140, 126, 20, 71, 112, 89, 48, 5, 62, 91, 129, 0, 27, 92, 104, 141, 147, 66, 57, 107, 137, 41, 121, 30, 79, 88, 132, 7, 138, 55, 96, 3, 25, 123, 117, 64, 65, 128, 118, 142, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 46, 130, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 100, 106, 38, 146, 115, 84, 134, 139, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 109, 76, 90, 97, 22, 108, 31, 44, 16, 14, 10, 73, 58, 140, 126, 20, 71, 112, 46, 130, 92, 27, 104, 141, 147, 66, 57, 107, 137, 41, 121, 30, 79, 88, 132, 7, 138, 55, 96, 3, 25, 123, 117, 64, 65, 128, 118, 142, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 89, 48, 5, 62, 91, 129, 0, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 100, 106, 38, 146, 115, 84, 134, 139, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 109, 76, 90, 97, 22, 108, 31, 44, 16, 14, 10, 73, 58, 140, 126, 20, 71, 112, 46, 130, 92, 27, 104, 141, 147, 66, 57, 107, 137, 41, 121, 30, 79, 88, 132, 7, 138, 55, 96, 3, 25, 123, 117, 64, 65, 128, 118, 142, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 89, 48, 5, 62, 91, 129, 0, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 100, 106, 38, 146, 115, 84, 134, 139, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 109, 76, 90, 97, 22, 108, 31, 44, 16, 14, 10, 73, 58, 140, 126, 20, 71, 112, 46, 130, 92, 27, 104, 141, 147, 66, 57, 107, 137, 41, 121, 30, 79, 88, 132, 7, 138, 55, 96, 3, 25, 123, 117, 64, 65, 128, 118, 142, 74, 18, 52, 133, 21, 69, 87, 15, 93, 136, 78, 105, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 89, 48, 5, 62, 91, 129, 0, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 100, 106, 38, 146, 115, 84, 134, 139, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 109, 76, 90, 97, 22, 108, 31, 44, 16, 14, 10, 73, 58, 140, 126, 20, 71, 112, 46, 130, 92, 27, 104, 141, 147, 66, 57, 107, 137, 41, 121, 30, 79, 88, 132, 7, 138, 55, 96, 3, 25, 123, 117, 64, 65, 128, 118, 142, 74, 18, 52, 133, 21, 69, 87, 15, 93, 136, 78, 105, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 89, 48, 5, 62, 91, 129, 0, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 82, 54, 148, 19, 149, 61, 59, 109, 76, 97, 22, 108, 31, 44, 16, 14, 10, 73, 58, 140, 126, 20, 71, 35, 83, 9, 112, 46, 62, 91, 129, 0, 5, 48, 105, 17, 136, 78, 52, 133, 21, 69, 87, 15, 93, 103, 110, 101, 98, 23, 37, 18, 74, 138, 55, 142, 96, 3, 65, 128, 25, 123, 117, 64, 118, 89, 7, 41, 121, 30, 79, 88, 132, 104, 141, 147, 66, 57, 107, 137, 92, 27, 130, 90, 34, 85, 26, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 148, 82, 54, 19, 149, 85, 26, 34, 61, 59, 109, 76, 97, 22, 108, 44, 16, 14, 10, 71, 20, 73, 140, 58, 126, 37, 103, 110, 101, 98, 23, 89, 48, 5, 62, 91, 129, 0, 27, 92, 130, 90, 31, 46, 112, 9, 83, 35, 17, 136, 78, 105, 52, 133, 21, 69, 87, 15, 93, 3, 65, 128, 25, 123, 117, 64, 118, 142, 96, 18, 74, 138, 55, 30, 79, 41, 121, 88, 7, 104, 141, 147, 66, 57, 107, 137, 132, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 148, 82, 54, 19, 149, 85, 26, 34, 61, 76, 109, 59, 97, 22, 108, 44, 14, 16, 10, 71, 20, 73, 140, 58, 126, 35, 37, 103, 110, 101, 98, 23, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 96, 18, 74, 138, 55, 30, 79, 41, 121, 88, 7, 91, 129, 0, 27, 92, 130, 90, 31, 46, 112, 9, 83, 17, 136, 78, 105, 52, 133, 89, 48, 5, 62, 141, 66, 107, 137, 132, 104, 147, 57, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 148, 82, 54, 19, 149, 85, 26, 34, 61, 76, 109, 59, 97, 22, 108, 44, 14, 16, 10, 71, 20, 73, 140, 58, 126, 35, 37, 103, 110, 101, 98, 23, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 96, 18, 74, 138, 55, 30, 79, 41, 121, 88, 7, 91, 129, 0, 27, 92, 130, 90, 31, 46, 112, 9, 83, 17, 136, 78, 105, 52, 133, 89, 48, 5, 62, 141, 66, 107, 137, 132, 104, 147, 57, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 61, 76, 109, 59, 97, 22, 108, 44, 14, 16, 10, 71, 20, 73, 140, 58, 126, 35, 37, 103, 110, 101, 98, 23, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 96, 18, 74, 138, 55, 30, 79, 41, 121, 88, 7, 91, 129, 0, 27, 92, 130, 90, 31, 46, 112, 9, 83, 17, 136, 78, 105, 52, 133, 89, 48, 5, 62, 141, 66, 107, 137, 132, 104, 147, 57, 11, 19, 149, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 61, 76, 109, 59, 97, 22, 108, 44, 14, 16, 10, 71, 20, 73, 140, 58, 126, 35, 37, 103, 110, 101, 98, 23, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 96, 18, 74, 138, 55, 30, 79, 41, 121, 88, 7, 91, 129, 0, 27, 92, 130, 90, 31, 46, 112, 9, 83, 17, 136, 78, 105, 52, 133, 89, 48, 5, 62, 141, 66, 107, 137, 132, 104, 147, 57, 11, 19, 149, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 61, 76, 109, 59, 97, 22, 108, 44, 14, 16, 10, 71, 20, 73, 140, 58, 126, 35, 37, 103, 110, 101, 98, 23, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 96, 18, 74, 138, 55, 30, 79, 41, 121, 88, 7, 91, 129, 0, 27, 92, 130, 90, 31, 46, 112, 9, 83, 17, 136, 78, 105, 52, 133, 89, 48, 5, 62, 141, 66, 107, 137, 132, 104, 147, 57, 11, 19, 149, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 61, 76, 109, 59, 97, 22, 108, 44, 14, 16, 10, 71, 20, 73, 140, 58, 126, 35, 37, 103, 110, 101, 98, 23, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 96, 18, 74, 138, 55, 30, 79, 41, 121, 88, 7, 91, 129, 0, 27, 92, 130, 90, 31, 46, 112, 9, 83, 17, 136, 78, 105, 52, 133, 89, 48, 5, 62, 141, 66, 107, 137, 132, 104, 147, 57, 11, 19, 149, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 61, 76, 109, 59, 97, 22, 44, 14, 16, 10, 71, 20, 73, 140, 58, 126, 35, 37, 103, 110, 101, 98, 23, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 96, 18, 74, 138, 55, 30, 79, 41, 121, 88, 7, 91, 129, 0, 27, 92, 130, 90, 108, 31, 46, 112, 9, 83, 17, 136, 78, 105, 52, 133, 89, 48, 5, 62, 141, 66, 107, 137, 132, 104, 147, 57, 11, 19, 149, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 61, 76, 109, 59, 97, 22, 44, 14, 16, 10, 71, 20, 73, 140, 58, 126, 35, 37, 103, 110, 101, 98, 23, 87, 15, 93, 21, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 96, 18, 74, 138, 55, 30, 79, 41, 121, 88, 7, 91, 129, 0, 27, 92, 130, 90, 108, 31, 46, 112, 9, 83, 17, 136, 78, 105, 52, 133, 89, 48, 5, 62, 141, 66, 107, 137, 132, 104, 147, 57, 11, 19, 149, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 76, 109, 59, 97, 22, 44, 14, 16, 10, 31, 90, 108, 92, 27, 141, 66, 107, 57, 0, 129, 91, 5, 62, 48, 89, 133, 52, 18, 74, 138, 55, 30, 79, 41, 121, 88, 7, 132, 147, 104, 137, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 93, 21, 69, 87, 15, 136, 78, 105, 17, 37, 23, 110, 101, 98, 103, 35, 126, 58, 140, 73, 20, 71, 112, 9, 83, 46, 130, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 76, 109, 59, 22, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 48, 5, 89, 133, 52, 18, 74, 138, 55, 30, 79, 121, 88, 41, 7, 91, 0, 129, 141, 27, 92, 57, 107, 66, 104, 147, 132, 137, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 93, 15, 21, 69, 87, 136, 78, 105, 17, 37, 23, 110, 101, 98, 103, 35, 126, 58, 140, 83, 9, 46, 130, 97, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 79, 30, 121, 88, 41, 7, 91, 0, 129, 141, 147, 27, 92, 57, 107, 66, 104, 137, 132, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 93, 15, 21, 69, 87, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 35, 126, 58, 140, 83, 9, 46, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 79, 30, 121, 88, 41, 7, 91, 0, 129, 141, 147, 27, 92, 57, 107, 66, 104, 137, 132, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 93, 15, 21, 69, 87, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 35, 126, 58, 140, 83, 9, 46, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 79, 30, 121, 88, 41, 7, 91, 0, 129, 141, 147, 27, 92, 57, 107, 66, 104, 137, 132, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 93, 15, 21, 69, 87, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 35, 126, 58, 140, 83, 9, 46, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 79, 30, 121, 88, 41, 7, 91, 0, 129, 141, 147, 27, 92, 57, 107, 66, 104, 137, 132, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 93, 15, 21, 69, 87, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 35, 126, 58, 140, 83, 9, 46, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 79, 30, 121, 88, 41, 7, 91, 0, 129, 141, 147, 27, 92, 57, 107, 66, 104, 137, 132, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 93, 15, 21, 69, 87, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 35, 126, 58, 140, 83, 9, 46, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 79, 30, 121, 88, 41, 7, 91, 0, 129, 141, 147, 27, 92, 57, 107, 66, 104, 137, 132, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 93, 15, 21, 69, 87, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 35, 126, 58, 140, 83, 9, 46, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 79, 30, 121, 88, 41, 7, 91, 0, 129, 141, 147, 27, 92, 57, 107, 66, 104, 137, 132, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 93, 15, 21, 69, 87, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 35, 126, 58, 140, 83, 9, 46, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 79, 30, 121, 88, 41, 7, 91, 0, 129, 141, 147, 27, 92, 57, 107, 66, 104, 137, 132, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 93, 15, 21, 69, 87, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 35, 126, 58, 140, 83, 9, 46, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 93, 15, 21, 69, 87, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 35, 126, 58, 140, 9, 83, 46, 130, 92, 27, 104, 141, 147, 129, 0, 91, 7, 121, 41, 30, 79, 88, 137, 132, 107, 66, 57, 109, 76, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 93, 15, 21, 69, 87, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 83, 9, 46, 130, 92, 27, 104, 141, 147, 129, 0, 91, 7, 121, 41, 30, 79, 88, 137, 132, 107, 66, 57, 109, 76, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 93, 87, 15, 21, 69, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 58, 140, 126, 35, 83, 9, 46, 130, 92, 27, 104, 141, 147, 129, 0, 91, 7, 121, 41, 30, 79, 88, 137, 132, 107, 66, 57, 109, 76, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 93, 87, 15, 21, 69, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 58, 140, 126, 35, 83, 9, 46, 130, 92, 27, 104, 141, 147, 129, 0, 91, 7, 121, 41, 30, 79, 88, 137, 132, 107, 66, 57, 109, 76, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 93, 87, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 58, 140, 126, 35, 83, 9, 46, 130, 92, 27, 104, 141, 147, 129, 0, 91, 7, 121, 41, 30, 79, 88, 137, 132, 107, 66, 57, 109, 76, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 117, 123, 25, 128, 69, 21, 15, 93, 87, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 58, 140, 126, 35, 83, 9, 46, 130, 92, 27, 104, 141, 147, 129, 0, 91, 7, 121, 41, 30, 79, 88, 137, 132, 107, 66, 57, 109, 76, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 117, 123, 25, 128, 69, 21, 15, 93, 87, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 58, 140, 126, 35, 83, 9, 46, 130, 92, 27, 104, 141, 147, 129, 0, 91, 7, 121, 41, 30, 79, 88, 137, 132, 107, 66, 57, 109, 76, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 117, 123, 25, 128, 69, 21, 15, 93, 87, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 58, 140, 126, 35, 83, 9, 46, 130, 92, 27, 104, 141, 147, 129, 0, 91, 7, 41, 121, 30, 79, 88, 137, 132, 107, 66, 57, 109, 76, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 117, 123, 25, 128, 69, 21, 15, 93, 87, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 58, 140, 126, 35, 83, 9, 46, 130, 92, 27, 104, 141, 147, 129, 0, 91, 7, 41, 121, 30, 79, 88, 137, 132, 107, 66, 57, 109, 76, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 117, 123, 25, 128, 69, 21, 15, 93, 87, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 58, 140, 126, 35, 83, 9, 46, 130, 92, 27, 104, 141, 147, 129, 0, 91, 7, 41, 121, 30, 79, 88, 137, 132, 107, 66, 57, 109, 76, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 117, 123, 25, 128, 69, 21, 15, 93, 87, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 58, 140, 126, 35, 83, 9, 46, 130, 92, 27, 104, 141, 147, 41, 121, 30, 79, 88, 137, 132, 7, 91, 129, 0, 66, 57, 107, 109, 76, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 93, 87, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 58, 140, 126, 35, 83, 9, 46, 130, 92, 27, 104, 141, 147, 41, 121, 30, 79, 88, 137, 132, 7, 91, 129, 0, 66, 57, 107, 109, 76, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 93, 87, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 58, 140, 126, 35, 83, 9, 46, 130, 92, 27, 104, 141, 147, 41, 121, 30, 79, 88, 137, 132, 7, 91, 129, 0, 66, 57, 107, 109, 76, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 35, 83, 9, 126, 58, 140, 46, 130, 92, 27, 104, 141, 147, 41, 121, 30, 79, 88, 137, 132, 7, 91, 129, 0, 66, 57, 107, 109, 76, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 35, 83, 9, 126, 58, 140, 46, 130, 92, 27, 104, 141, 147, 41, 121, 30, 79, 88, 137, 132, 7, 91, 129, 0, 66, 57, 107, 109, 76, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 35, 83, 9, 126, 58, 140, 46, 130, 92, 27, 104, 141, 147, 0, 129, 91, 7, 41, 121, 30, 79, 88, 137, 132, 66, 57, 107, 109, 76, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 35, 83, 9, 126, 58, 140, 46, 130, 92, 27, 104, 141, 147, 0, 129, 91, 7, 41, 121, 30, 79, 88, 137, 132, 66, 57, 107, 109, 76, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 35, 83, 9, 126, 58, 140, 46, 130, 92, 27, 104, 141, 147, 0, 129, 91, 7, 41, 121, 30, 79, 88, 137, 132, 66, 57, 107, 109, 76, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 35, 83, 9, 126, 58, 140, 46, 130, 92, 27, 104, 141, 147, 0, 129, 91, 7, 41, 121, 30, 79, 88, 137, 132, 66, 57, 107, 109, 76, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 35, 83, 9, 126, 58, 140, 46, 130, 92, 27, 104, 141, 147, 0, 129, 91, 7, 41, 121, 30, 79, 88, 137, 132, 66, 57, 107, 109, 76, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 35, 126, 58, 140, 83, 9, 46, 0, 129, 91, 7, 41, 121, 30, 79, 88, 137, 132, 104, 141, 147, 66, 57, 107, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 83, 9, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 66, 107, 57, 104, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 66, 107, 57, 104, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 66, 107, 57, 104, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 66, 107, 57, 104, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 66, 107, 57, 104, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 66, 107, 57, 104, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 66, 107, 57, 104, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 66, 107, 57, 104, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 66, 107, 57, 104, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");

        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[56, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 122, 114, 119, 42, 127, 2, 135, 45, 28, 131, 111, 120, 29, 106, 38, 100, 146, 115, 84, 134, 139, 33, 54, 82, 148, 85, 26, 34, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 20, 71, 112, 62, 5, 48, 89, 133, 52, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 17, 37, 23, 103, 110, 101, 98, 140, 58, 126, 35, 9, 83, 46, 0, 129, 7, 91, 41, 121, 79, 30, 88, 137, 132, 141, 147, 104, 66, 107, 57, 27, 92, 130, 76, 109, 11, 56]");

    }

    @Test
    public void test_mmas_cycle_pheromone_0_02() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_CMADTSP mmas_cmadtsp = new MMAS_CMADTSP(graph, 0.02, 1000, 0.5, 10, 4);
        mmas_cmadtsp.setMmasSeed(1);
        mmas_cmadtsp.setDbgpSeed(1);
        mmas_cmadtsp.setStatisticInterval(1);
        mmas_cmadtsp.setShowLog(false);
        mmas_cmadtsp.run();
        assertThat(mmas_cmadtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(34794.308494518125);
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getGlobalStatistics())).isEqualTo("[74, 18, 87, 15, 21, 17, 23, 37, 35, 9, 83, 71, 73, 20, 10, 14, 16, 31, 44, 97, 90, 22, 46, 58, 5, 48, 89, 78, 52, 69, 93, 3, 64, 65, 25, 55, 96, 91, 7, 0, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 28, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 43, 1, 53, 39, 63, 68, 72, 67, 84, 45, 2, 42, 26, 85, 19, 11, 76, 59, 61, 34, 66, 62, 79, 30, 88, 41, 98, 74]");

        graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        mmas_cmadtsp = new MMAS_CMADTSP(graph, 0.02, 1000, 0.5, 100, 4);
        mmas_cmadtsp.setMmasSeed(1);
        mmas_cmadtsp.setDbgpSeed(1);
        mmas_cmadtsp.setStatisticInterval(1);
        mmas_cmadtsp.setShowLog(false);
        mmas_cmadtsp.run();
        assertThat(mmas_cmadtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(29219.397504412893);
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getGlobalStatistics())).isEqualTo("[74, 18, 52, 21, 93, 87, 15, 69, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 62, 48, 5, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 44, 22, 97, 90, 31, 46, 92, 27, 57, 50, 76, 59, 61, 34, 26, 85, 11, 19, 56, 6, 8, 86, 60, 66, 68, 63, 39, 53, 49, 72, 43, 1, 80, 24, 67, 84, 38, 51, 95, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 0, 74]");

        graph = GraphFactory.createGraphFromTSP(new File(kroA150));
        mmas_cmadtsp = new MMAS_CMADTSP(graph, 0.02, 1000, 0.5, 10, 4);
        mmas_cmadtsp.setMmasSeed(1);
        mmas_cmadtsp.setDbgpSeed(1);
        mmas_cmadtsp.setStatisticInterval(1);
        mmas_cmadtsp.setShowLog(false);
        mmas_cmadtsp.run();
        assertThat(mmas_cmadtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(40595.727888427085);
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getGlobalStatistics())).isEqualTo("[56, 8, 6, 116, 139, 134, 28, 45, 42, 127, 119, 114, 122, 2, 135, 13, 70, 40, 99, 47, 131, 106, 29, 120, 100, 38, 146, 36, 4, 51, 77, 95, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 43, 113, 143, 63, 39, 53, 68, 80, 24, 60, 124, 50, 144, 86, 19, 149, 85, 26, 34, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 58, 140, 73, 20, 71, 126, 35, 83, 9, 112, 46, 62, 48, 5, 89, 78, 105, 133, 52, 21, 15, 87, 136, 93, 17, 37, 23, 103, 110, 101, 98, 69, 64, 65, 128, 123, 25, 117, 3, 118, 96, 18, 74, 142, 55, 138, 121, 41, 88, 30, 79, 147, 141, 104, 66, 57, 107, 137, 132, 7, 91, 129, 0, 130, 92, 27, 84, 67, 72, 1, 111, 33, 54, 82, 148, 11, 56]");

        graph = GraphFactory.createGraphFromTSP(new File(kroA150));
        mmas_cmadtsp = new MMAS_CMADTSP(graph, 0.02, 1000, 0.5, 100, 4);
        mmas_cmadtsp.setMmasSeed(1);
        mmas_cmadtsp.setDbgpSeed(1);
        mmas_cmadtsp.setStatisticInterval(1);
        mmas_cmadtsp.setShowLog(false);
        mmas_cmadtsp.run();
        assertThat(mmas_cmadtsp.getGlobalStatistics().getBestSoFar()).isEqualTo(41475.847318109365);
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getGlobalStatistics())).isEqualTo("[56, 8, 6, 116, 33, 54, 82, 139, 134, 131, 28, 45, 42, 127, 135, 13, 70, 40, 99, 47, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 145, 102, 32, 12, 75, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 43, 1, 72, 67, 84, 24, 80, 60, 124, 50, 86, 144, 11, 19, 149, 85, 26, 34, 61, 59, 109, 76, 130, 27, 92, 57, 107, 66, 104, 147, 129, 0, 91, 121, 41, 88, 30, 79, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 87, 15, 93, 136, 78, 105, 133, 52, 18, 74, 7, 138, 132, 137, 141, 62, 5, 48, 89, 9, 83, 35, 37, 23, 110, 101, 98, 103, 17, 73, 20, 71, 126, 140, 58, 16, 14, 10, 31, 108, 46, 112, 44, 22, 97, 90, 114, 119, 122, 2, 148, 68, 56]");
    }
}